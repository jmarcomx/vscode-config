(()=>{var e={5186:(e,t,i)=>{var n=i(3698),o=i(2505),r=i(6417),s=Function.bind,a=s.bind(s);function l(e,t,i){var n=a(r,null).apply(null,i?[t,i]:[t]);e.api={remove:n},e.remove=n,["before","error","after","wrap"].forEach((function(n){var r=i?[t,n,i]:[t,n];e[n]=e.api[n]=a(o,null).apply(null,r)}))}function c(){var e={registry:{}},t=n.bind(null,e);return l(t,e),t}var h=!1;function u(){return h||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),h=!0),c()}u.Singular=function(){var e={registry:{}},t=n.bind(null,e,"h");return l(t,e,"h"),t}.bind(),u.Collection=c.bind(),e.exports=u,e.exports.Hook=u,e.exports.Singular=u.Singular,e.exports.Collection=u.Collection},2505:e=>{e.exports=function(e,t,i,n){var o=n;e.registry[i]||(e.registry[i]=[]);"before"===t&&(n=function(e,t){return Promise.resolve().then(o.bind(null,t)).then(e.bind(null,t))});"after"===t&&(n=function(e,t){var i;return Promise.resolve().then(e.bind(null,t)).then((function(e){return o(i=e,t)})).then((function(){return i}))});"error"===t&&(n=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return o(e,t)}))});e.registry[i].push({hook:n,orig:o})}},3698:e=>{e.exports=function e(t,i,n,o){if("function"!=typeof n)throw new Error("method for before hook must be a function");o||(o={});if(Array.isArray(i))return i.reverse().reduce((function(i,n){return e.bind(null,t,n,i,o)}),n)();return Promise.resolve().then((function(){return t.registry[i]?t.registry[i].reduce((function(e,t){return t.hook.bind(null,e,o)}),n)():n(o)}))}},6417:e=>{e.exports=function(e,t,i){if(!e.registry[t])return;var n=e.registry[t].map((function(e){return e.orig})).indexOf(i);if(-1===n)return;e.registry[t].splice(n,1)}},5640:(e,t,i)=>{i.d(t,{QO:()=>n,qb:()=>o});var n=(e=>(e[e.Force=0]="Force",e[e.ForceWithLease=1]="ForceWithLease",e))(n||{}),o=(e=>(e[e.INDEX_MODIFIED=0]="INDEX_MODIFIED",e[e.INDEX_ADDED=1]="INDEX_ADDED",e[e.INDEX_DELETED=2]="INDEX_DELETED",e[e.INDEX_RENAMED=3]="INDEX_RENAMED",e[e.INDEX_COPIED=4]="INDEX_COPIED",e[e.MODIFIED=5]="MODIFIED",e[e.DELETED=6]="DELETED",e[e.UNTRACKED=7]="UNTRACKED",e[e.IGNORED=8]="IGNORED",e[e.INTENT_TO_ADD=9]="INTENT_TO_ADD",e[e.ADDED_BY_US=10]="ADDED_BY_US",e[e.ADDED_BY_THEM=11]="ADDED_BY_THEM",e[e.DELETED_BY_US=12]="DELETED_BY_US",e[e.DELETED_BY_THEM=13]="DELETED_BY_THEM",e[e.BOTH_ADDED=14]="BOTH_ADDED",e[e.BOTH_DELETED=15]="BOTH_DELETED",e[e.BOTH_MODIFIED=16]="BOTH_MODIFIED",e))(o||{})},8294:(e,t,i)=>{i.d(t,{AR:()=>ActionRunners,vj:()=>d});var n=i(9496),o=i(3113),r=i(5255),s=i(6631),a=i(9529),l=i(3620),c=i(2509);const h=2**30,u=["createPullRequest","openPullRequest","hover.commands"];const d="Built In";class ActionRunnerQuickPickItem{constructor(e,t){this.runner=e,this._label="string"==typeof e.label?e.label:e.label(t)}get label(){return this._label}get detail(){return this.runner.name}}class NoActionRunnersQuickPickItem{get label(){return"No actions were found"}get detail(){}}let p=0;class RegisteredActionRunner{constructor(e,t,i){this.type=e,this.runner=t,this.unregister=i,this.id=(p===h?p=1:p++,p)}dispose(){this.unregister()}get name(){return this.runner.name}get label(){return this.runner.label}get order(){switch(this.type){case 0:return 0;case 1:return 1;case 2:return this.partnerId?1:2;case 3:return 3;default:return 100}}get partnerId(){return this.runner.partnerId}run(e){return this.runner.run(e)}}class ActionRunners{constructor(e){this.container=e,this._onDidChange=new n.EventEmitter,this._actionRunners=new Map;const t=[o.DN.onDidChange((e=>{o.DN.changed(e,"partners")&&this._updateAllContextKeys()}))];for(const e of u)t.push((0,a.xR)(`${r.Gh.ActionPrefix}${e}`,((e,t)=>this.run(e,t))));this._disposable=n.Disposable.from(...t)}get onDidChange(){return this._onDidChange.event}dispose(){this._disposable.dispose();for(const e of this._actionRunners.values())for(const t of e)t.dispose();this._actionRunners.clear()}count(e){return this.get(e)?.length??0}get(e){return t=o.DN.get("partners"),null==(i=this._actionRunners.get(e))||0===i.length?void 0:null==t?i:i.filter((e=>null==e.partnerId||null!=e.partnerId&&!1!==t[e.partnerId]?.enabled));var t,i}has(e){return this.count(e)>0}register(e,t,i=2){let n=this._actionRunners.get(e);null==n&&(n=[],this._actionRunners.set(e,n));const o=e=>{this._updateContextKeys(e),this._onDidChange.fire(e)},r=this._actionRunners,s=new RegisteredActionRunner(i,t,(function(){if(1===n.length)r.delete(e),o(e);else{const e=n.indexOf(this);-1!==e&&n.splice(e,1)}}));return n.push(s),o(e),{dispose:()=>s.dispose()}}registerBuiltIn(e,t){return this.register(e,{...t,partnerId:void 0,name:d},0)}registerBuiltInPartner(e,t,i){return this.register(t,{...i,partnerId:e},1)}registerBuiltInPartnerInstaller(e,t,i){return this.register(t,{...i,partnerId:e,name:`${i.name} (Not Installed)`},3)}async run(e,t){let i,o=this.get(e.type);if(null!=o&&0!==o.length&&(null!=t&&(o=o.filter((e=>e.id===t))),0!==o.length)){if(o.length>1||o.every((e=>0!==e.type))){const t=o.sort(((e,t)=>e.order-t.order||(0,l.dm)(e.name,t.name))).map((t=>new ActionRunnerQuickPickItem(t,e)));0===t.length&&t.push(new NoActionRunnersQuickPickItem);const r=n.window.createQuickPick();r.ignoreFocusOut=(0,c.hE)();const s=[];try{const n=await new Promise((i=>{let n,o;switch(s.push(r.onDidHide((()=>i(void 0))),r.onDidAccept((()=>{0!==r.activeItems.length&&i(r.activeItems[0])}))),e.type){case"createPullRequest":n="Create Pull Request",o="Choose how to create a pull request";break;case"openPullRequest":n="Open Pull Request",o="Choose how to open the pull request";break;case"hover.commands":n="Need Help or Want to Collaborate?",o="Choose what you would like to do"}r.title=n,r.placeholder=o,r.matchOnDetail=!0,r.items=t,r.show()}));if(null==n)return;i=n.runner}finally{r.dispose(),s.forEach((e=>{e.dispose()}))}}else[i]=o;await(i?.run(e))}}async _updateContextKeys(e){await(0,s.v)(`${r.zf.ActionPrefix}${e}`,this.count(e))}async _updateAllContextKeys(){for(const e of u)await this._updateContextKeys(e)}}},8388:(e,t,i)=>{i.d(t,{E3:()=>I,GV:()=>F,OV:()=>f,TU:()=>A,Wr:()=>N,oP:()=>k,x4:()=>P});var n=i(9496),o=i(4290),r=i(2540),s=i(3113),a=i(5255),l=i(6479),c=i(6631),h=i(2075),u=i(4486),d=i(3105),p=i(3620);const m=2**30,g=new n.EventEmitter;var f;let w;g.event((0,u.Ds)((()=>{const e=null!=w?[...(0,d.DZ)(w,(([e,t])=>null!=t.uri?[e,{uri:t.uri.toString(),timestamp:t.timestamp}]:void 0))]:void 0;l.W.instance.storage.store("avatars",e)}),1e3)),(f||(f={})).onDidFetch=g.event;const _=new Map,v="00000000000000000000000000000000",y=new Map,b=6e4,C=864e5,S=[6048e5,b,3e5,6e5,36e5,C,6048e5];function k(e,t,i){return R(e,t,i)}function P(e,t){return R(e,void 0,{...t,cached:!0})}function R(e,t,i){$(w);const r=2*(i?.size??16);if(!e){const e=D(`${v}:${r}`,void 0,r,v,i?.defaultStyle);return e.uri??e.fallback}const s=(0,o.FB)(e.trim().toLowerCase()),h=`${s}:${r}`,u=D(h,e,r,s,i?.defaultStyle);if(null!=u.uri)return u.uri;if(!i?.cached&&null!=t&&(0,c.fw)(a.zf.HasConnectedRemotes)){let i=_.get(h);return null==i&&function(e){return Date.now()>=e.timestamp+S[Math.min(e.retries,S.length-1)]}(u)&&(i=async function(e,t,i,r,{size:s=16}={}){$(w);try{let t;if("string"!=typeof r){const e=await l.W.instance.git.getBestRemoteWithRichProvider(r.repoPath);t=await(e?.provider.getAccountForCommit(r.ref,{avatarSize:s}))}return null==t?.avatarUrl?(e.uri=void 0,e.timestamp=m,void(e.retries=0)):(e.uri=n.Uri.parse(t.avatarUrl),e.timestamp=Date.now(),e.retries=0,null!=t.email&&(0,p.qq)(i,t.email)&&w.set(`${(0,o.FB)(t.email.trim().toLowerCase())}:${s}`,{...e}),g.fire({email:i}),e.uri)}catch{return e.uri=void 0,e.timestamp=Date.now(),void e.retries++}}(u,0,e,t,{size:r}).then((e=>e??u.uri??u.fallback)),_.set(h,i.finally((()=>_.delete(h))))),i??u.fallback}return i?.cached?u.uri:u.uri??u.fallback}function D(e,t,i,n,o){let r=w.get(e);return null==r?(r={uri:null!=t&&0!==t.length?x(t,i):void 0,fallback:T(n,i,o),timestamp:0,retries:0},w.set(e,r)):null==r.fallback&&(r.fallback=T(n,i,o)),r}function $(e){if(null==e){const e=l.W.instance.storage.get("avatars")?.map((([e,t])=>[e,{uri:n.Uri.parse(t.uri),timestamp:t.timestamp,retries:0}]));w=new Map(e)}}function T(e,t,i){return n.Uri.parse(`https://www.gravatar.com/avatar/${e}?s=${t}&d=${i??function(){null==E&&(E=s.DN.get("defaultGravatarsStyle",void 0,r.il.Robot));return E}()}`)}function F(e,t,i){return T((0,o.FB)(e.trim().toLowerCase()),t,i)}function x(e,t=16){const i=(0,h.at)(e);if(null!=i&&(0,p.qq)(i.authority,"github.com"))return n.Uri.parse(`https://avatars.githubusercontent.com/${i.userId?`u/${i.userId}`:i.login}?size=${t}`)}const O=new Map([["online","#28ca42"],["away","#cecece"],["busy","#ca5628"],["dnd","#ca5628"],["offline","#cecece"]]);function A(e){let t=y.get(e);if(null==t){const i=(0,p.US)(`<?xml version="1.0" encoding="utf-8"?>\n<svg xmlns="http://www.w3.org/2000/svg" width="4" height="16" viewBox="0 0 4 16">\n\t<circle cx="2" cy="14" r="2" fill="${O.get(e)}"/>\n</svg>`);t=encodeURI(`data:image/svg+xml;base64,${i}`),y.set(e,t)}return t}function I(e){switch(e){case"all":l.W.instance.storage.delete("avatars"),w?.clear(),_.clear();break;case"failed":for(const e of w?.values()??[])null==e.uri&&(e.timestamp=0,e.retries=0);break;case"fallback":for(const e of w?.values()??[])e.fallback=void 0}}let E;function N(e){E=e,I("fallback")}},3680:(e,t,i)=>{i.d(t,{n:()=>n});class Comparer{}new class TextEditorComparer extends Comparer{equals(e,t,i={usePosition:!1}){return e===t||null!=e&&null!=t&&((!i.usePosition||e.viewColumn===t.viewColumn)&&e.document===t.document)}};const n=new class UriComparer extends Comparer{equals(e,t,i={exact:!1}){return e===t||null!=e&&null!=t&&(i.exact?e.toString()===t.toString():e.scheme===t.scheme&&e.fsPath===t.fsPath)}}},2540:(e,t,i)=>{i.d(t,{CZ:()=>C,DH:()=>k,Dn:()=>m,M7:()=>v,N4:()=>c,RV:()=>b,S4:()=>D,TA:()=>R,TF:()=>o,Uy:()=>h,VP:()=>g,Vc:()=>S,Vn:()=>p,Vz:()=>a,ef:()=>y,fH:()=>r,hp:()=>l,iP:()=>u,il:()=>w,kl:()=>P,o9:()=>_,oE:()=>$,y0:()=>s,zL:()=>f,zW:()=>d});var n=i(5255),o=(e=>(e.File="file",e.Window="window",e))(o||{}),r=(e=>(e.Issue="Issue",e.PullRequest="PullRequest",e))(r||{}),s=(e=>(e.Gutter="gutter",e.Line="line",e.Scrollbar="overview",e))(s||{}),a=(e=>(e.DateDesc="date:desc",e.DateAsc="date:asc",e.NameAsc="name:asc",e.NameDesc="name:desc",e))(a||{}),l=(e=>(e.Gutter="gutter",e.Line="line",e.Scrollbar="overview",e))(l||{}),c=(e=>(e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",e.DiffWithPrevious="gitlens.diffWithPrevious",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.RevealCommitInView="gitlens.revealCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",e.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e))(c||{}),h=(e=>(e.Document="document",e.Containers="containers",e.Blocks="blocks",e))(h||{}),u=(e=>(e.CountDesc="count:desc",e.CountAsc="count:asc",e.DateDesc="date:desc",e.DateAsc="date:asc",e.NameAsc="name:asc",e.NameDesc="name:desc",e))(u||{}),d=(e=>(e.AzureDevOps="AzureDevOps",e.Bitbucket="Bitbucket",e.BitbucketServer="BitbucketServer",e.Custom="Custom",e.Gerrit="Gerrit",e.GoogleSource="GoogleSource",e.Gitea="Gitea",e.GitHub="GitHub",e.GitLab="GitLab",e))(d||{}),p=(e=>(e.Authored="authored",e.Committed="committed",e))(p||{}),m=(e=>(e.Absolute="absolute",e.Relative="relative",e))(m||{}),g=(e=>(e.Blame="blame",e.Changes="changes",e.Heatmap="heatmap",e))(g||{}),f=(e=>(e.Name="name",e.Usage="usage",e))(f||{}),w=(e=>(e.Faces="wavatar",e.Geometric="identicon",e.Monster="monsterid",e.MysteryPerson="mp",e.Retro="retro",e.Robot="robohash",e))(w||{}),_=(e=>(e.Gutter="gutter",e.Line="line",e.Scrollbar="overview",e))(_||{}),v=(e=>(e.Silent="silent",e.Errors="errors",e.Verbose="verbose",e.Debug="debug",e))(v||{}),y=(e=>(e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrl",e.DiffWithPrevious="gitlens.diffWithPrevious",e.DiffWithWorking="gitlens.diffWithWorking",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.RevealCommitInView="gitlens.revealCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowQuickCommitDetails="gitlens.showQuickCommitDetails",e.ShowQuickCommitFileDetails="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ToggleCodeLens="gitlens.toggleCodeLens",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e))(y||{}),b=(e=>(e.DateDesc="date:desc",e.DateAsc="date:asc",e.NameAsc="name:asc",e.NameDesc="name:desc",e))(b||{}),C=(e=>(e.List="list",e.Tree="tree",e))(C||{}),S=(e=>(e.Auto="auto",e.List="list",e.Tree="tree",e))(S||{}),k=(e=>(e.Branch="branch",e.Working="working",e))(k||{}),P=(e=>(e.CommitHasNoPreviousCommitWarning="suppressCommitHasNoPreviousCommitWarning",e.CommitNotFoundWarning="suppressCommitNotFoundWarning",e.CreatePullRequestPrompt="suppressCreatePullRequestPrompt",e.SuppressDebugLoggingWarning="suppressDebugLoggingWarning",e.FileNotUnderSourceControlWarning="suppressFileNotUnderSourceControlWarning",e.GitDisabledWarning="suppressGitDisabledWarning",e.GitMissingWarning="suppressGitMissingWarning",e.GitVersionWarning="suppressGitVersionWarning",e.LineUncommittedWarning="suppressLineUncommittedWarning",e.NoRepositoryWarning="suppressNoRepositoryWarning",e.RebaseSwitchToTextWarning="suppressRebaseSwitchToTextWarning",e.IntegrationDisconnectedTooManyFailedRequestsWarning="suppressIntegrationDisconnectedTooManyFailedRequestsWarning",e.IntegrationRequestFailed500Warning="suppressIntegrationRequestFailed500Warning",e.IntegrationRequestTimedOutWarning="suppressIntegrationRequestTimedOutWarning",e))(P||{});const R=["defaultItemLimit","formats","pageItemLimit","showRelativeDateMarkers"],D=["commits","repositories","fileHistory","lineHistory","branches","remotes","stashes","tags","contributors","searchAndCompare","worktrees"];function $(e){switch(e){case"silent":return n.in.Off;case"errors":return n.in.Error;case"verbose":return n.in.Info;case"debug":return n.in.Debug;default:return e}}},3113:(e,t,i)=>{i.d(t,{CZ:()=>n.CZ,DH:()=>n.DH,DN:()=>a,Dn:()=>n.Dn,M7:()=>n.M7,N4:()=>n.N4,RV:()=>n.RV,S4:()=>n.S4,TA:()=>n.TA,TF:()=>n.TF,Uy:()=>n.Uy,VK:()=>Configuration,VP:()=>n.VP,Vc:()=>n.Vc,Vn:()=>n.Vn,Vz:()=>n.Vz,ef:()=>n.ef,hp:()=>n.hp,iP:()=>n.iP,kl:()=>n.kl,oE:()=>n.oE,y0:()=>n.y0,zW:()=>n.zW});var n=i(2540),o=i(9496),r=i(9967);const s="gitlens";class Configuration{constructor(){this._onDidChange=new o.EventEmitter,this._onDidChangeAny=new o.EventEmitter,this._onWillChange=new o.EventEmitter}static configure(e){e.subscriptions.push(o.workspace.onDidChangeConfiguration(a.onConfigurationChanged,a))}get onDidChange(){return this._onDidChange.event}get onDidChangeAny(){return this._onDidChangeAny.event}get onWillChange(){return this._onWillChange.event}onConfigurationChanged(e){e.affectsConfiguration(s)?(this._onWillChange.fire(e),null!=this._overrides?.onChange&&(e=this._overrides.onChange(e)),this._onDidChangeAny.fire(e),this._onDidChange.fire(e)):this._onDidChangeAny.fire(e)}applyOverrides(e){this._overrides=e}clearOverrides(){null!=this._overrides&&(this._overrides.get=void 0,this._overrides.getAll=void 0,queueMicrotask((()=>this._overrides=void 0)))}get(e,t,i){const n=void 0===i?o.workspace.getConfiguration(s,t).get(e):o.workspace.getConfiguration(s,t).get(e,i);return null==this._overrides?.get?n:this._overrides.get(e,n)}getAll(e){const t=o.workspace.getConfiguration().get(s);return e||null==this._overrides?.getAll?t:this._overrides.getAll(t)}getAny(e,t,i){return void 0===i?o.workspace.getConfiguration(void 0,t).get(e):o.workspace.getConfiguration(void 0,t).get(e,i)}changed(e,t,i){return null==e||(Array.isArray(t)?t.some((t=>e.affectsConfiguration(`${s}.${t}`,i))):e.affectsConfiguration(`${s}.${t}`,i))}inspect(e,t){return o.workspace.getConfiguration(s,t).inspect(void 0===e?s:e)}inspectAny(e,t){return o.workspace.getConfiguration(void 0,t).inspect(e)}isUnset(e,t){const i=a.inspect(e,t);return void 0===i.workspaceFolderValue&&(void 0===i.workspaceValue&&void 0===i.globalValue)}async migrate(e,t,i){const n=a.inspect(e);if(void 0===n)return!1;let r=!1;return void 0!==n.globalValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(n.globalValue):n.globalValue,o.ConfigurationTarget.Global),r=!0),void 0!==n.workspaceValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceValue):n.workspaceValue,o.ConfigurationTarget.Workspace),r=!0),void 0!==n.workspaceFolderValue&&(await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceFolderValue):n.workspaceFolderValue,o.ConfigurationTarget.WorkspaceFolder),r=!0),r||void 0===i.fallbackValue||(await this.update(t,i.fallbackValue,o.ConfigurationTarget.Global),r=!0),r}async migrateIfMissing(e,t,i){const n=a.inspect(e);if(void 0===n)return;const r=a.inspect(t);void 0!==n.globalValue&&(void 0!==r&&void 0!==r.globalValue||await this.update(t,null!=i.migrationFn?i.migrationFn(n.globalValue):n.globalValue,o.ConfigurationTarget.Global)),void 0!==n.workspaceValue&&(void 0!==r&&void 0!==r.workspaceValue||await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceValue):n.workspaceValue,o.ConfigurationTarget.Workspace)),void 0!==n.workspaceFolderValue&&(void 0!==r&&void 0!==r.workspaceFolderValue||await this.update(t,null!=i.migrationFn?i.migrationFn(n.workspaceFolderValue):n.workspaceFolderValue,o.ConfigurationTarget.WorkspaceFolder))}matches(e,t,i){return e===t}name(e){return e}update(e,t,i){return o.workspace.getConfiguration(s).update(e,t,i)}updateAny(e,t,i,n){return o.workspace.getConfiguration(void 0,i===o.ConfigurationTarget.Global?void 0:n).update(e,t,i)}updateEffective(e,t){const i=a.inspect(e);return void 0!==i.workspaceFolderValue?t===i.workspaceFolderValue?Promise.resolve(void 0):a.update(e,t,o.ConfigurationTarget.WorkspaceFolder):void 0!==i.workspaceValue?t===i.workspaceValue?Promise.resolve(void 0):a.update(e,t,o.ConfigurationTarget.Workspace):i.globalValue===t||void 0===i.globalValue&&t===i.defaultValue?Promise.resolve(void 0):a.update(e,(0,r.wy)(t,i.defaultValue)?void 0:t,o.ConfigurationTarget.Global)}}const a=new Configuration},5255:(e,t,i)=>{i.d(t,{Gh:()=>l,NE:()=>p,Os:()=>o,S8:()=>u,ZY:()=>r,d$:()=>n,eq:()=>d,in:()=>m,mN:()=>s,nA:()=>h,sN:()=>g,wL:()=>a,zf:()=>c});const n=80,o=500,r={".png":"image/png",".gif":"image/gif",".jpg":"image/jpeg",".jpeg":"image/jpeg",".jpe":"image/jpeg",".webp":"image/webp",".tif":"image/tiff",".tiff":"image/tiff",".bmp":"image/bmp"};var s=(e=>(e[e.Hash=35]="Hash",e[e.Slash=47]="Slash",e[e.Digit0=48]="Digit0",e[e.Digit1=49]="Digit1",e[e.Digit2=50]="Digit2",e[e.Digit3=51]="Digit3",e[e.Digit4=52]="Digit4",e[e.Digit5=53]="Digit5",e[e.Digit6=54]="Digit6",e[e.Digit7=55]="Digit7",e[e.Digit8=56]="Digit8",e[e.Digit9=57]="Digit9",e[e.Backslash=92]="Backslash",e[e.A=65]="A",e[e.B=66]="B",e[e.C=67]="C",e[e.D=68]="D",e[e.E=69]="E",e[e.F=70]="F",e[e.Z=90]="Z",e[e.a=97]="a",e[e.b=98]="b",e[e.c=99]="c",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.z=122]="z",e))(s||{}),a=(e=>(e.GutterBackgroundColor="gitlens.gutterBackgroundColor",e.GutterForegroundColor="gitlens.gutterForegroundColor",e.GutterUncommittedForegroundColor="gitlens.gutterUncommittedForegroundColor",e.TrailingLineBackgroundColor="gitlens.trailingLineBackgroundColor",e.TrailingLineForegroundColor="gitlens.trailingLineForegroundColor",e.LineHighlightBackgroundColor="gitlens.lineHighlightBackgroundColor",e.LineHighlightOverviewRulerColor="gitlens.lineHighlightOverviewRulerColor",e.ClosedAutolinkedIssueIconColor="gitlens.closedAutolinkedIssueIconColor",e.ClosedPullRequestIconColor="gitlens.closedPullRequestIconColor",e.OpenAutolinkedIssueIconColor="gitlens.openAutolinkedIssueIconColor",e.OpenPullRequestIconColor="gitlens.openPullRequestIconColor",e.MergedPullRequestIconColor="gitlens.mergedPullRequestIconColor",e.UnpublishedChangesIconColor="gitlens.unpublishedChangesIconColor",e.UnpublishedCommitIconColor="gitlens.unpublishedCommitIconColor",e.UnpulledChangesIconColor="gitlens.unpulledChangesIconColor",e))(a||{}),l=(e=>(e.ActionPrefix="gitlens.action.",e.AddAuthors="gitlens.addAuthors",e.BrowseRepoAtRevision="gitlens.browseRepoAtRevision",e.BrowseRepoAtRevisionInNewWindow="gitlens.browseRepoAtRevisionInNewWindow",e.BrowseRepoBeforeRevision="gitlens.browseRepoBeforeRevision",e.BrowseRepoBeforeRevisionInNewWindow="gitlens.browseRepoBeforeRevisionInNewWindow",e.ClearFileAnnotations="gitlens.clearFileAnnotations",e.CloseUnchangedFiles="gitlens.closeUnchangedFiles",e.CloseWelcomeView="gitlens.closeWelcomeView",e.CompareWith="gitlens.compareWith",e.CompareHeadWith="gitlens.compareHeadWith",e.CompareWorkingWith="gitlens.compareWorkingWith",e.ComputingFileAnnotations="gitlens.computingFileAnnotations",e.ConnectRemoteProvider="gitlens.connectRemoteProvider",e.CopyAutolinkUrl="gitlens.copyAutolinkUrl",e.CopyCurrentBranch="gitlens.copyCurrentBranch",e.CopyDeepLinkToBranch="gitlens.copyDeepLinkToBranch",e.CopyDeepLinkToCommit="gitlens.copyDeepLinkToCommit",e.CopyDeepLinkToRepo="gitlens.copyDeepLinkToRepo",e.CopyDeepLinkToTag="gitlens.copyDeepLinkToTag",e.CopyMessageToClipboard="gitlens.copyMessageToClipboard",e.CopyRemoteBranchesUrl="gitlens.copyRemoteBranchesUrl",e.CopyRemoteBranchUrl="gitlens.copyRemoteBranchUrl",e.CopyRemoteCommitUrl="gitlens.copyRemoteCommitUrl",e.CopyRemoteComparisonUrl="gitlens.copyRemoteComparisonUrl",e.CopyRemoteFileUrl="gitlens.copyRemoteFileUrlToClipboard",e.CopyRemoteFileUrlWithoutRange="gitlens.copyRemoteFileUrlWithoutRange",e.CopyRemoteFileUrlFrom="gitlens.copyRemoteFileUrlFrom",e.CopyRemoteIssueUrl="gitlens.copyRemoteIssueUrl",e.CopyRemotePullRequestUrl="gitlens.copyRemotePullRequestUrl",e.CopyRemoteRepositoryUrl="gitlens.copyRemoteRepositoryUrl",e.CopyShaToClipboard="gitlens.copyShaToClipboard",e.CreatePullRequestOnRemote="gitlens.createPullRequestOnRemote",e.DiffDirectory="gitlens.diffDirectory",e.DiffDirectoryWithHead="gitlens.diffDirectoryWithHead",e.DiffWith="gitlens.diffWith",e.DiffWithNext="gitlens.diffWithNext",e.DiffWithNextInDiffLeft="gitlens.diffWithNextInDiffLeft",e.DiffWithNextInDiffRight="gitlens.diffWithNextInDiffRight",e.DiffWithPrevious="gitlens.diffWithPrevious",e.DiffWithPreviousInDiffLeft="gitlens.diffWithPreviousInDiffLeft",e.DiffWithPreviousInDiffRight="gitlens.diffWithPreviousInDiffRight",e.DiffLineWithPrevious="gitlens.diffLineWithPrevious",e.DiffWithRevision="gitlens.diffWithRevision",e.DiffWithRevisionFrom="gitlens.diffWithRevisionFrom",e.DiffWithWorking="gitlens.diffWithWorking",e.DiffWithWorkingInDiffLeft="gitlens.diffWithWorkingInDiffLeft",e.DiffWithWorkingInDiffRight="gitlens.diffWithWorkingInDiffRight",e.DiffLineWithWorking="gitlens.diffLineWithWorking",e.DisconnectRemoteProvider="gitlens.disconnectRemoteProvider",e.DisableDebugLogging="gitlens.disableDebugLogging",e.EnableDebugLogging="gitlens.enableDebugLogging",e.DisableRebaseEditor="gitlens.disableRebaseEditor",e.EnableRebaseEditor="gitlens.enableRebaseEditor",e.ExternalDiff="gitlens.externalDiff",e.ExternalDiffAll="gitlens.externalDiffAll",e.FetchRepositories="gitlens.fetchRepositories",e.GetStarted="gitlens.getStarted",e.InviteToLiveShare="gitlens.inviteToLiveShare",e.OpenAutolinkUrl="gitlens.openAutolinkUrl",e.OpenBlamePriorToChange="gitlens.openBlamePriorToChange",e.OpenBranchesOnRemote="gitlens.openBranchesOnRemote",e.OpenBranchOnRemote="gitlens.openBranchOnRemote",e.OpenCurrentBranchOnRemote="gitlens.openCurrentBranchOnRemote",e.OpenChangedFiles="gitlens.openChangedFiles",e.OpenCommitOnRemote="gitlens.openCommitOnRemote",e.OpenComparisonOnRemote="gitlens.openComparisonOnRemote",e.OpenFileHistory="gitlens.openFileHistory",e.OpenFileFromRemote="gitlens.openFileFromRemote",e.OpenFileOnRemote="gitlens.openFileOnRemote",e.OpenFileOnRemoteFrom="gitlens.openFileOnRemoteFrom",e.OpenFileAtRevision="gitlens.openFileRevision",e.OpenFileAtRevisionFrom="gitlens.openFileRevisionFrom",e.OpenFolderHistory="gitlens.openFolderHistory",e.OpenOnRemote="gitlens.openOnRemote",e.OpenIssueOnRemote="gitlens.openIssueOnRemote",e.OpenPullRequestOnRemote="gitlens.openPullRequestOnRemote",e.OpenAssociatedPullRequestOnRemote="gitlens.openAssociatedPullRequestOnRemote",e.OpenRepoOnRemote="gitlens.openRepoOnRemote",e.OpenRevisionFile="gitlens.openRevisionFile",e.OpenRevisionFileInDiffLeft="gitlens.openRevisionFileInDiffLeft",e.OpenRevisionFileInDiffRight="gitlens.openRevisionFileInDiffRight",e.OpenWalkthrough="gitlens.openWalkthrough",e.OpenWorkingFile="gitlens.openWorkingFile",e.OpenWorkingFileInDiffLeft="gitlens.openWorkingFileInDiffLeft",e.OpenWorkingFileInDiffRight="gitlens.openWorkingFileInDiffRight",e.PullRepositories="gitlens.pullRepositories",e.PushRepositories="gitlens.pushRepositories",e.GitCommands="gitlens.gitCommands",e.GitCommandsBranch="gitlens.gitCommands.branch",e.GitCommandsCherryPick="gitlens.gitCommands.cherryPick",e.GitCommandsMerge="gitlens.gitCommands.merge",e.GitCommandsRebase="gitlens.gitCommands.rebase",e.GitCommandsReset="gitlens.gitCommands.reset",e.GitCommandsRevert="gitlens.gitCommands.revert",e.GitCommandsSwitch="gitlens.gitCommands.switch",e.GitCommandsTag="gitlens.gitCommands.tag",e.GitCommandsWorktree="gitlens.gitCommands.worktree",e.OpenOrCreateWorktreeForGHPR="gitlens.ghpr.views.openOrCreateWorktree",e.PlusHide="gitlens.plus.hide",e.PlusLearn="gitlens.plus.learn",e.PlusLoginOrSignUp="gitlens.plus.loginOrSignUp",e.PlusLogout="gitlens.plus.logout",e.PlusManage="gitlens.plus.manage",e.PlusPurchase="gitlens.plus.purchase",e.PlusResendVerification="gitlens.plus.resendVerification",e.PlusRestore="gitlens.plus.restore",e.PlusShowPlans="gitlens.plus.showPlans",e.PlusStartPreviewTrial="gitlens.plus.startPreviewTrial",e.PlusValidate="gitlens.plus.validate",e.QuickOpenFileHistory="gitlens.quickOpenFileHistory",e.RefreshGraph="gitlens.graph.refresh",e.RefreshFocus="gitlens.focus.refresh",e.RefreshHover="gitlens.refreshHover",e.RefreshTimelinePage="gitlens.refreshTimelinePage",e.ResetAvatarCache="gitlens.resetAvatarCache",e.ResetSuppressedWarnings="gitlens.resetSuppressedWarnings",e.ResetTrackedUsage="gitlens.resetTrackedUsage",e.RevealCommitInView="gitlens.revealCommitInView",e.SearchCommits="gitlens.showCommitSearch",e.SearchCommitsInView="gitlens.views.searchAndCompare.searchCommits",e.SetViewsLayout="gitlens.setViewsLayout",e.ShowBranchesView="gitlens.showBranchesView",e.ShowCommitInView="gitlens.showCommitInView",e.ShowCommitsInView="gitlens.showCommitsInView",e.ShowCommitsView="gitlens.showCommitsView",e.ShowContributorsView="gitlens.showContributorsView",e.ShowHomeView="gitlens.showHomeView",e.ShowFileHistoryView="gitlens.showFileHistoryView",e.ShowInCommitGraph="gitlens.showInCommitGraph",e.ShowInDetailsView="gitlens.showInDetailsView",e.ShowLastQuickPick="gitlens.showLastQuickPick",e.ShowLineHistoryView="gitlens.showLineHistoryView",e.ShowQuickBranchHistory="gitlens.showQuickBranchHistory",e.ShowQuickCommit="gitlens.showQuickCommitDetails",e.ShowQuickCommitFile="gitlens.showQuickCommitFileDetails",e.ShowQuickCurrentBranchHistory="gitlens.showQuickRepoHistory",e.ShowQuickFileHistory="gitlens.showQuickFileHistory",e.ShowQuickRepoStatus="gitlens.showQuickRepoStatus",e.ShowQuickCommitRevision="gitlens.showQuickRevisionDetails",e.ShowQuickCommitRevisionInDiffLeft="gitlens.showQuickRevisionDetailsInDiffLeft",e.ShowQuickCommitRevisionInDiffRight="gitlens.showQuickRevisionDetailsInDiffRight",e.ShowQuickStashList="gitlens.showQuickStashList",e.ShowRemotesView="gitlens.showRemotesView",e.ShowRepositoriesView="gitlens.showRepositoriesView",e.ShowSearchAndCompareView="gitlens.showSearchAndCompareView",e.ShowSettingsPage="gitlens.showSettingsPage",e.ShowSettingsPageAndJumpToBranchesView="gitlens.showSettingsPage#branches-view",e.ShowSettingsPageAndJumpToCommitsView="gitlens.showSettingsPage#commits-view",e.ShowSettingsPageAndJumpToContributorsView="gitlens.showSettingsPage#contributors-view",e.ShowSettingsPageAndJumpToFileHistoryView="gitlens.showSettingsPage#file-history-view",e.ShowSettingsPageAndJumpToLineHistoryView="gitlens.showSettingsPage#line-history-view",e.ShowSettingsPageAndJumpToRemotesView="gitlens.showSettingsPage#remotes-view",e.ShowSettingsPageAndJumpToRepositoriesView="gitlens.showSettingsPage#repositories-view",e.ShowSettingsPageAndJumpToSearchAndCompareView="gitlens.showSettingsPage#search-compare-view",e.ShowSettingsPageAndJumpToStashesView="gitlens.showSettingsPage#stashes-view",e.ShowSettingsPageAndJumpToTagsView="gitlens.showSettingsPage#tags-view",e.ShowSettingsPageAndJumpToWorkTreesView="gitlens.showSettingsPage#worktrees-view",e.ShowSettingsPageAndJumpToViews="gitlens.showSettingsPage#views",e.ShowSettingsPageAndJumpToCommitGraph="gitlens.showSettingsPage#commit-graph",e.ShowSettingsPageAndJumpToAutolinks="gitlens.showSettingsPage#autolinks",e.ShowStashesView="gitlens.showStashesView",e.ShowTagsView="gitlens.showTagsView",e.ShowWorktreesView="gitlens.showWorktreesView",e.ShowCommitDetailsView="gitlens.showCommitDetailsView",e.ShowTimelinePage="gitlens.showTimelinePage",e.ShowTimelineView="gitlens.showTimelineView",e.ShowGraphPage="gitlens.showGraphPage",e.ShowWelcomePage="gitlens.showWelcomePage",e.ShowFocusPage="gitlens.showFocusPage",e.StashApply="gitlens.stashApply",e.StashSave="gitlens.stashSave",e.StashSaveFiles="gitlens.stashSaveFiles",e.SwitchMode="gitlens.switchMode",e.ToggleCodeLens="gitlens.toggleCodeLens",e.ToggleFileBlame="gitlens.toggleFileBlame",e.ToggleFileBlameInDiffLeft="gitlens.toggleFileBlameInDiffLeft",e.ToggleFileBlameInDiffRight="gitlens.toggleFileBlameInDiffRight",e.ToggleFileChanges="gitlens.toggleFileChanges",e.ToggleFileChangesOnly="gitlens.toggleFileChangesOnly",e.ToggleFileHeatmap="gitlens.toggleFileHeatmap",e.ToggleFileHeatmapInDiffLeft="gitlens.toggleFileHeatmapInDiffLeft",e.ToggleFileHeatmapInDiffRight="gitlens.toggleFileHeatmapInDiffRight",e.ToggleLineBlame="gitlens.toggleLineBlame",e.ToggleReviewMode="gitlens.toggleReviewMode",e.ToggleZenMode="gitlens.toggleZenMode",e.ViewsCopy="gitlens.views.copy",e.ViewsOpenDirectoryDiff="gitlens.views.openDirectoryDiff",e.ViewsOpenDirectoryDiffWithWorking="gitlens.views.openDirectoryDiffWithWorking",e.Deprecated_DiffHeadWith="gitlens.diffHeadWith",e.Deprecated_DiffWorkingWith="gitlens.diffWorkingWith",e.Deprecated_OpenBranchesInRemote="gitlens.openBranchesInRemote",e.Deprecated_OpenBranchInRemote="gitlens.openBranchInRemote",e.Deprecated_OpenCommitInRemote="gitlens.openCommitInRemote",e.Deprecated_OpenFileInRemote="gitlens.openFileInRemote",e.Deprecated_OpenInRemote="gitlens.openInRemote",e.Deprecated_OpenRepoInRemote="gitlens.openRepoInRemote",e.Deprecated_ShowFileHistoryInView="gitlens.showFileHistoryInView",e))(l||{}),c=(e=>(e.ActionPrefix="gitlens:action:",e.KeyPrefix="gitlens:key:",e.WebviewPrefix="gitlens:webview:",e.WebviewViewPrefix="gitlens:webviewView:",e.ActiveFileStatus="gitlens:activeFileStatus",e.AnnotationStatus="gitlens:annotationStatus",e.Debugging="gitlens:debugging",e.DisabledToggleCodeLens="gitlens:disabledToggleCodeLens",e.Disabled="gitlens:disabled",e.Enabled="gitlens:enabled",e.FocusFocused="gitlens:focus:focused",e.HasConnectedRemotes="gitlens:hasConnectedRemotes",e.HasRemotes="gitlens:hasRemotes",e.HasRichRemotes="gitlens:hasRichRemotes",e.HasVirtualFolders="gitlens:hasVirtualFolders",e.Readonly="gitlens:readonly",e.Untrusted="gitlens:untrusted",e.ViewsCanCompare="gitlens:views:canCompare",e.ViewsCanCompareFile="gitlens:views:canCompare:file",e.ViewsCommitsMyCommitsOnly="gitlens:views:commits:myCommitsOnly",e.ViewsFileHistoryCanPin="gitlens:views:fileHistory:canPin",e.ViewsFileHistoryCursorFollowing="gitlens:views:fileHistory:cursorFollowing",e.ViewsFileHistoryEditorFollowing="gitlens:views:fileHistory:editorFollowing",e.ViewsLineHistoryEditorFollowing="gitlens:views:lineHistory:editorFollowing",e.ViewsRepositoriesAutoRefresh="gitlens:views:repositories:autoRefresh",e.ViewsSearchAndCompareKeepResults="gitlens:views:searchAndCompare:keepResults",e.Vsls="gitlens:vsls",e.Plus="gitlens:plus",e.PlusDisallowedRepos="gitlens:plus:disallowedRepos",e.PlusEnabled="gitlens:plus:enabled",e.PlusRequired="gitlens:plus:required",e.PlusState="gitlens:plus:state",e))(c||{}),h=(e=>(e.CloseActiveEditor="workbench.action.closeActiveEditor",e.CloseAllEditors="workbench.action.closeAllEditors",e.CursorMove="cursorMove",e.CustomEditorShowFindWidget="editor.action.webvieweditor.showFind",e.Diff="vscode.diff",e.EditorScroll="editorScroll",e.EditorShowHover="editor.action.showHover",e.ExecuteDocumentSymbolProvider="vscode.executeDocumentSymbolProvider",e.ExecuteCodeLensProvider="vscode.executeCodeLensProvider",e.FocusFilesExplorer="workbench.files.action.focusFilesExplorer",e.InstallExtension="workbench.extensions.installExtension",e.MoveViews="vscode.moveViews",e.Open="vscode.open",e.OpenFolder="vscode.openFolder",e.OpenInTerminal="openInTerminal",e.OpenWalkthrough="workbench.action.openWalkthrough",e.OpenWith="vscode.openWith",e.NextEditor="workbench.action.nextEditor",e.PreviewHtml="vscode.previewHtml",e.RevealLine="revealLine",e.RevealInExplorer="revealInExplorer",e.RevealInFileExplorer="revealFileInOS",e.SetContext="setContext",e.ShowExplorer="workbench.view.explorer",e.ShowReferences="editor.action.showReferences",e.ShowSCM="workbench.view.scm",e.UninstallExtension="workbench.extensions.uninstallExtension",e))(h||{}),u=(e=>(e.Publish="git.publish",e.Pull="git.pull",e.PullRebase="git.pullRebase",e.Push="git.push",e.PushForce="git.pushForce",e.UndoCommit="git.undoCommit",e))(u||{}),d=(e=>(e.AutoRepositoryDetection="git.autoRepositoryDetection",e.RepositoryScanMaxDepth="git.repositoryScanMaxDepth",e.FetchOnPull="git.fetchOnPull",e.UseForcePushWithLease="git.useForcePushWithLease",e))(d||{}),p=(e=>(e.AngleBracketLeftHeavy="❰",e.AngleBracketRightHeavy="❱",e.ArrowBack="↩",e.ArrowDown="↓",e.ArrowDownUp="⇵",e.ArrowDropRight="⤷",e.ArrowHeadRight="➤",e.ArrowLeft="←",e.ArrowLeftDouble="⇐",e.ArrowLeftRight="↔",e.ArrowLeftRightDouble="⇔",e.ArrowLeftRightDoubleStrike="⇎",e.ArrowLeftRightLong="⟷",e.ArrowRight="→",e.ArrowRightDouble="⇒",e.ArrowRightHollow="⇨",e.ArrowUp="↑",e.ArrowUpDown="⇅",e.ArrowUpRight="↗",e.ArrowsHalfLeftRight="⇋",e.ArrowsHalfRightLeft="⇌",e.ArrowsLeftRight="⇆",e.ArrowsRightLeft="⇄",e.Asterisk="∗",e.Check="✔",e.Dash="—",e.Dot="•",e.Ellipsis="…",e.EnDash="–",e.Envelope="✉",e.EqualsTriple="≡",e.Flag="⚑",e.FlagHollow="⚐",e.MiddleEllipsis="⋯",e.MuchLessThan="≪",e.MuchGreaterThan="≫",e.Pencil="✎",e.Space=" ",e.SpaceThin=" ",e.SpaceThinnest=" ",e.SquareWithBottomShadow="❏",e.SquareWithTopShadow="❐",e.Warning="⚠",e.ZeroWidthSpace="​",e))(p||{}),m=(e=>(e.Off="off",e.Error="error",e.Warn="warn",e.Info="info",e.Debug="debug",e))(m||{}),g=(e=>(e.DebugConsole="debug",e.File="file",e.Git="git",e.GitHub="github",e.GitLens="gitlens",e.Output="output",e.PRs="pr",e.Vsls="vsls",e.VslsScc="vsls-scc",e.Virtual="vscode-vfs",e))(g||{})},6479:(e,t,i)=>{i.d(t,{W:()=>lf,N:()=>cf});var n=i(9496),o=i(185),r=i(3113),s=i(5255),a=i(6631);const l=JSON.parse('{"100":"💯","1234":"🔢","+1":"👍","+1_tone1":"👍🏻","+1_tone2":"👍🏼","+1_tone3":"👍🏽","+1_tone4":"👍🏾","+1_tone5":"👍🏿","-1":"👎","-1_tone1":"👎🏻","-1_tone2":"👎🏼","-1_tone3":"👎🏽","-1_tone4":"👎🏾","-1_tone5":"👎🏿","1st":"🥇","1st_place_medal":"🥇","2nd":"🥈","2nd_place_medal":"🥈","3rd":"🥉","3rd_place_medal":"🥉","8ball":"🎱","a":"🅰","a_blood":"🅰","ab":"🆎","ab_blood":"🆎","abacus":"🧮","abc":"🔤","abcd":"🔡","accept":"🉑","accordion":"🪗","adhesive_bandag":"🩹","adhesive_bandage":"🩹","admission_tickets":"🎟","adult":"🧑","adult_tone1":"🧑🏻","adult_tone2":"🧑🏼","adult_tone3":"🧑🏽","adult_tone4":"🧑🏾","adult_tone5":"🧑🏿","aerial_tramway":"🚡","afghanistan":"🇦🇫","airplane":"✈","airplane_arriving":"🛬","airplane_departure":"🛫","aland_islands":"🇦🇽","alarm_clock":"⏰","albania":"🇦🇱","alembi":"⚗️","alembic":"⚗","algeria":"🇩🇿","alie":"👽️","alien":"👽","alien_monster":"👾","all_good":"🙆","all_good_tone1":"🙆🏻","all_good_tone2":"🙆🏼","all_good_tone3":"🙆🏽","all_good_tone4":"🙆🏾","all_good_tone5":"🙆🏿","ambulanc":"🚑️","ambulance":"🚑","american_samoa":"🇦🇸","amphora":"🏺","anatomical_heart":"🫀","anchor":"⚓","andorra":"🇦🇩","android":"📱","angel":"👼","angel_tone1":"👼🏻","angel_tone2":"👼🏼","angel_tone3":"👼🏽","angel_tone4":"👼🏾","angel_tone5":"👼🏿","anger":"💢","angola":"🇦🇴","angry":"😠","angry_face":"😠","angry_imp":"👿","anguilla":"🇦🇮","anguished":"😧","anguished_face":"😧","ant":"🐜","antarctica":"🇦🇶","antenna_bars":"📶","antigua_barbuda":"🇦🇬","anxious":"😰","anxious_face":"😰","apple":"🍎","aquarius":"♒","ar":"🎨","argentina":"🇦🇷","aries":"♈","armenia":"🇦🇲","arrow_backward":"◀","arrow_double_down":"⏬","arrow_double_up":"⏫","arrow_dow":"⬇️","arrow_down":"⬇","arrow_down_small":"🔽","arrow_forward":"▶","arrow_heading_down":"⤵","arrow_heading_up":"⤴","arrow_left":"⬅","arrow_left_hook":"↩","arrow_lower_left":"↙","arrow_lower_right":"↘","arrow_right":"➡","arrow_right_hook":"↪","arrow_u":"⬆️","arrow_up":"⬆","arrow_up_down":"↕","arrow_up_small":"🔼","arrow_upper_left":"↖","arrow_upper_right":"↗","arrows_clockwise":"🔃","arrows_counterclockwise":"🔄","art":"🎨","articulated_lorry":"🚛","artificial_satellite":"🛰","artist":"🧑‍🎨","artist_tone1":"🧑🏻‍🎨","artist_tone2":"🧑🏼‍🎨","artist_tone3":"🧑🏽‍🎨","artist_tone4":"🧑🏾‍🎨","artist_tone5":"🧑🏿‍🎨","aruba":"🇦🇼","ascension_island":"🇦🇨","asterisk":"*️⃣","astonished":"😲","astonished_face":"😲","astronaut":"🧑‍🚀","astronaut_tone1":"🧑🏻‍🚀","astronaut_tone2":"🧑🏼‍🚀","astronaut_tone3":"🧑🏽‍🚀","astronaut_tone4":"🧑🏾‍🚀","astronaut_tone5":"🧑🏿‍🚀","athletic_shoe":"👟","atm":"🏧","atom":"⚛","atom_symbol":"⚛","australia":"🇦🇺","austria":"🇦🇹","auto_rickshaw":"🛺","avocado":"🥑","axe":"🪓","azerbaijan":"🇦🇿","b":"🅱","b_blood":"🅱","baby":"👶","baby_bottle":"🍼","baby_chick":"🐤","baby_symbol":"🚼","baby_tone1":"👶🏻","baby_tone2":"👶🏼","baby_tone3":"👶🏽","baby_tone4":"👶🏾","baby_tone5":"👶🏿","back":"🔙","backpack":"🎒","bacon":"🥓","badger":"🦡","badminton":"🏸","bagel":"🥯","baggage_claim":"🛄","baguette_bread":"🥖","bahamas":"🇧🇸","bahrain":"🇧🇭","balance_scale":"⚖","bald":"🧑‍🦲","bald_man":"👨‍🦲","bald_tone1":"🧑🏻‍🦲","bald_tone2":"🧑🏼‍🦲","bald_tone3":"🧑🏽‍🦲","bald_tone4":"🧑🏾‍🦲","bald_tone5":"🧑🏿‍🦲","bald_woman":"👩‍🦲","ballet_shoes":"🩰","balloon":"🎈","ballot_box":"🗳","ballot_box_with_check":"☑","bamboo":"🎍","banana":"🍌","bandaid":"🩹","bangbang":"‼","bangladesh":"🇧🇩","banjo":"🪕","bank":"🏦","bar_chart":"📊","barbados":"🇧🇧","barber":"💈","barber_pole":"💈","baseball":"⚾","basket":"🧺","basketball":"🏀","basketball_man":"⛹️‍♂️","basketball_woman":"⛹️‍♀️","bat":"🦇","bath":"🛀","bath_tone1":"🛀🏻","bath_tone2":"🛀🏼","bath_tone3":"🛀🏽","bath_tone4":"🛀🏾","bath_tone5":"🛀🏿","bathroom":"🚻","bathtub":"🛁","battery":"🔋","beach":"🏖","beach_umbrella":"🏖","beach_with_umbrella":"🏖","beaming_face":"😁","beans":"🫘","bear":"🐻","bear_face":"🐻","bearded_person":"🧔","beating_heart":"💓","beaver":"🦫","bed":"🛏","bee":"🐝","beer":"🍺","beers":"🍻","beetle":"🪲","beginner":"🔰","belarus":"🇧🇾","belgium":"🇧🇪","belize":"🇧🇿","bell":"🔔","bell_pepper":"🫑","bellhop":"🛎","bellhop_bell":"🛎","benin":"🇧🇯","bent":"🍱","bento":"🍱","bento_box":"🍱","bermuda":"🇧🇲","beverage_box":"🧃","bhutan":"🇧🇹","bicycle":"🚲","bicyclist":"🚴","bicyclist_tone1":"🚴🏻","bicyclist_tone2":"🚴🏼","bicyclist_tone3":"🚴🏽","bicyclist_tone4":"🚴🏾","bicyclist_tone5":"🚴🏿","bike":"🚲","biking":"🚴","biking_man":"🚴‍♂️","biking_tone1":"🚴🏻","biking_tone2":"🚴🏼","biking_tone3":"🚴🏽","biking_tone4":"🚴🏾","biking_tone5":"🚴🏿","biking_woman":"🚴‍♀️","bikini":"👙","billed_cap":"🧢","billiards":"🎱","biohazard":"☣","bird":"🐦","bird_face":"🐦","birthday":"🎂","birthday_cake":"🎂","bison":"🦬","biting_lip":"🫦","black_cat":"🐈‍⬛","black_circle":"⚫","black_flag":"🏴","black_heart":"🖤","black_joker":"🃏","black_large_square":"⬛","black_medium_small_square":"◾","black_medium_square":"◼","black_nib":"✒","black_small_square":"▪","black_square_button":"🔲","blond_haired":"👱","blond_haired_man":"👱‍♂️","blond_haired_person":"👱","blond_haired_tone1":"👱🏻","blond_haired_tone2":"👱🏼","blond_haired_tone3":"👱🏽","blond_haired_tone4":"👱🏾","blond_haired_tone5":"👱🏿","blond_haired_woman":"👱‍♀️","blonde_woman":"👱‍♀️","blossom":"🌼","blowfish":"🐡","blowing_a_kiss":"😘","blue_book":"📘","blue_car":"🚙","blue_circle":"🔵","blue_heart":"💙","blue_square":"🟦","blueberries":"🫐","blush":"😊","boar":"🐗","boat":"⛵","boba_drink":"🧋","bolivia":"🇧🇴","bomb":"💣","bone":"🦴","boo":"💥","book":"📖","bookmar":"🔖","bookmark":"🔖","bookmark_tabs":"📑","books":"📚","boom":"💥","boomerang":"🪃","boot":"👢","bosnia_herzegovina":"🇧🇦","botswana":"🇧🇼","bouncing_ball_man":"⛹️‍♂️","bouncing_ball_person":"⛹","bouncing_ball_woman":"⛹️‍♀️","bouquet":"💐","bouvet_island":"🇧🇻","bow":"🙇","bow_and_arrow":"🏹","bow_tone1":"🙇🏻","bow_tone2":"🙇🏼","bow_tone3":"🙇🏽","bow_tone4":"🙇🏾","bow_tone5":"🙇🏿","bowing_man":"🙇‍♂️","bowing_woman":"🙇‍♀️","bowl_with_spoon":"🥣","bowling":"🎳","boxing_glove":"🥊","boy":"👦","boy_tone1":"👦🏻","boy_tone2":"👦🏼","boy_tone3":"👦🏽","boy_tone4":"👦🏾","boy_tone5":"👦🏿","brain":"🧠","brazil":"🇧🇷","bread":"🍞","breast_feeding":"🤱","breast_feeding_tone1":"🤱🏻","breast_feeding_tone2":"🤱🏼","breast_feeding_tone3":"🤱🏽","breast_feeding_tone4":"🤱🏾","breast_feeding_tone5":"🤱🏿","brick":"🧱","bricks":"🧱","bride_with_veil":"👰‍♀️","bridge_at_night":"🌉","briefcase":"💼","briefs":"🩲","bright_button":"🔆","british_indian_ocean_territory":"🇮🇴","british_virgin_islands":"🇻🇬","broccoli":"🥦","broken_heart":"💔","broom":"🧹","brown_circle":"🟤","brown_heart":"🤎","brown_square":"🟫","brunei":"🇧🇳","bu":"🐛","bubble_tea":"🧋","bubbles":"🫧","bucket":"🪣","bug":"🐛","building_constructio":"🏗️","building_construction":"🏗","bul":"💡","bulb":"💡","bulgaria":"🇧🇬","bullettrain_front":"🚅","bullettrain_side":"🚄","bullseye":"🎯","burkina_faso":"🇧🇫","burma":"🇲🇲","burrito":"🌯","burundi":"🇧🇮","bus":"🚌","business_suit_levitating":"🕴","busstop":"🚏","bust_in_silhouette":"👤","busts_in_silhouett":"👥","busts_in_silhouette":"👥","butter":"🧈","butterfly":"🦋","cactus":"🌵","cake":"🍰","calendar":"📆","calendar_spiral":"🗓","call_me_hand":"🤙","call_me_hand_tone1":"🤙🏻","call_me_hand_tone2":"🤙🏼","call_me_hand_tone3":"🤙🏽","call_me_hand_tone4":"🤙🏾","call_me_hand_tone5":"🤙🏿","calling":"📲","cambodia":"🇰🇭","camel":"🐫","camera":"📷","camera_flas":"📸","camera_flash":"📸","camera_with_flash":"📸","cameroon":"🇨🇲","camping":"🏕","canada":"🇨🇦","canary_islands":"🇮🇨","cancer":"♋","candle":"🕯","candy":"🍬","canned_food":"🥫","canoe":"🛶","cape_verde":"🇨🇻","capital_abcd":"🔠","capricorn":"♑","car":"🚗","card_file_bo":"🗃️","card_file_box":"🗃","card_index":"📇","card_index_dividers":"🗂","caribbean_netherlands":"🇧🇶","carousel_horse":"🎠","carp_streamer":"🎏","carpentry_saw":"🪚","carrot":"🥕","cartwheeling":"🤸","cartwheeling_tone1":"🤸🏻","cartwheeling_tone2":"🤸🏼","cartwheeling_tone3":"🤸🏽","cartwheeling_tone4":"🤸🏾","cartwheeling_tone5":"🤸🏿","castle":"🏰","cat":"🐱","cat2":"🐈","cat_face":"🐱","cayman_islands":"🇰🇾","cd":"💿","censored":"🤬","central_african_republic":"🇨🇫","ceuta_melilla":"🇪🇦","chad":"🇹🇩","chains":"⛓","chair":"🪑","champagne":"🍾","chart":"💹","chart_decreasing":"📉","chart_increasing":"📈","chart_with_downwards_trend":"📉","chart_with_upwards_tren":"📈","chart_with_upwards_trend":"📈","check_mark":"✔","check_mark_button":"✅","checkered_flag":"🏁","cheese":"🧀","cherries":"🍒","cherry_blossom":"🌸","chess_pawn":"♟","chestnut":"🌰","chicken":"🐔","chicken_face":"🐔","child":"🧒","child_tone1":"🧒🏻","child_tone2":"🧒🏼","child_tone3":"🧒🏽","child_tone4":"🧒🏾","child_tone5":"🧒🏿","children_crossin":"🚸","children_crossing":"🚸","chile":"🇨🇱","china":"🇨🇳","chipmunk":"🐿","chocolate_bar":"🍫","chopsticks":"🥢","christmas_island":"🇨🇽","christmas_tree":"🎄","church":"⛪","cigarette":"🚬","cinema":"🎦","circus_tent":"🎪","city_dusk":"🌆","city_sunrise":"🌇","city_sunset":"🌆","cityscape":"🏙","cl":"🆑","clamp":"🗜","clap":"👏","clap_tone1":"👏🏻","clap_tone2":"👏🏼","clap_tone3":"👏🏽","clap_tone4":"👏🏾","clap_tone5":"👏🏿","clapper":"🎬","clapping_hands":"👏","clapping_hands_tone1":"👏🏻","clapping_hands_tone2":"👏🏼","clapping_hands_tone3":"👏🏽","clapping_hands_tone4":"👏🏾","clapping_hands_tone5":"👏🏿","classical_building":"🏛","climbing":"🧗","climbing_man":"🧗‍♂️","climbing_tone1":"🧗🏻","climbing_tone2":"🧗🏼","climbing_tone3":"🧗🏽","climbing_tone4":"🧗🏾","climbing_tone5":"🧗🏿","climbing_woman":"🧗‍♀️","clinking_glasses":"🥂","clipboard":"📋","clipperton_island":"🇨🇵","clock":"🕰","clock1":"🕐","clock10":"🕙","clock1030":"🕥","clock11":"🕚","clock1130":"🕦","clock12":"🕛","clock1230":"🕧","clock130":"🕜","clock2":"🕑","clock230":"🕝","clock3":"🕒","clock330":"🕞","clock4":"🕓","clock430":"🕟","clock5":"🕔","clock530":"🕠","clock6":"🕕","clock630":"🕡","clock7":"🕖","clock730":"🕢","clock8":"🕗","clock830":"🕣","clock9":"🕘","clock930":"🕤","clockwise":"🔃","closed_book":"📕","closed_lock_with_key":"🔐","closed_umbrella":"🌂","cloud":"☁","cloud_with_lightning":"🌩","cloud_with_lightning_and_rain":"⛈","cloud_with_rain":"🌧","cloud_with_snow":"🌨","cloudy":"🌥","clown":"🤡","clown_fac":"🤡","clown_face":"🤡","clubs":"♣","clutch_bag":"👝","cn":"🇨🇳","coat":"🧥","cockroach":"🪳","cocktail":"🍸","coconut":"🥥","cocos_islands":"🇨🇨","coffee":"☕","coffi":"⚰️","coffin":"⚰","coin":"🪙","cold":"🥶","cold_face":"🥶","cold_sweat":"😰","collision":"💥","colombia":"🇨🇴","comet":"☄","comoros":"🇰🇲","compass":"🧭","compression":"🗜","computer":"💻","computer_disk":"💽","computer_mouse":"🖱","confetti_ball":"🎊","confounded":"😖","confounded_face":"😖","confused":"😕","confused_face":"😕","congo_brazzaville":"🇨🇬","congo_kinshasa":"🇨🇩","congratulations":"㊗","constructio":"🚧","construction":"🚧","construction_site":"🏗","construction_worke":"👷","construction_worker":"👷","construction_worker_man":"👷‍♂️","construction_worker_tone1":"👷🏻","construction_worker_tone2":"👷🏼","construction_worker_tone3":"👷🏽","construction_worker_tone4":"👷🏾","construction_worker_tone5":"👷🏿","construction_worker_woman":"👷‍♀️","control_knobs":"🎛","controller":"🎮","convenience_store":"🏪","cook":"🧑‍🍳","cook_islands":"🇨🇰","cook_tone1":"🧑🏻‍🍳","cook_tone2":"🧑🏼‍🍳","cook_tone3":"🧑🏽‍🍳","cook_tone4":"🧑🏾‍🍳","cook_tone5":"🧑🏿‍🍳","cooked_rice":"🍚","cookie":"🍪","cooking":"🍳","cool":"🆒","cop":"👮","cop_tone1":"👮🏻","cop_tone2":"👮🏼","cop_tone3":"👮🏽","cop_tone4":"👮🏾","cop_tone5":"👮🏿","copyright":"©","coral":"🪸","corn":"🌽","costa_rica":"🇨🇷","cote_divoire":"🇨🇮","couch_and_lamp":"🛋","counterclockwise":"🔄","couple":"👫","couple_kiss":"💏","couple_kiss_tone1":"💏🏻","couple_kiss_tone1-2":"🧑🏻‍❤️‍💋‍🧑🏼","couple_kiss_tone1-3":"🧑🏻‍❤️‍💋‍🧑🏽","couple_kiss_tone1-4":"🧑🏻‍❤️‍💋‍🧑🏾","couple_kiss_tone1-5":"🧑🏻‍❤️‍💋‍🧑🏿","couple_kiss_tone2":"💏🏼","couple_kiss_tone2-1":"🧑🏼‍❤️‍💋‍🧑🏻","couple_kiss_tone2-3":"🧑🏼‍❤️‍💋‍🧑🏽","couple_kiss_tone2-4":"🧑🏼‍❤️‍💋‍🧑🏾","couple_kiss_tone2-5":"🧑🏼‍❤️‍💋‍🧑🏿","couple_kiss_tone3":"💏🏽","couple_kiss_tone3-1":"🧑🏽‍❤️‍💋‍🧑🏻","couple_kiss_tone3-2":"🧑🏽‍❤️‍💋‍🧑🏼","couple_kiss_tone3-4":"🧑🏽‍❤️‍💋‍🧑🏾","couple_kiss_tone3-5":"🧑🏽‍❤️‍💋‍🧑🏿","couple_kiss_tone4":"💏🏾","couple_kiss_tone4-1":"🧑🏾‍❤️‍💋‍🧑🏻","couple_kiss_tone4-2":"🧑🏾‍❤️‍💋‍🧑🏼","couple_kiss_tone4-3":"🧑🏾‍❤️‍💋‍🧑🏽","couple_kiss_tone4-5":"🧑🏾‍❤️‍💋‍🧑🏿","couple_kiss_tone5":"💏🏿","couple_kiss_tone5-1":"🧑🏿‍❤️‍💋‍🧑🏻","couple_kiss_tone5-2":"🧑🏿‍❤️‍💋‍🧑🏼","couple_kiss_tone5-3":"🧑🏿‍❤️‍💋‍🧑🏽","couple_kiss_tone5-4":"🧑🏿‍❤️‍💋‍🧑🏾","couple_tone1":"👫🏻","couple_tone1-2":"👩🏻‍🤝‍👨🏼","couple_tone1-3":"👩🏻‍🤝‍👨🏽","couple_tone1-4":"👩🏻‍🤝‍👨🏾","couple_tone1-5":"👩🏻‍🤝‍👨🏿","couple_tone2":"👫🏼","couple_tone2-1":"👩🏼‍🤝‍👨🏻","couple_tone2-3":"👩🏼‍🤝‍👨🏽","couple_tone2-4":"👩🏼‍🤝‍👨🏾","couple_tone2-5":"👩🏼‍🤝‍👨🏿","couple_tone3":"👫🏽","couple_tone3-1":"👩🏽‍🤝‍👨🏻","couple_tone3-2":"👩🏽‍🤝‍👨🏼","couple_tone3-4":"👩🏽‍🤝‍👨🏾","couple_tone3-5":"👩🏽‍🤝‍👨🏿","couple_tone4":"👫🏾","couple_tone4-1":"👩🏾‍🤝‍👨🏻","couple_tone4-2":"👩🏾‍🤝‍👨🏼","couple_tone4-3":"👩🏾‍🤝‍👨🏽","couple_tone4-5":"👩🏾‍🤝‍👨🏿","couple_tone5":"👫🏿","couple_tone5-1":"👩🏿‍🤝‍👨🏻","couple_tone5-2":"👩🏿‍🤝‍👨🏼","couple_tone5-3":"👩🏿‍🤝‍👨🏽","couple_tone5-4":"👩🏿‍🤝‍👨🏾","couple_with_heart":"💑","couple_with_heart_man_man":"👨‍❤️‍👨","couple_with_heart_mm":"👨‍❤️‍👨","couple_with_heart_mm_tone1":"👨🏻‍❤️‍👨🏻","couple_with_heart_mm_tone1-2":"👨🏻‍❤️‍👨🏼","couple_with_heart_mm_tone1-3":"👨🏻‍❤️‍👨🏽","couple_with_heart_mm_tone1-4":"👨🏻‍❤️‍👨🏾","couple_with_heart_mm_tone1-5":"👨🏻‍❤️‍👨🏿","couple_with_heart_mm_tone2":"👨🏼‍❤️‍👨🏼","couple_with_heart_mm_tone2-1":"👨🏼‍❤️‍👨🏻","couple_with_heart_mm_tone2-3":"👨🏼‍❤️‍👨🏽","couple_with_heart_mm_tone2-4":"👨🏼‍❤️‍👨🏾","couple_with_heart_mm_tone2-5":"👨🏼‍❤️‍👨🏿","couple_with_heart_mm_tone3":"👨🏽‍❤️‍👨🏽","couple_with_heart_mm_tone3-1":"👨🏽‍❤️‍👨🏻","couple_with_heart_mm_tone3-2":"👨🏽‍❤️‍👨🏼","couple_with_heart_mm_tone3-4":"👨🏽‍❤️‍👨🏾","couple_with_heart_mm_tone3-5":"👨🏽‍❤️‍👨🏿","couple_with_heart_mm_tone4":"👨🏾‍❤️‍👨🏾","couple_with_heart_mm_tone4-1":"👨🏾‍❤️‍👨🏻","couple_with_heart_mm_tone4-2":"👨🏾‍❤️‍👨🏼","couple_with_heart_mm_tone4-3":"👨🏾‍❤️‍👨🏽","couple_with_heart_mm_tone4-5":"👨🏾‍❤️‍👨🏿","couple_with_heart_mm_tone5":"👨🏿‍❤️‍👨🏿","couple_with_heart_mm_tone5-1":"👨🏿‍❤️‍👨🏻","couple_with_heart_mm_tone5-2":"👨🏿‍❤️‍👨🏼","couple_with_heart_mm_tone5-3":"👨🏿‍❤️‍👨🏽","couple_with_heart_mm_tone5-4":"👨🏿‍❤️‍👨🏾","couple_with_heart_mw":"👩‍❤️‍👨","couple_with_heart_mw_tone1":"👩🏻‍❤️‍👨🏻","couple_with_heart_mw_tone1-2":"👩🏻‍❤️‍👨🏼","couple_with_heart_mw_tone1-3":"👩🏻‍❤️‍👨🏽","couple_with_heart_mw_tone1-4":"👩🏻‍❤️‍👨🏾","couple_with_heart_mw_tone1-5":"👩🏻‍❤️‍👨🏿","couple_with_heart_mw_tone2":"👩🏼‍❤️‍👨🏼","couple_with_heart_mw_tone2-1":"👩🏼‍❤️‍👨🏻","couple_with_heart_mw_tone2-3":"👩🏼‍❤️‍👨🏽","couple_with_heart_mw_tone2-4":"👩🏼‍❤️‍👨🏾","couple_with_heart_mw_tone2-5":"👩🏼‍❤️‍👨🏿","couple_with_heart_mw_tone3":"👩🏽‍❤️‍👨🏽","couple_with_heart_mw_tone3-1":"👩🏽‍❤️‍👨🏻","couple_with_heart_mw_tone3-2":"👩🏽‍❤️‍👨🏼","couple_with_heart_mw_tone3-4":"👩🏽‍❤️‍👨🏾","couple_with_heart_mw_tone3-5":"👩🏽‍❤️‍👨🏿","couple_with_heart_mw_tone4":"👩🏾‍❤️‍👨🏾","couple_with_heart_mw_tone4-1":"👩🏾‍❤️‍👨🏻","couple_with_heart_mw_tone4-2":"👩🏾‍❤️‍👨🏼","couple_with_heart_mw_tone4-3":"👩🏾‍❤️‍👨🏽","couple_with_heart_mw_tone4-5":"👩🏾‍❤️‍👨🏿","couple_with_heart_mw_tone5":"👩🏿‍❤️‍👨🏿","couple_with_heart_mw_tone5-1":"👩🏿‍❤️‍👨🏻","couple_with_heart_mw_tone5-2":"👩🏿‍❤️‍👨🏼","couple_with_heart_mw_tone5-3":"👩🏿‍❤️‍👨🏽","couple_with_heart_mw_tone5-4":"👩🏿‍❤️‍👨🏾","couple_with_heart_tone1":"💑🏻","couple_with_heart_tone1-2":"🧑🏻‍❤️‍🧑🏼","couple_with_heart_tone1-3":"🧑🏻‍❤️‍🧑🏽","couple_with_heart_tone1-4":"🧑🏻‍❤️‍🧑🏾","couple_with_heart_tone1-5":"🧑🏻‍❤️‍🧑🏿","couple_with_heart_tone2":"💑🏼","couple_with_heart_tone2-1":"🧑🏼‍❤️‍🧑🏻","couple_with_heart_tone2-3":"🧑🏼‍❤️‍🧑🏽","couple_with_heart_tone2-4":"🧑🏼‍❤️‍🧑🏾","couple_with_heart_tone2-5":"🧑🏼‍❤️‍🧑🏿","couple_with_heart_tone3":"💑🏽","couple_with_heart_tone3-1":"🧑🏽‍❤️‍🧑🏻","couple_with_heart_tone3-2":"🧑🏽‍❤️‍🧑🏼","couple_with_heart_tone3-4":"🧑🏽‍❤️‍🧑🏾","couple_with_heart_tone3-5":"🧑🏽‍❤️‍🧑🏿","couple_with_heart_tone4":"💑🏾","couple_with_heart_tone4-1":"🧑🏾‍❤️‍🧑🏻","couple_with_heart_tone4-2":"🧑🏾‍❤️‍🧑🏼","couple_with_heart_tone4-3":"🧑🏾‍❤️‍🧑🏽","couple_with_heart_tone4-5":"🧑🏾‍❤️‍🧑🏿","couple_with_heart_tone5":"💑🏿","couple_with_heart_tone5-1":"🧑🏿‍❤️‍🧑🏻","couple_with_heart_tone5-2":"🧑🏿‍❤️‍🧑🏼","couple_with_heart_tone5-3":"🧑🏿‍❤️‍🧑🏽","couple_with_heart_tone5-4":"🧑🏿‍❤️‍🧑🏾","couple_with_heart_wm":"👩‍❤️‍👨","couple_with_heart_wm_tone1":"👩🏻‍❤️‍👨🏻","couple_with_heart_wm_tone1-2":"👩🏻‍❤️‍👨🏼","couple_with_heart_wm_tone1-3":"👩🏻‍❤️‍👨🏽","couple_with_heart_wm_tone1-4":"👩🏻‍❤️‍👨🏾","couple_with_heart_wm_tone1-5":"👩🏻‍❤️‍👨🏿","couple_with_heart_wm_tone2":"👩🏼‍❤️‍👨🏼","couple_with_heart_wm_tone2-1":"👩🏼‍❤️‍👨🏻","couple_with_heart_wm_tone2-3":"👩🏼‍❤️‍👨🏽","couple_with_heart_wm_tone2-4":"👩🏼‍❤️‍👨🏾","couple_with_heart_wm_tone2-5":"👩🏼‍❤️‍👨🏿","couple_with_heart_wm_tone3":"👩🏽‍❤️‍👨🏽","couple_with_heart_wm_tone3-1":"👩🏽‍❤️‍👨🏻","couple_with_heart_wm_tone3-2":"👩🏽‍❤️‍👨🏼","couple_with_heart_wm_tone3-4":"👩🏽‍❤️‍👨🏾","couple_with_heart_wm_tone3-5":"👩🏽‍❤️‍👨🏿","couple_with_heart_wm_tone4":"👩🏾‍❤️‍👨🏾","couple_with_heart_wm_tone4-1":"👩🏾‍❤️‍👨🏻","couple_with_heart_wm_tone4-2":"👩🏾‍❤️‍👨🏼","couple_with_heart_wm_tone4-3":"👩🏾‍❤️‍👨🏽","couple_with_heart_wm_tone4-5":"👩🏾‍❤️‍👨🏿","couple_with_heart_wm_tone5":"👩🏿‍❤️‍👨🏿","couple_with_heart_wm_tone5-1":"👩🏿‍❤️‍👨🏻","couple_with_heart_wm_tone5-2":"👩🏿‍❤️‍👨🏼","couple_with_heart_wm_tone5-3":"👩🏿‍❤️‍👨🏽","couple_with_heart_wm_tone5-4":"👩🏿‍❤️‍👨🏾","couple_with_heart_woman_man":"👩‍❤️‍👨","couple_with_heart_woman_woman":"👩‍❤️‍👩","couple_with_heart_ww":"👩‍❤️‍👩","couple_with_heart_ww_tone1":"👩🏻‍❤️‍👩🏻","couple_with_heart_ww_tone1-2":"👩🏻‍❤️‍👩🏼","couple_with_heart_ww_tone1-3":"👩🏻‍❤️‍👩🏽","couple_with_heart_ww_tone1-4":"👩🏻‍❤️‍👩🏾","couple_with_heart_ww_tone1-5":"👩🏻‍❤️‍👩🏿","couple_with_heart_ww_tone2":"👩🏼‍❤️‍👩🏼","couple_with_heart_ww_tone2-1":"👩🏼‍❤️‍👩🏻","couple_with_heart_ww_tone2-3":"👩🏼‍❤️‍👩🏽","couple_with_heart_ww_tone2-4":"👩🏼‍❤️‍👩🏾","couple_with_heart_ww_tone2-5":"👩🏼‍❤️‍👩🏿","couple_with_heart_ww_tone3":"👩🏽‍❤️‍👩🏽","couple_with_heart_ww_tone3-1":"👩🏽‍❤️‍👩🏻","couple_with_heart_ww_tone3-2":"👩🏽‍❤️‍👩🏼","couple_with_heart_ww_tone3-4":"👩🏽‍❤️‍👩🏾","couple_with_heart_ww_tone3-5":"👩🏽‍❤️‍👩🏿","couple_with_heart_ww_tone4":"👩🏾‍❤️‍👩🏾","couple_with_heart_ww_tone4-1":"👩🏾‍❤️‍👩🏻","couple_with_heart_ww_tone4-2":"👩🏾‍❤️‍👩🏼","couple_with_heart_ww_tone4-3":"👩🏾‍❤️‍👩🏽","couple_with_heart_ww_tone4-5":"👩🏾‍❤️‍👩🏿","couple_with_heart_ww_tone5":"👩🏿‍❤️‍👩🏿","couple_with_heart_ww_tone5-1":"👩🏿‍❤️‍👩🏻","couple_with_heart_ww_tone5-2":"👩🏿‍❤️‍👩🏼","couple_with_heart_ww_tone5-3":"👩🏿‍❤️‍👩🏽","couple_with_heart_ww_tone5-4":"👩🏿‍❤️‍👩🏾","couplekiss":"💏","couplekiss_man_man":"👨‍❤️‍💋‍👨","couplekiss_man_woman":"👩‍❤️‍💋‍👨","couplekiss_tone1":"💏🏻","couplekiss_tone1-2":"🧑🏻‍❤️‍💋‍🧑🏼","couplekiss_tone1-3":"🧑🏻‍❤️‍💋‍🧑🏽","couplekiss_tone1-4":"🧑🏻‍❤️‍💋‍🧑🏾","couplekiss_tone1-5":"🧑🏻‍❤️‍💋‍🧑🏿","couplekiss_tone2":"💏🏼","couplekiss_tone2-1":"🧑🏼‍❤️‍💋‍🧑🏻","couplekiss_tone2-3":"🧑🏼‍❤️‍💋‍🧑🏽","couplekiss_tone2-4":"🧑🏼‍❤️‍💋‍🧑🏾","couplekiss_tone2-5":"🧑🏼‍❤️‍💋‍🧑🏿","couplekiss_tone3":"💏🏽","couplekiss_tone3-1":"🧑🏽‍❤️‍💋‍🧑🏻","couplekiss_tone3-2":"🧑🏽‍❤️‍💋‍🧑🏼","couplekiss_tone3-4":"🧑🏽‍❤️‍💋‍🧑🏾","couplekiss_tone3-5":"🧑🏽‍❤️‍💋‍🧑🏿","couplekiss_tone4":"💏🏾","couplekiss_tone4-1":"🧑🏾‍❤️‍💋‍🧑🏻","couplekiss_tone4-2":"🧑🏾‍❤️‍💋‍🧑🏼","couplekiss_tone4-3":"🧑🏾‍❤️‍💋‍🧑🏽","couplekiss_tone4-5":"🧑🏾‍❤️‍💋‍🧑🏿","couplekiss_tone5":"💏🏿","couplekiss_tone5-1":"🧑🏿‍❤️‍💋‍🧑🏻","couplekiss_tone5-2":"🧑🏿‍❤️‍💋‍🧑🏼","couplekiss_tone5-3":"🧑🏿‍❤️‍💋‍🧑🏽","couplekiss_tone5-4":"🧑🏿‍❤️‍💋‍🧑🏾","couplekiss_woman_woman":"👩‍❤️‍💋‍👩","cow":"🐮","cow2":"🐄","cow_face":"🐮","cowboy":"🤠","cowboy_face":"🤠","cowboy_hat_face":"🤠","crab":"🦀","crayon":"🖍","credit_card":"💳","crescent_moon":"🌙","cricket":"🦗","cricket_game":"🏏","croatia":"🇭🇷","crocodile":"🐊","croissant":"🥐","cross_mark":"❌","cross_mark_button":"❎","crossed_fingers":"🤞","crossed_flags":"🎌","crossed_swords":"⚔","crown":"👑","cruise_ship":"🛳","crutch":"🩼","cry":"😢","crying_cat":"😿","crying_cat_face":"😿","crying_face":"😢","crystal_ball":"🔮","cuba":"🇨🇺","cucumber":"🥒","cup_with_straw":"🥤","cupcake":"🧁","cupid":"💘","curacao":"🇨🇼","curling_stone":"🥌","curly_hair":"🦱","curly_haired":"🧑‍🦱","curly_haired_man":"👨‍🦱","curly_haired_tone1":"🧑🏻‍🦱","curly_haired_tone2":"🧑🏼‍🦱","curly_haired_tone3":"🧑🏽‍🦱","curly_haired_tone4":"🧑🏾‍🦱","curly_haired_tone5":"🧑🏿‍🦱","curly_haired_woman":"👩‍🦱","curly_loop":"➰","currency_exchange":"💱","curry":"🍛","curry_rice":"🍛","cursing_face":"🤬","custard":"🍮","customs":"🛃","cut_of_meat":"🥩","cyclone":"🌀","cyprus":"🇨🇾","czech_republic":"🇨🇿","czechia":"🇨🇿","dagger":"🗡","dancer":"💃","dancer_tone1":"💃🏻","dancer_tone2":"💃🏼","dancer_tone3":"💃🏽","dancer_tone4":"💃🏾","dancer_tone5":"💃🏿","dancers":"👯","dancing_men":"👯‍♂️","dancing_women":"👯‍♀️","dango":"🍡","dark_sunglasses":"🕶","dart":"🎯","dash":"💨","dashing_away":"💨","date":"📅","de":"🇩🇪","deaf_man":"🧏‍♂️","deaf_man_tone1":"🧏🏻‍♂️","deaf_man_tone2":"🧏🏼‍♂️","deaf_man_tone3":"🧏🏽‍♂️","deaf_man_tone4":"🧏🏾‍♂️","deaf_man_tone5":"🧏🏿‍♂️","deaf_person":"🧏","deaf_person_tone1":"🧏🏻","deaf_person_tone2":"🧏🏼","deaf_person_tone3":"🧏🏽","deaf_person_tone4":"🧏🏾","deaf_person_tone5":"🧏🏿","deaf_woman":"🧏‍♀️","deaf_woman_tone1":"🧏🏻‍♀️","deaf_woman_tone2":"🧏🏼‍♀️","deaf_woman_tone3":"🧏🏽‍♀️","deaf_woman_tone4":"🧏🏾‍♀️","deaf_woman_tone5":"🧏🏿‍♀️","deciduous_tree":"🌳","deer":"🦌","delivery_truck":"🚚","denmark":"🇩🇰","department_store":"🏬","derelict_house":"🏚","desert":"🏜","desert_island":"🏝","desktop_computer":"🖥","detective":"🕵","detective_tone1":"🕵🏻","detective_tone2":"🕵🏼","detective_tone3":"🕵🏽","detective_tone4":"🕵🏾","detective_tone5":"🕵🏿","diamond_shape_with_a_dot_inside":"💠","diamond_with_a_dot":"💠","diamonds":"♦","diego_garcia":"🇩🇬","dim_button":"🔅","direct_hit":"🎯","disappointed":"😞","disappointed_face":"😞","disappointed_relieved":"😥","disco":"🪩","disco_ball":"🪩","disguised":"🥸","disguised_face":"🥸","divide":"➗","diving_mask":"🤿","division":"➗","diya_lamp":"🪔","dizz":"💫","dizzy":"💫","dizzy_eyes":"😵‍💫","dizzy_face":"😵","djibouti":"🇩🇯","dna":"🧬","do_not_litter":"🚯","dodo":"🦤","dog":"🐶","dog2":"🐕","dog_face":"🐶","dollar":"💵","dolls":"🎎","dolphin":"🐬","dominica":"🇩🇲","dominican_republic":"🇩🇴","door":"🚪","dotted_line_face":"🫥","double_curly_loop":"➿","double_exclamation":"‼","double_helix":"🧬","doughnut":"🍩","dove":"🕊","down":"🔽","downcast_face":"😓","dragon":"🐉","dragon_face":"🐲","dress":"👗","dromedary_camel":"🐪","drooling":"🤤","drooling_face":"🤤","drop_of_blood":"🩸","droplet":"💧","drum":"🥁","duck":"🦆","dumpling":"🥟","dvd":"📀","e-mail":"📧","eagle":"🦅","ear":"👂","ear_of_corn":"🌽","ear_of_rice":"🌾","ear_tone1":"👂🏻","ear_tone2":"👂🏼","ear_tone3":"👂🏽","ear_tone4":"👂🏾","ear_tone5":"👂🏿","ear_with_hearing_aid":"🦻","ear_with_hearing_aid_tone1":"🦻🏻","ear_with_hearing_aid_tone2":"🦻🏼","ear_with_hearing_aid_tone3":"🦻🏽","ear_with_hearing_aid_tone4":"🦻🏾","ear_with_hearing_aid_tone5":"🦻🏿","earth_africa":"🌍","earth_americas":"🌎","earth_asia":"🌏","earth_europe":"🌍","ecuador":"🇪🇨","eg":"🥚","egg":"🥚","eggplant":"🍆","egypt":"🇪🇬","eight":"8️⃣","eight_pointed_black_star":"✴","eight_spoked_asterisk":"✳","eject":"⏏","eject_button":"⏏","el_salvador":"🇸🇻","electric_plug":"🔌","elephant":"🐘","elevator":"🛗","elf":"🧝","elf_man":"🧝‍♂️","elf_tone1":"🧝🏻","elf_tone2":"🧝🏼","elf_tone3":"🧝🏽","elf_tone4":"🧝🏾","elf_tone5":"🧝🏿","elf_woman":"🧝‍♀️","email":"📧","empty_nest":"🪹","end":"🔚","england":"🏴󠁧󠁢󠁥󠁮󠁧󠁿","envelope":"✉","envelope_with_arrow":"📩","equatorial_guinea":"🇬🇶","eritrea":"🇪🇷","es":"🇪🇸","estonia":"🇪🇪","eswatini":"🇸🇿","ethiopia":"🇪🇹","eu":"🇪🇺","euro":"💶","european_castle":"🏰","european_post_office":"🏤","european_union":"🇪🇺","evergreen_tree":"🌲","ewe":"🐑","exclamation":"❗","exclamation_question":"⁉","exhale":"😮‍💨","exhaling":"😮‍💨","exploding_head":"🤯","expressionless":"😑","expressionless_face":"😑","eye":"👁","eye_in_speech_bubble":"👁️‍🗨️","eye_speech_bubble":"👁️‍🗨️","eyeglasses":"👓","eyes":"👀","face_exhaling":"😮‍💨","face_holding_back_tears":"🥹","face_in_clouds":"😶‍🌫️","face_vomiting":"🤮","face_with_diagonal_mouth":"🫤","face_with_hand_over_mouth":"🤭","face_with_head_bandage":"🤕","face_with_monocle":"🧐","face_with_open_eyes_hand_over_mouth":"🫢","face_with_open_mouth":"😮","face_with_peeking_eye":"🫣","face_with_raised_eyebrow":"🤨","face_with_spiral_eyes":"😵‍💫","face_with_symbols_on_mouth":"🤬","face_with_thermometer":"🤒","face_with_tongue":"😛","facepalm":"🤦","facepalm_tone1":"🤦🏻","facepalm_tone2":"🤦🏼","facepalm_tone3":"🤦🏽","facepalm_tone4":"🤦🏾","facepalm_tone5":"🤦🏿","facepunch":"👊","factory":"🏭","factory_worker":"🧑‍🏭","factory_worker_tone1":"🧑🏻‍🏭","factory_worker_tone2":"🧑🏼‍🏭","factory_worker_tone3":"🧑🏽‍🏭","factory_worker_tone4":"🧑🏾‍🏭","factory_worker_tone5":"🧑🏿‍🏭","fairy":"🧚","fairy_man":"🧚‍♂️","fairy_tone1":"🧚🏻","fairy_tone2":"🧚🏼","fairy_tone3":"🧚🏽","fairy_tone4":"🧚🏾","fairy_tone5":"🧚🏿","fairy_woman":"🧚‍♀️","falafel":"🧆","falkland_islands":"🇫🇰","fallen_leaf":"🍂","family":"👪","family_man_boy":"👨‍👦","family_man_boy_boy":"👨‍👦‍👦","family_man_girl":"👨‍👧","family_man_girl_boy":"👨‍👧‍👦","family_man_girl_girl":"👨‍👧‍👧","family_man_man_boy":"👨‍👨‍👦","family_man_man_boy_boy":"👨‍👨‍👦‍👦","family_man_man_girl":"👨‍👨‍👧","family_man_man_girl_boy":"👨‍👨‍👧‍👦","family_man_man_girl_girl":"👨‍👨‍👧‍👧","family_man_woman_boy":"👨‍👩‍👦","family_man_woman_boy_boy":"👨‍👩‍👦‍👦","family_man_woman_girl":"👨‍👩‍👧","family_man_woman_girl_boy":"👨‍👩‍👧‍👦","family_man_woman_girl_girl":"👨‍👩‍👧‍👧","family_mb":"👨‍👦","family_mbb":"👨‍👦‍👦","family_mg":"👨‍👧","family_mgb":"👨‍👧‍👦","family_mgg":"👨‍👧‍👧","family_mmb":"👨‍👨‍👦","family_mmbb":"👨‍👨‍👦‍👦","family_mmg":"👨‍👨‍👧","family_mmgb":"👨‍👨‍👧‍👦","family_mmgg":"👨‍👨‍👧‍👧","family_mwb":"👨‍👩‍👦","family_mwbb":"👨‍👩‍👦‍👦","family_mwg":"👨‍👩‍👧","family_mwgb":"👨‍👩‍👧‍👦","family_mwgg":"👨‍👩‍👧‍👧","family_wb":"👩‍👦","family_wbb":"👩‍👦‍👦","family_wg":"👩‍👧","family_wgb":"👩‍👧‍👦","family_wgg":"👩‍👧‍👧","family_woman_boy":"👩‍👦","family_woman_boy_boy":"👩‍👦‍👦","family_woman_girl":"👩‍👧","family_woman_girl_boy":"👩‍👧‍👦","family_woman_girl_girl":"👩‍👧‍👧","family_woman_woman_boy":"👩‍👩‍👦","family_woman_woman_boy_boy":"👩‍👩‍👦‍👦","family_woman_woman_girl":"👩‍👩‍👧","family_woman_woman_girl_boy":"👩‍👩‍👧‍👦","family_woman_woman_girl_girl":"👩‍👩‍👧‍👧","family_wwb":"👩‍👩‍👦","family_wwbb":"👩‍👩‍👦‍👦","family_wwg":"👩‍👩‍👧","family_wwgb":"👩‍👩‍👧‍👦","family_wwgg":"👩‍👩‍👧‍👧","farmer":"🧑‍🌾","farmer_tone1":"🧑🏻‍🌾","farmer_tone2":"🧑🏼‍🌾","farmer_tone3":"🧑🏽‍🌾","farmer_tone4":"🧑🏾‍🌾","farmer_tone5":"🧑🏿‍🌾","faroe_islands":"🇫🇴","fast_down":"⏬","fast_forward":"⏩","fast_reverse":"⏪","fast_up":"⏫","fax":"📠","fax_machine":"📠","fearful":"😨","fearful_face":"😨","feather":"🪶","feet":"🐾","female":"♀","female_detective":"🕵️‍♀️","female_sign":"♀","fencer":"🤺","fencing":"🤺","ferris_wheel":"🎡","ferry":"⛴","field_hockey":"🏑","fiji":"🇫🇯","file_cabinet":"🗄","file_folder":"📁","film_frames":"🎞","film_projector":"📽","film_strip":"🎞","fingers_crossed":"🤞","fingers_crossed_tone1":"🤞🏻","fingers_crossed_tone2":"🤞🏼","fingers_crossed_tone3":"🤞🏽","fingers_crossed_tone4":"🤞🏾","fingers_crossed_tone5":"🤞🏿","finland":"🇫🇮","fir":"🔥","fire":"🔥","fire_engine":"🚒","fire_extinguisher":"🧯","firecracker":"🧨","firefighter":"🧑‍🚒","firefighter_tone1":"🧑🏻‍🚒","firefighter_tone2":"🧑🏼‍🚒","firefighter_tone3":"🧑🏽‍🚒","firefighter_tone4":"🧑🏾‍🚒","firefighter_tone5":"🧑🏿‍🚒","fireworks":"🎆","first_place_medal":"🥇","first_quarter_moon":"🌓","first_quarter_moon_with_face":"🌛","fish":"🐟","fish_cake":"🍥","fishing_pole":"🎣","fishing_pole_and_fish":"🎣","fist":"✊","fist_left":"🤛","fist_oncoming":"👊","fist_raised":"✊","fist_right":"🤜","fist_tone1":"✊🏻","fist_tone2":"✊🏼","fist_tone3":"✊🏽","fist_tone4":"✊🏾","fist_tone5":"✊🏿","five":"5️⃣","flag_ac":"🇦🇨","flag_ad":"🇦🇩","flag_ae":"🇦🇪","flag_af":"🇦🇫","flag_ag":"🇦🇬","flag_ai":"🇦🇮","flag_al":"🇦🇱","flag_am":"🇦🇲","flag_ao":"🇦🇴","flag_aq":"🇦🇶","flag_ar":"🇦🇷","flag_as":"🇦🇸","flag_at":"🇦🇹","flag_au":"🇦🇺","flag_aw":"🇦🇼","flag_ax":"🇦🇽","flag_az":"🇦🇿","flag_ba":"🇧🇦","flag_bb":"🇧🇧","flag_bd":"🇧🇩","flag_be":"🇧🇪","flag_bf":"🇧🇫","flag_bg":"🇧🇬","flag_bh":"🇧🇭","flag_bi":"🇧🇮","flag_bj":"🇧🇯","flag_bl":"🇧🇱","flag_bm":"🇧🇲","flag_bn":"🇧🇳","flag_bo":"🇧🇴","flag_bq":"🇧🇶","flag_br":"🇧🇷","flag_bs":"🇧🇸","flag_bt":"🇧🇹","flag_bv":"🇧🇻","flag_bw":"🇧🇼","flag_by":"🇧🇾","flag_bz":"🇧🇿","flag_ca":"🇨🇦","flag_cc":"🇨🇨","flag_cd":"🇨🇩","flag_cf":"🇨🇫","flag_cg":"🇨🇬","flag_ch":"🇨🇭","flag_ci":"🇨🇮","flag_ck":"🇨🇰","flag_cl":"🇨🇱","flag_cm":"🇨🇲","flag_cn":"🇨🇳","flag_co":"🇨🇴","flag_cp":"🇨🇵","flag_cr":"🇨🇷","flag_cu":"🇨🇺","flag_cv":"🇨🇻","flag_cw":"🇨🇼","flag_cx":"🇨🇽","flag_cy":"🇨🇾","flag_cz":"🇨🇿","flag_de":"🇩🇪","flag_dg":"🇩🇬","flag_dj":"🇩🇯","flag_dk":"🇩🇰","flag_dm":"🇩🇲","flag_do":"🇩🇴","flag_dz":"🇩🇿","flag_ea":"🇪🇦","flag_ec":"🇪🇨","flag_ee":"🇪🇪","flag_eg":"🇪🇬","flag_eh":"🇪🇭","flag_er":"🇪🇷","flag_es":"🇪🇸","flag_et":"🇪🇹","flag_eu":"🇪🇺","flag_fi":"🇫🇮","flag_fj":"🇫🇯","flag_fk":"🇫🇰","flag_fm":"🇫🇲","flag_fo":"🇫🇴","flag_fr":"🇫🇷","flag_ga":"🇬🇦","flag_gb":"🇬🇧","flag_gbeng":"🏴󠁧󠁢󠁥󠁮󠁧󠁿","flag_gbsct":"🏴󠁧󠁢󠁳󠁣󠁴󠁿","flag_gbwls":"🏴󠁧󠁢󠁷󠁬󠁳󠁿","flag_gd":"🇬🇩","flag_ge":"🇬🇪","flag_gf":"🇬🇫","flag_gg":"🇬🇬","flag_gh":"🇬🇭","flag_gi":"🇬🇮","flag_gl":"🇬🇱","flag_gm":"🇬🇲","flag_gn":"🇬🇳","flag_gp":"🇬🇵","flag_gq":"🇬🇶","flag_gr":"🇬🇷","flag_gs":"🇬🇸","flag_gt":"🇬🇹","flag_gu":"🇬🇺","flag_gw":"🇬🇼","flag_gy":"🇬🇾","flag_hk":"🇭🇰","flag_hm":"🇭🇲","flag_hn":"🇭🇳","flag_hr":"🇭🇷","flag_ht":"🇭🇹","flag_hu":"🇭🇺","flag_ic":"🇮🇨","flag_id":"🇮🇩","flag_ie":"🇮🇪","flag_il":"🇮🇱","flag_im":"🇮🇲","flag_in":"🇮🇳","flag_io":"🇮🇴","flag_iq":"🇮🇶","flag_ir":"🇮🇷","flag_is":"🇮🇸","flag_it":"🇮🇹","flag_je":"🇯🇪","flag_jm":"🇯🇲","flag_jo":"🇯🇴","flag_jp":"🇯🇵","flag_ke":"🇰🇪","flag_kg":"🇰🇬","flag_kh":"🇰🇭","flag_ki":"🇰🇮","flag_km":"🇰🇲","flag_kn":"🇰🇳","flag_kp":"🇰🇵","flag_kr":"🇰🇷","flag_kw":"🇰🇼","flag_ky":"🇰🇾","flag_kz":"🇰🇿","flag_la":"🇱🇦","flag_lb":"🇱🇧","flag_lc":"🇱🇨","flag_li":"🇱🇮","flag_lk":"🇱🇰","flag_lr":"🇱🇷","flag_ls":"🇱🇸","flag_lt":"🇱🇹","flag_lu":"🇱🇺","flag_lv":"🇱🇻","flag_ly":"🇱🇾","flag_ma":"🇲🇦","flag_mc":"🇲🇨","flag_md":"🇲🇩","flag_me":"🇲🇪","flag_mf":"🇲🇫","flag_mg":"🇲🇬","flag_mh":"🇲🇭","flag_mk":"🇲🇰","flag_ml":"🇲🇱","flag_mm":"🇲🇲","flag_mn":"🇲🇳","flag_mo":"🇲🇴","flag_mp":"🇲🇵","flag_mq":"🇲🇶","flag_mr":"🇲🇷","flag_ms":"🇲🇸","flag_mt":"🇲🇹","flag_mu":"🇲🇺","flag_mv":"🇲🇻","flag_mw":"🇲🇼","flag_mx":"🇲🇽","flag_my":"🇲🇾","flag_mz":"🇲🇿","flag_na":"🇳🇦","flag_nc":"🇳🇨","flag_ne":"🇳🇪","flag_nf":"🇳🇫","flag_ng":"🇳🇬","flag_ni":"🇳🇮","flag_nl":"🇳🇱","flag_no":"🇳🇴","flag_np":"🇳🇵","flag_nr":"🇳🇷","flag_nu":"🇳🇺","flag_nz":"🇳🇿","flag_om":"🇴🇲","flag_pa":"🇵🇦","flag_pe":"🇵🇪","flag_pf":"🇵🇫","flag_pg":"🇵🇬","flag_ph":"🇵🇭","flag_pk":"🇵🇰","flag_pl":"🇵🇱","flag_pm":"🇵🇲","flag_pn":"🇵🇳","flag_pr":"🇵🇷","flag_ps":"🇵🇸","flag_pt":"🇵🇹","flag_pw":"🇵🇼","flag_py":"🇵🇾","flag_qa":"🇶🇦","flag_re":"🇷🇪","flag_ro":"🇷🇴","flag_rs":"🇷🇸","flag_ru":"🇷🇺","flag_rw":"🇷🇼","flag_sa":"🇸🇦","flag_sb":"🇸🇧","flag_sc":"🇸🇨","flag_sd":"🇸🇩","flag_se":"🇸🇪","flag_sg":"🇸🇬","flag_sh":"🇸🇭","flag_si":"🇸🇮","flag_sj":"🇸🇯","flag_sk":"🇸🇰","flag_sl":"🇸🇱","flag_sm":"🇸🇲","flag_sn":"🇸🇳","flag_so":"🇸🇴","flag_sr":"🇸🇷","flag_ss":"🇸🇸","flag_st":"🇸🇹","flag_sv":"🇸🇻","flag_sx":"🇸🇽","flag_sy":"🇸🇾","flag_sz":"🇸🇿","flag_ta":"🇹🇦","flag_tc":"🇹🇨","flag_td":"🇹🇩","flag_tf":"🇹🇫","flag_tg":"🇹🇬","flag_th":"🇹🇭","flag_tj":"🇹🇯","flag_tk":"🇹🇰","flag_tl":"🇹🇱","flag_tm":"🇹🇲","flag_tn":"🇹🇳","flag_to":"🇹🇴","flag_tr":"🇹🇷","flag_tt":"🇹🇹","flag_tv":"🇹🇻","flag_tw":"🇹🇼","flag_tz":"🇹🇿","flag_ua":"🇺🇦","flag_ug":"🇺🇬","flag_um":"🇺🇲","flag_un":"🇺🇳","flag_us":"🇺🇸","flag_uy":"🇺🇾","flag_uz":"🇺🇿","flag_va":"🇻🇦","flag_vc":"🇻🇨","flag_ve":"🇻🇪","flag_vg":"🇻🇬","flag_vi":"🇻🇮","flag_vn":"🇻🇳","flag_vu":"🇻🇺","flag_wf":"🇼🇫","flag_ws":"🇼🇸","flag_xk":"🇽🇰","flag_ye":"🇾🇪","flag_yt":"🇾🇹","flag_za":"🇿🇦","flag_zm":"🇿🇲","flag_zw":"🇿🇼","flags":"🎏","flamingo":"🦩","flashlight":"🔦","flat_shoe":"🥿","flatbread":"🫓","fleur-de-lis":"⚜","fleur_de_lis":"⚜","flight_arrival":"🛬","flight_departure":"🛫","flipper":"🐬","floppy_disk":"💾","flower_playing_cards":"🎴","flushed":"😳","flushed_face":"😳","fly":"🪰","flying_disc":"🥏","flying_saucer":"🛸","fog":"🌫","foggy":"🌁","folded_hands":"🙏","folded_hands_tone1":"🙏🏻","folded_hands_tone2":"🙏🏼","folded_hands_tone3":"🙏🏽","folded_hands_tone4":"🙏🏾","folded_hands_tone5":"🙏🏿","fondue":"🫕","foot":"🦶","foot_tone1":"🦶🏻","foot_tone2":"🦶🏼","foot_tone3":"🦶🏽","foot_tone4":"🦶🏾","foot_tone5":"🦶🏿","football":"🏈","footprints":"👣","fork_and_knife":"🍴","fork_knife_plate":"🍽","fortune_cookie":"🥠","fountain":"⛲","fountain_pen":"🖋","four":"4️⃣","four_leaf_clover":"🍀","fox":"🦊","fox_face":"🦊","fr":"🇫🇷","frame_with_picture":"🖼","framed_picture":"🖼","france":"🇫🇷","free":"🆓","french_fries":"🍟","french_guiana":"🇬🇫","french_polynesia":"🇵🇫","french_southern_territories":"🇹🇫","fried_egg":"🍳","fried_shrimp":"🍤","fries":"🍟","frog":"🐸","frog_face":"🐸","frowning":"😦","frowning_face":"☹","frowning_man":"🙍‍♂️","frowning_person":"🙍","frowning_woman":"🙍‍♀️","fu":"🖕","fuelpump":"⛽","full_moon":"🌕","full_moon_with_face":"🌝","funeral_urn":"⚱","gabon":"🇬🇦","gambia":"🇬🇲","game_die":"🎲","garlic":"🧄","gasp":"🫢","gb":"🇬🇧","gear":"⚙","gem":"💎","gemini":"♊","genie":"🧞","genie_man":"🧞‍♂️","genie_woman":"🧞‍♀️","georgia":"🇬🇪","germany":"🇩🇪","ghana":"🇬🇭","ghost":"👻","gibraltar":"🇬🇮","gift":"🎁","gift_heart":"💝","giraffe":"🦒","girl":"👧","girl_tone1":"👧🏻","girl_tone2":"👧🏼","girl_tone3":"👧🏽","girl_tone4":"👧🏾","girl_tone5":"👧🏿","glass_of_milk":"🥛","glasses":"👓","globe_with_meridian":"🌐","globe_with_meridians":"🌐","gloves":"🧤","glowing_star":"🌟","goal_ne":"🥅","goal_net":"🥅","goat":"🐐","goblin":"👺","goggles":"🥽","golf":"⛳","golfer":"🏌","golfer_tone1":"🏌🏻","golfer_tone2":"🏌🏼","golfer_tone3":"🏌🏽","golfer_tone4":"🏌🏾","golfer_tone5":"🏌🏿","golfing":"🏌","golfing_man":"🏌️‍♂️","golfing_tone1":"🏌🏻","golfing_tone2":"🏌🏼","golfing_tone3":"🏌🏽","golfing_tone4":"🏌🏾","golfing_tone5":"🏌🏿","golfing_woman":"🏌️‍♀️","gorilla":"🦍","graduation_cap":"🎓","grapes":"🍇","greece":"🇬🇷","green_apple":"🍏","green_book":"📗","green_circle":"🟢","green_hear":"💚","green_heart":"💚","green_salad":"🥗","green_square":"🟩","greenland":"🇬🇱","grenada":"🇬🇩","grey_exclamation":"❕","grey_question":"❔","grimacing":"😬","grimacing_face":"😬","grin":"😁","grinning":"😀","grinning_cat":"😺","grinning_cat_with_closed_eyes":"😸","grinning_face":"😀","grinning_face_with_big_eyes":"😃","grinning_face_with_closed_eyes":"😄","grinning_face_with_sweat":"😅","growing_heart":"💗","guadeloupe":"🇬🇵","guam":"🇬🇺","guard":"💂","guard_tone1":"💂🏻","guard_tone2":"💂🏼","guard_tone3":"💂🏽","guard_tone4":"💂🏾","guard_tone5":"💂🏿","guardsman":"💂‍♂️","guardswoman":"💂‍♀️","guatemala":"🇬🇹","guernsey":"🇬🇬","guide_dog":"🦮","guinea":"🇬🇳","guinea_bissau":"🇬🇼","guitar":"🎸","gun":"🔫","guyana":"🇬🇾","haircut":"💇","haircut_man":"💇‍♂️","haircut_tone1":"💇🏻","haircut_tone2":"💇🏼","haircut_tone3":"💇🏽","haircut_tone4":"💇🏾","haircut_tone5":"💇🏿","haircut_woman":"💇‍♀️","haiti":"🇭🇹","halo":"😇","hamburger":"🍔","hamme":"🔨","hammer":"🔨","hammer_and_pick":"⚒","hammer_and_wrench":"🛠","hamsa":"🪬","hamster":"🐹","hamster_face":"🐹","hand":"✋","hand_over_mouth":"🤭","hand_with_index_finger_and_thumb_crossed":"🫰","hand_with_index_finger_and_thumb_crossed_tone1":"🫰🏻","hand_with_index_finger_and_thumb_crossed_tone2":"🫰🏼","hand_with_index_finger_and_thumb_crossed_tone3":"🫰🏽","hand_with_index_finger_and_thumb_crossed_tone4":"🫰🏾","hand_with_index_finger_and_thumb_crossed_tone5":"🫰🏿","handbag":"👜","handball":"🤾","handball_person":"🤾","handball_tone1":"🤾🏻","handball_tone2":"🤾🏼","handball_tone3":"🤾🏽","handball_tone4":"🤾🏾","handball_tone5":"🤾🏿","handicapped":"♿","handshake":"🤝","handshake_tone1":"🤝🏻","handshake_tone1-2":"🫱🏻‍🫲🏼","handshake_tone1-3":"🫱🏻‍🫲🏽","handshake_tone1-4":"🫱🏻‍🫲🏾","handshake_tone1-5":"🫱🏻‍🫲🏿","handshake_tone2":"🤝🏼","handshake_tone2-1":"🫱🏼‍🫲🏻","handshake_tone2-3":"🫱🏼‍🫲🏽","handshake_tone2-4":"🫱🏼‍🫲🏾","handshake_tone2-5":"🫱🏼‍🫲🏿","handshake_tone3":"🤝🏽","handshake_tone3-1":"🫱🏽‍🫲🏻","handshake_tone3-2":"🫱🏽‍🫲🏼","handshake_tone3-4":"🫱🏽‍🫲🏾","handshake_tone3-5":"🫱🏽‍🫲🏿","handshake_tone4":"🤝🏾","handshake_tone4-1":"🫱🏾‍🫲🏻","handshake_tone4-2":"🫱🏾‍🫲🏼","handshake_tone4-3":"🫱🏾‍🫲🏽","handshake_tone4-5":"🫱🏾‍🫲🏿","handshake_tone5":"🤝🏿","handshake_tone5-1":"🫱🏿‍🫲🏻","handshake_tone5-2":"🫱🏿‍🫲🏼","handshake_tone5-3":"🫱🏿‍🫲🏽","handshake_tone5-4":"🫱🏿‍🫲🏾","hankey":"💩","hash":"#️⃣","hatched_chick":"🐥","hatching_chick":"🐣","headphones":"🎧","headstone":"🪦","health_worker":"🧑‍⚕️","health_worker_tone1":"🧑🏻‍⚕️","health_worker_tone2":"🧑🏼‍⚕️","health_worker_tone3":"🧑🏽‍⚕️","health_worker_tone4":"🧑🏾‍⚕️","health_worker_tone5":"🧑🏿‍⚕️","hear_no_evil":"🙉","heard_mcdonald_islands":"🇭🇲","hearing_aid":"🦻","hearing_aid_tone1":"🦻🏻","hearing_aid_tone2":"🦻🏼","hearing_aid_tone3":"🦻🏽","hearing_aid_tone4":"🦻🏾","hearing_aid_tone5":"🦻🏿","heart":"❤","heart_decoration":"💟","heart_exclamation":"❣","heart_eyes":"😍","heart_eyes_cat":"😻","heart_hands":"🫶","heart_hands_tone1":"🫶🏻","heart_hands_tone2":"🫶🏼","heart_hands_tone3":"🫶🏽","heart_hands_tone4":"🫶🏾","heart_hands_tone5":"🫶🏿","heart_on_fire":"❤️‍🔥","heart_with_arrow":"💘","heart_with_ribbon":"💝","heartbeat":"💓","heartpulse":"💗","hearts":"♥","heavy_check_mark":"✔","heavy_division_sign":"➗","heavy_dollar_sign":"💲","heavy_equals_sign":"🟰","heavy_exclamation_mark":"❗","heavy_heart_exclamation":"❣","heavy_minus_sig":"➖","heavy_minus_sign":"➖","heavy_multiplication_x":"✖","heavy_plus_sig":"➕","heavy_plus_sign":"➕","hedgehog":"🦔","helicopter":"🚁","helmet_with_cross":"⛑","herb":"🌿","hibiscus":"🌺","high_brightness":"🔆","high_five":"✋","high_five_tone1":"✋🏻","high_five_tone2":"✋🏼","high_five_tone3":"✋🏽","high_five_tone4":"✋🏾","high_five_tone5":"✋🏿","high_heel":"👠","high_voltage":"⚡","high_volume":"🔊","hiking_boot":"🥾","hindu_temple":"🛕","hippo":"🦛","hippopotamus":"🦛","hocho":"🔪","hockey":"🏒","hole":"🕳","hollow_red_circle":"⭕","homes":"🏘","honduras":"🇭🇳","honey_pot":"🍯","honeybee":"🐝","hong_kong":"🇭🇰","hook":"🪝","hooray":"🥳","horse":"🐴","horse_face":"🐴","horse_racing":"🏇","horse_racing_tone1":"🏇🏻","horse_racing_tone2":"🏇🏼","horse_racing_tone3":"🏇🏽","horse_racing_tone4":"🏇🏾","horse_racing_tone5":"🏇🏿","hospital":"🏥","hot":"🥵","hot_face":"🥵","hot_pepper":"🌶","hotdog":"🌭","hotel":"🏨","hotsprings":"♨","hourglass":"⌛","hourglass_flowing_sand":"⏳","house":"🏠","house_abandoned":"🏚","house_with_garden":"🏡","houses":"🏘","hug":"🤗","hugging":"🤗","hugging_face":"🤗","hugs":"🤗","hungary":"🇭🇺","hushed":"😯","hushed_face":"😯","hut":"🛖","ice":"🧊","ice_cream":"🍨","ice_cube":"🧊","ice_hockey":"🏒","ice_skate":"⛸","icecream":"🍦","iceland":"🇮🇸","id":"🆔","id_card":"🪪","ideograph_advantage":"🉐","imp":"👿","in_clouds":"😶‍🌫️","inbox_tray":"📥","incoming_envelope":"📨","india":"🇮🇳","indonesia":"🇮🇩","infinity":"♾","info":"ℹ","information_desk_person":"💁","information_source":"ℹ","innocent":"😇","interrobang":"⁉","iphon":"📱","iphone":"📱","iran":"🇮🇷","iraq":"🇮🇶","ireland":"🇮🇪","island":"🏝","isle_of_man":"🇮🇲","israel":"🇮🇱","it":"🇮🇹","italy":"🇮🇹","izakaya_lantern":"🏮","ja_acceptable":"🉑","ja_application":"🈸","ja_bargain":"🉐","ja_congratulations":"㊗","ja_discount":"🈹","ja_free_of_charge":"🈚","ja_here":"🈁","ja_monthly_amount":"🈷","ja_no_vacancy":"🈵","ja_not_free_of_carge":"🈶","ja_open_for_business":"🈺","ja_passing_grade":"🈴","ja_prohibited":"🈲","ja_reserved":"🈯","ja_secret":"㊙","ja_service_charge":"🈂","ja_vacancy":"🈳","jack_o_lantern":"🎃","jamaica":"🇯🇲","japan":"🗾","japan_map":"🗾","japanese_castle":"🏯","japanese_goblin":"👺","japanese_ogre":"👹","jar":"🫙","jeans":"👖","jersey":"🇯🇪","jigsaw":"🧩","jolly_roger":"🏴‍☠️","jordan":"🇯🇴","joy":"😂","joy_cat":"😹","joystick":"🕹","jp":"🇯🇵","judge":"🧑‍⚖️","judge_tone1":"🧑🏻‍⚖️","judge_tone2":"🧑🏼‍⚖️","judge_tone3":"🧑🏽‍⚖️","judge_tone4":"🧑🏾‍⚖️","judge_tone5":"🧑🏿‍⚖️","juggler":"🤹","juggler_tone1":"🤹🏻","juggler_tone2":"🤹🏼","juggler_tone3":"🤹🏽","juggler_tone4":"🤹🏾","juggler_tone5":"🤹🏿","juggling":"🤹","juggling_person":"🤹","juggling_tone1":"🤹🏻","juggling_tone2":"🤹🏼","juggling_tone3":"🤹🏽","juggling_tone4":"🤹🏾","juggling_tone5":"🤹🏿","juice_box":"🧃","kaaba":"🕋","kangaroo":"🦘","kazakhstan":"🇰🇿","kenya":"🇰🇪","key":"🔑","keyboard":"⌨","keycap_ten":"🔟","kick_scooter":"🛴","kimono":"👘","kiribati":"🇰🇮","kiss":"💋","kiss_mm":"👨‍❤️‍💋‍👨","kiss_mm_tone1":"👨🏻‍❤️‍💋‍👨🏻","kiss_mm_tone1-2":"👨🏻‍❤️‍💋‍👨🏼","kiss_mm_tone1-3":"👨🏻‍❤️‍💋‍👨🏽","kiss_mm_tone1-4":"👨🏻‍❤️‍💋‍👨🏾","kiss_mm_tone1-5":"👨🏻‍❤️‍💋‍👨🏿","kiss_mm_tone2":"👨🏼‍❤️‍💋‍👨🏼","kiss_mm_tone2-1":"👨🏼‍❤️‍💋‍👨🏻","kiss_mm_tone2-3":"👨🏼‍❤️‍💋‍👨🏽","kiss_mm_tone2-4":"👨🏼‍❤️‍💋‍👨🏾","kiss_mm_tone2-5":"👨🏼‍❤️‍💋‍👨🏿","kiss_mm_tone3":"👨🏽‍❤️‍💋‍👨🏽","kiss_mm_tone3-1":"👨🏽‍❤️‍💋‍👨🏻","kiss_mm_tone3-2":"👨🏽‍❤️‍💋‍👨🏼","kiss_mm_tone3-4":"👨🏽‍❤️‍💋‍👨🏾","kiss_mm_tone3-5":"👨🏽‍❤️‍💋‍👨🏿","kiss_mm_tone4":"👨🏾‍❤️‍💋‍👨🏾","kiss_mm_tone4-1":"👨🏾‍❤️‍💋‍👨🏻","kiss_mm_tone4-2":"👨🏾‍❤️‍💋‍👨🏼","kiss_mm_tone4-3":"👨🏾‍❤️‍💋‍👨🏽","kiss_mm_tone4-5":"👨🏾‍❤️‍💋‍👨🏿","kiss_mm_tone5":"👨🏿‍❤️‍💋‍👨🏿","kiss_mm_tone5-1":"👨🏿‍❤️‍💋‍👨🏻","kiss_mm_tone5-2":"👨🏿‍❤️‍💋‍👨🏼","kiss_mm_tone5-3":"👨🏿‍❤️‍💋‍👨🏽","kiss_mm_tone5-4":"👨🏿‍❤️‍💋‍👨🏾","kiss_mw":"👩‍❤️‍💋‍👨","kiss_mw_tone1":"👩🏻‍❤️‍💋‍👨🏻","kiss_mw_tone1-2":"👩🏻‍❤️‍💋‍👨🏼","kiss_mw_tone1-3":"👩🏻‍❤️‍💋‍👨🏽","kiss_mw_tone1-4":"👩🏻‍❤️‍💋‍👨🏾","kiss_mw_tone1-5":"👩🏻‍❤️‍💋‍👨🏿","kiss_mw_tone2":"👩🏼‍❤️‍💋‍👨🏼","kiss_mw_tone2-1":"👩🏼‍❤️‍💋‍👨🏻","kiss_mw_tone2-3":"👩🏼‍❤️‍💋‍👨🏽","kiss_mw_tone2-4":"👩🏼‍❤️‍💋‍👨🏾","kiss_mw_tone2-5":"👩🏼‍❤️‍💋‍👨🏿","kiss_mw_tone3":"👩🏽‍❤️‍💋‍👨🏽","kiss_mw_tone3-1":"👩🏽‍❤️‍💋‍👨🏻","kiss_mw_tone3-2":"👩🏽‍❤️‍💋‍👨🏼","kiss_mw_tone3-4":"👩🏽‍❤️‍💋‍👨🏾","kiss_mw_tone3-5":"👩🏽‍❤️‍💋‍👨🏿","kiss_mw_tone4":"👩🏾‍❤️‍💋‍👨🏾","kiss_mw_tone4-1":"👩🏾‍❤️‍💋‍👨🏻","kiss_mw_tone4-2":"👩🏾‍❤️‍💋‍👨🏼","kiss_mw_tone4-3":"👩🏾‍❤️‍💋‍👨🏽","kiss_mw_tone4-5":"👩🏾‍❤️‍💋‍👨🏿","kiss_mw_tone5":"👩🏿‍❤️‍💋‍👨🏿","kiss_mw_tone5-1":"👩🏿‍❤️‍💋‍👨🏻","kiss_mw_tone5-2":"👩🏿‍❤️‍💋‍👨🏼","kiss_mw_tone5-3":"👩🏿‍❤️‍💋‍👨🏽","kiss_mw_tone5-4":"👩🏿‍❤️‍💋‍👨🏾","kiss_wm":"👩‍❤️‍💋‍👨","kiss_wm_tone1":"👩🏻‍❤️‍💋‍👨🏻","kiss_wm_tone1-2":"👩🏻‍❤️‍💋‍👨🏼","kiss_wm_tone1-3":"👩🏻‍❤️‍💋‍👨🏽","kiss_wm_tone1-4":"👩🏻‍❤️‍💋‍👨🏾","kiss_wm_tone1-5":"👩🏻‍❤️‍💋‍👨🏿","kiss_wm_tone2":"👩🏼‍❤️‍💋‍👨🏼","kiss_wm_tone2-1":"👩🏼‍❤️‍💋‍👨🏻","kiss_wm_tone2-3":"👩🏼‍❤️‍💋‍👨🏽","kiss_wm_tone2-4":"👩🏼‍❤️‍💋‍👨🏾","kiss_wm_tone2-5":"👩🏼‍❤️‍💋‍👨🏿","kiss_wm_tone3":"👩🏽‍❤️‍💋‍👨🏽","kiss_wm_tone3-1":"👩🏽‍❤️‍💋‍👨🏻","kiss_wm_tone3-2":"👩🏽‍❤️‍💋‍👨🏼","kiss_wm_tone3-4":"👩🏽‍❤️‍💋‍👨🏾","kiss_wm_tone3-5":"👩🏽‍❤️‍💋‍👨🏿","kiss_wm_tone4":"👩🏾‍❤️‍💋‍👨🏾","kiss_wm_tone4-1":"👩🏾‍❤️‍💋‍👨🏻","kiss_wm_tone4-2":"👩🏾‍❤️‍💋‍👨🏼","kiss_wm_tone4-3":"👩🏾‍❤️‍💋‍👨🏽","kiss_wm_tone4-5":"👩🏾‍❤️‍💋‍👨🏿","kiss_wm_tone5":"👩🏿‍❤️‍💋‍👨🏿","kiss_wm_tone5-1":"👩🏿‍❤️‍💋‍👨🏻","kiss_wm_tone5-2":"👩🏿‍❤️‍💋‍👨🏼","kiss_wm_tone5-3":"👩🏿‍❤️‍💋‍👨🏽","kiss_wm_tone5-4":"👩🏿‍❤️‍💋‍👨🏾","kiss_ww":"👩‍❤️‍💋‍👩","kiss_ww_tone1":"👩🏻‍❤️‍💋‍👩🏻","kiss_ww_tone1-2":"👩🏻‍❤️‍💋‍👩🏼","kiss_ww_tone1-3":"👩🏻‍❤️‍💋‍👩🏽","kiss_ww_tone1-4":"👩🏻‍❤️‍💋‍👩🏾","kiss_ww_tone1-5":"👩🏻‍❤️‍💋‍👩🏿","kiss_ww_tone2":"👩🏼‍❤️‍💋‍👩🏼","kiss_ww_tone2-1":"👩🏼‍❤️‍💋‍👩🏻","kiss_ww_tone2-3":"👩🏼‍❤️‍💋‍👩🏽","kiss_ww_tone2-4":"👩🏼‍❤️‍💋‍👩🏾","kiss_ww_tone2-5":"👩🏼‍❤️‍💋‍👩🏿","kiss_ww_tone3":"👩🏽‍❤️‍💋‍👩🏽","kiss_ww_tone3-1":"👩🏽‍❤️‍💋‍👩🏻","kiss_ww_tone3-2":"👩🏽‍❤️‍💋‍👩🏼","kiss_ww_tone3-4":"👩🏽‍❤️‍💋‍👩🏾","kiss_ww_tone3-5":"👩🏽‍❤️‍💋‍👩🏿","kiss_ww_tone4":"👩🏾‍❤️‍💋‍👩🏾","kiss_ww_tone4-1":"👩🏾‍❤️‍💋‍👩🏻","kiss_ww_tone4-2":"👩🏾‍❤️‍💋‍👩🏼","kiss_ww_tone4-3":"👩🏾‍❤️‍💋‍👩🏽","kiss_ww_tone4-5":"👩🏾‍❤️‍💋‍👩🏿","kiss_ww_tone5":"👩🏿‍❤️‍💋‍👩🏿","kiss_ww_tone5-1":"👩🏿‍❤️‍💋‍👩🏻","kiss_ww_tone5-2":"👩🏿‍❤️‍💋‍👩🏼","kiss_ww_tone5-3":"👩🏿‍❤️‍💋‍👩🏽","kiss_ww_tone5-4":"👩🏿‍❤️‍💋‍👩🏾","kissing":"😗","kissing_cat":"😽","kissing_closed_eyes":"😚","kissing_face":"😗","kissing_face_with_closed_eyes":"😚","kissing_face_with_smiling_eyes":"😙","kissing_heart":"😘","kissing_smiling_eyes":"😙","kite":"🪁","kiwi":"🥝","kiwi_fruit":"🥝","kneeling":"🧎","kneeling_man":"🧎‍♂️","kneeling_person":"🧎","kneeling_tone1":"🧎🏻","kneeling_tone2":"🧎🏼","kneeling_tone3":"🧎🏽","kneeling_tone4":"🧎🏾","kneeling_tone5":"🧎🏿","kneeling_woman":"🧎‍♀️","knife":"🔪","knocked_out":"😵","knot":"🪢","koala":"🐨","koala_face":"🐨","koko":"🈁","kosovo":"🇽🇰","kr":"🇰🇷","kuwait":"🇰🇼","kyrgyzstan":"🇰🇬","lab_coat":"🥼","labe":"🏷️","label":"🏷","lacrosse":"🥍","ladder":"🪜","lady_beetle":"🐞","lantern":"🏮","laos":"🇱🇦","laptop":"💻","large_blue_circle":"🔵","large_blue_diamond":"🔷","large_orange_diamond":"🔶","last_quarter_moon":"🌗","last_quarter_moon_with_face":"🌜","latin_cross":"✝","latvia":"🇱🇻","laughing":"😆","leafy_green":"🥬","leaves":"🍃","lebanon":"🇱🇧","ledger":"📒","left_facing_fist":"🤛","left_facing_fist_tone1":"🤛🏻","left_facing_fist_tone2":"🤛🏼","left_facing_fist_tone3":"🤛🏽","left_facing_fist_tone4":"🤛🏾","left_facing_fist_tone5":"🤛🏿","left_luggage":"🛅","left_right_arrow":"↔","left_speech_bubble":"🗨","leftwards_arrow_with_hook":"↩","leftwards_hand":"🫲","leftwards_hand_tone1":"🫲🏻","leftwards_hand_tone2":"🫲🏼","leftwards_hand_tone3":"🫲🏽","leftwards_hand_tone4":"🫲🏾","leftwards_hand_tone5":"🫲🏿","leg":"🦵","leg_tone1":"🦵🏻","leg_tone2":"🦵🏼","leg_tone3":"🦵🏽","leg_tone4":"🦵🏾","leg_tone5":"🦵🏿","lemon":"🍋","leo":"♌","leopard":"🐆","lesotho":"🇱🇸","level_slider":"🎚","levitate":"🕴","levitate_tone1":"🕴🏻","levitate_tone2":"🕴🏼","levitate_tone3":"🕴🏽","levitate_tone4":"🕴🏾","levitate_tone5":"🕴🏿","levitating":"🕴","levitating_tone1":"🕴🏻","levitating_tone2":"🕴🏼","levitating_tone3":"🕴🏽","levitating_tone4":"🕴🏾","levitating_tone5":"🕴🏿","liberia":"🇱🇷","libra":"♎","libya":"🇱🇾","liechtenstein":"🇱🇮","lifebuoy":"🛟","light_bulb":"💡","light_rail":"🚈","lightning":"🌩","link":"🔗","lion":"🦁","lion_face":"🦁","lips":"👄","lipstic":"💄","lipstick":"💄","lithuania":"🇱🇹","litter_bin":"🚮","lizard":"🦎","llama":"🦙","lmao":"😂","lobster":"🦞","loc":"🔒️","lock":"🔒","lock_with_ink_pen":"🔏","locked":"🔒","locked_with_key":"🔐","locked_with_pen":"🔏","lol":"😆","lollipop":"🍭","long_drum":"🪘","loop":"➿","lotion_bottle":"🧴","lotus":"🪷","lotus_position":"🧘","lotus_position_man":"🧘‍♂️","lotus_position_woman":"🧘‍♀️","loud_soun":"🔊","loud_sound":"🔊","loudly_crying_face":"😭","loudspeaker":"📢","love_hotel":"🏩","love_letter":"💌","love_you_gesture":"🤟","love_you_gesture_tone1":"🤟🏻","love_you_gesture_tone2":"🤟🏼","love_you_gesture_tone3":"🤟🏽","love_you_gesture_tone4":"🤟🏾","love_you_gesture_tone5":"🤟🏿","low_battery":"🪫","low_brightness":"🔅","low_volume":"🔈","luggage":"🧳","lungs":"🫁","luxembourg":"🇱🇺","lying":"🤥","lying_face":"🤥","m":"Ⓜ","ma":"🔍️","macao":"🇲🇴","macau":"🇲🇴","macedonia":"🇲🇰","madagascar":"🇲🇬","mag":"🔍","mag_right":"🔎","mage":"🧙","mage_man":"🧙‍♂️","mage_tone1":"🧙🏻","mage_tone2":"🧙🏼","mage_tone3":"🧙🏽","mage_tone4":"🧙🏾","mage_tone5":"🧙🏿","mage_woman":"🧙‍♀️","magic_wand":"🪄","magnet":"🧲","mahjong":"🀄","mailbox":"📫","mailbox_closed":"📪","mailbox_with_mail":"📬","mailbox_with_no_mail":"📭","malawi":"🇲🇼","malaysia":"🇲🇾","maldives":"🇲🇻","male":"♂","male_detective":"🕵️‍♂️","male_sign":"♂","mali":"🇲🇱","malta":"🇲🇹","mammoth":"🦣","man":"👨","man_artist":"👨‍🎨","man_artist_tone1":"👨🏻‍🎨","man_artist_tone2":"👨🏼‍🎨","man_artist_tone3":"👨🏽‍🎨","man_artist_tone4":"👨🏾‍🎨","man_artist_tone5":"👨🏿‍🎨","man_astronaut":"👨‍🚀","man_astronaut_tone1":"👨🏻‍🚀","man_astronaut_tone2":"👨🏼‍🚀","man_astronaut_tone3":"👨🏽‍🚀","man_astronaut_tone4":"👨🏾‍🚀","man_astronaut_tone5":"👨🏿‍🚀","man_bald":"👨‍🦲","man_bald_tone1":"👨🏻‍🦲","man_bald_tone2":"👨🏼‍🦲","man_bald_tone3":"👨🏽‍🦲","man_bald_tone4":"👨🏾‍🦲","man_bald_tone5":"👨🏿‍🦲","man_beard":"🧔‍♂️","man_bearded":"🧔‍♂️","man_bearded_tone1":"🧔🏻‍♂️","man_bearded_tone2":"🧔🏼‍♂️","man_bearded_tone3":"🧔🏽‍♂️","man_bearded_tone4":"🧔🏾‍♂️","man_bearded_tone5":"🧔🏿‍♂️","man_biking":"🚴‍♂️","man_biking_tone1":"🚴🏻‍♂️","man_biking_tone2":"🚴🏼‍♂️","man_biking_tone3":"🚴🏽‍♂️","man_biking_tone4":"🚴🏾‍♂️","man_biking_tone5":"🚴🏿‍♂️","man_blond_haired":"👱‍♂️","man_blond_haired_tone1":"👱🏻‍♂️","man_blond_haired_tone2":"👱🏼‍♂️","man_blond_haired_tone3":"👱🏽‍♂️","man_blond_haired_tone4":"👱🏾‍♂️","man_blond_haired_tone5":"👱🏿‍♂️","man_bouncing_ball":"⛹️‍♂️","man_bouncing_ball_tone1":"⛹🏻‍♂️","man_bouncing_ball_tone2":"⛹🏼‍♂️","man_bouncing_ball_tone3":"⛹🏽‍♂️","man_bouncing_ball_tone4":"⛹🏾‍♂️","man_bouncing_ball_tone5":"⛹🏿‍♂️","man_bowing":"🙇‍♂️","man_bowing_tone1":"🙇🏻‍♂️","man_bowing_tone2":"🙇🏼‍♂️","man_bowing_tone3":"🙇🏽‍♂️","man_bowing_tone4":"🙇🏾‍♂️","man_bowing_tone5":"🙇🏿‍♂️","man_cartwheeling":"🤸‍♂️","man_cartwheeling_tone1":"🤸🏻‍♂️","man_cartwheeling_tone2":"🤸🏼‍♂️","man_cartwheeling_tone3":"🤸🏽‍♂️","man_cartwheeling_tone4":"🤸🏾‍♂️","man_cartwheeling_tone5":"🤸🏿‍♂️","man_climbing":"🧗‍♂️","man_climbing_tone1":"🧗🏻‍♂️","man_climbing_tone2":"🧗🏼‍♂️","man_climbing_tone3":"🧗🏽‍♂️","man_climbing_tone4":"🧗🏾‍♂️","man_climbing_tone5":"🧗🏿‍♂️","man_construction_worker":"👷‍♂️","man_construction_worker_tone1":"👷🏻‍♂️","man_construction_worker_tone2":"👷🏼‍♂️","man_construction_worker_tone3":"👷🏽‍♂️","man_construction_worker_tone4":"👷🏾‍♂️","man_construction_worker_tone5":"👷🏿‍♂️","man_cook":"👨‍🍳","man_cook_tone1":"👨🏻‍🍳","man_cook_tone2":"👨🏼‍🍳","man_cook_tone3":"👨🏽‍🍳","man_cook_tone4":"👨🏾‍🍳","man_cook_tone5":"👨🏿‍🍳","man_curly_haired":"👨‍🦱","man_curly_haired_tone1":"👨🏻‍🦱","man_curly_haired_tone2":"👨🏼‍🦱","man_curly_haired_tone3":"👨🏽‍🦱","man_curly_haired_tone4":"👨🏾‍🦱","man_curly_haired_tone5":"👨🏿‍🦱","man_dancing":"🕺","man_dancing_tone1":"🕺🏻","man_dancing_tone2":"🕺🏼","man_dancing_tone3":"🕺🏽","man_dancing_tone4":"🕺🏾","man_dancing_tone5":"🕺🏿","man_detective":"🕵️‍♂️","man_detective_tone1":"🕵🏻‍♂️","man_detective_tone2":"🕵🏼‍♂️","man_detective_tone3":"🕵🏽‍♂️","man_detective_tone4":"🕵🏾‍♂️","man_detective_tone5":"🕵🏿‍♂️","man_elf":"🧝‍♂️","man_elf_tone1":"🧝🏻‍♂️","man_elf_tone2":"🧝🏼‍♂️","man_elf_tone3":"🧝🏽‍♂️","man_elf_tone4":"🧝🏾‍♂️","man_elf_tone5":"🧝🏿‍♂️","man_facepalming":"🤦‍♂️","man_facepalming_tone1":"🤦🏻‍♂️","man_facepalming_tone2":"🤦🏼‍♂️","man_facepalming_tone3":"🤦🏽‍♂️","man_facepalming_tone4":"🤦🏾‍♂️","man_facepalming_tone5":"🤦🏿‍♂️","man_factory_worker":"👨‍🏭","man_factory_worker_tone1":"👨🏻‍🏭","man_factory_worker_tone2":"👨🏼‍🏭","man_factory_worker_tone3":"👨🏽‍🏭","man_factory_worker_tone4":"👨🏾‍🏭","man_factory_worker_tone5":"👨🏿‍🏭","man_fairy":"🧚‍♂️","man_fairy_tone1":"🧚🏻‍♂️","man_fairy_tone2":"🧚🏼‍♂️","man_fairy_tone3":"🧚🏽‍♂️","man_fairy_tone4":"🧚🏾‍♂️","man_fairy_tone5":"🧚🏿‍♂️","man_farmer":"👨‍🌾","man_farmer_tone1":"👨🏻‍🌾","man_farmer_tone2":"👨🏼‍🌾","man_farmer_tone3":"👨🏽‍🌾","man_farmer_tone4":"👨🏾‍🌾","man_farmer_tone5":"👨🏿‍🌾","man_feeding_baby":"👨‍🍼","man_feeding_baby_tone1":"👨🏻‍🍼","man_feeding_baby_tone2":"👨🏼‍🍼","man_feeding_baby_tone3":"👨🏽‍🍼","man_feeding_baby_tone4":"👨🏾‍🍼","man_feeding_baby_tone5":"👨🏿‍🍼","man_firefighter":"👨‍🚒","man_firefighter_tone1":"👨🏻‍🚒","man_firefighter_tone2":"👨🏼‍🚒","man_firefighter_tone3":"👨🏽‍🚒","man_firefighter_tone4":"👨🏾‍🚒","man_firefighter_tone5":"👨🏿‍🚒","man_frowning":"🙍‍♂️","man_frowning_tone1":"🙍🏻‍♂️","man_frowning_tone2":"🙍🏼‍♂️","man_frowning_tone3":"🙍🏽‍♂️","man_frowning_tone4":"🙍🏾‍♂️","man_frowning_tone5":"🙍🏿‍♂️","man_genie":"🧞‍♂️","man_gesturing_no":"🙅‍♂️","man_gesturing_no_tone1":"🙅🏻‍♂️","man_gesturing_no_tone2":"🙅🏼‍♂️","man_gesturing_no_tone3":"🙅🏽‍♂️","man_gesturing_no_tone4":"🙅🏾‍♂️","man_gesturing_no_tone5":"🙅🏿‍♂️","man_gesturing_ok":"🙆‍♂️","man_gesturing_ok_tone1":"🙆🏻‍♂️","man_gesturing_ok_tone2":"🙆🏼‍♂️","man_gesturing_ok_tone3":"🙆🏽‍♂️","man_gesturing_ok_tone4":"🙆🏾‍♂️","man_gesturing_ok_tone5":"🙆🏿‍♂️","man_getting_haircut":"💇‍♂️","man_getting_haircut_tone1":"💇🏻‍♂️","man_getting_haircut_tone2":"💇🏼‍♂️","man_getting_haircut_tone3":"💇🏽‍♂️","man_getting_haircut_tone4":"💇🏾‍♂️","man_getting_haircut_tone5":"💇🏿‍♂️","man_getting_massage":"💆‍♂️","man_getting_massage_tone1":"💆🏻‍♂️","man_getting_massage_tone2":"💆🏼‍♂️","man_getting_massage_tone3":"💆🏽‍♂️","man_getting_massage_tone4":"💆🏾‍♂️","man_getting_massage_tone5":"💆🏿‍♂️","man_golfing":"🏌️‍♂️","man_golfing_tone1":"🏌🏻‍♂️","man_golfing_tone2":"🏌🏼‍♂️","man_golfing_tone3":"🏌🏽‍♂️","man_golfing_tone4":"🏌🏾‍♂️","man_golfing_tone5":"🏌🏿‍♂️","man_guard":"💂‍♂️","man_guard_tone1":"💂🏻‍♂️","man_guard_tone2":"💂🏼‍♂️","man_guard_tone3":"💂🏽‍♂️","man_guard_tone4":"💂🏾‍♂️","man_guard_tone5":"💂🏿‍♂️","man_health_worker":"👨‍⚕️","man_health_worker_tone1":"👨🏻‍⚕️","man_health_worker_tone2":"👨🏼‍⚕️","man_health_worker_tone3":"👨🏽‍⚕️","man_health_worker_tone4":"👨🏾‍⚕️","man_health_worker_tone5":"👨🏿‍⚕️","man_in_lotus_position":"🧘‍♂️","man_in_lotus_position_tone1":"🧘🏻‍♂️","man_in_lotus_position_tone2":"🧘🏼‍♂️","man_in_lotus_position_tone3":"🧘🏽‍♂️","man_in_lotus_position_tone4":"🧘🏾‍♂️","man_in_lotus_position_tone5":"🧘🏿‍♂️","man_in_manual_wheelchair":"👨‍🦽","man_in_manual_wheelchair_tone1":"👨🏻‍🦽","man_in_manual_wheelchair_tone2":"👨🏼‍🦽","man_in_manual_wheelchair_tone3":"👨🏽‍🦽","man_in_manual_wheelchair_tone4":"👨🏾‍🦽","man_in_manual_wheelchair_tone5":"👨🏿‍🦽","man_in_motorized_wheelchair":"👨‍🦼","man_in_motorized_wheelchair_tone1":"👨🏻‍🦼","man_in_motorized_wheelchair_tone2":"👨🏼‍🦼","man_in_motorized_wheelchair_tone3":"👨🏽‍🦼","man_in_motorized_wheelchair_tone4":"👨🏾‍🦼","man_in_motorized_wheelchair_tone5":"👨🏿‍🦼","man_in_steamy_room":"🧖‍♂️","man_in_steamy_room_tone1":"🧖🏻‍♂️","man_in_steamy_room_tone2":"🧖🏼‍♂️","man_in_steamy_room_tone3":"🧖🏽‍♂️","man_in_steamy_room_tone4":"🧖🏾‍♂️","man_in_steamy_room_tone5":"🧖🏿‍♂️","man_in_tuxedo":"🤵‍♂️","man_in_tuxedo_tone1":"🤵🏻‍♂️","man_in_tuxedo_tone2":"🤵🏼‍♂️","man_in_tuxedo_tone3":"🤵🏽‍♂️","man_in_tuxedo_tone4":"🤵🏾‍♂️","man_in_tuxedo_tone5":"🤵🏿‍♂️","man_judge":"👨‍⚖️","man_judge_tone1":"👨🏻‍⚖️","man_judge_tone2":"👨🏼‍⚖️","man_judge_tone3":"👨🏽‍⚖️","man_judge_tone4":"👨🏾‍⚖️","man_judge_tone5":"👨🏿‍⚖️","man_juggling":"🤹‍♂️","man_juggling_tone1":"🤹🏻‍♂️","man_juggling_tone2":"🤹🏼‍♂️","man_juggling_tone3":"🤹🏽‍♂️","man_juggling_tone4":"🤹🏾‍♂️","man_juggling_tone5":"🤹🏿‍♂️","man_kneeling":"🧎‍♂️","man_kneeling_tone1":"🧎🏻‍♂️","man_kneeling_tone2":"🧎🏼‍♂️","man_kneeling_tone3":"🧎🏽‍♂️","man_kneeling_tone4":"🧎🏾‍♂️","man_kneeling_tone5":"🧎🏿‍♂️","man_lifting_weights":"🏋️‍♂️","man_lifting_weights_tone1":"🏋🏻‍♂️","man_lifting_weights_tone2":"🏋🏼‍♂️","man_lifting_weights_tone3":"🏋🏽‍♂️","man_lifting_weights_tone4":"🏋🏾‍♂️","man_lifting_weights_tone5":"🏋🏿‍♂️","man_mage":"🧙‍♂️","man_mage_tone1":"🧙🏻‍♂️","man_mage_tone2":"🧙🏼‍♂️","man_mage_tone3":"🧙🏽‍♂️","man_mage_tone4":"🧙🏾‍♂️","man_mage_tone5":"🧙🏿‍♂️","man_mechanic":"👨‍🔧","man_mechanic_tone1":"👨🏻‍🔧","man_mechanic_tone2":"👨🏼‍🔧","man_mechanic_tone3":"👨🏽‍🔧","man_mechanic_tone4":"👨🏾‍🔧","man_mechanic_tone5":"👨🏿‍🔧","man_mountain_biking":"🚵‍♂️","man_mountain_biking_tone1":"🚵🏻‍♂️","man_mountain_biking_tone2":"🚵🏼‍♂️","man_mountain_biking_tone3":"🚵🏽‍♂️","man_mountain_biking_tone4":"🚵🏾‍♂️","man_mountain_biking_tone5":"🚵🏿‍♂️","man_office_worker":"👨‍💼","man_office_worker_tone1":"👨🏻‍💼","man_office_worker_tone2":"👨🏼‍💼","man_office_worker_tone3":"👨🏽‍💼","man_office_worker_tone4":"👨🏾‍💼","man_office_worker_tone5":"👨🏿‍💼","man_pilot":"👨‍✈️","man_pilot_tone1":"👨🏻‍✈️","man_pilot_tone2":"👨🏼‍✈️","man_pilot_tone3":"👨🏽‍✈️","man_pilot_tone4":"👨🏾‍✈️","man_pilot_tone5":"👨🏿‍✈️","man_playing_handball":"🤾‍♂️","man_playing_handball_tone1":"🤾🏻‍♂️","man_playing_handball_tone2":"🤾🏼‍♂️","man_playing_handball_tone3":"🤾🏽‍♂️","man_playing_handball_tone4":"🤾🏾‍♂️","man_playing_handball_tone5":"🤾🏿‍♂️","man_playing_water_polo":"🤽‍♂️","man_playing_water_polo_tone1":"🤽🏻‍♂️","man_playing_water_polo_tone2":"🤽🏼‍♂️","man_playing_water_polo_tone3":"🤽🏽‍♂️","man_playing_water_polo_tone4":"🤽🏾‍♂️","man_playing_water_polo_tone5":"🤽🏿‍♂️","man_police_officer":"👮‍♂️","man_police_officer_tone1":"👮🏻‍♂️","man_police_officer_tone2":"👮🏼‍♂️","man_police_officer_tone3":"👮🏽‍♂️","man_police_officer_tone4":"👮🏾‍♂️","man_police_officer_tone5":"👮🏿‍♂️","man_pouting":"🙎‍♂️","man_pouting_tone1":"🙎🏻‍♂️","man_pouting_tone2":"🙎🏼‍♂️","man_pouting_tone3":"🙎🏽‍♂️","man_pouting_tone4":"🙎🏾‍♂️","man_pouting_tone5":"🙎🏿‍♂️","man_raising_hand":"🙋‍♂️","man_raising_hand_tone1":"🙋🏻‍♂️","man_raising_hand_tone2":"🙋🏼‍♂️","man_raising_hand_tone3":"🙋🏽‍♂️","man_raising_hand_tone4":"🙋🏾‍♂️","man_raising_hand_tone5":"🙋🏿‍♂️","man_red_haired":"👨‍🦰","man_red_haired_tone1":"👨🏻‍🦰","man_red_haired_tone2":"👨🏼‍🦰","man_red_haired_tone3":"👨🏽‍🦰","man_red_haired_tone4":"👨🏾‍🦰","man_red_haired_tone5":"👨🏿‍🦰","man_rowing_boat":"🚣‍♂️","man_rowing_boat_tone1":"🚣🏻‍♂️","man_rowing_boat_tone2":"🚣🏼‍♂️","man_rowing_boat_tone3":"🚣🏽‍♂️","man_rowing_boat_tone4":"🚣🏾‍♂️","man_rowing_boat_tone5":"🚣🏿‍♂️","man_running":"🏃‍♂️","man_running_tone1":"🏃🏻‍♂️","man_running_tone2":"🏃🏼‍♂️","man_running_tone3":"🏃🏽‍♂️","man_running_tone4":"🏃🏾‍♂️","man_running_tone5":"🏃🏿‍♂️","man_scientist":"👨‍🔬","man_scientist_tone1":"👨🏻‍🔬","man_scientist_tone2":"👨🏼‍🔬","man_scientist_tone3":"👨🏽‍🔬","man_scientist_tone4":"👨🏾‍🔬","man_scientist_tone5":"👨🏿‍🔬","man_shrugging":"🤷‍♂️","man_shrugging_tone1":"🤷🏻‍♂️","man_shrugging_tone2":"🤷🏼‍♂️","man_shrugging_tone3":"🤷🏽‍♂️","man_shrugging_tone4":"🤷🏾‍♂️","man_shrugging_tone5":"🤷🏿‍♂️","man_singer":"👨‍🎤","man_singer_tone1":"👨🏻‍🎤","man_singer_tone2":"👨🏼‍🎤","man_singer_tone3":"👨🏽‍🎤","man_singer_tone4":"👨🏾‍🎤","man_singer_tone5":"👨🏿‍🎤","man_standing":"🧍‍♂️","man_standing_tone1":"🧍🏻‍♂️","man_standing_tone2":"🧍🏼‍♂️","man_standing_tone3":"🧍🏽‍♂️","man_standing_tone4":"🧍🏾‍♂️","man_standing_tone5":"🧍🏿‍♂️","man_student":"👨‍🎓","man_student_tone1":"👨🏻‍🎓","man_student_tone2":"👨🏼‍🎓","man_student_tone3":"👨🏽‍🎓","man_student_tone4":"👨🏾‍🎓","man_student_tone5":"👨🏿‍🎓","man_superhero":"🦸‍♂️","man_superhero_tone1":"🦸🏻‍♂️","man_superhero_tone2":"🦸🏼‍♂️","man_superhero_tone3":"🦸🏽‍♂️","man_superhero_tone4":"🦸🏾‍♂️","man_superhero_tone5":"🦸🏿‍♂️","man_supervillain":"🦹‍♂️","man_supervillain_tone1":"🦹🏻‍♂️","man_supervillain_tone2":"🦹🏼‍♂️","man_supervillain_tone3":"🦹🏽‍♂️","man_supervillain_tone4":"🦹🏾‍♂️","man_supervillain_tone5":"🦹🏿‍♂️","man_surfing":"🏄‍♂️","man_surfing_tone1":"🏄🏻‍♂️","man_surfing_tone2":"🏄🏼‍♂️","man_surfing_tone3":"🏄🏽‍♂️","man_surfing_tone4":"🏄🏾‍♂️","man_surfing_tone5":"🏄🏿‍♂️","man_swimming":"🏊‍♂️","man_swimming_tone1":"🏊🏻‍♂️","man_swimming_tone2":"🏊🏼‍♂️","man_swimming_tone3":"🏊🏽‍♂️","man_swimming_tone4":"🏊🏾‍♂️","man_swimming_tone5":"🏊🏿‍♂️","man_teacher":"👨‍🏫","man_teacher_tone1":"👨🏻‍🏫","man_teacher_tone2":"👨🏼‍🏫","man_teacher_tone3":"👨🏽‍🏫","man_teacher_tone4":"👨🏾‍🏫","man_teacher_tone5":"👨🏿‍🏫","man_technologist":"👨‍💻","man_technologist_tone1":"👨🏻‍💻","man_technologist_tone2":"👨🏼‍💻","man_technologist_tone3":"👨🏽‍💻","man_technologist_tone4":"👨🏾‍💻","man_technologist_tone5":"👨🏿‍💻","man_tipping_hand":"💁‍♂️","man_tipping_hand_tone1":"💁🏻‍♂️","man_tipping_hand_tone2":"💁🏼‍♂️","man_tipping_hand_tone3":"💁🏽‍♂️","man_tipping_hand_tone4":"💁🏾‍♂️","man_tipping_hand_tone5":"💁🏿‍♂️","man_tone1":"👨🏻","man_tone2":"👨🏼","man_tone3":"👨🏽","man_tone4":"👨🏾","man_tone5":"👨🏿","man_vampire":"🧛‍♂️","man_vampire_tone1":"🧛🏻‍♂️","man_vampire_tone2":"🧛🏼‍♂️","man_vampire_tone3":"🧛🏽‍♂️","man_vampire_tone4":"🧛🏾‍♂️","man_vampire_tone5":"🧛🏿‍♂️","man_walking":"🚶‍♂️","man_walking_tone1":"🚶🏻‍♂️","man_walking_tone2":"🚶🏼‍♂️","man_walking_tone3":"🚶🏽‍♂️","man_walking_tone4":"🚶🏾‍♂️","man_walking_tone5":"🚶🏿‍♂️","man_wearing_turban":"👳‍♂️","man_wearing_turban_tone1":"👳🏻‍♂️","man_wearing_turban_tone2":"👳🏼‍♂️","man_wearing_turban_tone3":"👳🏽‍♂️","man_wearing_turban_tone4":"👳🏾‍♂️","man_wearing_turban_tone5":"👳🏿‍♂️","man_white_haired":"👨‍🦳","man_white_haired_tone1":"👨🏻‍🦳","man_white_haired_tone2":"👨🏼‍🦳","man_white_haired_tone3":"👨🏽‍🦳","man_white_haired_tone4":"👨🏾‍🦳","man_white_haired_tone5":"👨🏿‍🦳","man_with_gua_pi_mao":"👲","man_with_probing_cane":"👨‍🦯","man_with_probing_cane_tone1":"👨🏻‍🦯","man_with_probing_cane_tone2":"👨🏼‍🦯","man_with_probing_cane_tone3":"👨🏽‍🦯","man_with_probing_cane_tone4":"👨🏾‍🦯","man_with_probing_cane_tone5":"👨🏿‍🦯","man_with_turban":"👳‍♂️","man_with_veil":"👰‍♂️","man_with_veil_tone1":"👰🏻‍♂️","man_with_veil_tone2":"👰🏼‍♂️","man_with_veil_tone3":"👰🏽‍♂️","man_with_veil_tone4":"👰🏾‍♂️","man_with_veil_tone5":"👰🏿‍♂️","man_with_white_cane":"👨‍🦯","man_with_white_cane_tone1":"👨🏻‍🦯","man_with_white_cane_tone2":"👨🏼‍🦯","man_with_white_cane_tone3":"👨🏽‍🦯","man_with_white_cane_tone4":"👨🏾‍🦯","man_with_white_cane_tone5":"👨🏿‍🦯","man_zombie":"🧟‍♂️","mandarin":"🍊","mango":"🥭","mans_shoe":"👞","mantelpiece_clock":"🕰","manual_wheelchair":"🦽","maple_leaf":"🍁","marshall_islands":"🇲🇭","martial_arts_uniform":"🥋","martinique":"🇲🇶","mask":"😷","massage":"💆","massage_man":"💆‍♂️","massage_tone1":"💆🏻","massage_tone2":"💆🏼","massage_tone3":"💆🏽","massage_tone4":"💆🏾","massage_tone5":"💆🏿","massage_woman":"💆‍♀️","mate":"🧉","mauritania":"🇲🇷","mauritius":"🇲🇺","mayotte":"🇾🇹","meat_on_bone":"🍖","mechanic":"🧑‍🔧","mechanic_tone1":"🧑🏻‍🔧","mechanic_tone2":"🧑🏼‍🔧","mechanic_tone3":"🧑🏽‍🔧","mechanic_tone4":"🧑🏾‍🔧","mechanic_tone5":"🧑🏿‍🔧","mechanical_arm":"🦾","mechanical_leg":"🦿","medal_military":"🎖","medal_sports":"🏅","medical":"⚕","medical_mask":"😷","medical_symbol":"⚕","medium_volumne":"🔉","mega":"📣","megaphone":"📣","melon":"🍈","melt":"🫠","melting_face":"🫠","mem":"📝","memo":"📝","men_with_bunny_ears_partying":"👯‍♂️","men_wrestling":"🤼‍♂️","mending_heart":"❤️‍🩹","menorah":"🕎","mens":"🚹","mermaid":"🧜‍♀️","mermaid_tone1":"🧜🏻‍♀️","mermaid_tone2":"🧜🏼‍♀️","mermaid_tone3":"🧜🏽‍♀️","mermaid_tone4":"🧜🏾‍♀️","mermaid_tone5":"🧜🏿‍♀️","merman":"🧜‍♂️","merman_tone1":"🧜🏻‍♂️","merman_tone2":"🧜🏼‍♂️","merman_tone3":"🧜🏽‍♂️","merman_tone4":"🧜🏾‍♂️","merman_tone5":"🧜🏿‍♂️","merperson":"🧜","merperson_tone1":"🧜🏻","merperson_tone2":"🧜🏼","merperson_tone3":"🧜🏽","merperson_tone4":"🧜🏾","merperson_tone5":"🧜🏿","metal":"🤘","metal_tone1":"🤘🏻","metal_tone2":"🤘🏼","metal_tone3":"🤘🏽","metal_tone4":"🤘🏾","metal_tone5":"🤘🏿","metro":"🚇","mexico":"🇲🇽","microbe":"🦠","micronesia":"🇫🇲","microphone":"🎤","microscope":"🔬","middle_finger":"🖕","middle_finger_tone1":"🖕🏻","middle_finger_tone2":"🖕🏼","middle_finger_tone3":"🖕🏽","middle_finger_tone4":"🖕🏾","middle_finger_tone5":"🖕🏿","military_helmet":"🪖","military_medal":"🎖","milk":"🥛","milk_glass":"🥛","milky_way":"🌌","minibus":"🚐","minidisc":"💽","minus":"➖","mirror":"🪞","mirror_ball":"🪩","moai":"🗿","mobile_phone":"📱","mobile_phone_arrow":"📲","mobile_phone_off":"📴","moldova":"🇲🇩","monaco":"🇲🇨","money_mouth_face":"🤑","money_with_wings":"💸","moneybag":"💰","mongolia":"🇲🇳","monkey":"🐒","monkey_face":"🐵","monocle_fac":"🧐","monocle_face":"🧐","monorail":"🚝","montenegro":"🇲🇪","montserrat":"🇲🇸","moon":"🌔","moon_cake":"🥮","moon_ceremony":"🎑","morocco":"🇲🇦","mortar_board":"🎓","mosque":"🕌","mosquito":"🦟","motor_boat":"🛥","motor_scooter":"🛵","motorboat":"🛥","motorcycle":"🏍","motorized_wheelchair":"🦼","motorway":"🛣","mount_fuji":"🗻","mountain":"⛰","mountain_bicyclist":"🚵","mountain_bicyclist_tone1":"🚵🏻","mountain_bicyclist_tone2":"🚵🏼","mountain_bicyclist_tone3":"🚵🏽","mountain_bicyclist_tone4":"🚵🏾","mountain_bicyclist_tone5":"🚵🏿","mountain_biking":"🚵","mountain_biking_man":"🚵‍♂️","mountain_biking_tone1":"🚵🏻","mountain_biking_tone2":"🚵🏼","mountain_biking_tone3":"🚵🏽","mountain_biking_tone4":"🚵🏾","mountain_biking_tone5":"🚵🏿","mountain_biking_woman":"🚵‍♀️","mountain_cableway":"🚠","mountain_railway":"🚞","mountain_snow":"🏔","mouse":"🐭","mouse2":"🐁","mouse_face":"🐭","mouse_trap":"🪤","mouth":"👄","movie_camera":"🎥","moyai":"🗿","mozambique":"🇲🇿","mrs_claus":"🤶","mrs_claus_tone1":"🤶🏻","mrs_claus_tone2":"🤶🏼","mrs_claus_tone3":"🤶🏽","mrs_claus_tone4":"🤶🏾","mrs_claus_tone5":"🤶🏿","multiplication":"✖","multiply":"✖","muscle":"💪","muscle_tone1":"💪🏻","muscle_tone2":"💪🏼","muscle_tone3":"💪🏽","muscle_tone4":"💪🏾","muscle_tone5":"💪🏿","mushroom":"🍄","musical_keyboard":"🎹","musical_note":"🎵","musical_notes":"🎶","musical_score":"🎼","mut":"🔇","mute":"🔇","mx_claus":"🧑‍🎄","mx_claus_tone1":"🧑🏻‍🎄","mx_claus_tone2":"🧑🏼‍🎄","mx_claus_tone3":"🧑🏽‍🎄","mx_claus_tone4":"🧑🏾‍🎄","mx_claus_tone5":"🧑🏿‍🎄","myanmar":"🇲🇲","nail_care":"💅","nail_care_tone1":"💅🏻","nail_care_tone2":"💅🏼","nail_care_tone3":"💅🏽","nail_care_tone4":"💅🏾","nail_care_tone5":"💅🏿","nail_polish":"💅","nail_polish_tone1":"💅🏻","nail_polish_tone2":"💅🏼","nail_polish_tone3":"💅🏽","nail_polish_tone4":"💅🏾","nail_polish_tone5":"💅🏿","name_badge":"📛","namibia":"🇳🇦","national_park":"🏞","nauru":"🇳🇷","nauseated":"🤢","nauseated_face":"🤢","nazar_amulet":"🧿","neckti":"👔","necktie":"👔","negative_squared_cross_mark":"❎","nepal":"🇳🇵","nerd":"🤓","nerd_face":"🤓","nest":"🪹","nest_with_eggs":"🪺","nesting_dolls":"🪆","netherlands":"🇳🇱","neutral":"😐","neutral_face":"😐","new":"🆕","new_caledonia":"🇳🇨","new_moon":"🌑","new_moon_with_face":"🌚","new_zealand":"🇳🇿","newspaper":"📰","newspaper_roll":"🗞","next_track":"⏭","next_track_button":"⏭","ng":"🆖","ng_man":"🙅‍♂️","ng_woman":"🙅‍♀️","nicaragua":"🇳🇮","niger":"🇳🇪","nigeria":"🇳🇬","night_with_stars":"🌃","nine":"9️⃣","ninja":"🥷","ninja_tone1":"🥷🏻","ninja_tone2":"🥷🏼","ninja_tone3":"🥷🏽","ninja_tone4":"🥷🏾","ninja_tone5":"🥷🏿","niue":"🇳🇺","no":"👎","no_bell":"🔕","no_bicycles":"🚳","no_entry":"⛔","no_entry_sign":"🚫","no_good":"🙅","no_good_man":"🙅‍♂️","no_good_tone1":"🙅🏻","no_good_tone2":"🙅🏼","no_good_tone3":"🙅🏽","no_good_tone4":"🙅🏾","no_good_tone5":"🙅🏿","no_good_woman":"🙅‍♀️","no_hair":"🦲","no_littering":"🚯","no_mobile_phones":"📵","no_mouth":"😶","no_one_under_18":"🔞","no_pedestrians":"🚷","no_smoking":"🚭","no_sound":"🔇","no_tone1":"👎🏻","no_tone2":"👎🏼","no_tone3":"👎🏽","no_tone4":"👎🏾","no_tone5":"👎🏿","non-potable_water":"🚱","norfolk_island":"🇳🇫","north_korea":"🇰🇵","northern_mariana_islands":"🇲🇵","norway":"🇳🇴","nose":"👃","nose_steam":"😤","nose_tone1":"👃🏻","nose_tone2":"👃🏼","nose_tone3":"👃🏽","nose_tone4":"👃🏾","nose_tone5":"👃🏿","notebook":"📓","notebook_with_decorative_cover":"📔","notepad_spiral":"🗒","notes":"🎶","number_sign":"#️⃣","nut_and_bolt":"🔩","o":"⭕","o2":"🅾","o_blood":"🅾","ocean":"🌊","octagonal_sign":"🛑","octopus":"🐙","oden":"🍢","office":"🏢","office_worker":"🧑‍💼","office_worker_tone1":"🧑🏻‍💼","office_worker_tone2":"🧑🏼‍💼","office_worker_tone3":"🧑🏽‍💼","office_worker_tone4":"🧑🏾‍💼","office_worker_tone5":"🧑🏿‍💼","ogre":"👹","oil_drum":"🛢","ok":"🆗","ok_hand":"👌","ok_hand_tone1":"👌🏻","ok_hand_tone2":"👌🏼","ok_hand_tone3":"👌🏽","ok_hand_tone4":"👌🏾","ok_hand_tone5":"👌🏿","ok_man":"🙆‍♂️","ok_person":"🙆","ok_woman":"🙆‍♀️","old_key":"🗝","older_adult":"🧓","older_adult_tone1":"🧓🏻","older_adult_tone2":"🧓🏼","older_adult_tone3":"🧓🏽","older_adult_tone4":"🧓🏾","older_adult_tone5":"🧓🏿","older_man":"👴","older_man_tone1":"👴🏻","older_man_tone2":"👴🏼","older_man_tone3":"👴🏽","older_man_tone4":"👴🏾","older_man_tone5":"👴🏿","older_woman":"👵","older_woman_tone1":"👵🏻","older_woman_tone2":"👵🏼","older_woman_tone3":"👵🏽","older_woman_tone4":"👵🏾","older_woman_tone5":"👵🏿","olive":"🫒","om":"🕉","oman":"🇴🇲","on":"🔛","oncoming_automobile":"🚘","oncoming_bus":"🚍","oncoming_police_car":"🚔","oncoming_taxi":"🚖","one":"1️⃣","one_piece_swimsuit":"🩱","onion":"🧅","open_book":"📖","open_file_folder":"📂","open_hands":"👐","open_hands_tone1":"👐🏻","open_hands_tone2":"👐🏼","open_hands_tone3":"👐🏽","open_hands_tone4":"👐🏾","open_hands_tone5":"👐🏿","open_mouth":"😮","open_umbrella":"☂","ophiuchus":"⛎","optical_disk":"💿","orange":"🍊","orange_book":"📙","orange_circle":"🟠","orange_heart":"🧡","orange_square":"🟧","orangutan":"🦧","orthodox_cross":"☦","otter":"🦦","outbox_tray":"📤","owl":"🦉","ox":"🐂","oyster":"🦪","packag":"📦️","package":"📦","page_facing_u":"📄","page_facing_up":"📄","page_with_curl":"📃","pager":"📟","paintbrush":"🖌","pakistan":"🇵🇰","palau":"🇵🇼","palestinian_territories":"🇵🇸","palette":"🎨","palm_down":"🫳","palm_down_tone1":"🫳🏻","palm_down_tone2":"🫳🏼","palm_down_tone3":"🫳🏽","palm_down_tone4":"🫳🏾","palm_down_tone5":"🫳🏿","palm_tree":"🌴","palm_up":"🫴","palm_up_tone1":"🫴🏻","palm_up_tone2":"🫴🏼","palm_up_tone3":"🫴🏽","palm_up_tone4":"🫴🏾","palm_up_tone5":"🫴🏿","palms_up_together":"🤲","palms_up_together_tone1":"🤲🏻","palms_up_together_tone2":"🤲🏼","palms_up_together_tone3":"🤲🏽","palms_up_together_tone4":"🤲🏾","palms_up_together_tone5":"🤲🏿","panama":"🇵🇦","pancakes":"🥞","panda":"🐼","panda_face":"🐼","paperclip":"📎","paperclips":"🖇","papua_new_guinea":"🇵🇬","parachute":"🪂","paraguay":"🇵🇾","parasol_on_ground":"⛱","parking":"🅿","parrot":"🦜","part_alternation_mark":"〽","partly_sunny":"⛅","party":"🎉","party_popper":"🎉","partying":"🥳","partying_face":"🥳","passenger_ship":"🛳","passport_contro":"🛂","passport_control":"🛂","pause":"⏸","pause_button":"⏸","paw_prints":"🐾","peace":"☮","peace_symbol":"☮","peach":"🍑","peacock":"🦚","peanuts":"🥜","pear":"🍐","peek":"🫣","pen":"🖊","pencil":"📝","pencil2":"✏","penguin":"🐧","penguin_face":"🐧","pensive":"😔","pensive_face":"😔","people_holding_hands":"🧑‍🤝‍🧑","people_holding_hands_tone1":"🧑🏻‍🤝‍🧑🏻","people_holding_hands_tone1-2":"🧑🏻‍🤝‍🧑🏼","people_holding_hands_tone1-3":"🧑🏻‍🤝‍🧑🏽","people_holding_hands_tone1-4":"🧑🏻‍🤝‍🧑🏾","people_holding_hands_tone1-5":"🧑🏻‍🤝‍🧑🏿","people_holding_hands_tone2":"🧑🏼‍🤝‍🧑🏼","people_holding_hands_tone2-1":"🧑🏼‍🤝‍🧑🏻","people_holding_hands_tone2-3":"🧑🏼‍🤝‍🧑🏽","people_holding_hands_tone2-4":"🧑🏼‍🤝‍🧑🏾","people_holding_hands_tone2-5":"🧑🏼‍🤝‍🧑🏿","people_holding_hands_tone3":"🧑🏽‍🤝‍🧑🏽","people_holding_hands_tone3-1":"🧑🏽‍🤝‍🧑🏻","people_holding_hands_tone3-2":"🧑🏽‍🤝‍🧑🏼","people_holding_hands_tone3-4":"🧑🏽‍🤝‍🧑🏾","people_holding_hands_tone3-5":"🧑🏽‍🤝‍🧑🏿","people_holding_hands_tone4":"🧑🏾‍🤝‍🧑🏾","people_holding_hands_tone4-1":"🧑🏾‍🤝‍🧑🏻","people_holding_hands_tone4-2":"🧑🏾‍🤝‍🧑🏼","people_holding_hands_tone4-3":"🧑🏾‍🤝‍🧑🏽","people_holding_hands_tone4-5":"🧑🏾‍🤝‍🧑🏿","people_holding_hands_tone5":"🧑🏿‍🤝‍🧑🏿","people_holding_hands_tone5-1":"🧑🏿‍🤝‍🧑🏻","people_holding_hands_tone5-2":"🧑🏿‍🤝‍🧑🏼","people_holding_hands_tone5-3":"🧑🏿‍🤝‍🧑🏽","people_holding_hands_tone5-4":"🧑🏿‍🤝‍🧑🏾","people_hugging":"🫂","people_with_bunny_ears_partying":"👯","people_wrestling":"🤼","performing_arts":"🎭","persevere":"😣","persevering_face":"😣","person_bald":"🧑‍🦲","person_bearded":"🧔","person_bearded_tone1":"🧔🏻","person_bearded_tone2":"🧔🏼","person_bearded_tone3":"🧔🏽","person_bearded_tone4":"🧔🏾","person_bearded_tone5":"🧔🏿","person_biking":"🚴","person_biking_tone1":"🚴🏻","person_biking_tone2":"🚴🏼","person_biking_tone3":"🚴🏽","person_biking_tone4":"🚴🏾","person_biking_tone5":"🚴🏿","person_bouncing_ball":"⛹","person_bouncing_ball_tone1":"⛹🏻","person_bouncing_ball_tone2":"⛹🏼","person_bouncing_ball_tone3":"⛹🏽","person_bouncing_ball_tone4":"⛹🏾","person_bouncing_ball_tone5":"⛹🏿","person_bowing":"🙇","person_bowing_tone1":"🙇🏻","person_bowing_tone2":"🙇🏼","person_bowing_tone3":"🙇🏽","person_bowing_tone4":"🙇🏾","person_bowing_tone5":"🙇🏿","person_cartwheel":"🤸","person_cartwheel_tone1":"🤸🏻","person_cartwheel_tone2":"🤸🏼","person_cartwheel_tone3":"🤸🏽","person_cartwheel_tone4":"🤸🏾","person_cartwheel_tone5":"🤸🏿","person_climbing":"🧗","person_climbing_tone1":"🧗🏻","person_climbing_tone2":"🧗🏼","person_climbing_tone3":"🧗🏽","person_climbing_tone4":"🧗🏾","person_climbing_tone5":"🧗🏿","person_curly_hair":"🧑‍🦱","person_facepalming":"🤦","person_facepalming_tone1":"🤦🏻","person_facepalming_tone2":"🤦🏼","person_facepalming_tone3":"🤦🏽","person_facepalming_tone4":"🤦🏾","person_facepalming_tone5":"🤦🏿","person_feeding_baby":"🧑‍🍼","person_feeding_baby_tone1":"🧑🏻‍🍼","person_feeding_baby_tone2":"🧑🏼‍🍼","person_feeding_baby_tone3":"🧑🏽‍🍼","person_feeding_baby_tone4":"🧑🏾‍🍼","person_feeding_baby_tone5":"🧑🏿‍🍼","person_fencing":"🤺","person_frowning":"🙍","person_frowning_tone1":"🙍🏻","person_frowning_tone2":"🙍🏼","person_frowning_tone3":"🙍🏽","person_frowning_tone4":"🙍🏾","person_frowning_tone5":"🙍🏿","person_gesturing_no":"🙅","person_gesturing_no_tone1":"🙅🏻","person_gesturing_no_tone2":"🙅🏼","person_gesturing_no_tone3":"🙅🏽","person_gesturing_no_tone4":"🙅🏾","person_gesturing_no_tone5":"🙅🏿","person_gesturing_ok":"🙆","person_gesturing_ok_tone1":"🙆🏻","person_gesturing_ok_tone2":"🙆🏼","person_gesturing_ok_tone3":"🙆🏽","person_gesturing_ok_tone4":"🙆🏾","person_gesturing_ok_tone5":"🙆🏿","person_getting_haircut":"💇","person_getting_haircut_tone1":"💇🏻","person_getting_haircut_tone2":"💇🏼","person_getting_haircut_tone3":"💇🏽","person_getting_haircut_tone4":"💇🏾","person_getting_haircut_tone5":"💇🏿","person_getting_massage":"💆","person_getting_massage_tone1":"💆🏻","person_getting_massage_tone2":"💆🏼","person_getting_massage_tone3":"💆🏽","person_getting_massage_tone4":"💆🏾","person_getting_massage_tone5":"💆🏿","person_golfing":"🏌","person_golfing_tone1":"🏌🏻","person_golfing_tone2":"🏌🏼","person_golfing_tone3":"🏌🏽","person_golfing_tone4":"🏌🏾","person_golfing_tone5":"🏌🏿","person_in_bed":"🛌","person_in_bed_tone1":"🛌🏻","person_in_bed_tone2":"🛌🏼","person_in_bed_tone3":"🛌🏽","person_in_bed_tone4":"🛌🏾","person_in_bed_tone5":"🛌🏿","person_in_lotus_position":"🧘","person_in_lotus_position_tone1":"🧘🏻","person_in_lotus_position_tone2":"🧘🏼","person_in_lotus_position_tone3":"🧘🏽","person_in_lotus_position_tone4":"🧘🏾","person_in_lotus_position_tone5":"🧘🏿","person_in_manual_wheelchair":"🧑‍🦽","person_in_manual_wheelchair_tone1":"🧑🏻‍🦽","person_in_manual_wheelchair_tone2":"🧑🏼‍🦽","person_in_manual_wheelchair_tone3":"🧑🏽‍🦽","person_in_manual_wheelchair_tone4":"🧑🏾‍🦽","person_in_manual_wheelchair_tone5":"🧑🏿‍🦽","person_in_motorized_wheelchair":"🧑‍🦼","person_in_motorized_wheelchair_tone1":"🧑🏻‍🦼","person_in_motorized_wheelchair_tone2":"🧑🏼‍🦼","person_in_motorized_wheelchair_tone3":"🧑🏽‍🦼","person_in_motorized_wheelchair_tone4":"🧑🏾‍🦼","person_in_motorized_wheelchair_tone5":"🧑🏿‍🦼","person_in_steamy_room":"🧖","person_in_steamy_room_tone1":"🧖🏻","person_in_steamy_room_tone2":"🧖🏼","person_in_steamy_room_tone3":"🧖🏽","person_in_steamy_room_tone4":"🧖🏾","person_in_steamy_room_tone5":"🧖🏿","person_in_suit_levitating":"🕴","person_in_suit_levitating_tone1":"🕴🏻","person_in_suit_levitating_tone2":"🕴🏼","person_in_suit_levitating_tone3":"🕴🏽","person_in_suit_levitating_tone4":"🕴🏾","person_in_suit_levitating_tone5":"🕴🏿","person_in_tuxedo":"🤵","person_in_tuxedo_tone1":"🤵🏻","person_in_tuxedo_tone2":"🤵🏼","person_in_tuxedo_tone3":"🤵🏽","person_in_tuxedo_tone4":"🤵🏾","person_in_tuxedo_tone5":"🤵🏿","person_juggling":"🤹","person_juggling_tone1":"🤹🏻","person_juggling_tone2":"🤹🏼","person_juggling_tone3":"🤹🏽","person_juggling_tone4":"🤹🏾","person_juggling_tone5":"🤹🏿","person_kneeling":"🧎","person_kneeling_tone1":"🧎🏻","person_kneeling_tone2":"🧎🏼","person_kneeling_tone3":"🧎🏽","person_kneeling_tone4":"🧎🏾","person_kneeling_tone5":"🧎🏿","person_lifting_weights":"🏋","person_lifting_weights_tone1":"🏋🏻","person_lifting_weights_tone2":"🏋🏼","person_lifting_weights_tone3":"🏋🏽","person_lifting_weights_tone4":"🏋🏾","person_lifting_weights_tone5":"🏋🏿","person_mountain_biking":"🚵","person_mountain_biking_tone1":"🚵🏻","person_mountain_biking_tone2":"🚵🏼","person_mountain_biking_tone3":"🚵🏽","person_mountain_biking_tone4":"🚵🏾","person_mountain_biking_tone5":"🚵🏿","person_playing_handball":"🤾","person_playing_handball_tone1":"🤾🏻","person_playing_handball_tone2":"🤾🏼","person_playing_handball_tone3":"🤾🏽","person_playing_handball_tone4":"🤾🏾","person_playing_handball_tone5":"🤾🏿","person_playing_water_polo":"🤽","person_playing_water_polo_tone1":"🤽🏻","person_playing_water_polo_tone2":"🤽🏼","person_playing_water_polo_tone3":"🤽🏽","person_playing_water_polo_tone4":"🤽🏾","person_playing_water_polo_tone5":"🤽🏿","person_pouting":"🙎","person_pouting_tone1":"🙎🏻","person_pouting_tone2":"🙎🏼","person_pouting_tone3":"🙎🏽","person_pouting_tone4":"🙎🏾","person_pouting_tone5":"🙎🏿","person_raising_hand":"🙋","person_raising_hand_tone1":"🙋🏻","person_raising_hand_tone2":"🙋🏼","person_raising_hand_tone3":"🙋🏽","person_raising_hand_tone4":"🙋🏾","person_raising_hand_tone5":"🙋🏿","person_red_hair":"🧑‍🦰","person_rowing_boat":"🚣","person_rowing_boat_tone1":"🚣🏻","person_rowing_boat_tone2":"🚣🏼","person_rowing_boat_tone3":"🚣🏽","person_rowing_boat_tone4":"🚣🏾","person_rowing_boat_tone5":"🚣🏿","person_running":"🏃","person_running_tone1":"🏃🏻","person_running_tone2":"🏃🏼","person_running_tone3":"🏃🏽","person_running_tone4":"🏃🏾","person_running_tone5":"🏃🏿","person_shrugging":"🤷","person_shrugging_tone1":"🤷🏻","person_shrugging_tone2":"🤷🏼","person_shrugging_tone3":"🤷🏽","person_shrugging_tone4":"🤷🏾","person_shrugging_tone5":"🤷🏿","person_skiing":"⛷","person_snowboarding":"🏂","person_snowboarding_tone1":"🏂🏻","person_snowboarding_tone2":"🏂🏼","person_snowboarding_tone3":"🏂🏽","person_snowboarding_tone4":"🏂🏾","person_snowboarding_tone5":"🏂🏿","person_standing":"🧍","person_standing_tone1":"🧍🏻","person_standing_tone2":"🧍🏼","person_standing_tone3":"🧍🏽","person_standing_tone4":"🧍🏾","person_standing_tone5":"🧍🏿","person_surfing":"🏄","person_surfing_tone1":"🏄🏻","person_surfing_tone2":"🏄🏼","person_surfing_tone3":"🏄🏽","person_surfing_tone4":"🏄🏾","person_surfing_tone5":"🏄🏿","person_swimming":"🏊","person_swimming_tone1":"🏊🏻","person_swimming_tone2":"🏊🏼","person_swimming_tone3":"🏊🏽","person_swimming_tone4":"🏊🏾","person_swimming_tone5":"🏊🏿","person_taking_bath":"🛀","person_taking_bath_tone1":"🛀🏻","person_taking_bath_tone2":"🛀🏼","person_taking_bath_tone3":"🛀🏽","person_taking_bath_tone4":"🛀🏾","person_taking_bath_tone5":"🛀🏿","person_tipping_hand":"💁","person_tipping_hand_tone1":"💁🏻","person_tipping_hand_tone2":"💁🏼","person_tipping_hand_tone3":"💁🏽","person_tipping_hand_tone4":"💁🏾","person_tipping_hand_tone5":"💁🏿","person_walking":"🚶","person_walking_tone1":"🚶🏻","person_walking_tone2":"🚶🏼","person_walking_tone3":"🚶🏽","person_walking_tone4":"🚶🏾","person_walking_tone5":"🚶🏿","person_wearing_turban":"👳","person_wearing_turban_tone1":"👳🏻","person_wearing_turban_tone2":"👳🏼","person_wearing_turban_tone3":"👳🏽","person_wearing_turban_tone4":"👳🏾","person_wearing_turban_tone5":"👳🏿","person_white_hair":"🧑‍🦳","person_with_crown":"🫅","person_with_crown_tone1":"🫅🏻","person_with_crown_tone2":"🫅🏼","person_with_crown_tone3":"🫅🏽","person_with_crown_tone4":"🫅🏾","person_with_crown_tone5":"🫅🏿","person_with_probing_cane":"🧑‍🦯","person_with_probing_cane_tone1":"🧑🏻‍🦯","person_with_probing_cane_tone2":"🧑🏼‍🦯","person_with_probing_cane_tone3":"🧑🏽‍🦯","person_with_probing_cane_tone4":"🧑🏾‍🦯","person_with_probing_cane_tone5":"🧑🏿‍🦯","person_with_skullcap":"👲","person_with_skullcap_tone1":"👲🏻","person_with_skullcap_tone2":"👲🏼","person_with_skullcap_tone3":"👲🏽","person_with_skullcap_tone4":"👲🏾","person_with_skullcap_tone5":"👲🏿","person_with_turban":"👳","person_with_veil":"👰","person_with_veil_tone1":"👰🏻","person_with_veil_tone2":"👰🏼","person_with_veil_tone3":"👰🏽","person_with_veil_tone4":"👰🏾","person_with_veil_tone5":"👰🏿","person_with_white_cane":"🧑‍🦯","person_with_white_cane_tone1":"🧑🏻‍🦯","person_with_white_cane_tone2":"🧑🏼‍🦯","person_with_white_cane_tone3":"🧑🏽‍🦯","person_with_white_cane_tone4":"🧑🏾‍🦯","person_with_white_cane_tone5":"🧑🏿‍🦯","peru":"🇵🇪","petri_dish":"🧫","philippines":"🇵🇭","phone":"☎","pick":"⛏","pickup_truck":"🛻","pie":"🥧","pig":"🐷","pig2":"🐖","pig_face":"🐷","pig_nose":"🐽","pill":"💊","pilot":"🧑‍✈️","pilot_tone1":"🧑🏻‍✈️","pilot_tone2":"🧑🏼‍✈️","pilot_tone3":"🧑🏽‍✈️","pilot_tone4":"🧑🏾‍✈️","pilot_tone5":"🧑🏿‍✈️","pinata":"🪅","pinch":"🤌","pinch_tone1":"🤌🏻","pinch_tone2":"🤌🏼","pinch_tone3":"🤌🏽","pinch_tone4":"🤌🏾","pinch_tone5":"🤌🏿","pinched_fingers":"🤌","pinched_fingers_tone1":"🤌🏻","pinched_fingers_tone2":"🤌🏼","pinched_fingers_tone3":"🤌🏽","pinched_fingers_tone4":"🤌🏾","pinched_fingers_tone5":"🤌🏿","pinching_hand":"🤏","pinching_hand_tone1":"🤏🏻","pinching_hand_tone2":"🤏🏼","pinching_hand_tone3":"🤏🏽","pinching_hand_tone4":"🤏🏾","pinching_hand_tone5":"🤏🏿","pineapple":"🍍","ping_pong":"🏓","pirate_flag":"🏴‍☠️","pisces":"♓","pistol":"🔫","pitcairn_islands":"🇵🇳","pizza":"🍕","placard":"🪧","place_of_worship":"🛐","plate_with_cutlery":"🍽","play":"▶","play_or_pause_button":"⏯","play_pause":"⏯","playground_slide":"🛝","pleading":"🥺","pleading_face":"🥺","plunger":"🪠","plus":"➕","point_down":"👇","point_down_tone1":"👇🏻","point_down_tone2":"👇🏼","point_down_tone3":"👇🏽","point_down_tone4":"👇🏾","point_down_tone5":"👇🏿","point_forward":"🫵","point_forward_tone1":"🫵🏻","point_forward_tone2":"🫵🏼","point_forward_tone3":"🫵🏽","point_forward_tone4":"🫵🏾","point_forward_tone5":"🫵🏿","point_left":"👈","point_left_tone1":"👈🏻","point_left_tone2":"👈🏼","point_left_tone3":"👈🏽","point_left_tone4":"👈🏾","point_left_tone5":"👈🏿","point_right":"👉","point_right_tone1":"👉🏻","point_right_tone2":"👉🏼","point_right_tone3":"👉🏽","point_right_tone4":"👉🏾","point_right_tone5":"👉🏿","point_up":"☝","point_up_2":"👆","point_up_2_tone1":"☝🏻","point_up_2_tone2":"☝🏼","point_up_2_tone3":"☝🏽","point_up_2_tone4":"☝🏾","point_up_2_tone5":"☝🏿","point_up_tone1":"👆🏻","point_up_tone2":"👆🏼","point_up_tone3":"👆🏽","point_up_tone4":"👆🏾","point_up_tone5":"👆🏿","poland":"🇵🇱","polar_bear":"🐻‍❄️","polar_bear_face":"🐻‍❄️","police_car":"🚓","police_officer":"👮","police_officer_tone1":"👮🏻","police_officer_tone2":"👮🏼","police_officer_tone3":"👮🏽","police_officer_tone4":"👮🏾","police_officer_tone5":"👮🏿","policeman":"👮‍♂️","policewoman":"👮‍♀️","poo":"💩","poodle":"🐩","poop":"💩","popcorn":"🍿","portugal":"🇵🇹","post_office":"🏣","postal_horn":"📯","postbox":"📮","pot_of_food":"🍲","potable_water":"🚰","potato":"🥔","potted_plant":"🪴","pouch":"👝","poultry_leg":"🍗","pound":"💷","pour":"🫗","pouring_liquid":"🫗","pout":"😡","pouting":"🙎","pouting_cat":"😾","pouting_face":"🙎","pouting_man":"🙎‍♂️","pouting_tone1":"🙎🏻","pouting_tone2":"🙎🏼","pouting_tone3":"🙎🏽","pouting_tone4":"🙎🏾","pouting_tone5":"🙎🏿","pouting_woman":"🙎‍♀️","pray":"🙏","pray_tone1":"🙏🏻","pray_tone2":"🙏🏼","pray_tone3":"🙏🏽","pray_tone4":"🙏🏾","pray_tone5":"🙏🏿","prayer_beads":"📿","pregnant_man":"🫃","pregnant_man_tone1":"🫃🏻","pregnant_man_tone2":"🫃🏼","pregnant_man_tone3":"🫃🏽","pregnant_man_tone4":"🫃🏾","pregnant_man_tone5":"🫃🏿","pregnant_person":"🫄","pregnant_person_tone1":"🫄🏻","pregnant_person_tone2":"🫄🏼","pregnant_person_tone3":"🫄🏽","pregnant_person_tone4":"🫄🏾","pregnant_person_tone5":"🫄🏿","pregnant_woman":"🤰","pregnant_woman_tone1":"🤰🏻","pregnant_woman_tone2":"🤰🏼","pregnant_woman_tone3":"🤰🏽","pregnant_woman_tone4":"🤰🏾","pregnant_woman_tone5":"🤰🏿","pretzel":"🥨","previous_track":"⏮","previous_track_button":"⏮","prince":"🤴","prince_tone1":"🤴🏻","prince_tone2":"🤴🏼","prince_tone3":"🤴🏽","prince_tone4":"🤴🏾","prince_tone5":"🤴🏿","princess":"👸","princess_tone1":"👸🏻","princess_tone2":"👸🏼","princess_tone3":"👸🏽","princess_tone4":"👸🏾","princess_tone5":"👸🏿","printer":"🖨","probing_cane":"🦯","puerto_rico":"🇵🇷","punch":"👊","punch_tone1":"👊🏻","punch_tone2":"👊🏼","punch_tone3":"👊🏽","punch_tone4":"👊🏾","punch_tone5":"👊🏿","purple_circle":"🟣","purple_heart":"💜","purple_square":"🟪","purse":"👛","pushpi":"📌","pushpin":"📌","put_litter_in_its_place":"🚮","puzzle_piece":"🧩","qatar":"🇶🇦","question":"❓","quiet_sound":"🔈","rabbit":"🐰","rabbit2":"🐇","rabbit_face":"🐰","raccoon":"🦝","racehorse":"🐎","racing_car":"🏎","radio":"📻","radio_button":"🔘","radioactive":"☢","rage":"😡","railway_car":"🚃","railway_track":"🛤","rainbow":"🌈","rainbow_flag":"🏳️‍🌈","rainy":"🌧","raised_back_of_hand":"🤚","raised_back_of_hand_tone1":"🤚🏻","raised_back_of_hand_tone2":"🤚🏼","raised_back_of_hand_tone3":"🤚🏽","raised_back_of_hand_tone4":"🤚🏾","raised_back_of_hand_tone5":"🤚🏿","raised_eyebrow":"🤨","raised_hand":"✋","raised_hand_tone1":"✋🏻","raised_hand_tone2":"✋🏼","raised_hand_tone3":"✋🏽","raised_hand_tone4":"✋🏾","raised_hand_tone5":"✋🏿","raised_hand_with_fingers_splayed":"🖐","raised_hand_with_fingers_splayed_tone1":"🖐🏻","raised_hand_with_fingers_splayed_tone2":"🖐🏼","raised_hand_with_fingers_splayed_tone3":"🖐🏽","raised_hand_with_fingers_splayed_tone4":"🖐🏾","raised_hand_with_fingers_splayed_tone5":"🖐🏿","raised_hands":"🙌","raised_hands_tone1":"🙌🏻","raised_hands_tone2":"🙌🏼","raised_hands_tone3":"🙌🏽","raised_hands_tone4":"🙌🏾","raised_hands_tone5":"🙌🏿","raising_hand":"🙋","raising_hand_man":"🙋‍♂️","raising_hand_woman":"🙋‍♀️","ram":"🐏","ramen":"🍜","rat":"🐀","razor":"🪒","receipt":"🧾","record":"⏺","record_button":"⏺","recycl":"♻️","recycle":"♻","recycling_symbol":"♻","red_apple":"🍎","red_car":"🚗","red_circle":"🔴","red_envelope":"🧧","red_hair":"🦰","red_haired":"🧑‍🦰","red_haired_man":"👨‍🦰","red_haired_tone1":"🧑🏻‍🦰","red_haired_tone2":"🧑🏼‍🦰","red_haired_tone3":"🧑🏽‍🦰","red_haired_tone4":"🧑🏾‍🦰","red_haired_tone5":"🧑🏿‍🦰","red_haired_woman":"👩‍🦰","red_heart":"❤","red_o":"⭕","red_paper_lantern":"🏮","red_square":"🟥","regional_indicator_a":"🇦","regional_indicator_b":"🇧","regional_indicator_c":"🇨","regional_indicator_d":"🇩","regional_indicator_e":"🇪","regional_indicator_f":"🇫","regional_indicator_g":"🇬","regional_indicator_h":"🇭","regional_indicator_i":"🇮","regional_indicator_j":"🇯","regional_indicator_k":"🇰","regional_indicator_l":"🇱","regional_indicator_m":"🇲","regional_indicator_n":"🇳","regional_indicator_o":"🇴","regional_indicator_p":"🇵","regional_indicator_q":"🇶","regional_indicator_r":"🇷","regional_indicator_s":"🇸","regional_indicator_t":"🇹","regional_indicator_u":"🇺","regional_indicator_v":"🇻","regional_indicator_w":"🇼","regional_indicator_x":"🇽","regional_indicator_y":"🇾","regional_indicator_z":"🇿","registered":"®","relaxed":"☺","relieved":"😌","relieved_face":"😌","reminder_ribbon":"🎗","repeat":"🔁","repeat_one":"🔂","rescue_worker_helmet":"⛑","restroom":"🚻","reunion":"🇷🇪","reverse":"◀","revolving_hearts":"💞","rewin":"⏪️","rewind":"⏪","rhino":"🦏","rhinoceros":"🦏","ribbon":"🎀","rice":"🍚","rice_ball":"🍙","rice_cracker":"🍘","rice_scene":"🎑","right_anger_bubble":"🗯","right_bicep":"💪","right_bicep_tone1":"💪🏻","right_bicep_tone2":"💪🏼","right_bicep_tone3":"💪🏽","right_bicep_tone4":"💪🏾","right_bicep_tone5":"💪🏿","right_facing_fist":"🤜","right_facing_fist_tone1":"🤜🏻","right_facing_fist_tone2":"🤜🏼","right_facing_fist_tone3":"🤜🏽","right_facing_fist_tone4":"🤜🏾","right_facing_fist_tone5":"🤜🏿","rightwards_arrow_with_hook":"↪","rightwards_hand":"🫱","rightwards_hand_tone1":"🫱🏻","rightwards_hand_tone2":"🫱🏼","rightwards_hand_tone3":"🫱🏽","rightwards_hand_tone4":"🫱🏾","rightwards_hand_tone5":"🫱🏿","ring":"💍","ring_buoy":"🛟","ringed_planet":"🪐","robot":"🤖","robot_face":"🤖","rock":"🪨","rocke":"🚀","rocket":"🚀","rofl":"🤣","roll_eyes":"🙄","roll_of_paper":"🧻","rolled_up_newspaper":"🗞","roller_coaster":"🎢","roller_skate":"🛼","rolling_eyes":"🙄","romania":"🇷🇴","rooster":"🐓","rose":"🌹","rosette":"🏵","rotating_ligh":"🚨","rotating_light":"🚨","round_pushpin":"📍","rowboat":"🚣","rowboat_tone1":"🚣🏻","rowboat_tone2":"🚣🏼","rowboat_tone3":"🚣🏽","rowboat_tone4":"🚣🏾","rowboat_tone5":"🚣🏿","rowing_man":"🚣‍♂️","rowing_woman":"🚣‍♀️","royalty":"🫅","royalty_tone1":"🫅🏻","royalty_tone2":"🫅🏼","royalty_tone3":"🫅🏽","royalty_tone4":"🫅🏾","royalty_tone5":"🫅🏿","ru":"🇷🇺","rugby_football":"🏉","runner":"🏃","running":"🏃","running_man":"🏃‍♂️","running_shirt":"🎽","running_shirt_with_sash":"🎽","running_tone1":"🏃🏻","running_tone2":"🏃🏼","running_tone3":"🏃🏽","running_tone4":"🏃🏾","running_tone5":"🏃🏿","running_woman":"🏃‍♀️","russia":"🇷🇺","rwanda":"🇷🇼","sa":"🈂","sad_relieved_face":"😥","safety_pin":"🧷","safety_vest":"🦺","sagittarius":"♐","sailboat":"⛵","sake":"🍶","salad":"🥗","salt":"🧂","salute":"🫡","saluting_face":"🫡","samoa":"🇼🇸","san_marino":"🇸🇲","sandal":"👡","sandwich":"🥪","santa":"🎅","santa_tone1":"🎅🏻","santa_tone2":"🎅🏼","santa_tone3":"🎅🏽","santa_tone4":"🎅🏾","santa_tone5":"🎅🏿","sao_tome_principe":"🇸🇹","sari":"🥻","sassy_man":"💁‍♂️","sassy_woman":"💁‍♀️","satellite":"📡","satellite_antenna":"📡","satisfied":"😆","saturn":"🪐","saudi_arabia":"🇸🇦","sauna_man":"🧖‍♂️","sauna_person":"🧖","sauna_woman":"🧖‍♀️","sauropod":"🦕","savoring_food":"😋","saxophone":"🎷","scales":"⚖","scarf":"🧣","school":"🏫","school_satchel":"🎒","scientist":"🧑‍🔬","scientist_tone1":"🧑🏻‍🔬","scientist_tone2":"🧑🏼‍🔬","scientist_tone3":"🧑🏽‍🔬","scientist_tone4":"🧑🏾‍🔬","scientist_tone5":"🧑🏿‍🔬","scissors":"✂","scooter":"🛴","scorpion":"🦂","scorpius":"♏","scotland":"🏴󠁧󠁢󠁳󠁣󠁴󠁿","scream":"😱","scream_cat":"🙀","screaming_in_fear":"😱","screwdriver":"🪛","scroll":"📜","seal":"🦭","seat":"💺","second_place_medal":"🥈","secret":"㊙","see_no_evi":"🙈","see_no_evil":"🙈","seedlin":"🌱","seedling":"🌱","selfie":"🤳","selfie_tone1":"🤳🏻","selfie_tone2":"🤳🏼","selfie_tone3":"🤳🏽","selfie_tone4":"🤳🏾","selfie_tone5":"🤳🏿","senegal":"🇸🇳","serbia":"🇷🇸","service_dog":"🐕‍🦺","seven":"7️⃣","sewing_needle":"🪡","seychelles":"🇸🇨","shallow_pan_of_food":"🥘","shamrock":"☘","shark":"🦈","shaved_ice":"🍧","sheaf_of_rice":"🌾","sheep":"🐑","shell":"🐚","shield":"🛡","shinto_shrine":"⛩","ship":"🚢","shirt":"👕","shit":"💩","shoe":"👞","shooting_star":"🌠","shopping":"🛍","shopping_bags":"🛍","shopping_cart":"🛒","shortcake":"🍰","shorts":"🩳","shower":"🚿","shrimp":"🦐","shrug":"🤷","shrug_tone1":"🤷🏻","shrug_tone2":"🤷🏼","shrug_tone3":"🤷🏽","shrug_tone4":"🤷🏾","shrug_tone5":"🤷🏿","shuffle":"🔀","shush":"🤫","shushing_face":"🤫","sierra_leone":"🇸🇱","sign_of_the_horns":"🤘","sign_of_the_horns_tone1":"🤘🏻","sign_of_the_horns_tone2":"🤘🏼","sign_of_the_horns_tone3":"🤘🏽","sign_of_the_horns_tone4":"🤘🏾","sign_of_the_horns_tone5":"🤘🏿","signal_strength":"📶","singapore":"🇸🇬","singer":"🧑‍🎤","singer_tone1":"🧑🏻‍🎤","singer_tone2":"🧑🏼‍🎤","singer_tone3":"🧑🏽‍🎤","singer_tone4":"🧑🏾‍🎤","singer_tone5":"🧑🏿‍🎤","sint_maarten":"🇸🇽","six":"6️⃣","six_pointed_star":"🔯","skateboard":"🛹","ski":"🎿","skier":"⛷","skiing":"⛷","skull":"💀","skull_and_crossbones":"☠","skunk":"🦨","sled":"🛷","sleeping":"😴","sleeping_accommodation":"🛌","sleeping_accommodation_tone1":"🛌🏻","sleeping_accommodation_tone2":"🛌🏼","sleeping_accommodation_tone3":"🛌🏽","sleeping_accommodation_tone4":"🛌🏾","sleeping_accommodation_tone5":"🛌🏿","sleeping_bed":"🛌","sleeping_face":"😴","sleepy":"😪","sleepy_face":"😪","slide":"🛝","slightly_frowning_face":"🙁","slightly_smiling_face":"🙂","slot_machine":"🎰","sloth":"🦥","slovakia":"🇸🇰","slovenia":"🇸🇮","small_airplane":"🛩","small_blue_diamond":"🔹","small_orange_diamond":"🔸","small_red_triangle":"🔺","small_red_triangle_down":"🔻","smile":"😄","smile_cat":"😸","smiley":"😃","smiley_cat":"😺","smiling_cat_with_heart_eyes":"😻","smiling_face":"☺","smiling_face_with_3_hearts":"🥰","smiling_face_with_closed_eyes":"😊","smiling_face_with_heart_eyes":"😍","smiling_face_with_sunglasses":"😎","smiling_face_with_tear":"🥲","smiling_face_with_three_hearts":"🥰","smiling_imp":"😈","smirk":"😏","smirk_cat":"😼","smirking":"😏","smirking_face":"😏","smoking":"🚬","snail":"🐌","snake":"🐍","sneaker":"👟","sneezing":"🤧","sneezing_face":"🤧","snowboarder":"🏂","snowboarder_tone1":"🏂🏻","snowboarder_tone2":"🏂🏼","snowboarder_tone3":"🏂🏽","snowboarder_tone4":"🏂🏾","snowboarder_tone5":"🏂🏿","snowboarding":"🏂","snowboarding_tone1":"🏂🏻","snowboarding_tone2":"🏂🏼","snowboarding_tone3":"🏂🏽","snowboarding_tone4":"🏂🏾","snowboarding_tone5":"🏂🏿","snowflake":"❄","snowman":"⛄","snowman2":"☃","snowman_with_snow":"☃","snowy":"🌨","soap":"🧼","sob":"😭","soccer":"⚽","socks":"🧦","soft_serve":"🍦","softball":"🥎","solomon_islands":"🇸🇧","somalia":"🇸🇴","soon":"🔜","sos":"🆘","sound":"🔉","south_africa":"🇿🇦","south_georgia_south_sandwich_islands":"🇬🇸","south_korea":"🇰🇷","south_sudan":"🇸🇸","space_invader":"👾","spades":"♠","spaghetti":"🍝","spain":"🇪🇸","sparkle":"❇","sparkler":"🎇","sparkles":"✨","sparkling_heart":"💖","speak_no_evil":"🙊","speaker":"🔈","speaking_head":"🗣","speech_balloo":"💬","speech_balloon":"💬","speedboat":"🚤","spider":"🕷","spider_web":"🕸","spiral_calendar":"🗓","spiral_notepad":"🗒","sponge":"🧽","spoon":"🥄","sports_medal":"🏅","spouting_whale":"🐳","squid":"🦑","squinting_face":"😆","sri_lanka":"🇱🇰","st_barthelemy":"🇧🇱","st_helena":"🇸🇭","st_kitts_nevis":"🇰🇳","st_lucia":"🇱🇨","st_martin":"🇲🇫","st_pierre_miquelon":"🇵🇲","st_vincent_grenadines":"🇻🇨","stadium":"🏟","standing":"🧍","standing_man":"🧍‍♂️","standing_person":"🧍","standing_tone1":"🧍🏻","standing_tone2":"🧍🏼","standing_tone3":"🧍🏽","standing_tone4":"🧍🏾","standing_tone5":"🧍🏿","standing_woman":"🧍‍♀️","star":"⭐","star2":"🌟","star_and_crescent":"☪","star_of_david":"✡","star_struck":"🤩","stars":"🌠","station":"🚉","statue_of_liberty":"🗽","steam_locomotive":"🚂","steaming_bowl":"🍜","stethoscop":"🩺","stethoscope":"🩺","stew":"🍲","stop":"⏹","stop_button":"⏹","stop_sign":"🛑","stopwatch":"⏱","stormy":"⛈","straight_ruler":"📏","strawberry":"🍓","stuck_out_tongue":"😛","stuck_out_tongue_closed_eyes":"😝","stuck_out_tongue_winking_eye":"😜","student":"🧑‍🎓","student_tone1":"🧑🏻‍🎓","student_tone2":"🧑🏼‍🎓","student_tone3":"🧑🏽‍🎓","student_tone4":"🧑🏾‍🎓","student_tone5":"🧑🏿‍🎓","studio_microphone":"🎙","stuffed_flatbread":"🥙","sudan":"🇸🇩","sun":"☀","sun_and_rain":"🌦","sun_behind_cloud":"⛅","sun_behind_large_cloud":"🌥","sun_behind_rain_cloud":"🌦","sun_behind_small_cloud":"🌤","sun_with_face":"🌞","sunflower":"🌻","sunglasses":"😎","sunglasses_cool":"😎","sunny":"☀","sunrise":"🌅","sunrise_over_mountains":"🌄","superhero":"🦸","superhero_man":"🦸‍♂️","superhero_tone1":"🦸🏻","superhero_tone2":"🦸🏼","superhero_tone3":"🦸🏽","superhero_tone4":"🦸🏾","superhero_tone5":"🦸🏿","superhero_woman":"🦸‍♀️","supervillain":"🦹","supervillain_man":"🦹‍♂️","supervillain_tone1":"🦹🏻","supervillain_tone2":"🦹🏼","supervillain_tone3":"🦹🏽","supervillain_tone4":"🦹🏾","supervillain_tone5":"🦹🏿","supervillain_woman":"🦹‍♀️","surfer":"🏄","surfer_tone1":"🏄🏻","surfer_tone2":"🏄🏼","surfer_tone3":"🏄🏽","surfer_tone4":"🏄🏾","surfer_tone5":"🏄🏿","surfing":"🏄","surfing_man":"🏄‍♂️","surfing_tone1":"🏄🏻","surfing_tone2":"🏄🏼","surfing_tone3":"🏄🏽","surfing_tone4":"🏄🏾","surfing_tone5":"🏄🏿","surfing_woman":"🏄‍♀️","suriname":"🇸🇷","sushi":"🍣","suspension_railway":"🚟","suv":"🚙","svalbard_jan_mayen":"🇸🇯","swan":"🦢","swaziland":"🇸🇿","sweat":"😓","sweat_drops":"💦","sweat_smile":"😅","sweden":"🇸🇪","sweet_potato":"🍠","swim_brief":"🩲","swimmer":"🏊","swimmer_tone1":"🏊🏻","swimmer_tone2":"🏊🏼","swimmer_tone3":"🏊🏽","swimmer_tone4":"🏊🏾","swimmer_tone5":"🏊🏿","swimming":"🏊","swimming_man":"🏊‍♂️","swimming_tone1":"🏊🏻","swimming_tone2":"🏊🏼","swimming_tone3":"🏊🏽","swimming_tone4":"🏊🏾","swimming_tone5":"🏊🏿","swimming_woman":"🏊‍♀️","switzerland":"🇨🇭","symbols":"🔣","synagogue":"🕍","syria":"🇸🇾","syringe":"💉","t-rex":"🦖","taco":"🌮","tad":"🎉","tada":"🎉","taiwan":"🇹🇼","tajikistan":"🇹🇯","takeout_box":"🥡","tamale":"🫔","tanabata_tree":"🎋","tangerine":"🍊","tanzania":"🇹🇿","taurus":"♉","taxi":"🚕","tea":"🍵","teacher":"🧑‍🏫","teacher_tone1":"🧑🏻‍🏫","teacher_tone2":"🧑🏼‍🏫","teacher_tone3":"🧑🏽‍🏫","teacher_tone4":"🧑🏾‍🏫","teacher_tone5":"🧑🏿‍🏫","teapot":"🫖","tears_of_joy":"😂","tears_of_joy_cat":"😹","technologis":"🧑‍💻","technologist":"🧑‍💻","technologist_tone1":"🧑🏻‍💻","technologist_tone2":"🧑🏼‍💻","technologist_tone3":"🧑🏽‍💻","technologist_tone4":"🧑🏾‍💻","technologist_tone5":"🧑🏿‍💻","teddy_bear":"🧸","telephone":"☎","telephone_receiver":"📞","telescope":"🔭","ten":"🔟","tennis":"🎾","tent":"⛺","test_tub":"🧪","test_tube":"🧪","thailand":"🇹🇭","thermometer":"🌡","thinking":"🤔","thinking_face":"🤔","third_place_medal":"🥉","thong_sandal":"🩴","thought_balloon":"💭","thread":"🧵","three":"3️⃣","thumbsdown":"👎","thumbsdown_tone1":"👎🏻","thumbsdown_tone2":"👎🏼","thumbsdown_tone3":"👎🏽","thumbsdown_tone4":"👎🏾","thumbsdown_tone5":"👎🏿","thumbsup":"👍","thumbsup_tone1":"👍🏻","thumbsup_tone2":"👍🏼","thumbsup_tone3":"👍🏽","thumbsup_tone4":"👍🏾","thumbsup_tone5":"👍🏿","thunder_cloud_and_rain":"⛈","ticket":"🎫","tickets":"🎟","tiger":"🐯","tiger2":"🐅","tiger_face":"🐯","timer_clock":"⏲","timor_leste":"🇹🇱","tipping_hand_man":"💁‍♂️","tipping_hand_person":"💁","tipping_hand_woman":"💁‍♀️","tired":"😫","tired_face":"😫","tm":"™","togo":"🇹🇬","toilet":"🚽","toilet_paper":"🧻","tokelau":"🇹🇰","tokyo_tower":"🗼","tomato":"🍅","tone1":"🏻","tone2":"🏼","tone3":"🏽","tone4":"🏾","tone5":"🏿","tone_dark":"🏿","tone_light":"🏻","tone_medium":"🏽","tone_medium_dark":"🏾","tone_medium_light":"🏼","tonga":"🇹🇴","tongue":"👅","too_cool":"😎","toolbox":"🧰","tooth":"🦷","toothbrush":"🪥","top":"🔝","top_hat":"🎩","tophat":"🎩","tornado":"🌪","tr":"🇹🇷","trackball":"🖲","tractor":"🚜","trade_mark":"™","traffic_light":"🚥","train":"🚋","train2":"🚆","tram":"🚊","tram_car":"🚋","transgender_flag":"🏳️‍⚧️","transgender_symbol":"⚧","trashcan":"🗑","trex":"🦖","triangular_flag":"🚩","triangular_flag_on_pos":"🚩","triangular_flag_on_post":"🚩","triangular_ruler":"📐","trident":"🔱","trinidad_tobago":"🇹🇹","tristan_da_cunha":"🇹🇦","triumph":"😤","troll":"🧌","trolleybus":"🚎","trophy":"🏆","tropical_drink":"🍹","tropical_fish":"🐠","truc":"🚚","truck":"🚚","trumpet":"🎺","tshirt":"👕","tulip":"🌷","tumbler_glass":"🥃","tunisia":"🇹🇳","turkey":"🦃","turkey_tr":"🇹🇷","turkmenistan":"🇹🇲","turks_caicos_islands":"🇹🇨","turtle":"🐢","tuvalu":"🇹🇻","tv":"📺","twisted_rightwards_arrow":"🔀","twisted_rightwards_arrows":"🔀","two":"2️⃣","two_hearts":"💕","two_men_holding_hands":"👬","two_men_holding_hands_tone1":"👬🏻","two_men_holding_hands_tone1-2":"👨🏻‍🤝‍👨🏼","two_men_holding_hands_tone1-3":"👨🏻‍🤝‍👨🏽","two_men_holding_hands_tone1-4":"👨🏻‍🤝‍👨🏾","two_men_holding_hands_tone1-5":"👨🏻‍🤝‍👨🏿","two_men_holding_hands_tone2":"👬🏼","two_men_holding_hands_tone2-1":"👨🏼‍🤝‍👨🏻","two_men_holding_hands_tone2-3":"👨🏼‍🤝‍👨🏽","two_men_holding_hands_tone2-4":"👨🏼‍🤝‍👨🏾","two_men_holding_hands_tone2-5":"👨🏼‍🤝‍👨🏿","two_men_holding_hands_tone3":"👬🏽","two_men_holding_hands_tone3-1":"👨🏽‍🤝‍👨🏻","two_men_holding_hands_tone3-2":"👨🏽‍🤝‍👨🏼","two_men_holding_hands_tone3-4":"👨🏽‍🤝‍👨🏾","two_men_holding_hands_tone3-5":"👨🏽‍🤝‍👨🏿","two_men_holding_hands_tone4":"👬🏾","two_men_holding_hands_tone4-1":"👨🏾‍🤝‍👨🏻","two_men_holding_hands_tone4-2":"👨🏾‍🤝‍👨🏼","two_men_holding_hands_tone4-3":"👨🏾‍🤝‍👨🏽","two_men_holding_hands_tone4-5":"👨🏾‍🤝‍👨🏿","two_men_holding_hands_tone5":"👬🏿","two_men_holding_hands_tone5-1":"👨🏿‍🤝‍👨🏻","two_men_holding_hands_tone5-2":"👨🏿‍🤝‍👨🏼","two_men_holding_hands_tone5-3":"👨🏿‍🤝‍👨🏽","two_men_holding_hands_tone5-4":"👨🏿‍🤝‍👨🏾","two_women_holding_hands":"👭","two_women_holding_hands_tone1":"👭🏻","two_women_holding_hands_tone1-2":"👩🏻‍🤝‍👩🏼","two_women_holding_hands_tone1-3":"👩🏻‍🤝‍👩🏽","two_women_holding_hands_tone1-4":"👩🏻‍🤝‍👩🏾","two_women_holding_hands_tone1-5":"👩🏻‍🤝‍👩🏿","two_women_holding_hands_tone2":"👭🏼","two_women_holding_hands_tone2-1":"👩🏼‍🤝‍👩🏻","two_women_holding_hands_tone2-3":"👩🏼‍🤝‍👩🏽","two_women_holding_hands_tone2-4":"👩🏼‍🤝‍👩🏾","two_women_holding_hands_tone2-5":"👩🏼‍🤝‍👩🏿","two_women_holding_hands_tone3":"👭🏽","two_women_holding_hands_tone3-1":"👩🏽‍🤝‍👩🏻","two_women_holding_hands_tone3-2":"👩🏽‍🤝‍👩🏼","two_women_holding_hands_tone3-4":"👩🏽‍🤝‍👩🏾","two_women_holding_hands_tone3-5":"👩🏽‍🤝‍👩🏿","two_women_holding_hands_tone4":"👭🏾","two_women_holding_hands_tone4-1":"👩🏾‍🤝‍👩🏻","two_women_holding_hands_tone4-2":"👩🏾‍🤝‍👩🏼","two_women_holding_hands_tone4-3":"👩🏾‍🤝‍👩🏽","two_women_holding_hands_tone4-5":"👩🏾‍🤝‍👩🏿","two_women_holding_hands_tone5":"👭🏿","two_women_holding_hands_tone5-1":"👩🏿‍🤝‍👩🏻","two_women_holding_hands_tone5-2":"👩🏿‍🤝‍👩🏼","two_women_holding_hands_tone5-3":"👩🏿‍🤝‍👩🏽","two_women_holding_hands_tone5-4":"👩🏿‍🤝‍👩🏾","u5272":"🈹","u5408":"🈴","u55b6":"🈺","u6307":"🈯","u6708":"🈷","u6709":"🈶","u6e80":"🈵","u7121":"🈚","u7533":"🈸","u7981":"🈲","u7a7a":"🈳","uganda":"🇺🇬","uk":"🇬🇧","ukraine":"🇺🇦","umbrella":"☔","umbrella_on_ground":"⛱","umbrella_with_rain":"☔","un":"🇺🇳","unamused":"😒","unamused_face":"😒","underage":"🔞","unicorn":"🦄","unicorn_face":"🦄","united_arab_emirates":"🇦🇪","united_kingdom":"🇬🇧","united_nations":"🇺🇳","united_states":"🇺🇸","unlock":"🔓","unlocked":"🔓","up":"🆙","up2":"🆙","upside_down_face":"🙃","uruguay":"🇺🇾","us":"🇺🇸","us_outlying_islands":"🇺🇲","us_virgin_islands":"🇻🇮","usa":"🇺🇸","uzbekistan":"🇺🇿","v":"✌","v_tone1":"✌🏻","v_tone2":"✌🏼","v_tone3":"✌🏽","v_tone4":"✌🏾","v_tone5":"✌🏿","vampire":"🧛","vampire_man":"🧛‍♂️","vampire_tone1":"🧛🏻","vampire_tone2":"🧛🏼","vampire_tone3":"🧛🏽","vampire_tone4":"🧛🏾","vampire_tone5":"🧛🏿","vampire_woman":"🧛‍♀️","vanuatu":"🇻🇺","vatican_city":"🇻🇦","venezuela":"🇻🇪","vertical_traffic_light":"🚦","vhs":"📼","vibration_mode":"📳","victory":"✌","victory_tone1":"✌🏻","victory_tone2":"✌🏼","victory_tone3":"✌🏽","victory_tone4":"✌🏾","victory_tone5":"✌🏿","video_camera":"📹","video_game":"🎮","videocassette":"📼","vietnam":"🇻🇳","violin":"🎻","virgo":"♍","volcano":"🌋","volleyball":"🏐","vomiting":"🤮","vomiting_face":"🤮","vs":"🆚","vulcan":"🖖","vulcan_salute":"🖖","vulcan_tone1":"🖖🏻","vulcan_tone2":"🖖🏼","vulcan_tone3":"🖖🏽","vulcan_tone4":"🖖🏾","vulcan_tone5":"🖖🏿","waffle":"🧇","wales":"🏴󠁧󠁢󠁷󠁬󠁳󠁿","walking":"🚶","walking_man":"🚶‍♂️","walking_tone1":"🚶🏻","walking_tone2":"🚶🏼","walking_tone3":"🚶🏽","walking_tone4":"🚶🏾","walking_tone5":"🚶🏿","walking_woman":"🚶‍♀️","wallis_futuna":"🇼🇫","waning_crescent_moon":"🌘","waning_gibbous_moon":"🌖","warning":"⚠","wastebaske":"🗑️","wastebasket":"🗑","watch":"⌚","water_buffalo":"🐃","water_closet":"🚾","water_polo":"🤽","water_polo_tone1":"🤽🏻","water_polo_tone2":"🤽🏼","water_polo_tone3":"🤽🏽","water_polo_tone4":"🤽🏾","water_polo_tone5":"🤽🏿","water_wave":"🌊","watermelon":"🍉","watery_eyes":"🥹","wave":"👋","wave_tone1":"👋🏻","wave_tone2":"👋🏼","wave_tone3":"👋🏽","wave_tone4":"👋🏾","wave_tone5":"👋🏿","waving_hand":"👋","waving_hand_tone1":"👋🏻","waving_hand_tone2":"👋🏼","waving_hand_tone3":"👋🏽","waving_hand_tone4":"👋🏾","waving_hand_tone5":"👋🏿","wavy_dash":"〰","waxing_crescent_moon":"🌒","waxing_gibbous_moon":"🌔","wc":"🚾","weary":"😩","weary_cat":"🙀","weary_face":"😩","wedding":"💒","weight_lifter":"🏋","weight_lifter_tone1":"🏋🏻","weight_lifter_tone2":"🏋🏼","weight_lifter_tone3":"🏋🏽","weight_lifter_tone4":"🏋🏾","weight_lifter_tone5":"🏋🏿","weight_lifting":"🏋","weight_lifting_man":"🏋️‍♂️","weight_lifting_tone1":"🏋🏻","weight_lifting_tone2":"🏋🏼","weight_lifting_tone3":"🏋🏽","weight_lifting_tone4":"🏋🏾","weight_lifting_tone5":"🏋🏿","weight_lifting_woman":"🏋️‍♀️","western_sahara":"🇪🇭","whale":"🐳","whale2":"🐋","wheel":"🛞","wheel_of_dharma":"☸","wheelchai":"♿️","wheelchair":"♿","whisky":"🥃","white_cane":"🦯","white_check_mar":"✅","white_check_mark":"✅","white_circle":"⚪","white_exclamation":"❕","white_flag":"🏳","white_flower":"💮","white_frowning_face":"☹","white_hair":"🦳","white_haired":"🧑‍🦳","white_haired_man":"👨‍🦳","white_haired_tone1":"🧑🏻‍🦳","white_haired_tone2":"🧑🏼‍🦳","white_haired_tone3":"🧑🏽‍🦳","white_haired_tone4":"🧑🏾‍🦳","white_haired_tone5":"🧑🏿‍🦳","white_haired_woman":"👩‍🦳","white_heart":"🤍","white_large_square":"⬜","white_medium_small_square":"◽","white_medium_square":"◻","white_question":"❔","white_small_square":"▫","white_square_button":"🔳","wilted_flower":"🥀","wind_blowing_face":"🌬","wind_chime":"🎐","wind_face":"🌬","window":"🪟","wine_glass":"🍷","wink":"😉","winking_face":"😉","wolf":"🐺","wolf_face":"🐺","woman":"👩","woman_artist":"👩‍🎨","woman_artist_tone1":"👩🏻‍🎨","woman_artist_tone2":"👩🏼‍🎨","woman_artist_tone3":"👩🏽‍🎨","woman_artist_tone4":"👩🏾‍🎨","woman_artist_tone5":"👩🏿‍🎨","woman_astronaut":"👩‍🚀","woman_astronaut_tone1":"👩🏻‍🚀","woman_astronaut_tone2":"👩🏼‍🚀","woman_astronaut_tone3":"👩🏽‍🚀","woman_astronaut_tone4":"👩🏾‍🚀","woman_astronaut_tone5":"👩🏿‍🚀","woman_bald":"👩‍🦲","woman_bald_tone1":"👩🏻‍🦲","woman_bald_tone2":"👩🏼‍🦲","woman_bald_tone3":"👩🏽‍🦲","woman_bald_tone4":"👩🏾‍🦲","woman_bald_tone5":"👩🏿‍🦲","woman_beard":"🧔‍♀️","woman_bearded":"🧔‍♀️","woman_bearded_tone1":"🧔🏻‍♀️","woman_bearded_tone2":"🧔🏼‍♀️","woman_bearded_tone3":"🧔🏽‍♀️","woman_bearded_tone4":"🧔🏾‍♀️","woman_bearded_tone5":"🧔🏿‍♀️","woman_biking":"🚴‍♀️","woman_biking_tone1":"🚴🏻‍♀️","woman_biking_tone2":"🚴🏼‍♀️","woman_biking_tone3":"🚴🏽‍♀️","woman_biking_tone4":"🚴🏾‍♀️","woman_biking_tone5":"🚴🏿‍♀️","woman_blond_haired":"👱‍♀️","woman_blond_haired_tone1":"👱🏻‍♀️","woman_blond_haired_tone2":"👱🏼‍♀️","woman_blond_haired_tone3":"👱🏽‍♀️","woman_blond_haired_tone4":"👱🏾‍♀️","woman_blond_haired_tone5":"👱🏿‍♀️","woman_bouncing_ball":"⛹️‍♀️","woman_bouncing_ball_tone1":"⛹🏻‍♀️","woman_bouncing_ball_tone2":"⛹🏼‍♀️","woman_bouncing_ball_tone3":"⛹🏽‍♀️","woman_bouncing_ball_tone4":"⛹🏾‍♀️","woman_bouncing_ball_tone5":"⛹🏿‍♀️","woman_bowing":"🙇‍♀️","woman_bowing_tone1":"🙇🏻‍♀️","woman_bowing_tone2":"🙇🏼‍♀️","woman_bowing_tone3":"🙇🏽‍♀️","woman_bowing_tone4":"🙇🏾‍♀️","woman_bowing_tone5":"🙇🏿‍♀️","woman_cartwheeling":"🤸‍♀️","woman_cartwheeling_tone1":"🤸🏻‍♀️","woman_cartwheeling_tone2":"🤸🏼‍♀️","woman_cartwheeling_tone3":"🤸🏽‍♀️","woman_cartwheeling_tone4":"🤸🏾‍♀️","woman_cartwheeling_tone5":"🤸🏿‍♀️","woman_climbing":"🧗‍♀️","woman_climbing_tone1":"🧗🏻‍♀️","woman_climbing_tone2":"🧗🏼‍♀️","woman_climbing_tone3":"🧗🏽‍♀️","woman_climbing_tone4":"🧗🏾‍♀️","woman_climbing_tone5":"🧗🏿‍♀️","woman_construction_worker":"👷‍♀️","woman_construction_worker_tone1":"👷🏻‍♀️","woman_construction_worker_tone2":"👷🏼‍♀️","woman_construction_worker_tone3":"👷🏽‍♀️","woman_construction_worker_tone4":"👷🏾‍♀️","woman_construction_worker_tone5":"👷🏿‍♀️","woman_cook":"👩‍🍳","woman_cook_tone1":"👩🏻‍🍳","woman_cook_tone2":"👩🏼‍🍳","woman_cook_tone3":"👩🏽‍🍳","woman_cook_tone4":"👩🏾‍🍳","woman_cook_tone5":"👩🏿‍🍳","woman_curly_haired":"👩‍🦱","woman_curly_haired_tone1":"👩🏻‍🦱","woman_curly_haired_tone2":"👩🏼‍🦱","woman_curly_haired_tone3":"👩🏽‍🦱","woman_curly_haired_tone4":"👩🏾‍🦱","woman_curly_haired_tone5":"👩🏿‍🦱","woman_dancing":"💃","woman_dancing_tone1":"💃🏻","woman_dancing_tone2":"💃🏼","woman_dancing_tone3":"💃🏽","woman_dancing_tone4":"💃🏾","woman_dancing_tone5":"💃🏿","woman_detective":"🕵️‍♀️","woman_detective_tone1":"🕵🏻‍♀️","woman_detective_tone2":"🕵🏼‍♀️","woman_detective_tone3":"🕵🏽‍♀️","woman_detective_tone4":"🕵🏾‍♀️","woman_detective_tone5":"🕵🏿‍♀️","woman_elf":"🧝‍♀️","woman_elf_tone1":"🧝🏻‍♀️","woman_elf_tone2":"🧝🏼‍♀️","woman_elf_tone3":"🧝🏽‍♀️","woman_elf_tone4":"🧝🏾‍♀️","woman_elf_tone5":"🧝🏿‍♀️","woman_facepalming":"🤦‍♀️","woman_facepalming_tone1":"🤦🏻‍♀️","woman_facepalming_tone2":"🤦🏼‍♀️","woman_facepalming_tone3":"🤦🏽‍♀️","woman_facepalming_tone4":"🤦🏾‍♀️","woman_facepalming_tone5":"🤦🏿‍♀️","woman_factory_worker":"👩‍🏭","woman_factory_worker_tone1":"👩🏻‍🏭","woman_factory_worker_tone2":"👩🏼‍🏭","woman_factory_worker_tone3":"👩🏽‍🏭","woman_factory_worker_tone4":"👩🏾‍🏭","woman_factory_worker_tone5":"👩🏿‍🏭","woman_fairy":"🧚‍♀️","woman_fairy_tone1":"🧚🏻‍♀️","woman_fairy_tone2":"🧚🏼‍♀️","woman_fairy_tone3":"🧚🏽‍♀️","woman_fairy_tone4":"🧚🏾‍♀️","woman_fairy_tone5":"🧚🏿‍♀️","woman_farmer":"👩‍🌾","woman_farmer_tone1":"👩🏻‍🌾","woman_farmer_tone2":"👩🏼‍🌾","woman_farmer_tone3":"👩🏽‍🌾","woman_farmer_tone4":"👩🏾‍🌾","woman_farmer_tone5":"👩🏿‍🌾","woman_feeding_baby":"👩‍🍼","woman_feeding_baby_tone1":"👩🏻‍🍼","woman_feeding_baby_tone2":"👩🏼‍🍼","woman_feeding_baby_tone3":"👩🏽‍🍼","woman_feeding_baby_tone4":"👩🏾‍🍼","woman_feeding_baby_tone5":"👩🏿‍🍼","woman_firefighter":"👩‍🚒","woman_firefighter_tone1":"👩🏻‍🚒","woman_firefighter_tone2":"👩🏼‍🚒","woman_firefighter_tone3":"👩🏽‍🚒","woman_firefighter_tone4":"👩🏾‍🚒","woman_firefighter_tone5":"👩🏿‍🚒","woman_frowning":"🙍‍♀️","woman_frowning_tone1":"🙍🏻‍♀️","woman_frowning_tone2":"🙍🏼‍♀️","woman_frowning_tone3":"🙍🏽‍♀️","woman_frowning_tone4":"🙍🏾‍♀️","woman_frowning_tone5":"🙍🏿‍♀️","woman_genie":"🧞‍♀️","woman_gesturing_no":"🙅‍♀️","woman_gesturing_no_tone1":"🙅🏻‍♀️","woman_gesturing_no_tone2":"🙅🏼‍♀️","woman_gesturing_no_tone3":"🙅🏽‍♀️","woman_gesturing_no_tone4":"🙅🏾‍♀️","woman_gesturing_no_tone5":"🙅🏿‍♀️","woman_gesturing_ok":"🙆‍♀️","woman_gesturing_ok_tone1":"🙆🏻‍♀️","woman_gesturing_ok_tone2":"🙆🏼‍♀️","woman_gesturing_ok_tone3":"🙆🏽‍♀️","woman_gesturing_ok_tone4":"🙆🏾‍♀️","woman_gesturing_ok_tone5":"🙆🏿‍♀️","woman_getting_haircut":"💇‍♀️","woman_getting_haircut_tone1":"💇🏻‍♀️","woman_getting_haircut_tone2":"💇🏼‍♀️","woman_getting_haircut_tone3":"💇🏽‍♀️","woman_getting_haircut_tone4":"💇🏾‍♀️","woman_getting_haircut_tone5":"💇🏿‍♀️","woman_getting_massage":"💆‍♀️","woman_getting_massage_tone1":"💆🏻‍♀️","woman_getting_massage_tone2":"💆🏼‍♀️","woman_getting_massage_tone3":"💆🏽‍♀️","woman_getting_massage_tone4":"💆🏾‍♀️","woman_getting_massage_tone5":"💆🏿‍♀️","woman_golfing":"🏌️‍♀️","woman_golfing_tone1":"🏌🏻‍♀️","woman_golfing_tone2":"🏌🏼‍♀️","woman_golfing_tone3":"🏌🏽‍♀️","woman_golfing_tone4":"🏌🏾‍♀️","woman_golfing_tone5":"🏌🏿‍♀️","woman_guard":"💂‍♀️","woman_guard_tone1":"💂🏻‍♀️","woman_guard_tone2":"💂🏼‍♀️","woman_guard_tone3":"💂🏽‍♀️","woman_guard_tone4":"💂🏾‍♀️","woman_guard_tone5":"💂🏿‍♀️","woman_health_worker":"👩‍⚕️","woman_health_worker_tone1":"👩🏻‍⚕️","woman_health_worker_tone2":"👩🏼‍⚕️","woman_health_worker_tone3":"👩🏽‍⚕️","woman_health_worker_tone4":"👩🏾‍⚕️","woman_health_worker_tone5":"👩🏿‍⚕️","woman_in_lotus_position":"🧘‍♀️","woman_in_lotus_position_tone1":"🧘🏻‍♀️","woman_in_lotus_position_tone2":"🧘🏼‍♀️","woman_in_lotus_position_tone3":"🧘🏽‍♀️","woman_in_lotus_position_tone4":"🧘🏾‍♀️","woman_in_lotus_position_tone5":"🧘🏿‍♀️","woman_in_manual_wheelchair":"👩‍🦽","woman_in_manual_wheelchair_tone1":"👩🏻‍🦽","woman_in_manual_wheelchair_tone2":"👩🏼‍🦽","woman_in_manual_wheelchair_tone3":"👩🏽‍🦽","woman_in_manual_wheelchair_tone4":"👩🏾‍🦽","woman_in_manual_wheelchair_tone5":"👩🏿‍🦽","woman_in_motorized_wheelchair":"👩‍🦼","woman_in_motorized_wheelchair_tone1":"👩🏻‍🦼","woman_in_motorized_wheelchair_tone2":"👩🏼‍🦼","woman_in_motorized_wheelchair_tone3":"👩🏽‍🦼","woman_in_motorized_wheelchair_tone4":"👩🏾‍🦼","woman_in_motorized_wheelchair_tone5":"👩🏿‍🦼","woman_in_steamy_room":"🧖‍♀️","woman_in_steamy_room_tone1":"🧖🏻‍♀️","woman_in_steamy_room_tone2":"🧖🏼‍♀️","woman_in_steamy_room_tone3":"🧖🏽‍♀️","woman_in_steamy_room_tone4":"🧖🏾‍♀️","woman_in_steamy_room_tone5":"🧖🏿‍♀️","woman_in_tuxedo":"🤵‍♀️","woman_in_tuxedo_tone1":"🤵🏻‍♀️","woman_in_tuxedo_tone2":"🤵🏼‍♀️","woman_in_tuxedo_tone3":"🤵🏽‍♀️","woman_in_tuxedo_tone4":"🤵🏾‍♀️","woman_in_tuxedo_tone5":"🤵🏿‍♀️","woman_judge":"👩‍⚖️","woman_judge_tone1":"👩🏻‍⚖️","woman_judge_tone2":"👩🏼‍⚖️","woman_judge_tone3":"👩🏽‍⚖️","woman_judge_tone4":"👩🏾‍⚖️","woman_judge_tone5":"👩🏿‍⚖️","woman_juggling":"🤹‍♀️","woman_juggling_tone1":"🤹🏻‍♀️","woman_juggling_tone2":"🤹🏼‍♀️","woman_juggling_tone3":"🤹🏽‍♀️","woman_juggling_tone4":"🤹🏾‍♀️","woman_juggling_tone5":"🤹🏿‍♀️","woman_kneeling":"🧎‍♀️","woman_kneeling_tone1":"🧎🏻‍♀️","woman_kneeling_tone2":"🧎🏼‍♀️","woman_kneeling_tone3":"🧎🏽‍♀️","woman_kneeling_tone4":"🧎🏾‍♀️","woman_kneeling_tone5":"🧎🏿‍♀️","woman_lifting_weights":"🏋️‍♀️","woman_lifting_weights_tone1":"🏋🏻‍♀️","woman_lifting_weights_tone2":"🏋🏼‍♀️","woman_lifting_weights_tone3":"🏋🏽‍♀️","woman_lifting_weights_tone4":"🏋🏾‍♀️","woman_lifting_weights_tone5":"🏋🏿‍♀️","woman_mage":"🧙‍♀️","woman_mage_tone1":"🧙🏻‍♀️","woman_mage_tone2":"🧙🏼‍♀️","woman_mage_tone3":"🧙🏽‍♀️","woman_mage_tone4":"🧙🏾‍♀️","woman_mage_tone5":"🧙🏿‍♀️","woman_mechanic":"👩‍🔧","woman_mechanic_tone1":"👩🏻‍🔧","woman_mechanic_tone2":"👩🏼‍🔧","woman_mechanic_tone3":"👩🏽‍🔧","woman_mechanic_tone4":"👩🏾‍🔧","woman_mechanic_tone5":"👩🏿‍🔧","woman_mountain_biking":"🚵‍♀️","woman_mountain_biking_tone1":"🚵🏻‍♀️","woman_mountain_biking_tone2":"🚵🏼‍♀️","woman_mountain_biking_tone3":"🚵🏽‍♀️","woman_mountain_biking_tone4":"🚵🏾‍♀️","woman_mountain_biking_tone5":"🚵🏿‍♀️","woman_office_worker":"👩‍💼","woman_office_worker_tone1":"👩🏻‍💼","woman_office_worker_tone2":"👩🏼‍💼","woman_office_worker_tone3":"👩🏽‍💼","woman_office_worker_tone4":"👩🏾‍💼","woman_office_worker_tone5":"👩🏿‍💼","woman_pilot":"👩‍✈️","woman_pilot_tone1":"👩🏻‍✈️","woman_pilot_tone2":"👩🏼‍✈️","woman_pilot_tone3":"👩🏽‍✈️","woman_pilot_tone4":"👩🏾‍✈️","woman_pilot_tone5":"👩🏿‍✈️","woman_playing_handball":"🤾‍♀️","woman_playing_handball_tone1":"🤾🏻‍♀️","woman_playing_handball_tone2":"🤾🏼‍♀️","woman_playing_handball_tone3":"🤾🏽‍♀️","woman_playing_handball_tone4":"🤾🏾‍♀️","woman_playing_handball_tone5":"🤾🏿‍♀️","woman_playing_water_polo":"🤽‍♀️","woman_playing_water_polo_tone1":"🤽🏻‍♀️","woman_playing_water_polo_tone2":"🤽🏼‍♀️","woman_playing_water_polo_tone3":"🤽🏽‍♀️","woman_playing_water_polo_tone4":"🤽🏾‍♀️","woman_playing_water_polo_tone5":"🤽🏿‍♀️","woman_police_officer":"👮‍♀️","woman_police_officer_tone1":"👮🏻‍♀️","woman_police_officer_tone2":"👮🏼‍♀️","woman_police_officer_tone3":"👮🏽‍♀️","woman_police_officer_tone4":"👮🏾‍♀️","woman_police_officer_tone5":"👮🏿‍♀️","woman_pouting":"🙎‍♀️","woman_pouting_tone1":"🙎🏻‍♀️","woman_pouting_tone2":"🙎🏼‍♀️","woman_pouting_tone3":"🙎🏽‍♀️","woman_pouting_tone4":"🙎🏾‍♀️","woman_pouting_tone5":"🙎🏿‍♀️","woman_raising_hand":"🙋‍♀️","woman_raising_hand_tone1":"🙋🏻‍♀️","woman_raising_hand_tone2":"🙋🏼‍♀️","woman_raising_hand_tone3":"🙋🏽‍♀️","woman_raising_hand_tone4":"🙋🏾‍♀️","woman_raising_hand_tone5":"🙋🏿‍♀️","woman_red_haired":"👩‍🦰","woman_red_haired_tone1":"👩🏻‍🦰","woman_red_haired_tone2":"👩🏼‍🦰","woman_red_haired_tone3":"👩🏽‍🦰","woman_red_haired_tone4":"👩🏾‍🦰","woman_red_haired_tone5":"👩🏿‍🦰","woman_rowing_boat":"🚣‍♀️","woman_rowing_boat_tone1":"🚣🏻‍♀️","woman_rowing_boat_tone2":"🚣🏼‍♀️","woman_rowing_boat_tone3":"🚣🏽‍♀️","woman_rowing_boat_tone4":"🚣🏾‍♀️","woman_rowing_boat_tone5":"🚣🏿‍♀️","woman_running":"🏃‍♀️","woman_running_tone1":"🏃🏻‍♀️","woman_running_tone2":"🏃🏼‍♀️","woman_running_tone3":"🏃🏽‍♀️","woman_running_tone4":"🏃🏾‍♀️","woman_running_tone5":"🏃🏿‍♀️","woman_scientist":"👩‍🔬","woman_scientist_tone1":"👩🏻‍🔬","woman_scientist_tone2":"👩🏼‍🔬","woman_scientist_tone3":"👩🏽‍🔬","woman_scientist_tone4":"👩🏾‍🔬","woman_scientist_tone5":"👩🏿‍🔬","woman_shrugging":"🤷‍♀️","woman_shrugging_tone1":"🤷🏻‍♀️","woman_shrugging_tone2":"🤷🏼‍♀️","woman_shrugging_tone3":"🤷🏽‍♀️","woman_shrugging_tone4":"🤷🏾‍♀️","woman_shrugging_tone5":"🤷🏿‍♀️","woman_singer":"👩‍🎤","woman_singer_tone1":"👩🏻‍🎤","woman_singer_tone2":"👩🏼‍🎤","woman_singer_tone3":"👩🏽‍🎤","woman_singer_tone4":"👩🏾‍🎤","woman_singer_tone5":"👩🏿‍🎤","woman_standing":"🧍‍♀️","woman_standing_tone1":"🧍🏻‍♀️","woman_standing_tone2":"🧍🏼‍♀️","woman_standing_tone3":"🧍🏽‍♀️","woman_standing_tone4":"🧍🏾‍♀️","woman_standing_tone5":"🧍🏿‍♀️","woman_student":"👩‍🎓","woman_student_tone1":"👩🏻‍🎓","woman_student_tone2":"👩🏼‍🎓","woman_student_tone3":"👩🏽‍🎓","woman_student_tone4":"👩🏾‍🎓","woman_student_tone5":"👩🏿‍🎓","woman_superhero":"🦸‍♀️","woman_superhero_tone1":"🦸🏻‍♀️","woman_superhero_tone2":"🦸🏼‍♀️","woman_superhero_tone3":"🦸🏽‍♀️","woman_superhero_tone4":"🦸🏾‍♀️","woman_superhero_tone5":"🦸🏿‍♀️","woman_supervillain":"🦹‍♀️","woman_supervillain_tone1":"🦹🏻‍♀️","woman_supervillain_tone2":"🦹🏼‍♀️","woman_supervillain_tone3":"🦹🏽‍♀️","woman_supervillain_tone4":"🦹🏾‍♀️","woman_supervillain_tone5":"🦹🏿‍♀️","woman_surfing":"🏄‍♀️","woman_surfing_tone1":"🏄🏻‍♀️","woman_surfing_tone2":"🏄🏼‍♀️","woman_surfing_tone3":"🏄🏽‍♀️","woman_surfing_tone4":"🏄🏾‍♀️","woman_surfing_tone5":"🏄🏿‍♀️","woman_swimming":"🏊‍♀️","woman_swimming_tone1":"🏊🏻‍♀️","woman_swimming_tone2":"🏊🏼‍♀️","woman_swimming_tone3":"🏊🏽‍♀️","woman_swimming_tone4":"🏊🏾‍♀️","woman_swimming_tone5":"🏊🏿‍♀️","woman_teacher":"👩‍🏫","woman_teacher_tone1":"👩🏻‍🏫","woman_teacher_tone2":"👩🏼‍🏫","woman_teacher_tone3":"👩🏽‍🏫","woman_teacher_tone4":"👩🏾‍🏫","woman_teacher_tone5":"👩🏿‍🏫","woman_technologist":"👩‍💻","woman_technologist_tone1":"👩🏻‍💻","woman_technologist_tone2":"👩🏼‍💻","woman_technologist_tone3":"👩🏽‍💻","woman_technologist_tone4":"👩🏾‍💻","woman_technologist_tone5":"👩🏿‍💻","woman_tipping_hand":"💁‍♀️","woman_tipping_hand_tone1":"💁🏻‍♀️","woman_tipping_hand_tone2":"💁🏼‍♀️","woman_tipping_hand_tone3":"💁🏽‍♀️","woman_tipping_hand_tone4":"💁🏾‍♀️","woman_tipping_hand_tone5":"💁🏿‍♀️","woman_tone1":"👩🏻","woman_tone2":"👩🏼","woman_tone3":"👩🏽","woman_tone4":"👩🏾","woman_tone5":"👩🏿","woman_vampire":"🧛‍♀️","woman_vampire_tone1":"🧛🏻‍♀️","woman_vampire_tone2":"🧛🏼‍♀️","woman_vampire_tone3":"🧛🏽‍♀️","woman_vampire_tone4":"🧛🏾‍♀️","woman_vampire_tone5":"🧛🏿‍♀️","woman_walking":"🚶‍♀️","woman_walking_tone1":"🚶🏻‍♀️","woman_walking_tone2":"🚶🏼‍♀️","woman_walking_tone3":"🚶🏽‍♀️","woman_walking_tone4":"🚶🏾‍♀️","woman_walking_tone5":"🚶🏿‍♀️","woman_wearing_turban":"👳‍♀️","woman_wearing_turban_tone1":"👳🏻‍♀️","woman_wearing_turban_tone2":"👳🏼‍♀️","woman_wearing_turban_tone3":"👳🏽‍♀️","woman_wearing_turban_tone4":"👳🏾‍♀️","woman_wearing_turban_tone5":"👳🏿‍♀️","woman_white_haired":"👩‍🦳","woman_white_haired_tone1":"👩🏻‍🦳","woman_white_haired_tone2":"👩🏼‍🦳","woman_white_haired_tone3":"👩🏽‍🦳","woman_white_haired_tone4":"👩🏾‍🦳","woman_white_haired_tone5":"👩🏿‍🦳","woman_with_headscarf":"🧕","woman_with_headscarf_tone1":"🧕🏻","woman_with_headscarf_tone2":"🧕🏼","woman_with_headscarf_tone3":"🧕🏽","woman_with_headscarf_tone4":"🧕🏾","woman_with_headscarf_tone5":"🧕🏿","woman_with_probing_cane":"👩‍🦯","woman_with_probing_cane_tone1":"👩🏻‍🦯","woman_with_probing_cane_tone2":"👩🏼‍🦯","woman_with_probing_cane_tone3":"👩🏽‍🦯","woman_with_probing_cane_tone4":"👩🏾‍🦯","woman_with_probing_cane_tone5":"👩🏿‍🦯","woman_with_turban":"👳‍♀️","woman_with_veil":"👰‍♀️","woman_with_veil_tone1":"👰🏻‍♀️","woman_with_veil_tone2":"👰🏼‍♀️","woman_with_veil_tone3":"👰🏽‍♀️","woman_with_veil_tone4":"👰🏾‍♀️","woman_with_veil_tone5":"👰🏿‍♀️","woman_with_white_cane":"👩‍🦯","woman_with_white_cane_tone1":"👩🏻‍🦯","woman_with_white_cane_tone2":"👩🏼‍🦯","woman_with_white_cane_tone3":"👩🏽‍🦯","woman_with_white_cane_tone4":"👩🏾‍🦯","woman_with_white_cane_tone5":"👩🏿‍🦯","woman_zombie":"🧟‍♀️","womans_clothes":"👚","womans_flat_shoe":"🥿","womans_hat":"👒","women_with_bunny_ears_partying":"👯‍♀️","women_wrestling":"🤼‍♀️","womens":"🚺","wood":"🪵","woozy":"🥴","woozy_face":"🥴","world_map":"🗺","worm":"🪱","worried":"😟","worried_face":"😟","wrenc":"🔧","wrench":"🔧","wrestlers":"🤼","wrestling":"🤼","writing_hand":"✍","writing_hand_tone1":"✍🏻","writing_hand_tone2":"✍🏼","writing_hand_tone3":"✍🏽","writing_hand_tone4":"✍🏾","writing_hand_tone5":"✍🏿","wry_smile_cat":"😼","wtf":"🤔","x":"❌","x-ray":"🩻","xray":"🩻","yarn":"🧶","yawn":"🥱","yawning":"🥱","yawning_face":"🥱","yellow_circle":"🟡","yellow_heart":"💛","yellow_square":"🟨","yemen":"🇾🇪","yen":"💴","yes":"👍","yes_tone1":"👍🏻","yes_tone2":"👍🏼","yes_tone3":"👍🏽","yes_tone4":"👍🏾","yes_tone5":"👍🏿","yin_yang":"☯","yo_yo":"🪀","yum":"😋","za":"⚡️","zambia":"🇿🇲","zany":"🤪","zany_face":"🤪","zap":"⚡","zebra":"🦓","zero":"0️⃣","zimbabwe":"🇿🇼","zipper_mouth":"🤐","zipper_mouth_face":"🤐","zombie":"🧟","zombie_man":"🧟‍♂️","zombie_woman":"🧟‍♀️","zzz":"💤"}'),c=/:([-+_a-z0-9]+):/g;function h(e){return e.replace(c,((e,t)=>l[t]||e))}var u=i(4575),d=(e=>(e.Stashes="stashes",e.Timeline="timeline",e.Worktrees="worktrees",e))(d||{}),p=(e=>(e.Timeline="timeline",e.Worktrees="worktrees",e.Graph="graph",e.Focus="focus",e))(p||{});class GitSearchError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,GitSearchError)}}var m=(e=>(e[e.WorkingChanges=1]="WorkingChanges",e))(m||{});class StashApplyError extends Error{constructor(e,t){let i,n;null==e?i="Unable to apply stash":"string"==typeof e?(i=e,n=void 0):(n=e,i="Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"),super(i),this.original=t,this.reason=n,Error.captureStackTrace?.(this,StashApplyError)}static is(e,t){return e instanceof StashApplyError&&(null==t||e.reason===t)}}var g=(e=>(e[e.AlreadyCheckedOut=1]="AlreadyCheckedOut",e[e.AlreadyExists=2]="AlreadyExists",e))(g||{});class WorktreeCreateError extends Error{constructor(e,t){let i,n;if(null==e)i="Unable to create worktree";else if("string"==typeof e)i=e,n=void 0;else switch(n=e,n){case 1:i="Unable to create worktree because it is already checked out";break;case 2:i="Unable to create worktree because it already exists"}super(i),this.original=t,this.reason=n,Error.captureStackTrace?.(this,WorktreeCreateError)}static is(e,t){return e instanceof WorktreeCreateError&&(null==t||e.reason===t)}}var f=(e=>(e[e.HasChanges=1]="HasChanges",e[e.MainWorkingTree=2]="MainWorkingTree",e))(f||{});class WorktreeDeleteError extends Error{constructor(e,t){let i,n;if(null==e)i="Unable to delete worktree";else if("string"==typeof e)i=e,n=void 0;else switch(n=e,n){case 1:i="Unable to delete worktree because there are uncommitted changes";break;case 2:i="Unable to delete worktree because it is a main working tree"}super(i),this.original=t,this.reason=n,Error.captureStackTrace?.(this,WorktreeDeleteError)}static is(e,t){return e instanceof WorktreeDeleteError&&(null==t||e.reason===t)}}var w=i(2380),_=i(7462),v=i(7840),y=i(6450),b=i(8388),C=i(7512),S=i(4488),k=i(3620),P=Object.defineProperty,R=Object.getOwnPropertyDescriptor;const D=class{constructor(e,t,i,n,o,r=!1,s,a,l,c){this.repoPath=e,this.name=t,this.email=i,this.count=n,this.date=o,this.current=r,this.stats=s,this.username=a,this.avatarUrl=l,this.id=c}static is(e){return e instanceof D}static sort(e,t){switch((t={current:!0,orderBy:r.DN.get("sortContributorsBy"),...t}).orderBy){case r.iP.CountAsc:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||e.count-t.count||(e.date?.getTime()??0)-(t.date?.getTime()??0)));case r.iP.DateDesc:return e.sort(((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(i.date?.getTime()??0)-(e.date?.getTime()??0)||i.count-e.count));case r.iP.DateAsc:return e.sort(((e,i)=>(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.date?.getTime()??0)-(i.date?.getTime()??0)||i.count-e.count));case r.iP.NameAsc:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,k.dm)(e.name??e.username,t.name??t.username)));case r.iP.NameDesc:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||(0,k.dm)(t.name??t.username,e.name??e.username)));case r.iP.CountDesc:default:return e.sort(((e,t)=>(e.current?-1:1)-(t.current?-1:1)||t.count-e.count||(t.date?.getTime()??0)-(e.date?.getTime()??0)))}}get label(){return this.name??this.username}formatDate(e){return null!=this.date?(0,C.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(e){return null!=this.date?(0,C.Zh)(this.date,e):""}getAvatarUri(e){return null!=this.avatarUrl?n.Uri.parse(this.avatarUrl):(0,b.oP)(this.email,void 0,e)}getCoauthor(){return`${this.name}${this.email?` <${this.email}>`:""}`}};let $=D;((e,t,i,n)=>{for(var o,r=n>1?void 0:n?R(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&P(t,i,r)})([(0,S.H)((e=>e??"MMMM Do, YYYY h:mma"))],$.prototype,"formatDate",1);var T=i(7881),F=(e=>(e.Commit="commit-node",e.MergeCommit="merge-node",e.Stash="stash-node",e.Working="work-dir-changes",e.Conflict="merge-conflict-node",e.Rebase="unsupported-rebase-warning-node",e))(F||{}),x=i(4321),O=i(3050),A=i(1529),I=i(9502);var E=i(7552);const N=new Set(["","=:","message:","@:","author:","#:","commit:","?:","file:","~:","change:"]);function U(e){return`${"query"in e?e.query:e.pattern}|${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}`}const L=new Map([["","message:"],["=:","message:"],["message:","message:"],["@:","author:"],["author:","author:"],["#:","commit:"],["commit:","commit:"],["?:","file:"],["file:","file:"],["~:","change:"],["change:","change:"]]),M=/(?:(?<op>=:|message:|@:|author:|#:|commit:|\?:|file:|~:|change:)\s?(?<value>".+?"|\S+}?))|(?<text>\S+)(?!(?:=|message|@|author|#|commit|\?|file|~|change):)/gi;function W(e){const t=new Map;let i,n,o,r;do{if(r=M.exec(e.query),null==r?.groups)break;if(i=L.get(r.groups.op),({value:n,text:o}=r.groups),o&&(i="@me"===o?"author:":x.pk.isSha(o)?"commit:":"message:",n=o),i&&n){const e=t.get(i);null==e?t.set(i,[n]):e.push(n)}}while(null!=r);return t}var B=i(1277),G=i(6446),V=i(5432),H=i(4241),q=i(3105),j=i(3700),Y=i(7469);function Q(e){return JSON.stringify(e)}var z=i(2185),K=i(4486),J=i(2509);class TrackedDocument{constructor(e,t,i,o){this.document=e,this.dirty=t,this._eventDelegates=i,this.container=o,this._onDidBlameStateChange=new n.EventEmitter,this._disposed=!1,this.initializing=!0,this._forceDirtyStateChangeOnNextDocumentChange=!1,this._hasRemotes=!1,this._isDirtyIdle=!1,this._isTracked=!1,this._blameFailed=!1,this._requiresUpdate=!0}static async create(e,t,i,n){const o=new TrackedDocument(e,t,i,n);return await o.initialize(),o}get onDidBlameStateChange(){return this._onDidBlameStateChange.event}dispose(){this.state=void 0,this._disposed=!0,this._disposable?.dispose()}async initialize(){const e=this.document.uri;this._uri=await _.YY.fromUri(e),this._disposed||await this.update(),this.initializing=!1}get forceDirtyStateChangeOnNextDocumentChange(){return this._forceDirtyStateChangeOnNextDocumentChange}get hasRemotes(){return this._hasRemotes}get isBlameable(){return!this._blameFailed&&this._isTracked}get isDirtyIdle(){return this._isDirtyIdle}set isDirtyIdle(e){this._isDirtyIdle=e}get isRevision(){return null!=this._uri&&(Boolean(this._uri.sha)&&this._uri.sha!==x.pk.deletedOrMissing)}get isTracked(){return this._isTracked}get lineCount(){return this.document.lineCount}get uri(){return this._uri}async activate(){this._requiresUpdate&&await this.update(),(0,a.v)(s.zf.ActiveFileStatus,this.getStatus())}is(e){return e===this.document}reset(e){this._requiresUpdate=!0,this._blameFailed=!1,this._isDirtyIdle=!1,null!=this.state&&(this.state=void 0,B.Yd.log(`Reset state for '${this.document.uri.toString(!0)}', reason=${e}`)),"repository"===e&&(0,J.$S)(this.document)&&(null==this._updateDebounced&&(this._updateDebounced=(0,K.Ds)(this.update.bind(this),250)),this._updateDebounced())}setBlameFailure(){const e=this.isBlameable;this._blameFailed=!0,e&&(0,J.$S)(this.document)&&this.update({forceBlameChange:!0})}resetForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!1}setForceDirtyStateChangeOnNextDocumentChange(){this._forceDirtyStateChangeOnNextDocumentChange=!0}async update({forceBlameChange:e}={}){if(this._requiresUpdate=!1,this._disposed||null==this._uri)return this._hasRemotes=!1,void(this._isTracked=!1);this._isDirtyIdle=!1;const t=(0,J.aW)(this.document),i=e?void 0:this.isBlameable,n=this.container.git.getRepository(this._uri);if(null==n?(this._isTracked=!1,this._hasRemotes=!1):[this._isTracked,this._hasRemotes]=await Promise.all([this.container.git.isTracked(this._uri),n.hasRemotes()]),null!=t){const e=this.isBlameable;if((0,a.v)(s.zf.ActiveFileStatus,this.getStatus()),!this.initializing&&i!==e){const i={editor:t,document:this,blameable:e};this._onDidBlameStateChange.fire(i),this._eventDelegates.onDidBlameStateChange(i)}}}getStatus(){let e="";return this.isTracked&&(e+="tracked|"),this.isBlameable&&(e+="blameable|"),this.isRevision&&(e+="revision|"),this.hasRemotes&&(e+="remotes|"),e||void 0}}var X=Object.defineProperty,Z=Object.getOwnPropertyDescriptor;class DocumentTracker{constructor(e){this.container=e,this._onDidChangeBlameState=new n.EventEmitter,this._onDidChangeContent=new n.EventEmitter,this._onDidChangeDirtyState=new n.EventEmitter,this._onDidTriggerDirtyIdle=new n.EventEmitter,this._documentMap=new Map,this._disposable=n.Disposable.from((0,z.IH)(e.onReady)(this.onReady,this),r.DN.onDidChange(this.onConfigurationChanged,this),n.window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged,this),n.workspace.onDidChangeTextDocument((0,K.Ds)(this.onTextDocumentChanged,50),this),n.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),n.workspace.onDidSaveTextDocument(this.onTextDocumentSaved,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this)),this._dirtyIdleTriggerDelay=r.DN.get("advanced.blame.delayAfterEdit")}get onDidChangeBlameState(){return this._onDidChangeBlameState.event}get onDidChangeContent(){return this._onDidChangeContent.event}get onDidChangeDirtyState(){return this._onDidChangeDirtyState.event}get onDidTriggerDirtyIdle(){return this._onDidTriggerDirtyIdle.event}dispose(){this._disposable.dispose(),this.clear()}onReady(){this.onConfigurationChanged(),this.onActiveTextEditorChanged(n.window.activeTextEditor)}onActiveTextEditorChanged(e){if(null!=e&&!(0,J.PH)(e))return;if(null!=this._timer&&(clearTimeout(this._timer),this._timer=void 0),null==e)return void(this._timer=setTimeout((()=>{this._timer=void 0,(0,a.v)(s.zf.ActiveFileStatus,void 0)}),250));const t=this._documentMap.get(e.document);null==t?this.addCore(e.document):t.then((e=>e.activate()),(()=>{}))}onConfigurationChanged(e){null!=e&&(r.DN.changed(e,"blame.ignoreWhitespace")||r.DN.changed(e,"advanced.caching.enabled"))&&this.reset("config"),r.DN.changed(e,"advanced.blame.delayAfterEdit")&&(this._dirtyIdleTriggerDelay=r.DN.get("advanced.blame.delayAfterEdit"),this._dirtyIdleTriggeredDebounced=void 0)}onRepositoriesChanged(e){this.reset("repository",e.added.length?new Set(e.added.map((e=>e.path))):void 0,e.removed.length?new Set(e.removed.map((e=>e.path))):void 0)}onRepositoryChanged(e){e.changed(A.I6.Index,A.I6.Heads,A.I6.Status,A.I6.Unknown,A.du.Any)&&this.reset("repository",new Set([e.repository.path]))}async onTextDocumentChanged(e){const{scheme:t}=e.document.uri;if(!this.container.git.supportedSchemes.has(t))return;const i=await(this._documentMap.get(e.document)??this.addCore(e.document));i.reset("document");const o=e.document.isDirty,r=n.window.activeTextEditor;null!=this._dirtyIdleTriggeredDebounced&&(o?this._dirtyIdleTriggeredDebounced({editor:r,document:i}):this._dirtyIdleTriggeredDebounced.cancel()),r?.document===e.document&&this._onDidChangeContent.fire({editor:r,document:i,contentChanges:e.contentChanges}),(i.forceDirtyStateChangeOnNextDocumentChange||i.dirty!==o)&&(i.resetForceDirtyStateChangeOnNextDocumentChange(),i.dirty=o,null!=r&&r.document===e.document&&this.fireDocumentDirtyStateChanged({editor:r,document:i,dirty:i.dirty}))}onTextDocumentClosed(e){this.remove(e)}async onTextDocumentSaved(e){const t=this._documentMap.get(e);null==t?(0,J.$S)(e)&&this.addCore(e):(await t).update({forceBlameChange:!0})}async add(e){let t;if((0,_.uy)(e))try{t=await n.workspace.openTextDocument(e.documentUri())}catch(i){const o=i?.toString()??"";if(n.env.language.startsWith("en"))if(o.includes("File seems to be binary and cannot be opened as text"))t=new BinaryTextDocument(e);else{if(!(o.includes("File not found")||o.includes("Unable to read file")||o.includes("Unable to resolve non-existing file")))throw i;t=new MissingRevisionTextDocument(e)}else{if(!o.includes("cannot open"))throw i;t=new MissingRevisionTextDocument(e)}}else t=e instanceof n.Uri?await n.workspace.openTextDocument(e):e;return this.addCore(t)}async addCore(e){const t=TrackedDocument.create(e,!1,{onDidBlameStateChange:e=>this._onDidChangeBlameState.fire(e)},this.container);return this._documentMap.set(e,t),t}async clear(){for(const e of this._documentMap.values())(await e).dispose();this._documentMap.clear()}get(e){if(e instanceof n.Uri){const t=(0,J.s5)(e);if(null==t)return;e=t}return this._documentMap.get(e)}async getOrAdd(e){e instanceof n.Uri&&(e=(0,J.s5)(e)??e);return this.get(e)??this.add(e)}has(e){if(e instanceof n.Uri){const t=(0,J.s5)(e);if(null==t)return!1;e=t}return this._documentMap.has(e)}async remove(e,t){let i;null!=t&&(i=this._documentMap.get(e)),this._documentMap.delete(e),(t??await i)?.dispose()}fireDocumentDirtyStateChanged(e){if(e.dirty)return queueMicrotask((()=>{this._dirtyStateChangedDebounced?.cancel(),n.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)})),void(this._dirtyIdleTriggerDelay>0&&(null==this._dirtyIdleTriggeredDebounced&&(this._dirtyIdleTriggeredDebounced=(0,K.Ds)((e=>{this._dirtyIdleTriggeredDebounced?.pending()||(e.document.isDirtyIdle=!0,this._onDidTriggerDirtyIdle.fire(e))}),this._dirtyIdleTriggerDelay,{track:!0})),this._dirtyIdleTriggeredDebounced({editor:e.editor,document:e.document})));null==this._dirtyStateChangedDebounced&&(this._dirtyStateChangedDebounced=(0,K.Ds)((e=>{n.window.activeTextEditor===e.editor&&this._onDidChangeDirtyState.fire(e)}),250)),this._dirtyStateChangedDebounced(e)}reset(e,t,i){Promise.allSettled((0,q.UI)((0,q.hX)(this._documentMap,(([e])=>"string"==typeof e)),(async([,n])=>{const o=await n;i?.has(o.uri.repoPath)?this.remove(o.document,o):(null==t||t.has(o.uri.repoPath))&&o.reset(e)})))}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Z(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&X(t,i,r)})([(0,H.fF)({args:{1:e=>null!=e?(0,q.v_)(e,","):"",2:e=>null!=e?(0,q.v_)(e,","):""}})],DocumentTracker.prototype,"reset",1);class EmptyTextDocument{constructor(e){this.gitUri=e,this.uri=e.documentUri(),this.eol=n.EndOfLine.LF,this.fileName=this.uri.fsPath,this.isClosed=!1,this.isDirty=!1,this.isUntitled=!1,this.languageId="",this.lineCount=0,this.version=0}getText(e){throw new Error("Method not supported.")}getWordRangeAtPosition(e,t){throw new Error("Method not supported.")}lineAt(e){throw new Error("Method not supported.")}offsetAt(e){throw new Error("Method not supported.")}positionAt(e){throw new Error("Method not supported.")}save(){throw new Error("Method not supported.")}validatePosition(e){throw new Error("Method not supported.")}validateRange(e){throw new Error("Method not supported.")}}class BinaryTextDocument extends EmptyTextDocument{}class MissingRevisionTextDocument extends EmptyTextDocument{}class GitDocumentState{constructor(){this.blameCache=new Map,this.diffCache=new Map,this.logCache=new Map}clearBlame(e){null!=e?this.blameCache.delete(e):this.blameCache.clear()}clearDiff(e){null!=e?this.diffCache.delete(e):this.diffCache.clear()}clearLog(e){null!=e?this.logCache.delete(e):this.logCache.clear()}getBlame(e){return this.blameCache.get(e)}getDiff(e){return this.diffCache.get(e)}getLog(e){return this.logCache.get(e)}setBlame(e,t){null!=t?this.blameCache.set(e,t):this.blameCache.delete(e)}setDiff(e,t){null!=t?this.diffCache.set(e,t):this.diffCache.delete(e)}setLog(e,t){null!=t?this.logCache.set(e,t):this.logCache.delete(e)}}class GitDocumentTracker extends DocumentTracker{async resetCache(e,t){const i=this.get(e);if(null!=i)switch(t){case"blame":(await i).state?.clearBlame();break;case"diff":(await i).state?.clearDiff();break;case"log":(await i).state?.clearLog()}}}var ee=i(3878),te=Object.defineProperty,ie=Object.getOwnPropertyDescriptor,ne=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ie(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&te(t,i,r),r};const oe=/"/g,re=Object.freeze([]),se=Object.freeze({values:[]}),ae=Promise.resolve(void 0),le=["repo","read:user","user:email"],ce=/^[^/](?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ~^:?*[\\]+[^./]$/;class GitHubGitProvider{constructor(e){this.container=e,this.descriptor={id:w.pq.GitHub,name:"GitHub",virtual:!0},this.supportedSchemes=new Set([s.sN.Virtual,s.sN.GitHub,s.sN.PRs]),this._onDidChangeRepository=new n.EventEmitter,this._onDidCloseRepository=new n.EventEmitter,this._onDidOpenRepository=new n.EventEmitter,this._branchesCache=new Map,this._repoInfoCache=new Map,this._tagsCache=new Map,this._disposables=[],this._disposables.push(this.container.events.on("git:cache:reset",(e=>e.data.repoPath?this.resetCache(e.data.repoPath,...e.data.caches??re):this.resetCaches(...e.data.caches??re)),n.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged,this)))}get onDidChangeRepository(){return this._onDidChangeRepository.event}get onDidCloseRepository(){return this._onDidCloseRepository.event}get onDidOpenRepository(){return this._onDidOpenRepository.event}dispose(){this._disposables.forEach((e=>{e.dispose()}))}onAuthenticationSessionsChanged(e){"github"===e.provider.id&&(this._sessionPromise=void 0,this.ensureSession(!1,!0))}onRepositoryChanged(e,t){this._branchesCache.delete(e.path),this._tagsCache.delete(e.path),this._repoInfoCache.delete(e.path),this._onDidChangeRepository.fire(t)}async discoverRepositories(e){if(!this.supportedSchemes.has(e.scheme))return[];try{const{remotehub:t}=await this.ensureRepositoryContext(e.toString(),!0),i=t.getVirtualWorkspaceUri(e);return null==i?[]:this.openRepository(void 0,i,!0)}catch{return[]}}updateContext(){(0,a.v)(s.zf.HasVirtualFolders,this.container.git.hasOpenRepositories(this.descriptor.id))}openRepository(e,t,i,o,r){return[new A._j(this.container,this.onRepositoryChanged.bind(this),this.descriptor,e,t,i,o??!n.window.state.focused,r)]}async supports(e){switch(e){case d.Stashes:case d.Worktrees:return!1;default:return!0}}async visibility(e){const t=await this.getRemotes(e,{sort:!0});if(0===t.length)return w.q4.Local;for await(const e of(0,Y.Wx)(t.map((e=>this.getRemoteVisibility(e)))))if("fulfilled"===e.status&&e.value===w.q4.Public)return w.q4.Public;return w.q4.Private}async getRemoteVisibility(e){if("github"===e.provider?.id){const{github:t,metadata:i,session:n}=await this.ensureRepositoryContext(e.repoPath);return await t.getRepositoryVisibility(n.accessToken,i.repo.owner,i.repo.name)??w.q4.Private}return w.q4.Private}async getOpenScmRepositories(){return[]}async getScmRepository(e){}async getOrOpenScmRepository(e){}canHandlePathOrUri(e,t){if(this.supportedSchemes.has(e))return"string"==typeof t?t:t.toString()}getAbsoluteUri(e,t){if("string"==typeof t){if(!(0,j.tE)(t))throw n.window.showErrorMessage(`Unable to get absolute uri between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be a uri`),new Error(`Base path '${t}' must be a uri`);t=n.Uri.parse(t,!0)}if("string"==typeof e&&!(0,j.tE)(e)){const i=(0,j.AH)(e);if(!(0,j.YP)(i))return n.Uri.joinPath(t,i)}const i=this.getRelativePath(e,t);return n.Uri.joinPath(t,i)}async getBestRevisionUri(e,t,i){return i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t)}getRelativePath(e,t){if("string"==typeof t){if(!(0,j.tE)(t))throw n.window.showErrorMessage(`Unable to get relative path between ${"string"==typeof e?e:e.toString(!0)} and ${t}; Base path '${t}' must be a uri`),new Error(`Base path '${t}' must be a uri`);t=n.Uri.parse(t,!0)}let i;if("string"==typeof e){if(!(0,j.tE)(e))return e=(0,j.AH)(e),i=(0,j.YP)(e)&&e.startsWith(t.path)?e.slice(t.path.length):e,i.charCodeAt(0)===s.mN.Slash&&(i=i.slice(1)),i;e=n.Uri.parse(e,!0)}return i=(0,j.AH)((0,j.Gf)(t.path.slice(1),e.path.slice(1))),i}getRevisionUri(e,t,i){const n=this.createProviderUri(e,i,t);return i===x.pk.deletedOrMissing?n.with({query:"~"}):n}async getWorkingUri(e,t){return this.createVirtualUri(e,void 0,t.path)}async addRemote(e,t,i,n){}async pruneRemote(e,t){}async removeRemote(e,t){}async applyChangesToWorkingFile(e,t,i){}async branchContainsCommit(e,t,i){return!1}async checkout(e,t,i){}resetCache(e,...t){(0===t.length||t.includes("branches"))&&this._branchesCache.delete(e),(0===t.length||t.includes("tags"))&&this._tagsCache.delete(e),0===t.length&&this._repoInfoCache.delete(e)}resetCaches(...e){(0===e.length||e.includes("branches"))&&this._branchesCache.clear(),(0===e.length||e.includes("tags"))&&this._tagsCache.clear(),0===e.length&&this._repoInfoCache.clear()}async excludeIgnoredUris(e,t){return t}async fetch(e,t){}async findRepositoryUri(e,t){const i=(0,G.UH)();try{const t=await this.ensureRemoteHubApi();return t.getProviderRootUri(e).with({scheme:s.sN.Virtual})}catch(e){return u.R5,void B.Yd.error(e,i)}}async getAheadBehindCommitCount(e,t){}async getBlame(e,t){const i=(0,G.UH)();if(t?.isDirty)return;let n="blame";null!=e.sha&&(n+=`:${e.sha}`);const o=await this.container.tracker.getOrAdd(e);if(null!=o.state){const e=o.state.getBlame(n);if(null!=e)return B.Yd.debug(i,`Cache hit: '${n}'`),e.item}B.Yd.debug(i,`Cache miss: '${n}'`),null==o.state&&(o.state=new GitDocumentState);const r=this.getBlameCore(e,o,n,i);if(null!=o.state){B.Yd.debug(i,`Cache add: '${n}'`);const e={item:r};o.state.setBlame(n,e)}return r}async getBlameCore(e,t,i,o){try{const t=await this.ensureRepositoryContext(e.repoPath);if(null==t)return;const{metadata:i,github:o,remotehub:r,session:a}=t,l=r.getVirtualUri(r.getProviderRootUri(e)),c=this.getRelativePath(e,l);if(e.scheme===s.sN.Virtual){const[t,i]=await Promise.allSettled([n.workspace.fs.stat(e),n.workspace.fs.stat(e.with({scheme:s.sN.GitHub}))]);if("fulfilled"!==t.status||"fulfilled"!==i.status||t.value.mtime!==i.value.mtime)return}const h=e.sha&&"HEAD"!==e.sha?e.sha:(await i.getRevision()).revision,u=await o.getBlame(a.accessToken,i.repo.owner,i.repo.name,h,c),d=new Map,p=new Map,m=[];for(const t of u.ranges){const i=t.commit,{viewer:n=a.account.label}=u,o=null!=n&&i.author.name===n?"You":i.author.name,r=null!=n&&i.committer.name===n?"You":i.committer.name;let s=d.get(o);null==s&&(s={name:o,lineCount:0},d.set(o,s)),s.lineCount+=t.endingLine-t.startingLine+1;let h=p.get(i.oid);null==h&&(h=new y.aM(this.container,e.repoPath,i.oid,new y._j(o,i.author.email,new Date(i.author.date),i.author.avatarUrl),new y._j(r,i.committer.email,new Date(i.author.date)),i.message.split("\n",1)[0],i.parents.nodes[0]?.oid?[i.parents.nodes[0]?.oid]:[],i.message,new T.K8(l.toString(),c,T.NV.Modified),{changedFiles:i.changedFiles??0,additions:i.additions??0,deletions:i.deletions??0},[]),p.set(i.oid,h));for(let e=t.startingLine;e<=t.endingLine;e++){const t={sha:i.oid,originalLine:e,line:e};h.lines.push(t),m[e-1]=t}}const g=new Map([...d.entries()].sort(((e,t)=>t[1].lineCount-e[1].lineCount)));return{repoPath:e.repoPath,authors:g,commits:p,lines:m}}catch(e){if(null!=t.state&&!String(e).includes("No provider registered with")){const n=e?.toString()??"";B.Yd.debug(o,`Cache replace (with empty promise): '${i}'`);const r={item:ae,errorMessage:n};return t.state.setBlame(i,r),t.setBlameFailure(),ae}return}}async getBlameContents(e,t){}async getBlameForLine(e,t,i,n){const o=(0,G.UH)();if(!i?.isDirty){if(!n?.forceSingleLine){const i=await this.getBlame(e);if(null==i)return;let n=i.lines[t];if(null==n){if(i.lines.length!==t)return;n=i.lines[t-1]}const o=i.commits.get(n.sha);if(null==o)return;return{author:{...i.authors.get(o.author.name),lineCount:o.lines.length},commit:o,line:n}}try{const i=await this.ensureRepositoryContext(e.repoPath);if(null==i)return;const{metadata:n,github:o,remotehub:r,session:s}=i,a=r.getVirtualUri(r.getProviderRootUri(e)),l=this.getRelativePath(e,a),c=e.sha&&"HEAD"!==e.sha?e.sha:(await n.getRevision()).revision,h=await o.getBlame(s.accessToken,n.repo.owner,n.repo.name,c,l),u=t+1,d=h.ranges.find((e=>e.startingLine===u));if(null==d)return;const p=d.commit,{viewer:m=s.account.label}=h,g=null!=m&&p.author.name===m?"You":p.author.name,f=null!=m&&p.committer.name===m?"You":p.committer.name,w=new y.aM(this.container,e.repoPath,p.oid,new y._j(g,p.author.email,new Date(p.author.date),p.author.avatarUrl),new y._j(f,p.committer.email,new Date(p.author.date)),p.message.split("\n",1)[0],p.parents.nodes[0]?.oid?[p.parents.nodes[0]?.oid]:[],p.message,new T.K8(a.toString(),l,T.NV.Modified),{changedFiles:p.changedFiles??0,additions:p.additions??0,deletions:p.deletions??0},[]);for(let e=d.startingLine;e<=d.endingLine;e++){const t={sha:p.oid,originalLine:e,line:e};w.lines.push(t)}return{author:{name:g,lineCount:d.endingLine-d.startingLine+1},commit:w,line:{sha:p.oid,originalLine:d.startingLine,line:d.startingLine}}}catch(e){return void B.Yd.error(o,e)}}}async getBlameForLineContents(e,t,i,n){}async getBlameForRange(e,t){const i=await this.getBlame(e);if(null!=i)return this.getBlameRange(i,e,t)}async getBlameForRangeContents(e,t,i){const n=await this.getBlameContents(e,i);if(null!=n)return this.getBlameRange(n,e,t)}getBlameRange(e,t,i){if(0===e.lines.length)return{allLines:e.lines,...e};if(0===i.start.line&&i.end.line===e.lines.length-1)return{allLines:e.lines,...e};const n=e.lines.slice(i.start.line,i.end.line+1),o=new Set(n.map((e=>e.sha))),r=i.start.line+1,s=i.end.line+1,a=new Map,l=new Map;for(const t of e.commits.values()){if(!o.has(t.sha))continue;const e=t.with({lines:t.lines.filter((e=>e.line>=r&&e.line<=s))});l.set(t.sha,e);let i=a.get(e.author.name);null==i&&(i={name:e.author.name,lineCount:0},a.set(i.name,i)),i.lineCount+=e.lines.length}const c=new Map([...a.entries()].sort(((e,t)=>t[1].lineCount-e[1].lineCount)));return{repoPath:t.repoPath,authors:c,commits:l,lines:n,allLines:e.lines}}async getBranch(e){const{values:[t]}=await this.getBranches(e,{filter:e=>e.current});return t}async getBranches(e,t){if(null==e)return se;const i=(0,G.UH)();let n=t?.cursor?void 0:this._branchesCache.get(e);if(null==n){async function s(){try{const{metadata:i,github:n,session:o}=await this.ensureRepositoryContext(e),s=await i.getRevision(),a=0===s.type?s.name:void 0,l=[];let c=t?.cursor;const h=null==c;for(;;){const t=await n.getBranches(o.accessToken,i.repo.owner,i.repo.name,{cursor:c});for(const i of t.values){const t=new Date("author-date"===r.DN.get("advanced.commitOrdering")?i.target.authoredDate:i.target.committedDate),n=i.target.oid;l.push(new v.XI(e,i.name,!1,i.name===a,t,n,{name:`origin/${i.name}`,missing:!1}),new v.XI(e,`origin/${i.name}`,!0,!1,t,n))}if(!t.paging?.more||!h)return{...t,values:l};c=t.paging.cursor}}catch(t){return B.Yd.error(t,i),this._branchesCache.delete(e),se}}n=s.call(this),null==t?.cursor&&this._branchesCache.set(e,n)}let o=await n;return null!=t?.filter&&(o={...o,values:o.values.filter(t.filter)}),null!=t?.sort&&(0,v.YF)(o.values,"boolean"==typeof t.sort?void 0:t.sort),o}async getChangedFilesCount(e,t){if(!t)return;const i=await this.getCommit(e,t);if(null==i?.stats)return;const{stats:n}=i,o=(0,y.By)(n.changedFiles);return{additions:n.additions,deletions:n.deletions,changedFiles:o}}async getCommit(e,t){if(null==e)return;const i=(0,G.UH)();try{const{metadata:i,github:n,session:o}=await this.ensureRepositoryContext(e),r=await n.getCommit(o.accessToken,i.repo.owner,i.repo.name,t);if(null==r)return;const{viewer:s=o.account.label}=r,a=null!=s&&r.author.name===s?"You":r.author.name,l=null!=s&&r.committer.name===s?"You":r.committer.name;return new y.aM(this.container,e,r.oid,new y._j(a,r.author.email,new Date(r.author.date),r.author.avatarUrl),new y._j(l,r.committer.email,new Date(r.committer.date)),r.message.split("\n",1)[0],r.parents.nodes.map((e=>e.oid)),r.message,r.files?.map((t=>new T.K8(e,t.filename??"",(0,ee.fromCommitFileStatus)(t.status)??T.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0})))??[],{changedFiles:r.changedFiles??0,additions:r.additions??0,deletions:r.deletions??0},[])}catch(e){return void B.Yd.error(e,i)}}async getCommitBranches(e,t,i){if(null==e||null==i?.commitDate)return[];const n=(0,G.UH)();try{const{metadata:n,github:o,session:r}=await this.ensureRepositoryContext(e);let s;return s=i?.branch?await o.getCommitOnBranch(r.accessToken,n.repo.owner,n.repo.name,i?.branch,t,i?.commitDate):await o.getCommitBranches(r.accessToken,n.repo.owner,n.repo.name,t,i?.commitDate),s}catch(e){return B.Yd.error(e,n),[]}}async getCommitCount(e,t){if(null==e)return;const i=(0,G.UH)();try{const{metadata:i,github:n,session:o}=await this.ensureRepositoryContext(e);return await n.getCommitCount(o?.accessToken,i.repo.owner,i.repo.name,t)}catch(e){return void B.Yd.error(e,i)}}async getCommitForFile(e,t,i){if(null==e)return;const n=(0,G.UH)();try{const{metadata:n,github:o,remotehub:r,session:s}=await this.ensureRepositoryContext(e),a=this.getRelativePath(t,r.getProviderRootUri(t)),l=i?.ref&&"HEAD"!==i.ref?i.ref:(await n.getRevision()).revision,c=await o.getCommitForFile(s.accessToken,n.repo.owner,n.repo.name,l,a);if(null==c)return;const{viewer:h=s.account.label}=c,u=null!=h&&c.author.name===h?"You":c.author.name,d=null!=h&&c.committer.name===h?"You":c.committer.name,p=c.files?.map((t=>new T.K8(e,t.filename??"",(0,ee.fromCommitFileStatus)(t.status)??T.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),m=p?.find((e=>e.path===a));return new y.aM(this.container,e,c.oid,new y._j(u,c.author.email,new Date(c.author.date),c.author.avatarUrl),new y._j(d,c.committer.email,new Date(c.committer.date)),c.message.split("\n",1)[0],c.parents.nodes.map((e=>e.oid)),c.message,{file:m,files:p},{changedFiles:c.changedFiles??0,additions:c.additions??0,deletions:c.deletions??0},[])}catch(e){return void B.Yd.error(e,n)}}async getCommitsForGraph(e,t,i){const n=i?.limit??r.DN.get("graph.defaultItemLimit")??5e3,o=r.DN.get("graph.commitOrdering",void 0,"date"),s=r.DN.get("graph.avatars",void 0,!0),[a,l,c,h,u]=await Promise.allSettled([this.getLog(e,{all:!0,ordering:o,limit:n}),this.getBranch(e),this.getRemotes(e),this.getTags(e),this.getCurrentUser(e)]),d=new Map,p=new Set;return this.getCommitsForGraphCore(e,t,(0,Y.Sb)(a),(0,Y.Sb)(l),(0,Y.Sb)(c)?.[0],(0,Y.Sb)(h)?.values,(0,Y.Sb)(u),d,p,{...i,useAvatars:s})}async getCommitsForGraphCore(e,t,i,n,o,r,s,a,l,c){const u={...c?.include,stats:!0},d=null!=n?new Map([[n.name,n]]):new Map,p=null!=o?new Map([[o.name,o]]):new Map;if(null==i)return{repoPath:e,avatars:a,ids:l,includes:u,branches:d,remotes:p,rows:[]};const m=(i.pagedCommits?.()??i.commits)?.values();if(null==m)return{repoPath:e,avatars:a,ids:l,includes:u,branches:d,remotes:p,rows:[]};const g=[];let f,w,_,b,C,S=!1,k=!1;const P=null!=n?.sha&&null!=o;for(const i of m){if(l.add(i.sha),S=i.sha===n?.sha,P&&S?(f=[{id:(0,v.Vx)(e,!1,n.name),name:n.name,isCurrentHead:!0,context:Q({webviewItem:`gitlens:branch${S?"+current":""}${null!=n?.upstream?"+tracking":""}`,webviewItemValue:{type:"branch",ref:x.Wb.create(n.name,e,{refType:"branch",name:n.name,remote:!1,upstream:n.upstream})}}),upstream:n.upstream?.name}],w=[{id:(0,v.Vx)(e,!0,n.name),name:n.name,owner:o.name,url:o.url,avatarUrl:((c?.useAvatars?o.provider?.avatarUri:void 0)??(0,O.dM)(this.container,o,t))?.toString(!0),context:Q({webviewItem:"gitlens:branch+remote",webviewItemValue:{type:"branch",ref:x.Wb.create(n.name,e,{refType:"branch",name:n.name,remote:!0,upstream:{name:o.name,missing:!1}})}}),current:!0}]):(f=[],w=[]),_=null!=r?[...(0,q.DZ)(r,(t=>{if(t.sha===i.sha)return{id:t.id,name:t.name,annotated:Boolean(t.message),context:Q({webviewItem:"gitlens:tag",webviewItemValue:{type:"tag",ref:x.Wb.create(t.name,e,{refType:"tag",name:t.name})}})}}))]:[],i.author.email&&!a.has(i.author.email)){const e=i.getCachedAvatarUri();null!=e&&a.set(i.author.email,e.toString(!0))}k="You"===i.author.name,b={row:Q({webviewItem:`gitlens:commit${P&&i.sha===n.sha?"+HEAD":""}+current`,webviewItemValue:{type:"commit",ref:x.Wb.create(i.sha,e,{refType:"revision",message:i.message})}}),avatar:Q({webviewItem:"gitlens:contributor"+(k?"+current":""),webviewItemValue:{type:"contributor",repoPath:e,name:k&&null!=s?.name?s.name:i.author.name,email:i.author.email,current:k}})},C=i.stats,g.push({sha:i.sha,parents:i.parents,author:i.author.name,email:i.author.email??"",date:i.committer.date.getTime(),message:h(i.message&&String(i.message).length?i.message:i.summary),type:i.parents.length>1?F.MergeCommit:F.Commit,heads:f,remotes:w,tags:_,contexts:b,stats:null!=C?{files:(0,y.By)(C.changedFiles),additions:C.additions,deletions:C.deletions}:void 0})}return"HEAD"===c?.ref?c.ref=(0,q.Ps)(i.commits.values())?.sha:null!=c?.ref&&(c.ref=void 0),{repoPath:e,avatars:a,ids:l,includes:u,branches:d,remotes:p,rows:g,id:c?.ref,paging:{limit:i.limit,startingCursor:i.startingCursor,hasMore:i.hasMore},more:async h=>{const u=await(i.more?.(h));return this.getCommitsForGraphCore(e,t,u,n,o,r,s,a,l,c)}}}async getContributors(e,t){if(null==e)return[];const i=(0,G.UH)();try{const{metadata:t,github:i,session:a}=await this.ensureRepositoryContext(e),l=await i.getContributors(a.accessToken,t.repo.owner,t.repo.name),c=await this.getCurrentUser(e),h=[];for(const t of l)"User"===t.type&&h.push(new $(e,t.name,t.email,t.contributions,void 0,(n=c,o=t.name,r=t.email,s=t.login,!(null==n||null==n.name&&null==n.email&&null==n.username||null!=n.name&&n.name!==o||null!=n.email&&n.email!==r||null!=n.username&&n.username!==s)),void 0,t.login,t.avatar_url,t.node_id));return h}catch(e){return B.Yd.error(e,i),[]}var n,o,r,s}async getCurrentUser(e){if(!e)return;const t=(0,G.UH)(),i=this._repoInfoCache.get(e);let n=i?.user;if(null!=n)return n;if(null!==n)try{const{metadata:t,github:o,session:r}=await this.ensureRepositoryContext(e);return n=await o.getCurrentUser(r.accessToken,t.repo.owner,t.repo.name),this._repoInfoCache.set(e,{...i,user:n??null}),n}catch(n){return B.Yd.error(n,t),void this._repoInfoCache.set(e,{...i,user:null})}}async getDefaultBranchName(e,t){if(null==e)return;const i=(0,G.UH)();try{const{metadata:t,github:i,session:n}=await this.ensureRepositoryContext(e);return await i.getDefaultBranchName(n.accessToken,t.repo.owner,t.repo.name)}catch(e){return void B.Yd.error(e,i)}}async getDiffForFile(e,t,i){}async getDiffForFileContents(e,t,i){}async getDiffForLine(e,t,i,n){}async getDiffStatus(e,t,i,n){}async getFileStatusForCommit(e,t,i){if(i===x.pk.deletedOrMissing||x.pk.isUncommitted(i))return;const n=await this.getCommitForFile(e,t,{ref:i});return null!=n?n.findFile(t):void 0}async getLastFetchedTimestamp(e){}async getLog(e,t){if(null==e)return;const i=(0,G.UH)(),n=this.getPagingLimit(t?.limit);try{const{metadata:i,github:o,session:r}=await this.ensureRepositoryContext(e),s=t?.ref&&"HEAD"!==t.ref?t.ref:(await i.getRevision()).revision,a=await o.getCommits(r.accessToken,i.repo.owner,i.repo.name,s,{all:t?.all,authors:t?.authors,after:t?.cursor,limit:n,since:t?.since?new Date(t.since):void 0}),l=new Map,{viewer:c=r.account.label}=a;for(const t of a.values){const i=null!=c&&t.author.name===c?"You":t.author.name,n=null!=c&&t.committer.name===c?"You":t.committer.name;let o=l.get(t.oid);null==o&&(o=new y.aM(this.container,e,t.oid,new y._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new y._j(n,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,t.files?.map((t=>new T.K8(e,t.filename??"",(0,ee.fromCommitFileStatus)(t.status)??T.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),l.set(t.oid,o))}const h={repoPath:e,commits:l,sha:s,range:void 0,count:l.size,limit:n,hasMore:a.paging?.more??!1,endingCursor:a.paging?.cursor,query:i=>this.getLog(e,{...t,limit:i})};return h.hasMore&&(h.more=this.getLogMoreFn(h,t)),h}catch(e){return void B.Yd.error(e,i)}}async getLogRefsOnly(e,t){const i=await this.getLog(e,t);if(null!=i)return new Set([...i.commits.values()].map((e=>e.ref)))}getLogMoreFn(e,t){return async i=>{const n=null!=i&&"object"==typeof i?i.until:void 0;let o="number"==typeof i?i:void 0;if(n&&(0,q.G)(e.commits.values(),(e=>e.ref===n)))return e;o=this.getPagingLimit(o);const r=await this.getLog(e.repoPath,{...t,limit:o,cursor:e.endingCursor});if(null==r)return{...e,hasMore:!1,more:void 0};const s=new Map([...e.commits,...r.commits]),a={repoPath:e.repoPath,commits:s,sha:e.sha,range:void 0,count:s.size,limit:null==n?(e.limit??0)+o:void 0,hasMore:null!=n||r.hasMore,startingCursor:(0,q.Z$)(e.commits)?.[0],endingCursor:r.endingCursor,pagedCommits:()=>{for(const t of e.commits.keys())r.commits.delete(t);return r.commits},query:e.query};return a.hasMore&&(a.more=this.getLogMoreFn(a,t)),a}}async getLogForFile(e,t,i){if(null==e)return;const n=(0,G.UH)(),o=this.getRelativePath(t,e);if(null!=e&&e===o)throw new Error(`File name cannot match the repository path; path=${o}`);(i={reverse:!1,...i}).renames=!1,i.all=!1;let r="log";null!=i.ref&&(r+=`:${i.ref}`),i.limit=this.getPagingLimit(i?.limit),i.limit&&(r+=`:n${i.limit}`),i.renames&&(r+=":follow"),i.reverse&&(r+=":reverse"),i.since&&(r+=`:since=${i.since}`),i.skip&&(r+=`:skip${i.skip}`),i.cursor&&(r+=`:cursor=${i.cursor}`);const s=await this.container.tracker.getOrAdd(_.YY.fromFile(o,e,i.ref));if(!i.force&&null==i.range){if(null!=s.state){const o=s.state.getLog(r);if(null!=o)return B.Yd.debug(n,`Cache hit: '${r}'`),o.item;if(null!=i.ref||null!=i.limit){const o=s.state.getLog(`log${i.renames?":follow":""}${i.reverse?":reverse":""}`);if(null!=o){if(null==i.ref)return B.Yd.debug(n,`Cache hit: ~'${r}'`),o.item;B.Yd.debug(n,`Cache ?: '${r}'`);let s=await o.item;if(null!=s&&!s.hasMore&&s.commits.has(i.ref)){B.Yd.debug(n,`Cache hit: '${r}'`);let o=!0,a=0;const l=new Map((0,q.DZ)(s.commits.entries(),(([e,t])=>{if(o){if(e!==i?.ref)return;o=!1}if(a++,!(null!=i?.limit&&a>i.limit))return[e,t]}))),c={...i};return s={...s,limit:i.limit,count:l.size,commits:l,query:i=>this.getLogForFile(e,t,{...c,limit:i})},s}}}}B.Yd.debug(n,`Cache miss: '${r}'`),null==s.state&&(s.state=new GitDocumentState)}const a=this.getLogForFileCore(e,o,s,r,n,i);if(null!=s.state&&null==i.range){B.Yd.debug(n,`Cache add: '${r}'`);const e={item:a};s.state.setLog(r,e)}return a}async getLogForFileCore(e,t,i,n,o,r){if(null==e)return;const s=this.getPagingLimit(r?.limit);try{const i=await this.ensureRepositoryContext(e);if(null==i)return;const{metadata:n,github:o,remotehub:a,session:l}=i,c=this.getAbsoluteUri(t,e),h=this.getRelativePath(c,a.getProviderRootUri(c)),u=r?.ref&&"HEAD"!==r.ref?r.ref:(await n.getRevision()).revision,d=await o.getCommits(l.accessToken,n.repo.owner,n.repo.name,u,{all:r?.all,after:r?.cursor,path:h,limit:s,since:r?.since?new Date(r.since):void 0}),p=new Map,{viewer:m=l.account.label}=d;for(const t of d.values){const i=null!=m&&t.author.name===m?"You":t.author.name,n=null!=m&&t.committer.name===m?"You":t.committer.name;let o=p.get(t.oid);if(null==o){const r=t.files?.map((t=>new T.K8(e,t.filename??"",(0,ee.fromCommitFileStatus)(t.status)??T.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),s=(0,j.Mh)(h)?void 0:r?.find((e=>e.path===h))??new T.K8(e,h,T.NV.Modified,void 0,void 0,1===t.changedFiles?{additions:t.additions??0,deletions:t.deletions??0,changes:0}:void 0);o=new y.aM(this.container,e,t.oid,new y._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new y._j(n,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,{file:s,files:r},{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),p.set(t.oid,o)}}const g={repoPath:e,commits:p,sha:u,range:void 0,count:p.size,limit:s,hasMore:d.paging?.more??!1,endingCursor:d.paging?.cursor,query:i=>this.getLogForFile(e,t,{...r,limit:i})};return g.hasMore&&(g.more=this.getLogForFileMoreFn(g,t,r)),g}catch(e){if(null!=i.state&&null==r?.range&&!r?.reverse){const t=e?.toString()??"";B.Yd.debug(o,`Cache replace (with empty promise): '${n}'`);const r={item:ae,errorMessage:t};return i.state.setLog(n,r),ae}return}}getLogForFileMoreFn(e,t,i){return async n=>{const o=null!=n&&"object"==typeof n?n.until:void 0;let r="number"==typeof n?n:void 0;if(o&&(0,q.G)(e.commits.values(),(e=>e.ref===o)))return e;r=this.getPagingLimit(r);const s=await this.getLogForFile(e.repoPath,t,{...i,limit:null==o?r:0,cursor:e.endingCursor});if(null==s)return{...e,hasMore:!1,more:void 0};const a=new Map([...e.commits,...s.commits]),l={repoPath:e.repoPath,commits:a,sha:e.sha,range:e.range,count:a.size,limit:null==o?(e.limit??0)+r:void 0,hasMore:null!=o||s.hasMore,endingCursor:s.endingCursor,query:e.query};return l.hasMore&&(l.more=this.getLogForFileMoreFn(l,t,i)),l}}async getMergeBase(e,t,i,n){}async getMergeStatus(e){}async getRebaseStatus(e){}async getNextComparisonUris(e,t,i,n=0){if(!i)return;const o=(0,G.UH)();try{const o=await this.ensureRepositoryContext(e);if(null==o)return;const{metadata:r,github:s,remotehub:a,session:l}=o,c=this.getRelativePath(t,a.getProviderRootUri(t)),h=(await r.getRevision()).revision;"HEAD"===i&&(i=h);const u=await s.getNextCommitRefs(l.accessToken,r.repo.owner,r.repo.name,h,c,i);return{current:0===n?_.YY.fromFile(c,e,i):new _.YY(await this.getBestRevisionUri(e,c,u[n-1])),next:new _.YY(await this.getBestRevisionUri(e,c,u[n]))}}catch(e){throw B.Yd.error(e,o),e}}async getOldestUnpushedRefForFile(e,t){}async getPreviousComparisonUris(e,t,i,n=0,o=!1){if(i===x.pk.deletedOrMissing)return;const r=(0,G.UH)();i===x.pk.uncommitted&&(i=void 0);try{const o=await this.ensureRepositoryContext(e);if(null==o)return;const{metadata:r,github:s,remotehub:a,session:l}=o,c=this.getRelativePath(t,a.getProviderRootUri(t)),h=null!=i?1:0,u=await s.getCommitRefs(l.accessToken,r.repo.owner,r.repo.name,i&&"HEAD"!==i?i:(await r.getRevision()).revision,{path:c,first:h+n+1});if(null==u)return;const d=0===n?_.YY.fromFile(c,e,i):new _.YY(await this.getBestRevisionUri(e,c,u.values[h+n-1]?.oid??x.pk.deletedOrMissing));if(null==d||d.sha===x.pk.deletedOrMissing)return;return{current:d,previous:new _.YY(await this.getBestRevisionUri(e,c,u.values[h+n]?.oid??x.pk.deletedOrMissing))}}catch(e){throw B.Yd.error(e,r),e}}async getPreviousComparisonUrisForLine(e,t,i,n,o=0){if(n===x.pk.deletedOrMissing)return;const r=(0,G.UH)();try{const r=await this.ensureRepositoryContext(e);if(null==r)return;const{remotehub:s}=r;let a,l=this.getRelativePath(t,s.getProviderRootUri(t)),c=_.YY.fromFile(l,e,n),h=i,u=i,d=i;for(let t=0;t<Math.max(0,o)+2;t++){const t=await this.getBlameForLine(a??c,d,void 0,{forceSingleLine:!0});if(null==t)break;n=t.commit.sha,l=t.commit.file?.path??t.commit.file?.originalPath??l,d=t.line.originalLine-1;const i=_.YY.fromFile(l,e,n);null==a?(a=i,u=d):(c=a,h=u,a=i,u=d)}if(null==c)return;return{current:c,previous:a,line:(h??i)+1}}catch(e){throw B.Yd.error(e,r),e}}async getIncomingActivity(e,t){}async getRemotes(e,t){if(null==e)return[];const i=t?.providers??(0,E.v)(r.DN.get("remotes",null)),o=n.Uri.parse(e,!0),[,s,a]=o.path.split("/",3),l=`https://github.com/${s}/${a}.git`,c="github.com",h=`${s}/${a}`;return[new O.ss(e,`${c}/${h}`,"origin","https",c,h,(0,E.B)(this.container,i)(l,c,h),[{type:O.XG.Fetch,url:l},{type:O.XG.Push,url:l}])]}async getRevisionContent(e,t,i){const o=i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t);return n.workspace.fs.readFile(o)}async getStash(e){}async getStatusForFile(e,t){}async getStatusForFiles(e,t){}async getStatusForRepo(e){}async getTags(e,t){if(null==e)return se;const i=(0,G.UH)();let n=t?.cursor?void 0:this._tagsCache.get(e);if(null==n){async function r(){try{const{metadata:i,github:n,session:o}=await this.ensureRepositoryContext(e),r=[];let s=t?.cursor;const a=null==s;for(;;){const t=await n.getTags(o.accessToken,i.repo.owner,i.repo.name,{cursor:s});for(const i of t.values)r.push(new I.gE(e,i.name,i.target.oid,i.target.message??"",new Date(i.target.authoredDate??i.target.tagger?.date),new Date(i.target.committedDate??i.target.tagger?.date)));if(!t.paging?.more||!a)return{...t,values:r};s=t.paging.cursor}}catch(t){return B.Yd.error(t,i),this._tagsCache.delete(e),se}}n=r.call(this),null==t?.cursor&&this._tagsCache.set(e,n)}let o=await n;return null!=t?.filter&&(o={...o,values:o.values.filter(t.filter)}),null!=t?.sort&&(0,I.Pj)(o.values,"boolean"==typeof t.sort?void 0:t.sort),o}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;if("HEAD"===i){const t=await this.ensureRepositoryContext(e);if(null==t)return;i=(await t.metadata.getRevision())?.revision}const o=i?this.createProviderUri(e,i,t):this.createVirtualUri(e,i,t),r=await n.workspace.fs.stat(o);return null!=r?{path:this.getRelativePath(o,e),commitSha:i,size:r.size,type:(r.type&n.FileType.Directory)===n.FileType.Directory?"tree":"blob"}:void 0}async getTreeForRevision(e,t){if(null==e)return[];if("HEAD"===t){const i=await this.ensureRepositoryContext(e);if(null==i)return[];t=(await i.metadata.getRevision())?.revision}const i=t?this.createProviderUri(e,t):this.createVirtualUri(e,t),o=await n.workspace.fs.readDirectory(i);if(null==o)return[];const r=[];for(const[e,s]of o){const o=this.getAbsoluteUri(e,i);r.push({path:this.getRelativePath(e,o),commitSha:t,size:0,type:(s&n.FileType.Directory)===n.FileType.Directory?"tree":"blob"})}return[]}async getUniqueRepositoryId(e){}async hasBranchOrTag(e,t){const[{values:i},{values:n}]=await Promise.all([this.getBranches(e,{filter:t?.filter?.branches,sort:!1}),this.getTags(e,{filter:t?.filter?.tags,sort:!1})]);return 0!==i.length||0!==n.length}async hasCommitBeenPushed(e,t){return!0}isTrackable(e){return this.supportedSchemes.has(e.scheme)}async isTracked(e){if(!this.isTrackable(e)||null==this.container.git.getRepository(e))return!1;const t=e.with({scheme:s.sN.GitHub});return null!=await n.workspace.fs.stat(t)}async getDiffTool(e){}async openDiffTool(e,t,i){}async openDirectoryCompare(e,t,i,n){}async resolveReference(e,t,i,n){if(!t||t===x.pk.deletedOrMissing||null==i&&x.pk.isSha(t)||null!=i&&x.pk.isUncommitted(t))return t;let o;if(null!=i)o=this.getRelativePath(i,e);else if(!x.pk.isShaLike(t)||t.endsWith("^3"))return t;const r=await this.ensureRepositoryContext(e);if(null==r)return t;const{metadata:s,github:a,session:l}=r,c=await a.resolveReference(l.accessToken,s.repo.owner,s.repo.name,t,o);return null!=c?c:o?x.pk.deletedOrMissing:t}async richSearchCommits(e,t,i){if(null==e)return;const n=(0,G.UH)(),o=W(t),r=o.get("commit:");if(null!=r){const t=await this.getCommit(e,r[0]);if(null==t)return;return{repoPath:e,commits:new Map([[t.sha,t]]),sha:t.sha,range:void 0,count:1,limit:1,hasMore:!1}}const s=await this.getQueryArgsFromSearchQuery(t,o,e);if(0===s.length)return;const a=this.getPagingLimit(i?.limit);try{const{metadata:n,github:o,session:r}=await this.ensureRepositoryContext(e),l=`repo:${n.repo.owner}/${n.repo.name}+${s.join("+").trim()}`,c=await o.searchCommits(r.accessToken,l,{cursor:i?.cursor,limit:a,sort:"date"===i?.ordering?"committer-date":"author-date"===i?.ordering?"author-date":void 0});if(null==c)return;const h=new Map,u=r.account.label;for(const t of c.values){const i=null!=u&&t.author.name===u?"You":t.author.name,n=null!=u&&t.committer.name===u?"You":t.committer.name;let o=h.get(t.oid);null==o&&(o=new y.aM(this.container,e,t.oid,new y._j(i,t.author.email,new Date(t.author.date),t.author.avatarUrl),new y._j(n,t.committer.email,new Date(t.committer.date)),t.message.split("\n",1)[0],t.parents.nodes.map((e=>e.oid)),t.message,t.files?.map((t=>new T.K8(e,t.filename??"",(0,ee.fromCommitFileStatus)(t.status)??T.NV.Modified,t.previous_filename,void 0,{additions:t.additions??0,deletions:t.deletions??0,changes:t.changes??0}))),{changedFiles:t.changedFiles??0,additions:t.additions??0,deletions:t.deletions??0},[]),h.set(t.oid,o))}const d={repoPath:e,commits:h,sha:void 0,range:void 0,count:h.size,limit:a,hasMore:c.pageInfo?.hasNextPage??!1,endingCursor:c.pageInfo?.endCursor??void 0,query:t=>this.getLog(e,{...i,limit:t})};if(d.hasMore){let e=function(n){return async o=>{o=this.getPagingLimit(o);const r=await this.richSearchCommits(n.repoPath,t,{...i,limit:o,cursor:n.endingCursor});if(null==r)return{...n,hasMore:!1,more:void 0};const s=new Map([...n.commits,...r.commits]),a={repoPath:n.repoPath,commits:s,sha:n.sha,range:void 0,count:s.size,limit:(n.limit??0)+o,hasMore:r.hasMore,endingCursor:r.endingCursor,query:n.query};return a.hasMore&&(a.more=e.call(this,a)),a}};d.more=e.call(this,d)}return d}catch(e){return void B.Yd.error(e,n)}}async searchCommits(e,t,i){const n=U(t={matchAll:!1,matchCase:!1,matchRegex:!0,...t});try{const o=new Map,s=W(t),a=s.get("commit:");if(null!=a){const m=await Promise.allSettled(a.map((t=>this.getCommit(e,t.replace(oe,"")))));let g=0;for(const f of m){const w=(0,Y.Sb)(f);null!=w&&o.set(w.sha,{i:g++,date:Number("author-date"===i?.ordering?w.author.date:w.committer.date)})}return{repoPath:e,query:t,comparisonKey:n,results:o}}const l=await this.getQueryArgsFromSearchQuery(t,s,e);if(0===l.length)return{repoPath:e,query:t,comparisonKey:n,results:o};const{metadata:c,github:h,session:u}=await this.ensureRepositoryContext(e),d=`repo:${c.repo.owner}/${c.repo.name}+${l.join("+").trim()}`;async function p(s,a){if(i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:n,results:o};s=this.getPagingLimit(s??r.DN.get("advanced.maxSearchItems"));const l=await h.searchCommitShas(u.accessToken,d,{cursor:a,limit:s,sort:"date"===i?.ordering?"committer-date":"author-date"===i?.ordering?"author-date":void 0});if(null==l||i?.cancellation?.isCancellationRequested)return{repoPath:e,query:t,comparisonKey:n,results:o};for(const e of l.values)o.set(e.sha,{i:o.size,date:Number("author-date"===i?.ordering?e.authorDate:e.committerDate)});return a=l.pageInfo?.endCursor??void 0,{repoPath:e,query:t,comparisonKey:n,results:o,paging:l.pageInfo?.hasNextPage?{limit:s,hasMore:!0}:void 0,more:async e=>p.call(this,e,a)}}return p.call(this,i?.limit)}catch(_){if(_ instanceof GitSearchError)throw _;throw new GitSearchError(_)}}async validateBranchOrTagName(e,t){return ce.test(e)}async validateReference(e,t){return!0}async stageFile(e,t){}async stageDirectory(e,t){}async unStageFile(e,t){}async unStageDirectory(e,t){}async stashApply(e,t,i){}async stashDelete(e,t,i){}async stashSave(e,t,i,n){}async ensureRepositoryContext(e,t){let i=n.Uri.parse(e,!0);if(!/^github\+?/.test(i.authority))throw new u.kX(e,u.sh.NotAGitHubRepository);if(!t){const t=this.container.git.getRepository(i);if(null==t)throw new u.kX(e,u.sh.NotAGitHubRepository);i=t.uri}let o=this._remotehub;if(null==o)try{o=await this.ensureRemoteHubApi()}catch(t){throw u.R5,new u.kX(e,u.sh.RemoteHubApiNotFound,t)}const r=await(o?.getMetadata(i));if("github"!==r?.provider.id)throw new u.kX(e,u.sh.NotAGitHubRepository);let s,a;try{[s,a]=await Promise.all([this.ensureGitHub(),this.ensureSession()])}catch(t){if(t instanceof u._7)throw new u.kX(e,t.reason===u.Jx.UserDidNotConsent?u.sh.GitHubAuthenticationDenied:u.sh.GitHubAuthenticationNotFound,t);throw new u.kX(e)}if(null==s)throw new u.kX(e);return{github:s,metadata:r,remotehub:o,session:a}}async ensureGitHub(){if(null==this._github){const e=await this.container.github;null!=e&&this._disposables.push(e.onDidReauthenticate((()=>{this.ensureSession(!0)}))),this._github=e}return this._github}async ensureRemoteHubApi(e){if(null==this._remotehubPromise&&(this._remotehubPromise=async function(e){try{const e=n.extensions.getExtension("ms-vscode.remote-repositories")??n.extensions.getExtension("GitHub.remotehub");if(null==e)throw B.Yd.log("GitHub Repositories extension is not installed or enabled"),new u.R5("GitHub Repositories","GitHub.remotehub");return e.isActive?e.exports:await e.activate()}catch(t){if(B.Yd.error(t,"Unable to get required api from the GitHub Repositories extension"),u.R5,e)return;throw t}}(),this._remotehubPromise.then((e=>this._remotehub=e),(()=>this._remotehub=void 0))),!e)return this._remotehubPromise;try{return await this._remotehubPromise}catch{return}}async ensureSession(e=!1,t=!1){if(e||null==this._sessionPromise){async function i(){let o=this.container.storage.get(`provider:authentication:skip:${this.descriptor.id}`,!1);try{if(e)return o=!1,this.container.storage.delete(`provider:authentication:skip:${this.descriptor.id}`),await n.authentication.getSession("github",le,{forceNewSession:!0});if(!o&&!t)return await n.authentication.getSession("github",le,{createIfNone:!0});const i=await n.authentication.getSession("github",le,{createIfNone:!1,silent:t});if(null!=i)return i;throw new Error("User did not consent")}catch(r){if(r instanceof Error&&r.message.includes("User did not consent")){if(!t&&(await this.container.storage.store(`provider:authentication:skip:${this.descriptor.id}`,!0),!o))return e||queueMicrotask((async()=>{const e="Re-enable";await n.window.showInformationMessage("GitLens has been disabled. Authentication is required for GitLens to work with remote GitHub repositories.",e)===e&&this.ensureSession(!0)})),e=!1,i.call(this);throw new u._7("github",u.Jx.UserDidNotConsent)}throw B.Yd.error(r),new u._7("github",void 0,r)}}this._sessionPromise=i.call(this)}return this._sessionPromise}createVirtualUri(e,t,i){let o;if("string"==typeof t)t&&(o=x.pk.isSha(t)?{v:1,ref:{id:t,type:2}}:{v:1,ref:{id:t,type:4}});else switch(t?.refType){case"revision":case"stash":o={v:1,ref:{id:t.ref,type:2}};break;case"branch":case"tag":o={v:1,ref:{id:t.name,type:4}}}if("string"==typeof e&&(e=n.Uri.parse(e,!0)),i){let t=e.path;t.endsWith("/")&&(t=t.slice(0,-1)),i=`${t}/${(i=this.getRelativePath(i,e)).startsWith("/")?i.slice(0,-1):i}`}return e.with({scheme:s.sN.Virtual,authority:he("github",o),path:i??e.path})}createProviderUri(e,t,i){const n=this.createVirtualUri(e,t,i);return null==this._remotehub?n.scheme!==s.sN.Virtual?n:n.with({scheme:s.sN.GitHub}):this._remotehub.getProviderUri(n)}getPagingLimit(e){return 0===(e=Math.min(100,e??r.DN.get("advanced.maxListItems")??100))&&(e=100),e}async resolveReferenceCore(e,t,i){if(null==i||"HEAD"===i){return(await t.getRevision()).revision}if(x.pk.isSha(i))return i;if(x.pk.isRange(i))return;const[n,o]=await Promise.allSettled([this.getBranches(e,{filter:e=>e.name===i}),this.getTags(e,{filter:e=>e.name===i})]);return i=(0,Y.Sb)(n)?.values[0]?.sha??(0,Y.Sb)(o)?.values[0]?.sha}async getQueryArgsFromSearchQuery(e,t,i){const n=[];for(const[o,r]of t.entries())switch(o){case"message:":n.push(...r.map((e=>e.replace(/ /g,"+"))));break;case"author:":{let t;r.includes("@me")&&(t=await this.getCurrentUser(i));for(let i of r)if(i&&(i=i.replace(oe,e.matchRegex?"\\b":""),i)){if("@me"===i){if(null==t?.username)continue;i=`@${t.username}`}i=i.replace(/ /g,"+"),i.startsWith("@")?n.push(`author:${i.slice(1)}`):i.includes("@")?n.push(`author-email:${i}`):n.push(`author-name:${i}`)}break}}return n}}function he(e,t){return`${e}${null!=t?`+${(0,o.e)(JSON.stringify(t))}`:""}`}ne([(0,H.cM)()],GitHubGitProvider.prototype,"getBestRevisionUri",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getWorkingUri",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"addRemote",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"pruneRemote",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"removeRemote",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"applyChangesToWorkingFile",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"branchContainsCommit",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"checkout",1),ne([(0,H.cM)({singleLine:!0})],GitHubGitProvider.prototype,"resetCache",1),ne([(0,H.cM)({singleLine:!0})],GitHubGitProvider.prototype,"resetCaches",1),ne([(0,H.cM)({args:{1:e=>e.length}})],GitHubGitProvider.prototype,"excludeIgnoredUris",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"fetch",1),ne([(0,V.H)(),(0,H.fF)()],GitHubGitProvider.prototype,"findRepositoryUri",1),ne([(0,H.cM)({args:{1:e=>e.join(",")}})],GitHubGitProvider.prototype,"getAheadBehindCommitCount",1),ne([(0,V.H)(((e,t)=>`${e.toString()}|${t?.isDirty}`)),(0,H.cM)({args:{1:e=>e?.isDirty}})],GitHubGitProvider.prototype,"getBlame",1),ne([(0,H.cM)({args:{1:"<contents>"}})],GitHubGitProvider.prototype,"getBlameContents",1),ne([(0,V.H)(((e,t,i,n)=>`${e.toString()}|${t}|${i?.isDirty}|${n?.forceSingleLine}`)),(0,H.cM)({args:{2:e=>e?.isDirty}})],GitHubGitProvider.prototype,"getBlameForLine",1),ne([(0,H.cM)({args:{2:"<contents>"}})],GitHubGitProvider.prototype,"getBlameForLineContents",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getBlameForRange",1),ne([(0,H.cM)({args:{2:"<contents>"}})],GitHubGitProvider.prototype,"getBlameForRangeContents",1),ne([(0,H.cM)({args:{0:"<blame>"}})],GitHubGitProvider.prototype,"getBlameRange",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getBranch",1),ne([(0,H.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getBranches",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getChangedFilesCount",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getCommit",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitBranches",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitCount",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitForFile",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getCommitsForGraph",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getContributors",1),ne([(0,V.H)(),(0,H.cM)()],GitHubGitProvider.prototype,"getCurrentUser",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getDefaultBranchName",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffForFile",1),ne([(0,H.cM)({args:{1:e=>"<contents>"}})],GitHubGitProvider.prototype,"getDiffForFileContents",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffForLine",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffStatus",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getFileStatusForCommit",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getLog",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getLogRefsOnly",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getLogForFile",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getMergeBase",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getMergeStatus",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getRebaseStatus",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getNextComparisonUris",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getOldestUnpushedRefForFile",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getPreviousComparisonUris",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getPreviousComparisonUrisForLine",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getIncomingActivity",1),ne([(0,H.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getRemotes",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getRevisionContent",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getStash",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getStatusForFile",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getStatusForFiles",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getStatusForRepo",1),ne([(0,H.cM)({args:{1:!1}})],GitHubGitProvider.prototype,"getTags",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getTreeEntryForRevision",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getTreeForRevision",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"hasBranchOrTag",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"hasCommitBeenPushed",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"getDiffTool",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"openDiffTool",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"openDirectoryCompare",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"resolveReference",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"richSearchCommits",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"searchCommits",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"validateBranchOrTagName",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"validateReference",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"stageFile",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"stageDirectory",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"unStageFile",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"unStageDirectory",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"stashApply",1),ne([(0,H.cM)()],GitHubGitProvider.prototype,"stashDelete",1),ne([(0,H.cM)({args:{2:e=>e?.length}})],GitHubGitProvider.prototype,"stashSave",1),ne([(0,V.H)()],GitHubGitProvider.prototype,"ensureRepositoryContext",1),ne([(0,V.H)()],GitHubGitProvider.prototype,"ensureGitHub",1);var ue=i(8452),de=i(8786),pe=Object.defineProperty,me=Object.getOwnPropertyDescriptor,ge=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?me(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&pe(t,i,r),r};const fe=Object.freeze(new Map),we=/<num>/g;function _e(e){return{provider:e.provider?{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon}:void 0,id:e.id,prefix:e.prefix,title:e.title,url:e.url,type:e.type,description:e.description}}function ve(e){return!("prefix"in e)&&!("url"in e)}function ye(e){return"prefix"in e&&null!=e.prefix&&"url"in e&&null!=e.url}class Autolinks{constructor(e){this.container=e,this._references=[],this._disposable=n.Disposable.from(r.DN.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged()}dispose(){this._disposable?.dispose()}onConfigurationChanged(e){if(r.DN.changed(e,"autolinks")){const e=r.DN.get("autolinks");this._references=e?.filter((e=>e.prefix&&e.url))?.map((e=>({prefix:e.prefix,url:e.url,title:e.title,alphanumeric:e.alphanumeric,ignoreCase:e.ignoreCase,type:e.type,description:e.description})))??[]}}getAutolinks(e,t){const i=t?.provider;if(null!=t&&null==t.provider)return fe;const n=new Map;let o,r;for(const t of i?.autolinks??this._references)if(ye(t))for(be(t,"plaintext");;){if(o=t.messageRegex.exec(e),null==o)break;[,,r]=o,n.set(r,{provider:i,id:r,prefix:t.prefix,url:t.url?.replace(we,r),title:t.title?.replace(we,r),type:t.type,description:t.description?.replace(we,r)})}else ve(t)&&t.parse(e,n);return n}async getLinkedIssuesAndPullRequests(e,t,i){if(!t.hasRichProvider())return;const{provider:n}=t;if(!(n.maybeConnected??await n.isConnected()))return;let o=i?.autolinks;if(null==o&&(o=this.getAutolinks(e,t)),0===o.size)return;const r=await(0,Y.xu)(o.keys(),(e=>n.getIssueOrPullRequest(e)),i?.timeout);for(const[e,t]of r)null==t&&r.delete(e);return 0!==r.size?r:void 0}linkify(e,t,i,n,o){const r="plaintext"===t&&null==o;r&&(o=new Map);const a=new Map;for(const i of this._references)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,a,n,o));if(null!=i&&0!==i.length)for(const r of i)if(null!=r.provider)for(const i of r.provider.autolinks)this.ensureAutolinkCached(i)&&null!=i.tokenize&&(e=i.tokenize(e,t,a,n,o));return 0!==a.size&&(e=e.replace(/(\x00\d+\x00)/g,((e,t)=>a.get(t)??t))),r&&o?.size&&(e+=`\n${s.NE.Dash.repeat(2)}\n${(0,q.v_)((0,q.UI)(o,(([e,t])=>`${(0,k.sC)(e)} ${t}`)),"\n")}`),e}ensureAutolinkCached(e){if(ve(e))return!0;if(!e.prefix||!e.url)return!1;if(void 0!==e.tokenize||null===e.tokenize)return!0;try{e.tokenize=(t,i,n,o,r)=>{let a;switch(i){case"markdown":return be(e,i),t.replace(e.messageMarkdownRegex,((t,i,l)=>{const c=(0,de.M)(e.url.replace(we,l));let h="";if(e.title){h=` "${e.title.replace(we,l)}`;const t=o?.get(l);if(null!=t)if(t instanceof Y.PK)h+=`\n${s.NE.Dash.repeat(2)}\nDetails timed out`;else{const e=(0,k.ry)(t.title.trim());null!=r&&(a=r.size+1,r.set(a,`[${ue.um.getMarkdownIcon(t)} **${e}**](${c}${h}")\\\n${s.NE.Space.repeat(5)}${i} ${t.closed?"closed":"opened"} ${(0,C.Zh)(t.closedDate??t.date)}`)),h+=`\n${s.NE.Dash.repeat(2)}\n${e}\n${t.closed?"Closed":"Opened"}, ${(0,C.Zh)(t.closedDate??t.date)}`}h+='"'}const u=`\0${n.size}\0`;return n.set(u,`[${i}](${c}${h})`),u}));case"html":return be(e,i),t.replace(e.messageHtmlRegex,((t,i,l)=>{const c=(0,de.M)(e.url.replace(we,l));let h="";if(e.title){h=`"${(0,k.se)(e.title.replace(we,l))}`;const t=o?.get(l);if(null!=t)if(t instanceof Y.PK)h+=`\n${s.NE.Dash.repeat(2)}\nDetails timed out`;else{const e=(0,k.se)(t.title.trim());null!=r&&(a=r.size+1,r.set(a,`<a href="${c}" title=${h}>${ue.um.getHtmlIcon(t)} <b>${e}</b></a><br /><span>${s.NE.Space.repeat(5)}${i} ${t.closed?"closed":"opened"} ${(0,C.Zh)(t.closedDate??t.date)}</span>`)),h+=`\n${s.NE.Dash.repeat(2)}\n${e}\n${t.closed?"Closed":"Opened"}, ${(0,C.Zh)(t.closedDate??t.date)}`}h+='"'}const u=`\0${n.size}\0`;return n.set(u,`<a href="${c}" title=${h}>${i}</a>`),u}));default:return be(e,i),t.replace(e.messageRegex,((e,t,i)=>{const l=o?.get(i);if(null==l)return t;null!=r&&(a=r.size+1,r.set(a,`${t}: ${l instanceof Y.PK?"Details timed out":`${l.title}  ${s.NE.Dot}  ${l.closed?"Closed":"Opened"}, ${(0,C.Zh)(l.closedDate??l.date)}`}`));const c=`\0${n.size}\0`;return n.set(c,`${t}${(0,k.sC)(a)}`),c}))}}}catch(t){B.Yd.error(t,`Failed to create autolink generator: prefix=${e.prefix}, url=${e.url}, title=${e.title}`),e.tokenize=null}return!0}}function be(e,t){return"markdown"===t&&null==e.messageMarkdownRegex?e.messageMarkdownRegex=new RegExp(`(?<=^|\\s|\\(|\\[|\\{)(${(0,k.yI)((0,k.se)((0,k.ry)(e.prefix)))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):"html"===t&&null==e.messageHtmlRegex?e.messageHtmlRegex=new RegExp(`(?<=^|\\s|\\(|\\[|\\{)(${(0,k.yI)((0,k.se)(e.prefix))}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g"):null==e.messageRegex&&(e.messageRegex=new RegExp(`(?<=^|\\s|\\(|\\[|\\{)(${(0,k.yI)(e.prefix)}(${e.alphanumeric?"\\w":"\\d"}+))\\b`,e.ignoreCase?"gi":"g")),!0}ge([(0,H.fF)({args:{0:"<message>",1:!1}})],Autolinks.prototype,"getAutolinks",1),ge([(0,H.fF)({args:{0:"<message>",1:!1,2:e=>`autolinks=${null!=e?.autolinks}, timeout=${e?.timeout}`}})],Autolinks.prototype,"getLinkedIssuesAndPullRequests",1),ge([(0,H.fF)({args:{0:"<text>",2:e=>e?.length,3:e=>e?.size,4:e=>e?.size}})],Autolinks.prototype,"linkify",1);var Ce=(e=>(e.Computing="computing",e.Computed="computed",e))(Ce||{});function Se(e){return`${e?.document.uri.toString()}|${e?.viewColumn}`}class AnnotationProviderBase{constructor(e,t,i){this.annotationType=e,this.editor=t,this.trackedDocument=i,this.correlationKey=Se(this.editor),this.document=this.editor.document,this.disposable=n.Disposable.from(n.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this))}dispose(){this.clear(),this.disposable.dispose()}onTextEditorSelectionChanged(e){this.document===e.textEditor.document&&this.selection({line:e.selections[0].active.line})}get editorUri(){return this.editor?.document?.uri}clear(){if(this.annotationContext=void 0,this.status=void 0,null!=this.editor&&this.decorations?.length){for(const e of this.decorations)try{this.editor.setDecorations(e.decorationType,[])}catch{}this.decorations=void 0}}mustReopen(e){return!1}refresh(e){if(null==this.editor||!this.decorations?.length)return;const t=[];for(const i of this.decorations){const n=e.get(i.decorationType);null!==n&&(null!=n&&(i.decorationType=n),t.push(i))}this.setDecorations(this.decorations)}async restore(e){if(!1!==this.editor._disposed){if(this.status="computing",e===n.window.activeTextEditor&&await(0,a.v)(s.zf.AnnotationStatus,this.status),this.editor=e,this.correlationKey=Se(e),this.document=e.document,this.decorations?.length)for(const e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions);this.status="computed",e===n.window.activeTextEditor&&await(0,a.v)(s.zf.AnnotationStatus,this.status)}}async provideAnnotation(e){this.status="computing";try{if(await this.onProvideAnnotation(e))return this.status="computed",!0}catch(e){B.Yd.error(e)}return this.status=void 0,!1}setDecorations(e){if(this.decorations?.length&&this.clear(),this.decorations=e,this.decorations?.length)for(const e of this.decorations)this.editor.setDecorations(e.decorationType,e.rangesOrOptions)}}var ke=i(9529);async function Pe(e){const t=(0,Y.PQ)();return await(0,ke.P0)(s.Gh.GitCommands,{...e,completion:t}),t.promise}async function Re(e,t){await(0,ke.b2)(s.Gh.BrowseRepoAtRevision,void 0,{uri:e,before:t?.before,openInNewWindow:t?.openInNewWindow})}var De=i(6922);function $e(e,t){return t?.document?.uri??e}function Te(e){return"viewItem"===e.type&&(0,v.BF)(e.node.branch)}function Fe(e){return"viewItem"===e.type&&(0,y.f_)(e.node.commit)}function xe(e){return"viewItem"===e.type&&O.ss.is(e.node.remote)}function Oe(e){return"viewItem"===e.type&&e.node.repo instanceof A._j}function Ae(e){return"viewItem"===e.type&&(0,I.YR)(e.node.tag)}function Ie(e){return null!=e&&(null!=e.id&&null!=e.label&&null!=e.resourceStates&&Array.isArray(e.resourceStates))}function Ee(e){return null!=e&&null!=e.resourceUri}class Command{constructor(e){if(this.contextParsingOptions={expectsEditor:!1},"string"==typeof e)return void(this._disposable=(0,ke.xR)(e,((...t)=>this._execute(e,...t)),this));const t=e.map((e=>(0,ke.xR)(e,((...t)=>this._execute(e,...t)),this)));this._disposable=n.Disposable.from(...t)}static getMarkdownCommandArgsCore(e,t){return`command:${e}?${encodeURIComponent(JSON.stringify(t))}`}dispose(){this._disposable.dispose()}preExecute(e,...t){return this.execute(...t)}_execute(e,...t){const[i,n]=Ne(e,{...this.contextParsingOptions},...t);return Array.isArray(i)?(0,K.df)(this.preExecute,i.map((e=>[e,...n])),this):this.preExecute(i,...n)}}function Ne(e,t,...i){let o,r=i[0];if(t?.expectsEditor)if((null==r||null!=r.id&&null!=r.document?.uri)&&(o=r,r=(i=i.slice(1))[0]),i.length>0&&(null==r||r instanceof n.Uri)){const[t,...r]=i;if(null!=t){null!=o||t.toString()!==n.window.activeTextEditor?.document.uri.toString()&&!e.endsWith("InDiffLeft")||(o=n.window.activeTextEditor);const i=r[0];return null!=i&&Array.isArray(i)&&0!==i.length&&i[0]instanceof n.Uri?[{command:e,type:"uris",editor:o,uri:t,uris:i},r.slice(1)]:[{command:e,type:"uri",editor:o,uri:t},r]}i=i.slice(1)}else null==o&&(o=n.window.activeTextEditor);if(r instanceof De.Re){let[t,...n]=i;if(r=n[0],Array.isArray(r)&&r[0]instanceof De.Re){let i;[i,...n]=n;const o=[];for(const n of i)n?.constructor===t.constructor&&o.push({command:e,type:"viewItem",node:n,uri:n.uri});return[o,n]}return[{command:e,type:"viewItem",node:t,uri:t.uri},n]}if(Ee(r)){const t=[];let n=0;for(const e of i){if(!Ee(e))break;n++,t.push(e)}return[{command:e,type:"scm-states",scmResourceStates:t,uri:t[0].resourceUri},i.slice(n)]}if(Ie(r)){const t=[];let n=0;for(const e of i){if(!Ie(e))break;n++,t.push(e)}return[{command:e,type:"scm-groups",scmResourceGroups:t},i.slice(n)]}if(null!=(s=r)&&function(e){return null!=e&&null!=e.timestamp&&null!=e.label}(s)&&null!=s.ref&&null!=s.previousRef&&null!=s.message){const[t,n,...o]=i;return[{command:e,type:"timeline-item:git",item:t,uri:n},o]}var s,a;if(null!=(a=r)&&null!=a.id&&null!=a.rootUri&&null!=a.inputBox&&null!=a.statusBarCommands){const[t,...n]=i;return[{command:e,type:"scm",scm:t},n]}return[{command:e,type:"unknown",editor:o,uri:o?.document.uri},i]}class ActiveEditorCommand extends Command{constructor(e){super(e),this.contextParsingOptions={expectsEditor:!0}}preExecute(e,...t){return this.execute(e.editor,e.uri,...t)}_execute(e,...t){return super._execute(e,void 0,...t)}}let Ue;class ActiveEditorCachedCommand extends ActiveEditorCommand{constructor(e){super(e)}_execute(e,...t){return Ue={command:e,args:t},super._execute(e,...t)}}class EditorCommand{constructor(e){Array.isArray(e)||(e=[e]);const t=[];for(const i of e)t.push(n.commands.registerTextEditorCommand(i,((e,t,...n)=>this.executeCore(i,e,t,...n)),this));this._disposable=n.Disposable.from(...t)}dispose(){this._disposable.dispose()}executeCore(e,t,i,...n){return this.execute(t,i,...n)}}var Le=Object.defineProperty,Me=Object.getOwnPropertyDescriptor;let We=class extends Command{constructor(e){super(s.Gh.AddAuthors),this.container=e}execute(e){let t;return null!=e?.rootUri&&(t=this.container.git.getRepository(e.rootUri)),Pe({command:"co-authors",state:{repo:t,contributors:void 0}})}};We=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Me(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Le(t,i,r),r})([(0,ke.WD)()],We);var Be=i(7925),Ge=Object.defineProperty,Ve=Object.getOwnPropertyDescriptor;let He=class extends ActiveEditorCommand{constructor(e){super([s.Gh.BrowseRepoAtRevision,s.Gh.BrowseRepoAtRevisionInNewWindow,s.Gh.BrowseRepoBeforeRevision,s.Gh.BrowseRepoBeforeRevisionInNewWindow]),this.container=e}preExecute(e,t){switch(e.command){case s.Gh.BrowseRepoAtRevisionInNewWindow:t={...t,before:!1,openInNewWindow:!0};break;case s.Gh.BrowseRepoBeforeRevision:t={...t,before:!0,openInNewWindow:!1};break;case s.Gh.BrowseRepoBeforeRevisionInNewWindow:t={...t,before:!0,openInNewWindow:!0}}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){i={...i};try{if(null==i.uri){if(null==(t=$e(t,e)))return}else t=i.uri;let n=await _.YY.fromUri(t);if(null==n.sha)return;const o=i?.before?await this.container.git.resolveReference(n.repoPath,`${n.sha}^`):n.sha;t=this.container.git.getRevisionUri(o,n.repoPath,n.repoPath),n=_.YY.fromRevisionUri(t),(0,J.ic)(t,{location:i.openInNewWindow?J.Tc.NewWindow:J.Tc.AddToWorkspace,name:`${(0,j.EZ)(n.repoPath)} @ ${n.shortSha}`}),i.openInNewWindow||(0,ke.dO)(s.nA.FocusFilesExplorer)}catch(e){B.Yd.error(e,"BrowseRepoAtRevisionCommand"),(0,Be.W8)("Unable to open the repository at the specified revision")}}};He=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ve(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ge(t,i,r),r})([(0,ke.WD)()],He);var qe=i(3680);function je(e){return{kind:n.QuickPickItemKind.Separator,label:e??""}}class CommandQuickPickItem{constructor(e,t,i,n){this.command=t,this.args=i,this.options=n,this.command=t,this.args=i,"string"==typeof e?this.label=e:Object.assign(this,e)}static fromCommand(e,t,i){return new CommandQuickPickItem("string"==typeof e?{label:e}:e,t,null==i?[]:[i])}static is(e){return e instanceof CommandQuickPickItem}execute(e){if(void 0===this.command)return Promise.resolve(void 0);return n.commands.executeCommand(this.command,...this.args??[])}async onDidPressKey(e){if(this.options?.suppressKeyPress)return;const t=this.execute({preserveFocus:!0,preview:!1});this.options?.onDidPressKey?.(e,t),await t}}class ActionQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(e,void 0,void 0),this.action=t}async execute(e){return this.action(e)}}var Ye=i(2540);function Qe(e,t,i,n){return{...i,item:t,picked:ze(e,t),context:n}}function ze(e,t){return void 0===t?0===e.length:Array.isArray(t)?0===t.length?0===e.length:t.every((t=>e.includes(t))):e.includes(t)}var Ke,Je,Xe=(e=>(e[e.Back=0]="Back",e[e.Cancel=1]="Cancel",e[e.LoadMore=2]="LoadMore",e[e.Noop=3]="Noop",e[e.RequiresVerification=4]="RequiresVerification",e[e.ExtendTrial=5]="ExtendTrial",e[e.RequiresPaidSubscription=6]="RequiresPaidSubscription",e[e.StartPreviewTrial=7]="StartPreviewTrial",e))(Xe||{});function Ze(e){return"number"==typeof e&&null!=Xe[e]}function et(e,t,i){let n=i?.label,o=i?.detail;if(null==n)switch(e){case 0:n="Back";break;case 1:n="Cancel";break;case 2:n="Load more";break;case 3:n="Try again";break;case 7:n="Start a GitLens Pro Trial",o="Try GitLens+ features on private repos, free for 3 days, without an account";break;case 5:n="Extend Your GitLens Pro Trial",o="To continue to use GitLens+ features on private repos, free for an additional 7-days";break;case 4:n="Resend Verification Email",o="You must verify your email address before you can continue";break;case 6:n="Upgrade to Pro",o="To use GitLens+ features on private repos"}return{label:n,description:i?.description,detail:o,alwaysShow:!0,picked:t,directive:e}}function tt(e){return null!=e&&"directive"in e}class ToggleQuickInputButton{constructor(e,t=!1){this.state=e,this._on=t}get iconPath(){const e=this.getToggledState().icon;return"string"==typeof e?{dark:n.Uri.file(lf.instance.context.asAbsolutePath(`images/dark/${e}.svg`)),light:n.Uri.file(lf.instance.context.asAbsolutePath(`images/light/${e}.svg`))}:e}get tooltip(){return this.getToggledState().tooltip}get on(){return this._on}set on(e){this._on=e}getState(){return"function"==typeof this.state?this.state():this.state}getToggledState(){return this.on?this.getState().on:this.getState().off}}class SelectableQuickInputButton extends ToggleQuickInputButton{constructor(e,t,i=!1){super({off:{tooltip:e,icon:t.off},on:{tooltip:e,icon:t.on}},i)}}function it(e,t,i){return Pe({command:"branch",state:{subcommand:"create",repo:e,reference:t,name:i}})}function nt(e,t){return Pe({command:"branch",state:{subcommand:"delete",repo:e,references:t}})}function ot(e,t,i){return Pe({command:"branch",state:{subcommand:"rename",repo:e,reference:t,name:i}})}async function rt(e,t){const i=e.remote?lf.instance.remotesView:lf.instance.branchesView,n=i.canReveal?await i.revealBranch(e,t):await lf.instance.repositoriesView.revealBranch(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}async function st(e,t,i){await mt(e,t,{preserveFocus:!0,preview:!1});let n=t.ref;"string"!=typeof e&&"?"===e.status&&(n=`${n}^3`),await lf.instance.git.applyChangesToWorkingFile(_.YY.fromFile(e,t.repoPath,n),n,i?.ref)}async function at(e){let t;if((0,y.f_)(e))t=e,null==t.message&&await t.ensureFullDetails();else if(t=await lf.instance.git.getCommit(e.repoPath,e.ref),null==t)return;const i=t.message??t.summary;await n.env.clipboard.writeText(i)}async function lt(e,t,i){let o,r;if((0,y.f_)(e)?(null==e.files&&await e.ensureFullDetails(),o=e.files??[],r={repoPath:e.repoPath,ref1:e.unresolvedPreviousSha,ref2:e.sha},i=t):(o=e,r=t),o.length>10){const e=await n.window.showWarningMessage(`Are you sure you want to open the changes for all ${o.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}i={preserveFocus:!0,preview:!1,...i};for(const e of o)await ht(e,r,i)}async function ct(e,t,i){let o,r;if((0,y.f_)(e)?(null==e.files&&await e.ensureFullDetails(),o=e.files??[],r={repoPath:e.repoPath,ref:e.sha},i=t):(o=e,r=t),o.length>10){const e=await n.window.showWarningMessage(`Are you sure you want to open the changes for all ${o.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}i={preserveFocus:!0,preview:!1,...i};for(const e of o)await dt(e,r,i)}async function ht(e,t,i){if("string"==typeof e){if(!(0,y.f_)(t))throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}if(i={preserveFocus:!0,preview:!1,...i},"A"===e.status){if(!(0,y.f_)(t))return;const n=await t.getCommitForFile(e);(0,ke.P0)(s.Gh.DiffWithPrevious,{commit:n,showOptions:i})}const n=(0,y.f_)(t)?{repoPath:t.repoPath,ref1:t.unresolvedPreviousSha,ref2:t.sha}:t,o=_.YY.fromFile(e,n.repoPath),r="R"===e.status||"C"===e.status?_.YY.fromFile(e,n.repoPath,n.ref2,!0):o;await(0,ke.P0)(s.Gh.DiffWith,{repoPath:n.repoPath,lhs:{uri:o,sha:n.ref1},rhs:{uri:r,sha:n.ref2},showOptions:i})}async function ut(e,t,i){if("string"==typeof e){if(!(0,y.f_)(t))throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}return lf.instance.git.openDiffTool(t.repoPath,_.YY.fromFile(e,e.repoPath??t.repoPath),{ref1:x.pk.isUncommitted(t.ref)?"":`${t.ref}^`,ref2:x.pk.isUncommitted(t.ref)?"":t.ref,staged:x.pk.isUncommittedStaged(t.ref)||null!=e.indexStatus,tool:i})}async function dt(e,t,i){if("string"==typeof e){if(!(0,y.f_)(t))throw new Error("Invalid arguments");const i=await t.findFile(e);if(null==i)throw new Error("Invalid arguments");e=i}if("D"===e.status)return;let n;n=(0,y.f_)(t)?{repoPath:t.repoPath,ref:t.sha}:t,i={preserveFocus:!0,preview:!1,...i},await(0,ke.b2)(s.Gh.DiffWithWorking,void 0,{uri:_.YY.fromFile(e,n.repoPath,n.ref),showOptions:i})}async function pt(e,t,i,n){return lf.instance.git.openDirectoryCompare(e,t,i,n)}async function mt(e,t,i){let o;if(e instanceof n.Uri)o=e,i=t;else{const i=t;if(o=_.YY.fromFile(e,i.repoPath,i.ref),"string"!=typeof e&&"?"===e.status)return}i={preserveFocus:!0,preview:!1,...i},await(0,ke.b2)(s.Gh.OpenWorkingFile,void 0,{uri:o,showOptions:i})}async function gt(e,t,i){let o;if(e instanceof n.Uri){if((0,y.f_)(t))throw new Error("Invalid arguments");o=e,i=t}else{if(!(0,y.f_)(t))throw new Error("Invalid arguments");const i=t;let n;if("string"==typeof e){const t=await i.findFile(e);if(null==t)throw new Error("Invalid arguments");n=t}else n=e;o=lf.instance.git.getRevisionUri("D"===n.status?await i.getPreviousSha()??x.pk.deletedOrMissing:i.sha,n,i.repoPath)}const{annotationType:r,line:s,...a}={preserveFocus:!0,preview:!1,...i};null!=s&&0!==s&&(a.selection=new n.Range(s,0,s,0));const l=await(0,J.GR)(o,a);null!=r&&null!=l&&await lf.instance.fileAnnotations.show(l,r,{selection:{line:s}})}async function ft(e,t,i){let o;if((0,y.f_)(e)?(null==e.files&&await e.ensureFullDetails(),o=e.files??[],t=e.repoPath,i=e.sha):o=e,o.length>10){const e=await n.window.showWarningMessage(`Are you sure you want to open all ${o.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}const r=(await Promise.all(o.map((e=>lf.instance.git.getWorkingUri(t,_.YY.fromFile(e,t,i)))))).filter((e=>Boolean(e)));(0,J.$_)(r)}async function wt(e,t,i,o){let r;if((0,y.f_)(e)?(null==e.files&&await e.ensureFullDetails(),r=e.files??[],t=e.repoPath,i=e.sha,o=await e.getPreviousSha()):r=e,r.length>10){const e=await n.window.showWarningMessage(`Are you sure you want to open all ${r.length} file revisions?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}(0,J.$_)(r.map((e=>lf.instance.git.getRevisionUri("D"===e.status?o:i,e,t))))}async function _t(e,t){let i,n;"string"==typeof e?(i=e,n=t.ref):(i=e.path,n="?"===e.status?`${t.ref}^3`:"D"===e.status?`${t.ref}^`:t.ref),await lf.instance.git.checkout(t.repoPath,n,{path:i})}async function vt(e,t){const i=[lf.instance.commitsView,lf.instance.branchesView,lf.instance.remotesView];for(const n of i){const i=n.canReveal?await n.revealCommit(e,t):await lf.instance.repositoriesView.revealCommit(e,t);if(null!=i)return i}i[0].show({preserveFocus:!t?.focus})}async function yt(e,t){if(null==t)return void await(0,ke.P0)(s.Gh.ShowQuickCommit,{commit:e});let i;i=t instanceof n.Uri?t:_.YY.fromFile(t,e.repoPath,e.ref),await(0,ke.P0)(s.Gh.ShowQuickCommitFile,i,{sha:e.sha})}function bt(e,t){return lf.instance.commitDetailsView.show({...t,commit:e})}function Ct(e,t){return Pe({command:"co-authors",state:{repo:e,contributors:t}})}async function St(e,t){const i=lf.instance.contributorsView,n=i.canReveal?await i.revealContributor(e,t):await lf.instance.repositoriesView.revealContributor(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}function kt(e,t,i,n){return Pe({command:"remote",confirm:n?.confirm,state:{repo:e,subcommand:"add",name:t,url:i,flags:n?.fetch?["-f"]:void 0,reveal:n?.reveal}})}async function Pt(e,t){const i=lf.instance.remotesView,n=null!=e?i.canReveal?await i.revealRemote(e,t):await lf.instance.repositoriesView.revealRemote(e,t):void 0;return null==n&&i.show({preserveFocus:!t?.focus}),n}function Rt(e,t){return Pe({command:"cherry-pick",state:{repo:e,references:t}})}function Dt(e,t){return Pe({command:"fetch",state:{repos:e,reference:t}})}function $t(e,t){return Pe({command:"merge",state:{repo:e,reference:t}})}function Tt(e,t){return Pe({command:"pull",state:{repos:e,reference:t}})}function Ft(e,t,i){return Pe({command:"push",state:{repos:e,flags:t?["--force"]:[],reference:i}})}function xt(e,t,i=!0){return Pe({command:"rebase",state:{repo:e,reference:t,flags:i?["--interactive"]:[]}})}function Ot(e,t,i){return Pe({command:"reset",confirm:null==i||i.includes("--hard"),state:{repo:e,reference:t,flags:i}})}function At(e,t){return Pe({command:"revert",state:{repo:e,references:t}})}function It(e,t,i){return Pe({command:"switch",state:{repos:e,reference:t},confirm:i})}async function Et(e,t,i){const n=t?.canReveal?await t.revealRepository(e,i):await lf.instance.repositoriesView.revealRepository(e,i);return null==n&&(t??lf.instance.repositoriesView).show({preserveFocus:!i?.focus}),n}function Nt(e,t){return Pe({command:"stash",state:{subcommand:"apply",repo:e,reference:t}})}function Ut(e,t){return Pe({command:"stash",state:{subcommand:"drop",repo:e,reference:t}})}function Lt(e,t,i,n=!1){return Pe({command:"stash",state:{subcommand:"push",repo:e,uris:t,message:i,flags:n?["--keep-index"]:void 0}})}async function Mt(e,t){const i=lf.instance.stashesView,n=i.canReveal?await i.revealStash(e,t):await lf.instance.repositoriesView.revealStash(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}function Wt(e,t){return lf.instance.commitDetailsView.show({...t,commit:e})}function Bt(e,t,i){return Pe({command:"tag",state:{subcommand:"create",repo:e,reference:t,name:i}})}function Gt(e,t){return Pe({command:"tag",state:{subcommand:"delete",repo:e,references:t}})}async function Vt(e,t){const i=lf.instance.tagsView,n=i.canReveal?await i.revealTag(e,t):await lf.instance.repositoriesView.revealTag(e,t);return null==n&&i.show({preserveFocus:!t?.focus}),n}(Je=Ke||(Ke={})).Fetch={iconPath:new n.ThemeIcon("sync"),tooltip:"Fetch"},Je.LoadMore={iconPath:new n.ThemeIcon("refresh"),tooltip:"Load More"},Je.MatchCaseToggle=class extends SelectableQuickInputButton{constructor(e=!1){super("Match Case",{off:"icon-match-case",on:"icon-match-case-selected"},e)}},Je.MatchAllToggle=class extends SelectableQuickInputButton{constructor(e=!1){super("Match All",{off:"icon-match-all",on:"icon-match-all-selected"},e)}},Je.MatchRegexToggle=class extends SelectableQuickInputButton{constructor(e=!1){super("Match using Regular Expressions",{off:"icon-match-regex",on:"icon-match-regex-selected"},e)}},Je.PickCommit={iconPath:new n.ThemeIcon("git-commit"),tooltip:"Choose a Specific Commit"},Je.PickCommitToggle=class extends ToggleQuickInputButton{constructor(e=!1,t,i){super((()=>({on:{tooltip:"Choose a Specific Commit",icon:new n.ThemeIcon("git-commit")},off:{tooltip:"Choose a Branch"+(t.showTags?" or Tag":""),icon:new n.ThemeIcon("git-branch")}})),e),this.onDidClick=i}},Je.OpenInNewWindow={iconPath:new n.ThemeIcon("empty-window"),tooltip:"Open in New Window"},Je.RevealInSideBar={iconPath:new n.ThemeIcon("search"),tooltip:"Reveal in Side Bar"},Je.SetRemoteAsDefault={iconPath:new n.ThemeIcon("settings-gear"),tooltip:"Set as Default Remote"},Je.ShowDetailsView={iconPath:new n.ThemeIcon("eye"),tooltip:"Open Details"},Je.ShowResultsInSideBar={iconPath:new n.ThemeIcon("link-external"),tooltip:"Show Results in Side Bar"},Je.ShowTagsToggle=class extends SelectableQuickInputButton{constructor(e=!1){super("Show Tags",{off:new n.ThemeIcon("tag"),on:"icon-tag-selected"},e)}},Je.WillConfirmForced={iconPath:new n.ThemeIcon("check"),tooltip:"Will always confirm"},Je.WillConfirmToggle=class extends ToggleQuickInputButton{constructor(e=!1,t){super((()=>({on:{tooltip:"Will confirm",icon:{dark:n.Uri.file(lf.instance.context.asAbsolutePath("images/dark/icon-check.svg")),light:n.Uri.file(lf.instance.context.asAbsolutePath("images/light/icon-check.svg"))}},off:{tooltip:"Skips confirm",icon:{dark:n.Uri.file(lf.instance.context.asAbsolutePath("images/dark/icon-no-check.svg")),light:n.Uri.file(lf.instance.context.asAbsolutePath("images/light/icon-no-check.svg"))}}})),e),this.onDidClick=t}};var Ht=i(2800);function qt(e,t,i,n){return Pe({command:"worktree",state:{subcommand:"create",repo:e,uri:t,reference:i,reveal:n?.reveal}})}async function jt(e,t){const i=lf.instance.worktreesView,n=null!=e?i.canReveal?await i.revealWorktree(e,t):await lf.instance.repositoriesView.revealWorktree(e,t):void 0;return null==n&&i.show({preserveFocus:!t?.focus}),n}async function Yt(e){await(0,ke.dO)(s.nA.RevealInFileExplorer,e.uri)}function Qt(e){if(null!=e)switch(e){case J.Tc.NewWindow:return["--new-window"];case J.Tc.AddToWorkspace:return["--add-to-workspace"];case J.Tc.CurrentWindow:default:return[]}}function zt(e){if(null!=e)return e.includes("--new-window")?J.Tc.NewWindow:e.includes("--add-to-workspace")?J.Tc.AddToWorkspace:J.Tc.CurrentWindow}var Kt,Jt=i(6503);class CommitFilesQuickPickItem extends CommandQuickPickItem{constructor(e,t){super({label:e.summary,description:`${CommitFormatter.fromTemplate("${author}, ${ago}  $(git-commit)  ${id}",e)}${t?.unpublished?"  (unpublished)":""}`,detail:`${null!=t?.file?`$(file) ${(0,j.EZ)(t.file.path)}${t.file.formatStats({expand:!0,separator:", ",prefix:` ${s.NE.Dot} `})}`:`$(files) ${e.formatStats({expand:!0,separator:", ",empty:"No files changed"})}`}${null!=t?.hint?`${(0,k.vk)(s.NE.Dash,4,2,s.NE.Space)}${t.hint}`:""}`,alwaysShow:!0,picked:t?.picked??!0,buttons:[Ke.ShowDetailsView,Ke.RevealInSideBar]},void 0,void 0,{suppressKeyPress:!0}),this.commit=e}get sha(){return this.commit.sha}}class CommitFileQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super({label:`${(0,k.vk)(T.$9.getStatusCodicon(t.status),0,2)}${(0,j.EZ)(t.path)}`,description:T.$9.getFormattedDirectory(t,!0),picked:i}),this.commit=e,this.file=t}get sha(){return this.commit.sha}execute(e){return ht(this.file,this.commit,e)}}class CommitBrowseRepositoryFromHereCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??`$(folder-opened) Browse Repository from${t?.before?" Before":""} Here${t?.openInNewWindow?" in New Window":""}`),this.commit=e,this.executeOptions=t}execute(e){return Re(this.commit.getGitUri(),{before:this.executeOptions?.before,openInNewWindow:this.executeOptions?.openInNewWindow})}}class CommitCompareWithHEADCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(compare-changes) Compare with HEAD"),this.commit=e}execute(e){return lf.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"HEAD")}}class CommitCompareWithWorkingCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(compare-changes) Compare with Working Tree"),this.commit=e}execute(e){return lf.instance.searchAndCompareView.compare(this.commit.repoPath,this.commit.ref,"")}}class CommitCopyIdQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(copy) Copy SHA"),this.commit=e}execute(){return async function(e){await n.env.clipboard.writeText(e.ref)}(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),n.window.showInformationMessage("Commit SHA copied to the clipboard")}}class CommitCopyMessageQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(copy) Copy Message"),this.commit=e}execute(){return at(this.commit)}async onDidPressKey(e){await super.onDidPressKey(e),n.window.showInformationMessage((this.commit.stashName?"Stash":"Commit")+" Message copied to the clipboard")}}class CommitOpenAllChangesCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(git-compare) Open All Changes"),this.commit=e}execute(e){return lt(this.commit,e)}}class CommitOpenAllChangesWithDiffToolCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(git-compare) Open All Changes (difftool)"),this.commit=e}execute(){return async function(e,t){let i;if((0,y.f_)(e)?(null==e.files&&await e.ensureFullDetails(),i=e.files??[],t={repoPath:e.repoPath,ref:e.sha}):i=e,i.length>10){const e=await n.window.showWarningMessage(`Are you sure you want to open the changes for all ${i.length} files?`,{title:"Yes"},{title:"No",isCloseAffordance:!0});if(null==e||"No"===e.title)return}for(const e of i)ut(e,t)}(this.commit)}}class CommitOpenAllChangesWithWorkingCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(git-compare) Open All Changes with Working Tree"),this.commit=e}execute(e){return ct(this.commit,e)}}class CommitOpenChangesCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??"$(git-compare) Open Changes"),this.commit=e,this.file=t}execute(e){return ht(this.file,this.commit,e)}}class CommitOpenChangesWithDiffToolCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??"$(git-compare) Open Changes (difftool)"),this.commit=e,this.file=t}execute(){return ut(this.file,this.commit)}}class CommitOpenChangesWithWorkingCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??"$(git-compare) Open Changes with Working File"),this.commit=e,this.file=t}execute(e){return dt(this.file,this.commit,e)}}class CommitOpenDirectoryCompareCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(git-compare) Open Directory Compare"),this.commit=e}execute(){return async function(e){return pt(e.repoPath,e.ref,`${e.ref}^`)}(this.commit)}}class CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(git-compare) Open Directory Compare with Working Tree"),this.commit=e}execute(){return async function(e){return pt(e.repoPath,e.ref,void 0)}(this.commit)}}class CommitOpenDetailsCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(eye) Open Details"),this.commit=e}execute(e){return bt(this.commit,{preserveFocus:e?.preserveFocus})}}class CommitOpenInGraphCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(gitlens-graph) Open in Commit Graph"),this.commit=e}execute(e){return async function(e,t){await(0,ke.P0)(s.Gh.ShowInCommitGraph,{ref:x.Wb.fromRevision(e),preserveFocus:t?.preserveFocus})}(this.commit,{preserveFocus:e?.preserveFocus})}}class CommitOpenFilesCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(files) Open Files"),this.commit=e}execute(e){return ft(this.commit)}}class CommitOpenFileCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??"$(file) Open File"),this.commit=e,this.file=t}execute(e){return mt(this.file,this.commit,e)}}class CommitOpenRevisionsCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(t??"$(files) Open Files at Revision"),this.commit=e}execute(e){return wt(this.commit)}}class CommitOpenRevisionCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??"$(file) Open File at Revision"),this.commit=e,this.file=t}execute(e){return gt(this.file,this.commit,e)}}class CommitApplyFileChangesCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??"Apply Changes"),this.commit=e,this.file=t}async execute(){return st(this.file,this.commit)}}class CommitRestoreFileChangesCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i){super(i??{label:"Restore",description:"aka checkout"}),this.commit=e,this.file=t}execute(){return _t(this.file,this.commit)}}class OpenChangedFilesCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){const i={uris:e.map((e=>e.uri))};super(t??"$(files) Open All Changed Files",s.Gh.OpenChangedFiles,[i])}}class ConfigureCustomRemoteProviderCommandQuickPickItem extends CommandQuickPickItem{constructor(){super({label:"See how to configure a custom remote provider..."})}async execute(){await n.env.openExternal(n.Uri.parse("https://github.com/gitkraken/vscode-gitlens#remote-provider-integration-settings-"))}}class CopyOrOpenRemoteCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t,i,n){super({label:`$(repo) ${e.provider.path}`,description:e.name,buttons:n}),this.remote=e,this.resource=t,this.clipboard=i}async execute(){let e=this.resource;if(e.type===Jt.J.Comparison)(0,v.Lo)(e.base)===this.remote.name&&(e={...e,base:(0,v.S3)(e.base)}),(0,v.Lo)(e.compare)===this.remote.name&&(e={...e,compare:(0,v.S3)(e.compare)});else if(e.type===Jt.J.CreatePullRequest){let t=e.base.branch;if(null==t&&(t=await lf.instance.git.getDefaultBranchName(this.remote.repoPath,this.remote.name),null==t&&this.remote.hasRichProvider())){t=(await(this.remote.provider.getDefaultBranch?.()))?.name}e={...e,base:{branch:t,remote:{path:this.remote.path,url:this.remote.url}}}}else if(e.type===Jt.J.File&&null!=e.branchOrTag&&("bitbucket"===this.remote.provider.id||"bitbucket-server"===this.remote.provider.id)){const{branchOrTag:t}=e,[i,n]=await Promise.allSettled([lf.instance.git.getBranches(this.remote.repoPath,{filter:e=>e.name===t||e.getNameWithoutRemote()===t}),lf.instance.git.getTags(this.remote.repoPath,{filter:e=>e.name===t})]),o=(0,Y.Sb)(i)?.values[0]?.sha??(0,Y.Sb)(n)?.values[0]?.sha;o&&(e={...e,type:Jt.J.Revision,sha:o})}await(this.clipboard?this.remote.provider.copy(e):this.remote.provider.open(e))}setAsDefault(){return this.remote.setAsDefault(!0)}}class CopyRemoteResourceCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){const i=O.ss.getHighlanderProviders(e),n={resource:t,remotes:e,clipboard:!0};super(`$(copy) Copy Link to ${(0,Jt.C)(t)} for ${i?.length?i[0].name:"Remote"}${1===i?.length?"":s.NE.Ellipsis}`,s.Gh.OpenOnRemote,[n])}async onDidPressKey(e){await super.onDidPressKey(e),n.window.showInformationMessage("URL copied to the clipboard")}}class OpenRemoteResourceCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){const i=O.ss.getHighlanderProviders(e),n={resource:t,remotes:e,clipboard:!1};super(`$(link-external) Open ${(0,Jt.C)(t)} on ${1===i?.length?i[0].name:`${i?.length?i[0].name:"Remote"}${s.NE.Ellipsis}`}`,s.Gh.OpenOnRemote,[n])}}(Kt||(Kt={})).show=async function(e,t,i,o,r){const{autoPick:s,clipboard:a,setDefault:l}={autoPick:!1,clipboard:!1,setDefault:!0,...r};let c;if(0===o.length)c=[new ConfigureCustomRemoteProviderCommandQuickPickItem],t="No auto-detected or configured remote providers found";else{if("default"===s&&o.length>1){const e=o.find((e=>e.default));null!=e&&(o=[e])}c=o.map((e=>new CopyOrOpenRemoteCommandQuickPickItem(e,i,a,l?[Ke.SetRemoteAsDefault]:void 0)))}if(s&&1===o.length)return c[0];const h=n.window.createQuickPick();h.ignoreFocusOut=(0,J.hE)();const u=[];try{const i=await new Promise((i=>{u.push(h.onDidHide((()=>i(void 0))),h.onDidAccept((()=>{0!==h.activeItems.length&&i(h.activeItems[0])})),h.onDidTriggerItemButton((async e=>{e.button===Ke.SetRemoteAsDefault&&e.item instanceof CopyOrOpenRemoteCommandQuickPickItem&&(await e.item.setAsDefault(),i(e.item))}))),h.title=e,h.placeholder=t,h.matchOnDetail=!0,h.items=c,h.show()}));if(null==i)return;return i}finally{h.dispose(),u.forEach((e=>{e.dispose()}))}};var Xt=i(4968),Zt=i(1774);function ei(e,t,i,n){if(1===i.repos.length)return n?`${e}${(0,k.$G)(n,s.d$-e.length)}`:e;let o;return o=null!=t.repo?`${n??""}${(0,k.vk)(s.NE.Dot,2,2)}${t.repo.formattedName}`:1===t.repos.length?`${n??""}${(0,k.vk)(s.NE.Dot,2,2)}${t.repos[0].formattedName}`:`${(0,k.vk)(s.NE.Dot,2,2)}${t.repos.length} repositories`,`${e}${(0,k.$G)(o,s.d$-e.length)}`}async function ti(e,t){return oi(e,["branches"],{buttons:t?.buttons,filter:null!=t?.filter?{branches:t.filter}:void 0,picked:t?.picked,sort:null==t?.sort||{branches:t.sort}})}async function ii(e,t){if(null==e)return[];return(await e.getRemotes(null!=t?.filter?{filter:t.filter}:void 0)).map((e=>Ss(e,null!=t?.picked&&("string"==typeof t.picked?e.name===t.picked:t.picked.includes(e.name)),{buttons:t?.buttons,upstream:!0})))}async function ni(e,{buttons:t,filter:i,includeStatus:n,picked:o}){const r=e instanceof A._j?await e.getWorktrees():e;return Promise.all([...r.filter((e=>null==i||i(e))).map((async e=>function(e,t,i){let n,o,r="";i?.type&&(r="worktree");null!=i?.status&&(r+=i.status.hasChanges?(0,k.vk)(`Uncommited changes (${i.status.getFormattedDiffStatus()})`,r?2:0,0):(0,k.vk)("No changes",r?2:0,0));switch(e.type){case"bare":o="(bare)",n="$(folder)";break;case"branch":o=e.branch,n="$(git-branch)";break;case"detached":o=x.pk.shorten(e.sha),n="$(git-commit)"}const a={label:`${n}${s.NE.Space}${o}${i?.checked?(0,k.vk)("$(check)",2):""}`,description:r,detail:i?.path?`In $(folder) ${e.friendlyPath}`:void 0,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,opened:e.opened,hasChanges:i?.status?.hasChanges};return a}(e,null!=o&&("string"==typeof o?e.uri.toString()===o:o.includes(e.uri.toString())),{buttons:t,path:!0,status:n?await e.getStatus():void 0})))])}async function oi(e,t,{buttons:i,filter:n,picked:o,sort:r}={}){if(null==e)return[];let s,a,l=!1;if(e instanceof A._j||1===e.length){l=!0;const i=e instanceof A._j?e:e[0],[o,c]=await Promise.allSettled([t.includes("branches")?i.getBranches({filter:n?.branches,sort:"boolean"==typeof r?r:r?.branches}):void 0,t.includes("tags")?i.getTags({filter:n?.tags,sort:!0}):void 0]);s=(0,Y.Sb)(o)?.values??[],a=(0,Y.Sb)(c)?.values??[]}else{const[i,o]=await Promise.allSettled([t.includes("branches")?Promise.allSettled(e.map((e=>e.getBranches({filter:n?.branches,sort:"boolean"==typeof r?r:r?.branches})))):void 0,t.includes("tags")?Promise.allSettled(e.map((e=>e.getTags({filter:n?.tags,sort:"boolean"==typeof r?r:r?.tags})))):void 0]),l="fulfilled"===i.status?i.value?.filter((e=>"fulfilled"===e.status))?.map((e=>e.value.values)):void 0,c="fulfilled"===o.status?o.value?.filter((e=>"fulfilled"===e.status))?.map((e=>e.value.values)):void 0;t.includes("branches")&&null!=l&&(s=(0,v.YF)((0,Ht.jV)(l,((e,t)=>e.name===t.name)))),t.includes("tags")&&null!=c&&(a=(0,I.Pj)((0,Ht.jV)(c,((e,t)=>e.name===t.name))))}return null!=s&&0!==s.length||null!=a&&0!==a.length?null==s||0===s.length||null!=a&&0!==a.length?null==a||0===a.length||null!=s&&0!==s.length?[je("Branches"),...await Promise.all(s.filter((e=>!e.remote)).map((e=>ys(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l})))),je("Tags"),...a.map((e=>Ps(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:i,message:!1,ref:l,type:!0}))),je("Remote Branches"),...await Promise.all(s.filter((e=>e.remote)).map((e=>ys(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"}))))]:a.map((e=>Ps(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:i,message:!1,ref:l}))):[je("Branches"),...await Promise.all(s.filter((e=>!e.remote)).map((e=>ys(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"})))),je("Remote Branches"),...await Promise.all(s.filter((e=>e.remote)).map((e=>ys(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:i,current:!!l&&"checkmark",ref:l,status:l,type:"remote"}))))]:[]}function ri(e,t){return async(i,n)=>{let o=!1;if(n.startsWith("#")&&(o=!0,n=n.substring(1)),null==e)return!1;if(Array.isArray(e)){if(1!==e.length)return!1;e=e[0]}if(o&&t?.ranges&&x.pk.isRange(n))return i.items=[Cs(n,e.path,!0,{alwaysShow:!0,buttons:t?.buttons,ref:!1,icon:!1})],!0;if(!await lf.instance.git.validateReference(e.path,n))return!!o&&(i.items=[et(Xe.Back,!0,{label:"Enter a reference or commit SHA"})],!0);if(!o&&await lf.instance.git.hasBranchOrTag(e.path,{filter:{branches:e=>e.name.includes(n),tags:e=>e.name.includes(n)}}))return!1;const r=await lf.instance.git.getCommit(e.path,n);return i.items=[bs(r,!0,{alwaysShow:!0,buttons:t?.buttons,compact:!0,icon:!0})],!0}}async function*si(e,t,i){const n=Bi({title:ei(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter branch name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid branch name"];if("repo"in e){const i=await lf.instance.git.validateBranchOrTagName(e.repo.path,t);return[i,i?void 0:`'${t}' isn't a valid branch name`]}let i=!0;for(const n of e.repos)if(i=await lf.instance.git.validateBranchOrTagName(n.path,t),!i)return[!1,`'${t}' isn't a valid branch name`];return[!0,void 0]}}),o=yield n;return Mi(n,e,o)&&await Ui(n,e,o)?o:Ei}async function*ai(e,t,i){const n=Bi({title:ei(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid remote name"];if(!!/[^a-zA-Z0-9-_.]/.test(t))return[!1,`'${t}' isn't a valid remote name`];if("repo"in e){if(0!==(await e.repo.getRemotes({filter:e=>e.name===t})).length)return[!1,`Remote named '${t}' already exists`]}return[!0,void 0]}}),o=yield n;return Mi(n,e,o)&&await Ui(n,e,o)?o:Ei}async function*li(e,t,i){const n=Bi({title:ei(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter remote URL",validate:e=>{if(null==e)return[!1,void 0];if(0===(e=e.trim()).length)return[!1,"Please enter a valid remote URL"];const t=/^(https?|git|ssh|rsync):\/\//.test(e);return[t,t?void 0:`'${e}' isn't a valid remote URL`]}}),o=yield n;return Mi(n,e,o)&&await Ui(n,e,o)?o:Ei}async function*ci(e,t,i){const n=Bi({title:ei(`${t.title}${i.titleContext??""}`,e,t),placeholder:i.placeholder,value:i.value,prompt:"Enter tag name",validate:async t=>{if(null==t)return[!1,void 0];if(0===(t=t.trim()).length)return[!1,"Please enter a valid tag name"];if("repo"in e){const i=await lf.instance.git.validateBranchOrTagName(e.repo.path,t);return[i,i?void 0:`'${t}' isn't a valid tag name`]}let i=!0;for(const n of e.repos)if(i=await lf.instance.git.validateBranchOrTagName(n.path,t),!i)return[!1,`'${t}' isn't a valid branch name`];return[!0,void 0]}}),o=yield n;return Mi(n,e,o)&&await Ui(n,e,o)?o:Ei}async function*hi(e,t,{filter:i,picked:n,placeholder:o,titleContext:r}){const s=await ti(e.repo,{buttons:[Ke.RevealInSideBar],filter:i,picked:n}),a={title:ei(`${t.title}${r??""}`,e,t),placeholder:0===s.length?`No branches found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===s.length?[et(Xe.Back,!0),et(Xe.Cancel)]:s,onDidClickItemButton:(e,t,{item:i})=>{t===Ke.RevealInSideBar&&rt(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await rt(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},l=yield a;return Li(a,e,l)?l[0].item:Ei}async function*ui(e,t,{filter:i,picked:n,placeholder:o,sort:r,titleContext:s}){const a=await ti(e.repo,{buttons:[Ke.RevealInSideBar],filter:i,picked:n,sort:r}),l={multiselect:0!==a.length,title:ei(`${t.title}${s??""}`,e,t),placeholder:0===a.length?`No branches found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===a.length?[et(Xe.Back,!0),et(Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{t===Ke.RevealInSideBar&&rt(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await rt(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},c=yield l;return Li(l,e,c)?c.map((e=>e.item)):Ei}async function*di(e,t,{filter:i,picked:n,placeholder:o,titleContext:r,value:a,additionalButtons:l,ranges:c}){t.showTags=!0;const h=new Ke.ShowTagsToggle(t.showTags),u=async()=>oi(e.repo,t.showTags?["branches","tags"]:["branches"],{buttons:"boolean"==typeof t.pickCommitForItem?[Ke.PickCommit,Ke.RevealInSideBar]:[Ke.RevealInSideBar],filter:i,picked:n,sort:!0}),d=await u(),p={title:ei(`${t.title}${r??""}`,e,t),placeholder:0===d.length?`No branches${t.showTags?" or tags":""} found in ${e.repo.formattedName}`:`${"string"==typeof o?o:o(t)}${s.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:a,selectValueWhenShown:!0,items:0===d.length?[et(Xe.Back,!0),et(Xe.Cancel)]:d,additionalButtons:[...l??[],h],onDidClickItemButton:(e,i,{item:n})=>i===Ke.PickCommit?(t.pickCommitForItem=!0,!0):(i===Ke.RevealInSideBar&&(x.Wb.isBranch(n)?rt(n,{select:!0,focus:!1,expand:!0}):x.Wb.isTag(n)?Vt(n,{select:!0,focus:!1,expand:!0}):x.Wb.isRevision(n)&&bt(n,{pin:!1,preserveFocus:!0})),!1),onDidClickButton:async(i,n)=>{if(n===h){i.busy=!0;try{t.showTags=!t.showTags,h.on=t.showTags;const n=await u();i.placeholder=0===n.length?`${e.repo.formattedName} has no branches${t.showTags?" or tags":""}`:`${"string"==typeof o?o:o(t)}${s.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=n}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;const t=e.activeItems[0].item;x.Wb.isBranch(t)?rt(t,{select:!0,focus:!1,expand:!0}):x.Wb.isTag(t)?Vt(t,{select:!0,focus:!1,expand:!0}):x.Wb.isRevision(t)&&bt(t,{pin:!1,preserveFocus:!0})},onValidateValue:ri(e.repo,{ranges:c})},m=yield p;return Li(p,e,m)?m[0].item:Ei}async function*pi(e,t,{filter:i,picked:n,placeholder:o,titleContext:a,value:l}){t.showTags=1===e.repos.length;const c=new Ke.ShowTagsToggle(t.showTags),h=()=>oi(e.repos,t.showTags?["branches","tags"]:["branches"],{buttons:[Ke.RevealInSideBar],filter:{branches:1===e.repos.length?void 0:e=>!e.remote,...i},picked:n??e.reference?.ref,sort:{branches:{orderBy:r.Vz.DateDesc},tags:{orderBy:r.RV.DateDesc}}}),u=await h(),d={title:ei(`${t.title}${a??""}`,e,t),placeholder:0===u.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof o?o:o(t)}${s.NE.Space.repeat(3)}(or enter a reference using #)`,matchOnDescription:!0,matchOnDetail:!0,value:l??(x.Wb.isRevision(e.reference)?e.reference.ref:void 0),selectValueWhenShown:!0,items:0===u.length?[et(Xe.Back,!0),et(Xe.Cancel)]:u,additionalButtons:[c],onDidClickItemButton:(e,t,{item:i})=>{t===Ke.RevealInSideBar&&(x.Wb.isBranch(i)?rt(i,{select:!0,focus:!1,expand:!0}):x.Wb.isTag(i)?Vt(i,{select:!0,focus:!1,expand:!0}):x.Wb.isRevision(i)&&bt(i,{pin:!1,preserveFocus:!0}))},onDidClickButton:async(i,n)=>{if(n===c){i.busy=!0;try{t.showTags=!t.showTags,c.on=t.showTags;const n=await h();i.placeholder=0===n.length?`No ${1===e.repos.length?"":"common "}branches${t.showTags?" or tags":""} found in ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`}`:`${"string"==typeof o?o:o(t)}${s.NE.Space.repeat(3)}(or enter a reference using #)`,i.items=n}finally{i.busy=!1}}},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{if(0===e.activeItems.length)return;const t=e.activeItems[0].item;x.Wb.isBranch(t)?rt(t,{select:!0,focus:!1,expand:!0}):x.Wb.isTag(t)?Vt(t,{select:!0,focus:!1,expand:!0}):x.Wb.isRevision(t)&&bt(t,{pin:!1,preserveFocus:!0})},onValidateValue:ri(e.repos)},p=yield d;return Li(d,e,p)?p[0].item:Ei}async function*mi(e,t,{ignoreFocusOut:i,log:n,onDidLoadMore:o,picked:s,placeholder:a,showInSideBarCommand:l,showInSideBarButton:c,titleContext:h}){function u(e){return null==e?[et(Xe.Back,!0),et(Xe.Cancel)]:[...(0,q.UI)(e.commits.values(),(e=>bs(e,null!=s&&("string"==typeof s?e.ref===s:s.includes(e.ref)),{buttons:[Ke.ShowDetailsView,Ke.RevealInSideBar],compact:!0,icon:!0}))),...e?.hasMore?[et(Xe.LoadMore)]:[]]}const d={title:ei(`${t.title}${h??""}`,e,t),placeholder:"string"==typeof a?a:a(t,n),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,value:"string"==typeof s&&0===n?.count?s:void 0,selectValueWhenShown:!0,items:null!=l?[l,...u(n)]:u(n),onDidLoadMore:async e=>(e.keepScrollPosition=!0,n=await(n?.more?.(r.DN.get("advanced.maxListItems"))),o?.(n),"string"!=typeof a&&(e.placeholder=a(t,n)),u(n)),additionalButtons:[...null!=c?.button?[c?.button]:[],...n?.hasMore?[Ke.LoadMore]:[]],onDidClickItemButton:(e,t,i)=>{if(!CommandQuickPickItem.is(i))switch(t){case Ke.ShowDetailsView:bt(i.item,{pin:!1,preserveFocus:!0});break;case Ke.RevealInSideBar:vt(i.item,{select:!0,focus:!1,expand:!0})}},onDidClickButton:(e,t)=>{if(null==n)return;const i=e.activeItems.filter((e=>!CommandQuickPickItem.is(e)));t===c?.button&&c.onDidClick(i)},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{if(0===e.activeItems.length)return;const i=e.activeItems.filter((e=>!CommandQuickPickItem.is(e)));"ctrl+right"===t?bt(i[0].item,{pin:!1,preserveFocus:!0}):await vt(i[0].item,{select:!0,focus:!1,expand:!0})},onValidateValue:ri(e.repo,{buttons:[Ke.ShowDetailsView,Ke.RevealInSideBar]})},p=yield d;return Li(d,e,p)?CommandQuickPickItem.is(p[0])?(Gi(e),await p[0].execute(),Ei):p[0].item:Ei}function*gi(e,t,{log:i,onDidLoadMore:n,picked:o,placeholder:s,titleContext:a}){function l(e){return null==e?[et(Xe.Back,!0),et(Xe.Cancel)]:[...(0,q.UI)(e.commits.values(),(e=>bs(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:[Ke.ShowDetailsView,Ke.RevealInSideBar],compact:!0,icon:!0})))]}const c={title:ei(`${t.title}${a??""}`,e,t),multiselect:null!=i,placeholder:"string"==typeof s?s:s(t,i),matchOnDescription:!0,matchOnDetail:!0,items:l(i),onDidLoadMore:async e=>(e.keepScrollPosition=!0,i=await(i?.more?.(r.DN.get("advanced.maxListItems"))),n?.(i),"string"!=typeof s&&(e.placeholder=s(t,i)),l(i)),additionalButtons:[...i?.hasMore?[Ke.LoadMore]:[]],onDidClickItemButton:(e,t,{item:i})=>{switch(t){case Ke.ShowDetailsView:bt(i,{pin:!1,preserveFocus:!0});break;case Ke.RevealInSideBar:vt(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&("ctrl+right"===t?bt(e.activeItems[0].item,{pin:!1,preserveFocus:!0}):await vt(e.activeItems[0].item,{select:!0,focus:!1,expand:!0}))}},h=yield c;return Li(c,e,h)?h.map((e=>e.item)):Ei}async function*fi(e,t,i="Choose contributors"){const n=(await lf.instance.git.getOrOpenScmRepository(e.repo.path))?.inputBox.value,o={title:ei(t.title,e,t),allowEmpty:!0,multiselect:!0,placeholder:i,matchOnDescription:!0,items:(await lf.instance.git.getContributors(e.repo.path)).map((e=>{return t=e,i=n?.includes(e.getCoauthor()),o={buttons:[Ke.RevealInSideBar]},{label:t.label,description:t.email,alwaysShow:o?.alwaysShow,buttons:o?.buttons,picked:i,item:t};var t,i,o})),onDidClickItemButton:(e,t,{item:i})=>{t===Ke.RevealInSideBar&&St(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&St(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},r=yield o;return Li(o,e,r)?r.map((e=>e.item)):Ei}async function*wi(e,t,{filter:i,picked:n,placeholder:o,titleContext:r}){const s=await ii(e.repo,{buttons:[Ke.RevealInSideBar],filter:i,picked:n}),a={title:ei(`${t.title}${r??""}`,e,t),placeholder:0===s.length?`No remotes found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===s.length?[et(Xe.Back,!0),et(Xe.Cancel)]:s,onDidClickItemButton:(e,t,{item:i})=>{t===Ke.RevealInSideBar&&Pt(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await Pt(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},l=yield a;return Li(a,e,l)?l[0].item:Ei}async function*_i(e,t,i="Choose a repository"){if("string"==typeof e.repo&&(e.repo=lf.instance.git.getRepository(e.repo),null!=e.repo))return e.repo;const n=e.repo??await lf.instance.git.getOrOpenRepositoryForEditor(),o={title:t.title,placeholder:i,items:0===t.repos.length?[et(Xe.Cancel)]:await Promise.all(t.repos.map((e=>ks(e,e.id===n?.id,{branch:!0,buttons:[Ke.RevealInSideBar],fetched:!0,status:!0})))),onDidClickItemButton:(e,i,{item:n})=>{i===Ke.RevealInSideBar&&Et(n.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&Et(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}},r=yield o;return Li(o,e,r)?r[0].item:Ei}async function*vi(e,t,i){let n;if(i={placeholder:"Choose repositories",skipIfPossible:!1,...i},null!=e.repos)if((0,Ht.GI)(e.repos)){if(n=(0,Ht.DZ)(e.repos,(e=>t.repos.find((t=>t.path===e)))),i.skipIfPossible&&0!==n.length&&e.repos.length===n.length)return n}else n=e.repos;else{const e=await lf.instance.git.getOrOpenRepositoryForEditor();n=null!=e?[e]:[]}const o={multiselect:!0,title:t.title,placeholder:i.placeholder,items:0===t.repos.length?[et(Xe.Cancel)]:await Promise.all(t.repos.map((e=>ks(e,n.some((t=>t.id===e.id)),{branch:!0,buttons:[Ke.RevealInSideBar],fetched:!0,status:!0})))),onDidClickItemButton:(e,i,{item:n})=>{i===Ke.RevealInSideBar&&Et(n.path,t.associatedView,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:e=>{0!==e.activeItems.length&&Et(e.activeItems[0].item.path,t.associatedView,{select:!0,focus:!1,expand:!0})}},r=yield o;return Li(o,e,r)?r.map((e=>e.item)):Ei}function*yi(e,t,{ignoreFocusOut:i,stash:n,picked:o,placeholder:r,titleContext:s}){const a={title:ei(`${t.title}${s??""}`,e,t),placeholder:"string"==typeof r?r:r(t,n),ignoreFocusOut:i,matchOnDescription:!0,matchOnDetail:!0,items:null==n?[et(Xe.Back,!0),et(Xe.Cancel)]:[...(0,q.UI)(n.commits.values(),(e=>bs(e,null!=o&&("string"==typeof o?e.ref===o:o.includes(e.ref)),{buttons:[Ke.ShowDetailsView],compact:!0,icon:!0})))],onDidClickItemButton:(e,t,{item:i})=>{t===Ke.ShowDetailsView&&Wt(i,{pin:!1,preserveFocus:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await Wt(e.activeItems[0].item,{pin:!1,preserveFocus:!0})}},l=yield a;return Li(a,e,l)?l[0].item:Ei}async function*bi(e,t,{filter:i,picked:n,placeholder:o,titleContext:r}){const s=await async function(e,t){return oi(e,["tags"],{buttons:t?.buttons,filter:null!=t?.filter?{tags:t.filter}:void 0,picked:t?.picked,sort:null==t?.sort||{tags:t.sort}})}(e.repo,{buttons:[Ke.RevealInSideBar],filter:i,picked:n}),a={multiselect:0!==s.length,title:ei(`${t.title}${r??""}`,e,t),placeholder:0===s.length?`No tags found in ${e.repo.formattedName}`:o,matchOnDetail:!0,items:0===s.length?[et(Xe.Back,!0),et(Xe.Cancel)]:s,onDidClickItemButton:(e,t,{item:i})=>{t===Ke.RevealInSideBar&&Vt(i,{select:!0,focus:!1,expand:!0})},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await Vt(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},l=yield a;return Li(a,e,l)?l.map((e=>e.item)):Ei}async function*Ci(e,t,{filter:i,includeStatus:n,picked:o,placeholder:r,titleContext:s}){const a=await ni(t.worktrees??e.repo,{buttons:[Ke.OpenInNewWindow,Ke.RevealInSideBar],filter:i,includeStatus:n,picked:o}),l={title:ei(`${t.title}${s??""}`,e,t),placeholder:0===a.length?`No worktrees found in ${e.repo.formattedName}`:r,matchOnDetail:!0,items:0===a.length?[et(Xe.Back,!0),et(Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case Ke.OpenInNewWindow:(0,J.ic)(i.uri,{location:J.Tc.NewWindow});break;case Ke.RevealInSideBar:jt(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await jt(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},c=yield l;return Li(l,e,c)?c[0].item:Ei}async function*Si(e,t,{filter:i,includeStatus:n,picked:o,placeholder:r,titleContext:s}){const a=await ni(t.worktrees??e.repo,{buttons:[Ke.OpenInNewWindow,Ke.RevealInSideBar],filter:i,includeStatus:n,picked:o}),l={multiselect:0!==a.length,title:ei(`${t.title}${s??""}`,e,t),placeholder:0===a.length?`No worktrees found in ${e.repo.formattedName}`:r,matchOnDetail:!0,items:0===a.length?[et(Xe.Back,!0),et(Xe.Cancel)]:a,onDidClickItemButton:(e,t,{item:i})=>{switch(t){case Ke.OpenInNewWindow:(0,J.ic)(i.uri,{location:J.Tc.NewWindow});break;case Ke.RevealInSideBar:jt(i,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async e=>{0!==e.activeItems.length&&await jt(e.activeItems[0].item,{select:!0,focus:!1,expand:!0})}},c=yield l;return Li(l,e,c)?c.map((e=>e.item)):Ei}async function*ki(e,t){const i={title:ei(x.Wb.toString(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:x.Wb.toString(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:await Pi(e),onDidClickItemButton:(t,i,n)=>{switch(i){case Ke.ShowDetailsView:x.Wb.isStash(e.reference)?Wt(e.reference,{pin:!1,preserveFocus:!0}):bt(e.reference,{pin:!1,preserveFocus:!0});break;case Ke.RevealInSideBar:x.Wb.isStash(e.reference)?Mt(e.reference,{select:!0,focus:!1,expand:!0}):vt(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},n=yield i;return Li(i,e,n)?n[0]:Ei}async function Pi(e){const t=[new CommitOpenDetailsCommandQuickPickItem(e.reference),new CommitOpenInGraphCommandQuickPickItem(e.reference)];let i;if((0,y.G2)(e.reference))t.push(je("Actions"),new GitCommandQuickPickItem("Apply Stash...",{command:"stash",state:{subcommand:"apply",repo:e.repo,reference:e.reference}}),new GitCommandQuickPickItem("Delete Stash...",{command:"stash",state:{subcommand:"drop",repo:e.repo,reference:e.reference}}),je(),new CommitCopyMessageQuickPickItem(e.reference));else{const n=await lf.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});n?.length&&t.push(je(O.ss.getHighlanderProviderName(n)??"Remote"),new OpenRemoteResourceCommandQuickPickItem(n,{type:Jt.J.Commit,sha:e.reference.sha}),new CopyRemoteResourceCommandQuickPickItem(n,{type:Jt.J.Commit,sha:e.reference.sha})),t.push(je("Actions"));const o=await lf.instance.git.getBranch(e.repo.path),[r,s]=await Promise.all([null!=o?lf.instance.git.getCommitBranches(e.repo.path,e.reference.ref,{branch:o.name,commitDate:(0,y.f_)(e.reference)?e.reference.committer.date:void 0}):void 0,o?.remote||null==o?.upstream?void 0:e.reference.isPushed()]);Boolean(r?.length)?(i=!s,i&&t.push(new GitCommandQuickPickItem("Push to Commit...",{command:"push",state:{repos:e.repo,reference:e.reference}})),t.push(new GitCommandQuickPickItem("Revert Commit...",{command:"revert",state:{repo:e.repo,references:[e.reference]}}),new GitCommandQuickPickItem(`Reset ${o?.name??"Current Branch"} to Commit...`,{command:"reset",state:{repo:e.repo,reference:e.reference}}),new GitCommandQuickPickItem(`Reset ${o?.name??"Current Branch"} to Previous Commit...`,{command:"reset",state:{repo:e.repo,reference:x.Wb.create(`${e.reference.ref}^`,e.reference.repoPath,{refType:"revision",name:`${e.reference.name}^`,message:e.reference.message})}}))):t.push(new GitCommandQuickPickItem("Cherry Pick Commit...",{command:"cherry-pick",state:{repo:e.repo,references:[e.reference]}})),t.push(new GitCommandQuickPickItem(`Rebase ${o?.name??"Current Branch"} onto Commit...`,{command:"rebase",state:{repo:e.repo,reference:e.reference}}),new GitCommandQuickPickItem("Switch to Commit...",{command:"switch",state:{repos:[e.repo],reference:e.reference}}),je(),new GitCommandQuickPickItem("Create Branch at Commit...",{command:"branch",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),new GitCommandQuickPickItem("Create Tag at Commit...",{command:"tag",state:{subcommand:"create",repo:e.repo,reference:e.reference}}),je("Copy"),new CommitCopyIdQuickPickItem(e.reference),new CommitCopyMessageQuickPickItem(e.reference))}return t.push(je("Open"),new CommitOpenAllChangesCommandQuickPickItem(e.reference),new CommitOpenAllChangesWithWorkingCommandQuickPickItem(e.reference),new CommitOpenAllChangesWithDiffToolCommandQuickPickItem(e.reference),je(),new CommitOpenFilesCommandQuickPickItem(e.reference),new CommitOpenRevisionsCommandQuickPickItem(e.reference)),t.push(je("Compare"),new CommitCompareWithHEADCommandQuickPickItem(e.reference),new CommitCompareWithWorkingCommandQuickPickItem(e.reference)),t.push(je(),new CommitOpenDirectoryCompareCommandQuickPickItem(e.reference),new CommitOpenDirectoryCompareWithWorkingCommandQuickPickItem(e.reference)),t.push(je("Browse"),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{openInNewWindow:!1}),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{before:!0,openInNewWindow:!1}),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{openInNewWindow:!0}),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{before:!0,openInNewWindow:!0})),t.splice(0,0,new CommitFilesQuickPickItem(e.reference,{unpublished:i,hint:"Click to see all changed files"})),t}function*Ri(e,t,i){e.reference.files;const n={title:ei(x.Wb.toString(e.reference,{capitalize:!0,icon:!1}),e,t),placeholder:x.Wb.toString(e.reference,{capitalize:!0,icon:!1}),ignoreFocusOut:!0,items:[new CommitFilesQuickPickItem(e.reference,{picked:null==e.fileName,hint:`Click to see ${(0,y.G2)(e.reference)?"stash":"commit"} actions`}),je("Files"),...e.reference.files?.map((t=>new CommitFileQuickPickItem(e.reference,t,i?.picked===t.path)))??[]],matchOnDescription:!0,onDidClickItemButton:(t,i,n)=>{switch(i){case Ke.ShowDetailsView:x.Wb.isStash(e.reference)?Wt(e.reference,{pin:!1,preserveFocus:!0}):bt(e.reference,{pin:!1,preserveFocus:!0});break;case Ke.RevealInSideBar:x.Wb.isStash(e.reference)?Mt(e.reference,{select:!0,focus:!1,expand:!0}):vt(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},o=yield n;return Li(n,e,o)?o[0]:Ei}async function*Di(e,t){const i={title:ei(x.Wb.toString(e.reference,{capitalize:!0,icon:!1}),e,t,`${(0,k.vk)(s.NE.Dot,2,2)}${(0,Zt.d)(e.fileName,{fileOnly:!0})}`),placeholder:`${(0,Zt.d)(e.fileName,{relativeTo:e.repo.path})} in ${x.Wb.toString(e.reference,{icon:!1})}`,ignoreFocusOut:!0,items:await $i(e),matchOnDescription:!0,onDidClickItemButton:(t,i,n)=>{switch(i){case Ke.ShowDetailsView:x.Wb.isStash(e.reference)?Wt(e.reference,{pin:!1,preserveFocus:!0}):bt(e.reference,{pin:!1,preserveFocus:!0});break;case Ke.RevealInSideBar:x.Wb.isStash(e.reference)?Mt(e.reference,{select:!0,focus:!1,expand:!0}):vt(e.reference,{select:!0,focus:!1,expand:!0})}},keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},n=yield i;return Li(i,e,n)?n[0]:Ei}async function $i(e){const t=await e.reference.findFile(e.fileName);if(null==t)return[];const i=[new CommitOpenDetailsCommandQuickPickItem(e.reference),new CommitOpenInGraphCommandQuickPickItem(e.reference)];if((0,y.G2)(e.reference))i.push(je(),new CommitCopyMessageQuickPickItem(e.reference),je("Actions"),new CommitApplyFileChangesCommandQuickPickItem(e.reference,t),new CommitRestoreFileChangesCommandQuickPickItem(e.reference,t),je(),new CommitCopyMessageQuickPickItem(e.reference));else{const n=await lf.instance.git.getRemotesWithProviders(e.repo.path,{sort:!0});n?.length&&i.push(je(O.ss.getHighlanderProviderName(n)??"Remote"),new OpenRemoteResourceCommandQuickPickItem(n,{type:Jt.J.Revision,fileName:e.fileName,commit:e.reference}),new CopyRemoteResourceCommandQuickPickItem(n,{type:Jt.J.Revision,fileName:e.fileName,commit:e.reference}),je(),new OpenRemoteResourceCommandQuickPickItem(n,{type:Jt.J.Commit,sha:e.reference.ref}),new CopyRemoteResourceCommandQuickPickItem(n,{type:Jt.J.Commit,sha:e.reference.sha})),i.push(je("Actions"),new CommitApplyFileChangesCommandQuickPickItem(e.reference,t),new CommitRestoreFileChangesCommandQuickPickItem(e.reference,t),je("Copy"),new CommitCopyIdQuickPickItem(e.reference),new CommitCopyMessageQuickPickItem(e.reference))}return i.push(je("Open"),new CommitOpenChangesCommandQuickPickItem(e.reference,e.fileName),new CommitOpenChangesWithWorkingCommandQuickPickItem(e.reference,e.fileName),new CommitOpenChangesWithDiffToolCommandQuickPickItem(e.reference,e.fileName),je()),"D"!==t.status&&i.push(new CommitOpenFileCommandQuickPickItem(e.reference,t)),i.push(new CommitOpenRevisionCommandQuickPickItem(e.reference,t)),i.push(je("Compare"),new CommitCompareWithHEADCommandQuickPickItem(e.reference),new CommitCompareWithWorkingCommandQuickPickItem(e.reference)),i.push(je("Browse"),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{openInNewWindow:!1}),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{before:!0,openInNewWindow:!1}),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{openInNewWindow:!0}),new CommitBrowseRepositoryFromHereCommandQuickPickItem(e.reference,{before:!0,openInNewWindow:!0})),i.splice(0,0,new CommitFilesQuickPickItem(e.reference,{file:t,hint:"Click to see all changed files"})),i}function*Ti(e,t){const i=t.status.getUpstreamStatus({expand:!0,separator:", "}),n=t.status.getFormattedDiffStatus({expand:!0,separator:", "}),o={title:ei(t.title,e,t),placeholder:`${i?`${i}, ${n}`:n}`,ignoreFocusOut:!0,items:Fi(e,t),keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{0!==e.activeItems.length&&await e.activeItems[0].onDidPressKey(t)}},r=yield o;return Li(o,e,r)?r[0]:Ei}function Fi(e,t){const i=[],n=t.status.computeWorkingTreeStatus();let o;return o=0===n.staged&&0===n.unstaged?"No working tree changes":`$(files) ${n.staged?`${(0,k._6)("staged file",n.staged)} (${n.stagedStatus})`:""}${n.unstaged?`${n.staged?", ":""}${(0,k._6)("unstaged file",n.unstaged)} (${n.unstagedStatus})`:""}`,t.status.upstream?(0===t.status.state.ahead&&0===t.status.state.behind?i.push(et(Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is up to date with $(git-branch) ${t.status.upstream}`,detail:o})):0!==t.status.state.ahead&&0!==t.status.state.behind?i.push(et(Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has diverged from $(git-branch) ${t.status.upstream}`,detail:o})):0!==t.status.state.ahead?i.push(et(Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is ahead of $(git-branch) ${t.status.upstream}`,detail:o})):0!==t.status.state.behind&&i.push(et(Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} is behind $(git-branch) ${t.status.upstream}`,detail:o})),0!==t.status.state.behind&&i.push(new GitCommandQuickPickItem(`$(cloud-download) ${(0,k._6)("commit",t.status.state.behind)} behind`,{command:"log",state:{repo:e.repo,reference:x.Wb.create(x.pk.createRange(t.status.ref,t.status.upstream),e.repo.path)}})),0!==t.status.state.ahead&&i.push(new GitCommandQuickPickItem(`$(cloud-upload) ${(0,k._6)("commit",t.status.state.ahead)} ahead`,{command:"log",state:{repo:e.repo,reference:x.Wb.create(x.pk.createRange(t.status.upstream,t.status.ref),e.repo.path)}}))):i.push(et(Xe.Noop,!0,{label:`$(git-branch) ${t.status.branch} has no upstream`,detail:o})),t.status.files.length&&i.push(new OpenChangedFilesCommandQuickPickItem(n.stagedAddsAndChanges.concat(n.unstagedAddsAndChanges))),n.staged>0&&i.push(new OpenChangedFilesCommandQuickPickItem(n.stagedAddsAndChanges,{label:"$(files) Open Staged Files"})),n.unstaged>0&&i.push(new OpenChangedFilesCommandQuickPickItem(n.unstagedAddsAndChanges,{label:"$(files) Open Unstaged Files"})),t.status.files.length&&i.push(new CommandQuickPickItem("$(x) Close Unchanged Files",s.Gh.CloseUnchangedFiles)),i}async function*xi(e,t,i){const n=await lf.instance.git.access(i,e.repo.path);if(n.allowed)return;const o=[];let r;if(!1===n.subscription.current.account?.verified)o.push(et(Xe.RequiresVerification,!0)),r="You must verify your email address before you can continue";else{if(null==n.subscription.required)return;r="You need GitLens Pro to access GitLens+ features on this repo",(0,Xt.aG)(n.subscription.required)&&null!=n.subscription.current.account?o.push(et(Xe.RequiresPaidSubscription,!0)):null!=n.subscription.current.account||(0,Xt.gA)(n.subscription.current)?o.push(et(Xe.ExtendTrial)):o.push(et(Xe.StartPreviewTrial,!0))}const s={title:ei(t.title,e,t),placeholder:r,items:[...o,et(Xe.Cancel)]};return Li(s,e,yield s)?void 0:Ei}function Oi(e){return"object"==typeof e&&null!=e.show}function Ai(e){return"object"==typeof e&&null==e.items&&null==e.show}function Ii(e){return"object"==typeof e&&null!=e.items}const Ei=Symbol("BreakStep");class QuickCommand{constructor(e,t,i,n,o={}){this.container=e,this.key=t,this.label=i,this.title=n,this._picked=!1,this._pickedVia="menu",this.description=o.description,this.detail=o.detail}get canConfirm(){return!0}get canSkipConfirm(){return!0}get picked(){return this._picked}set picked(e){this._picked=e,e||(this._pickedVia="menu")}get pickedVia(){return this._pickedVia}set pickedVia(e){this._pickedVia=e}get skipConfirmKey(){return`${this.key}:${this.pickedVia}`}get value(){return this._currentStep}confirm(e){return!this.canConfirm||!this.canSkipConfirm||(null!=e?e:!r.DN.get("gitCommands.skipConfirmations").includes(this.skipConfirmKey))}isMatch(e){return this.key===e}isFuzzyMatch(e){return this.label===e}executeSteps(){return this.steps(this.getStepState(!0))}async previous(){return(await this.next(Xe.Back)).value}async next(e){null==this._stepsIterator&&(this._stepsIterator=this.steps(this.getStepState(!1)));const t=await this._stepsIterator.next(e);return t.done&&(this.initialState=void 0,this._stepsIterator=void 0),t.value===Ei?(this._currentStep=void 0,{...t,value:void 0}):(this._currentStep=t.value,t)}async retry(){return await this.next(Xe.Noop),this.value}canStepsContinue(e){return e.counter>=(e.startingStep??0)}createConfirmStep(e,t,i,n={}){return Wi(e,t,{title:this.title},i,n)}getStepState(e){return{counter:0,...this.initialState,startingStep:e?this.initialState?.counter??0:0}}}function Ni(e){return e instanceof QuickCommand}async function Ui(e,t,i){if(!Mi(e,t,i))return!1;const[n]=await(e.validate?.(i))??[!0];return!!n&&(t.counter++,!0)}function Li(e,t,i){return!!Mi(e,t,i)&&(!!(e.validate?.(i)??1)&&(t.counter++,!0))}function Mi(e,t,i){if(null==i)return!1;if(Ze(i)){switch(i){case Xe.Back:t.counter--,t.counter<=(t.startingStep??0)&&(t.counter=0);break;case Xe.Cancel:Gi(t)}return!1}return!0}function Wi(e,t,i,n,o={}){return{placeholder:`Confirm ${i.title}`,title:e,ignoreFocusOut:!0,items:[...t,n??et(Xe.Cancel)],selectedItems:[t.find((e=>e.picked))??t[0]],...o}}function Bi(e){return e.ignoreFocusOut=!0,e}function Gi(e){e.counter=-1}function Vi(e){if(!(e.repo instanceof A._j&&"create"===e.subcommand))throw new Error("Missing repository")}function Hi(e){if(!(e.repo instanceof A._j&&"delete"===e.subcommand))throw new Error("Missing repository")}function qi(e){if(!(e.repo instanceof A._j&&"rename"===e.subcommand))throw new Error("Missing repository")}function ji(e){if(!Array.isArray(e.references))throw new Error("Missing branches")}const Yi=new Map([["create","Create"],["delete","Delete"],["rename","Rename"]]);function Qi(e,t){return null==t?e:`${Yi.get(t)} ${e}`}class BranchGitCommand extends QuickCommand{constructor(e,t){super(e,"branch","branch","Branch",{description:"create, rename, or delete branches"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t?.state.subcommand){case"create":case"rename":null!=t.state.reference&&i++,null!=t.state.name&&i++;break;case"delete":null==t.state.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&"rename"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={associatedView:this.container.branchesView,repos:this.container.git.openRepositories,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===Ei)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=Qi("delete"===e.subcommand?"Branches":this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)continue;e.repo=i}switch(e.subcommand){case"create":Vi(e),yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":Hi(e),yield*this.deleteCommandSteps(e,t);break;case"rename":qi(e),yield*this.renameCommandSteps(e,t),e.name=void 0;break;default:Gi(e)}i&&e.counter--}return e.counter<0?Ei:void 0}*pickSubcommandStep(e){const t={title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new branch",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified branches",picked:"delete"===e.subcommand,item:"delete"},{label:"rename",description:"renames the specified branch",picked:"rename"===e.subcommand,item:"rename"}],buttons:[n.QuickInputButtons.Back]},i=yield t;return Li(t,e,i)?i[0].item:Ei}async*createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*di(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new branch from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:x.Wb.isRevision(e.reference)?e.reference.ref:void 0});if(i===Ei)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*si(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${x.Wb.toString(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:e.name??x.Wb.getNameWithoutRemote(e.reference)});if(i===Ei)continue;e.name=i}if(this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===Ei)continue;e.flags=i}Gi(e),e.flags.includes("--switch")?await e.repo.switch(e.reference.ref,{createBranch:e.name}):e.repo.branch(...e.flags,e.name,e.reference.ref)}}*createCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:t.title,detail:`Will create a new branch named ${e.name} from ${x.Wb.toString(e.reference)}`}),Qe(e.flags,["--switch"],{label:`${t.title} and Switch`,description:"--switch",detail:`Will create and switch to a new branch named ${e.name} from ${x.Wb.toString(e.reference)}`})],t),n=yield i;return Li(i,e,n)?n[0].item:Ei}async*deleteCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||Array.isArray(e.references)&&0===e.references.length){t.title=Qi("Branches",e.subcommand);const i=yield*ui(e,t,{filter:e=>!e.current,picked:e.references?.map((e=>e.ref)),placeholder:"Choose branches to delete",sort:{current:!1,missingUpstream:!0}});if(i===Ei)break;e.references=i}t.title=Qi((0,k._6)("Branch",e.references.length,{only:!0,plural:"Branches"}),e.subcommand),ji(e);const i=yield*this.deleteCommandConfirmStep(e,t);i!==Ei&&(e.flags=i,Gi(e),e.repo.branchDelete(e.references,{force:e.flags.includes("--force"),remote:e.flags.includes("--remotes")}))}}*deleteCommandConfirmStep(e,t){const i=[Qe(e.flags,[],{label:t.title,detail:`Will delete ${x.Wb.toString(e.references)}`})];e.references.every((e=>e.remote))||(i.push(Qe(e.flags,["--force"],{label:`Force ${t.title}`,description:"--force",detail:`Will forcibly delete ${x.Wb.toString(e.references)}`})),e.references.some((e=>null!=e.upstream))&&i.push(Qe(e.flags,["--remotes"],{label:`${t.title} & Remote${e.references.filter((e=>!e.remote)).length>1?"s":""}`,description:"--remotes",detail:`Will delete ${x.Wb.toString(e.references)} and any remote tracking branches`}),Qe(e.flags,["--force","--remotes"],{label:`Force ${t.title} & Remote${e.references.filter((e=>!e.remote)).length>1?"s":""}`,description:"--force --remotes",detail:`Will forcibly delete ${x.Wb.toString(e.references)} and any remote tracking branches`})));const n=Wi(ei(`Confirm ${t.title}`,e,t),i,t),o=yield n;return Li(n,e,o)?o[0].item:Ei}async*renameCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*hi(e,t,{filter:e=>!e.remote,picked:e.reference?.ref,placeholder:"Choose a branch to rename"});if(i===Ei)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*si(e,t,{placeholder:`Please provide a new name for ${x.Wb.toString(e.reference,{icon:!1})}`,titleContext:` ${x.Wb.toString(e.reference,!1)}`,value:e.name??e.reference.name});if(i===Ei)continue;e.name=i}const i=yield*this.renameCommandConfirmStep(e,t);i!==Ei&&(e.flags=i,Gi(e),e.repo.branch(...e.flags,e.reference.ref,e.name))}}*renameCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,["-m"],{label:t.title,detail:`Will rename ${x.Wb.toString(e.reference)} to ${e.name}`})],t),n=yield i;return Li(i,e,n)?n[0].item:Ei}}class CherryPickGitCommand extends QuickCommand{constructor(e,t){super(e,"cherry-pick","cherry-pick","Cherry Pick",{description:"integrates changes from specified commits into the current branch"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){e.repo.cherryPick(...e.flags,...e.references.map((e=>e.ref)).reverse())}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"cherry"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${x.Wb.toString(t.destination,{icon:!1})}`,e.counter<2||null==e.references||0===e.references.length){const n=yield*di(e,t,{filter:{branches:e=>e.id!==t.destination.id},placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to cherry-pick from`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.references?.[0]?.ref:void 0});if(n===Ei){i&&e.counter--;continue}x.Wb.isRevision(n)?(e.references=[n],t.selectedBranchOrTag=void 0):t.selectedBranchOrTag=n}if(e.counter<3&&null!=t.selectedBranchOrTag){const i=x.pk.createRange(t.destination.ref,t.selectedBranchOrTag.ref);let n=t.cache.get(i);null==n&&(n=this.container.git.getLog(e.repo.path,{ref:i,merges:!1}),t.cache.set(i,n));const o=yield*gi(e,t,{log:await n,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),picked:e.references?.map((e=>e.ref)),placeholder:(e,t)=>null==t?`No pickable commits found on ${x.Wb.toString(e.selectedBranchOrTag,{icon:!1})}`:`Choose commits to cherry-pick into ${x.Wb.toString(e.destination,{icon:!1})}`});if(o===Ei)continue;e.references=o}if(this.confirm(e.confirm)){const i=yield*this.confirmStep(e,t);if(i===Ei)continue;e.flags=i}Gi(e),this.execute(e)}return e.counter<0?Ei:void 0}*confirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:this.title,detail:`Will apply ${x.Wb.toString(e.references)} to ${x.Wb.toString(t.destination)}`}),Qe(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will edit and apply ${x.Wb.toString(e.references)} to ${x.Wb.toString(t.destination)}`}),Qe(e.flags,["--no-commit"],{label:`${this.title} without Committing`,description:"--no-commit",detail:`Will apply ${x.Wb.toString(e.references)} to ${x.Wb.toString(t.destination)} without Committing`})],t),n=yield i;return Li(i,e,n)?n[0].item:Ei}}class CoAuthorsGitCommand extends QuickCommand{constructor(e,t){super(e,"co-authors","co-authors","Add Co-Authors",{description:"adds co-authors to a commit message"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.contributors||Array.isArray(t.state.contributors)&&0===t.state.contributors.length||i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async execute(e){const t=await this.container.git.getOrOpenScmRepository(e.repo.path);if(null==t)return;let i=t.inputBox.value;const n=i.indexOf("Co-authored-by: ");-1!==n&&(i=i.substring(0,n-1).trimRight()),null==e.contributors||Array.isArray(e.contributors)||(e.contributors=[e.contributors]);for(const t of e.contributors){let e;e=i.includes("Co-authored-by: ")?"\n":0!==i.length&&i.endsWith("\n")?"\n\n":"\n\n\n",i+=`${e}Co-authored-by: ${t.getCoauthor()}`}t.inputBox.value=i,await(0,ke.dO)(s.nA.ShowSCM)}async*steps(e){const t={repos:this.container.git.openRepositories,activeRepo:void 0,associatedView:this.container.contributorsView,title:this.title},i=await this.container.git.getOpenScmRepositories();i.length&&(t.repos=t.repos.filter((e=>i.find((t=>(0,j.AH)(t.rootUri.fsPath)===e.path)))),t.activeRepo=await this.container.git.getOrOpenRepositoryForEditor(),null==t.activeRepo||i.some((e=>e.rootUri.fsPath===t.activeRepo.path))||(t.activeRepo=void 0));let n=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(n=!1,1===t.repos.length)n=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(e.counter<2||null==e.contributors){const i=yield*fi(e,t,"Choose contributors to add as co-authors");if(i===Ei){n&&e.counter--;continue}e.contributors=i}Gi(e),this.execute(e)}return e.counter<0?Ei:void 0}}class FetchGitCommand extends QuickCommand{constructor(e,t){super(e,"fetch","fetch","Fetch",{description:"fetches changes from one or more remotes"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){return x.Wb.isBranch(e.reference)?e.repos[0].fetch({branch:e.reference}):this.container.git.fetchAll(e.repos,{all:e.flags.includes("--all"),prune:e.flags.includes("--prune")})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,Ht.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repos=[t.repos[0]];else{const i=yield*vi(e,t,{skipIfPossible:e.counter>=1});if(i===Ei)break;e.repos=i}if(this.confirm(e.confirm)){const n=yield*this.confirmStep(e,t);if(n===Ei){i&&e.counter--;continue}e.flags=n}Gi(e),this.execute(e)}return e.counter<0?Ei:void 0}async*confirmStep(e,t){let i,n="";if(1===e.repos.length){const t=await e.repos[0].getLastFetched();0!==t&&(n=`${(0,k.vk)(s.NE.Dot,2,2)}Last fetched ${(0,C.Zh)(new Date(t))}`)}if(1===e.repos.length&&x.Wb.isBranch(e.reference))i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t,n),[Qe(e.flags,[],{label:this.title,detail:`Will fetch ${x.Wb.toString(e.reference)}`})]);else{const o=1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`;i=Wi(ei(`Confirm ${this.title}`,e,t,n),[Qe(e.flags,[],{label:this.title,detail:`Will fetch ${o}`}),Qe(e.flags,["--prune"],{label:`${this.title} & Prune`,description:"--prune",detail:`Will fetch and prune ${o}`}),Qe(e.flags,["--all"],{label:`${this.title} All`,description:"--all",detail:`Will fetch all remotes of ${o}`}),Qe(e.flags,["--all","--prune"],{label:`${this.title} All & Prune`,description:"--all --prune",detail:`Will fetch and prune all remotes of ${o}`})],t)}const o=yield i;return Li(i,e,o)?o[0].item:Ei}}function zi(e){if(!(e.repo instanceof A._j))throw new Error("Missing repository")}class LogGitCommand extends QuickCommand{constructor(e,t){super(e,"log","history","Commits",{description:"aka log, shows commit history"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&(i++,"HEAD"!==t.state.reference&&x.Wb.isRevision(t.state.reference)&&!x.Wb.isRevisionRange(t.state.reference)&&i++),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"log"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,selectedBranchOrTag:void 0,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(zi(e),"HEAD"===e.reference){const t=await e.repo.getBranch();e.reference=t}if(e.counter<2||null==e.reference){const n=yield*di(e,t,{placeholder:"Choose a branch or tag to show its commit history",picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,ranges:!0});if(n===Ei){i&&e.counter--;continue}e.reference=n,t.selectedBranchOrTag=void 0}if(x.Wb.isRevision(e.reference)&&!x.Wb.isRevisionRange(e.reference)||(t.selectedBranchOrTag=e.reference),t.title=`${this.title}${(0,k.vk)(s.NE.Dot,2,2)}${x.Wb.toString(t.selectedBranchOrTag,{icon:!1})}`,e.fileName&&(t.title+=`${(0,k.vk)(s.NE.Dot,2,2)}${(0,Zt.d)(e.fileName,{fileOnly:!0,truncateTo:s.d$-t.title.length-3})}`),e.counter<3&&null!=t.selectedBranchOrTag){const i=t.selectedBranchOrTag.ref;let n=t.cache.get(i);null==n&&(n=null!=e.fileName?this.container.git.getLogForFile(e.repo.path,e.fileName,{ref:i}):this.container.git.getLog(e.repo.path,{ref:i}),t.cache.set(i,n));const o=yield*mi(e,t,{ignoreFocusOut:!0,log:await n,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found in ${x.Wb.toString(e.selectedBranchOrTag,{icon:!1})}`:"Choose a commit",picked:e.reference?.ref});if(o===Ei)continue;e.reference=o}let n;e.reference instanceof y.aM&&null==e.reference.file||(e.reference=await this.container.git.getCommit(e.repo.path,e.reference.ref)),e.openPickInView?(bt(e.reference,{pin:!1,preserveFocus:!1}),n=Ei):n=yield*vs(this.container,{command:"show",state:{repo:e.repo,reference:e.reference,fileName:e.fileName}},this.pickedVia),e.counter--,n===Ei&&Gi(e)}return e.counter<0?Ei:void 0}}class MergeGitCommand extends QuickCommand{constructor(e,t){super(e,"merge","merge","Merge",{description:"integrates changes from a specified branch into the current branch"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){return e.repo.merge(...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} into ${x.Wb.toString(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){const n=new Ke.PickCommitToggle(t.pickCommit,t,(()=>{t.pickCommit=!t.pickCommit,n.on=t.pickCommit})),o=yield*di(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to merge`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[n]});if(o===Ei){i&&e.counter--;continue}e.reference=o,t.selectedBranchOrTag=void 0}if(x.Wb.isRevision(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){const i=t.selectedBranchOrTag.ref;let n=t.cache.get(i);null==n&&(n=this.container.git.getLog(e.repo.path,{ref:i,merges:!1}),t.cache.set(i,n));const o=yield*mi(e,t,{ignoreFocusOut:!0,log:await n,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${x.Wb.toString(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to merge into ${x.Wb.toString(e.destination,{icon:!1})}`,picked:e.reference?.ref});if(o===Ei)continue;e.reference=o}const n=yield*this.confirmStep(e,t);n!==Ei&&(e.flags=n,Gi(e),this.execute(e))}return e.counter<0?Ei:void 0}async*confirmStep(e,t){const i=await this.container.git.getAheadBehindCommitCount(e.repo.path,[x.pk.createRange(t.destination.name,e.reference.name)]),n=null!=i?i.ahead+i.behind:0;if(0===n){const i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`${x.Wb.toString(t.destination,{capitalize:!0})} is up to date with ${x.Wb.toString(e.reference)}`}));return Li(i,e,yield i),Ei}const o=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:this.title,detail:`Will merge ${(0,k._6)("commit",n)} from ${x.Wb.toString(e.reference)} into ${x.Wb.toString(t.destination)}`}),Qe(e.flags,["--ff-only"],{label:`Fast-forward ${this.title}`,description:"--ff-only",detail:`Will fast-forward merge ${(0,k._6)("commit",n)} from ${x.Wb.toString(e.reference)} into ${x.Wb.toString(t.destination)}`}),Qe(e.flags,["--squash"],{label:`Squash ${this.title}`,description:"--squash",detail:`Will squash ${(0,k._6)("commit",n)} from ${x.Wb.toString(e.reference)} into one when merging into ${x.Wb.toString(t.destination)}`}),Qe(e.flags,["--no-ff"],{label:`${this.title} without Fast-Forwarding`,description:"--no-ff",detail:`Will create a merge commit when merging ${(0,k._6)("commit",n)} from ${x.Wb.toString(e.reference)} into ${x.Wb.toString(t.destination)}`}),Qe(e.flags,["--no-ff","--no-commit"],{label:`${this.title} without Fast-Forwarding or Committing`,description:"--no-ff --no-commit",detail:`Will merge ${(0,k._6)("commit",n)} from ${x.Wb.toString(e.reference)} into ${x.Wb.toString(t.destination)} without Committing`})]),r=yield o;return Li(o,e,r)?r[0].item:Ei}}class PullGitCommand extends QuickCommand{constructor(e,t){super(e,"pull","pull","Pull",{description:"fetches and integrates changes from a remote into the current branch"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){if(x.Wb.isBranch(e.reference)&&(!(0,v.BF)(e.reference)||!e.reference.current)){if((await e.repos[0].getBranch())?.name!==e.reference.name)return e.repos[0].fetch({branch:e.reference,pull:!0})}return this.container.git.pullAll(e.repos,{rebase:e.flags.includes("--rebase")})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,Ht.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repos=[t.repos[0]];else{const i=yield*vi(e,t,{skipIfPossible:e.counter>=1});if(i===Ei)break;e.repos=i}if(this.confirm(e.confirm)){const n=yield*this.confirmStep(e,t);if(n===Ei){i&&e.counter--;continue}e.flags=n}Gi(e),this.execute(e)}return e.counter<0?Ei:void 0}async*confirmStep(e,t){let i;if(e.repos.length>1)i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:this.title,detail:`Will pull ${e.repos.length} repositories`}),Qe(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull ${e.repos.length} repositories by rebasing`})]);else if(x.Wb.isBranch(e.reference))if(e.reference.remote)i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a remote branch"}));else{const[n]=e.repos,o=await n.getBranch(e.reference.name);i=null==o?.upstream?this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot pull a branch until it has been published"})):this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:this.title,detail:"Will pull"+(o.state.behind?` ${(0,k._6)("commit",o.state.behind)} into ${x.Wb.toString(o)}`:` into ${x.Wb.toString(o)}`)})])}else{const[n]=e.repos,[o,r]=await Promise.all([n.getStatus(),n.getLastFetched()]);let a="";0!==r&&(a=`${(0,k.vk)(s.NE.Dot,2,2)}Last fetched ${(0,C.Zh)(new Date(r))}`);const l=null!=o?.state.behind?` ${(0,k._6)("commit",o.state.behind)} into $(repo) ${n.formattedName}`:` into $(repo) ${n.formattedName}`;i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t,a),[Qe(e.flags,[],{label:this.title,detail:`Will pull${l}`}),Qe(e.flags,["--rebase"],{label:`${this.title} with Rebase`,description:"--rebase",detail:`Will pull and rebase${l}`})],void 0,{additionalButtons:[Ke.Fetch],onDidClickButton:async(e,i)=>{if(i!==Ke.Fetch||e.busy)return!1;e.title=`Confirm ${t.title}${(0,k.vk)(s.NE.Dot,2,2)}Fetching${s.NE.Ellipsis}`,e.busy=!0;try{return await n.fetch({progress:!0}),!0}finally{e.busy=!1}}})}const n=yield i;return Li(i,e,n)?n[0].item:Ei}}class PushGitCommand extends QuickCommand{constructor(e,t){super(e,"push","push","Push",{description:"pushes changes from the current branch to a remote"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}execute(e){const t=e.flags.indexOf("--set-upstream");return-1!==t?x.Wb.isBranch(e.reference)?this.container.git.pushAll(e.repos,{force:!1,publish:{remote:e.flags[t+1]},reference:e.reference}):Promise.resolve():this.container.git.pushAll(e.repos,{force:e.flags.includes("--force"),reference:e.reference})}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};null==e.flags&&(e.flags=[]),null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,Ht.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repos=[t.repos[0]];else if(null!=e.reference){const i=yield*_i({...e,repos:void 0,repo:e.reference.repoPath},t);if(i===Ei)break;e.repos=[i]}else{const i=yield*vi(e,t,{skipIfPossible:e.counter>=1});if(i===Ei)break;e.repos=i}if(this.confirm(e.confirm)){const n=yield*this.confirmStep(e,t);if(n===Ei){i&&e.counter--;continue}e.flags=n}Gi(e),this.execute(e)}return e.counter<0?Ei:void 0}async*confirmStep(e,t){const i=r.DN.getAny(s.eq.UseForcePushWithLease)??!1;let n;if(e.repos.length>1)n=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:this.title,detail:`Will push ${e.repos.length} repositories`}),Qe(e.flags,["--force"],{label:`Force ${this.title}${i?" (with lease)":""}`,description:"--force"+(i?"-with-lease":""),detail:`Will force push${i?" (with lease)":""} ${e.repos.length} repositories`})]);else{const[o]=e.repos,r=[];if(x.Wb.isBranch(e.reference))if(e.reference.remote)n=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"Cannot push remote branch"}));else{const s=await o.getBranch(e.reference.name);if(null!=s&&null==s?.upstream){for(const t of await o.getRemotes())r.push(Qe(e.flags,["--set-upstream",t.name,s.name],{label:`Publish ${s.name} to ${t.name}`,detail:`Will publish ${x.Wb.toString(s)} to ${t.name}`}));n=r.length?this.createConfirmStep(ei("Confirm Publish",e,t),r,void 0,{placeholder:"Confirm Publish"}):this.createConfirmStep(ei("Confirm Publish",e,t),[],et(Xe.Cancel,!0,{label:"Cancel Publish",detail:"Cannot publish; No remotes found"}),{placeholder:"Confirm Publish"})}else n=null!=s&&s?.state.behind>0?this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,["--force"],{label:`Force ${this.title}${i?" (with lease)":""}`,description:"--force"+(i?"-with-lease":""),detail:`Will force push${i?" (with lease)":""} ${s?.state.ahead?` ${(0,k._6)("commit",s.state.ahead)}`:""}${s.getRemoteName()?` to ${s.getRemoteName()}`:""}${null!=s&&s.state.behind>0?`, overwriting ${(0,k._6)("commit",s.state.behind)}${s?.getRemoteName()?` on ${s.getRemoteName()}`:""}`:""}`})],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${x.Wb.toString(s)} is behind ${s.getRemoteName()} by ${(0,k._6)("commit",s.state.behind)}`})):null!=s&&s?.state.ahead>0?this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[s.getRemoteName()],{label:this.title,detail:`Will push ${(0,k._6)("commit",s.state.ahead)} from ${x.Wb.toString(s)} to ${s.getRemoteName()}`})]):this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:"No commits found to push"}))}else{const a=await o.getStatus(),l={refType:"branch",name:a?.branch??"HEAD",ref:a?.branch??"HEAD",remote:!1,repoPath:o.path};if(0===a?.state.ahead){if(null==e.reference&&null==a.upstream){e.reference=l;for(const t of await o.getRemotes())r.push(Qe(e.flags,["--set-upstream",t.name,a.branch],{label:`Publish ${l.name} to ${t.name}`,detail:`Will publish ${x.Wb.toString(l)} to ${t.name}`}))}n=r.length?this.createConfirmStep(ei("Confirm Publish",e,t),r,void 0,{placeholder:"Confirm Publish"}):null==a.upstream?this.createConfirmStep(ei("Confirm Publish",e,t),[],et(Xe.Cancel,!0,{label:"Cancel Publish",detail:"Cannot publish; No remotes found"}),{placeholder:"Confirm Publish"}):this.createConfirmStep(ei("Confirm Push",e,t),[],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; No commits ahead of ${(0,v.Lo)(a.upstream)}`}))}else{let r="";const c=await o.getLastFetched();let h;0!==c&&(r=`${(0,k.vk)(s.NE.Dot,2,2)}Last fetched ${(0,C.Zh)(new Date(c))}`),h=null!=e.reference?`${a?.state.ahead?` commits up to and including ${x.Wb.toString(e.reference,{label:!1})}`:""}${a?.upstream?` to ${(0,v.Lo)(a.upstream)}`:""}`:`${a?.state.ahead?` ${(0,k._6)("commit",a.state.ahead)}`:""}${a?.upstream?` to ${(0,v.Lo)(a.upstream)}`:""}`,n=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t,r),[...a?.state.behind?[]:[Qe(e.flags,[],{label:this.title,detail:`Will push${h}`})],Qe(e.flags,["--force"],{label:`Force ${this.title}${i?" (with lease)":""}`,description:"--force"+(i?"-with-lease":""),detail:`Will force push${i?" (with lease)":""} ${h}${null!=a&&a.state.behind>0?`, overwriting ${(0,k._6)("commit",a.state.behind)}${a?.upstream?` on ${(0,v.Lo)(a.upstream)}`:""}`:""}`})],a?.state.behind?et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`Cannot push; ${x.Wb.toString(l)} is behind${a?.upstream?` ${(0,v.Lo)(a.upstream)}`:""} by ${(0,k._6)("commit",a.state.behind)}`}):void 0),n.additionalButtons=[Ke.Fetch],n.onDidClickButton=async(e,i)=>{if(i!==Ke.Fetch||e.busy)return!1;e.title=`Confirm ${t.title}${(0,k.vk)(s.NE.Dot,2,2)}Fetching${s.NE.Ellipsis}`,e.busy=!0;try{return await o.fetch({progress:!0}),!0}finally{e.busy=!1}}}}}const o=yield n;return Li(n,e,o)?o[0].item:Ei}}class RebaseGitCommand extends QuickCommand{constructor(e,t){super(e,"rebase","rebase","Rebase",{description:"integrates changes from a specified branch into the current branch, by changing the base of the branch and reapplying the commits on top"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}async execute(e){let t;if(e.flags.includes("--interactive")){await this.container.rebaseEditor.enableForNextUse();t=["-c",`"sequence.editor=${(0,J._L)()}"`]}return e.repo.rebase(t,...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,pickCommit:!1,pickCommitForItem:!1,selectedBranchOrTag:void 0,showTags:!0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${x.Wb.toString(t.destination,{icon:!1})}`,t.pickCommitForItem=!1,e.counter<2||null==e.reference){const n=new Ke.PickCommitToggle(t.pickCommit,t,(()=>{t.pickCommit=!t.pickCommit,n.on=t.pickCommit})),o=yield*di(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to rebase`,picked:t.selectedBranchOrTag?.ref,value:null==t.selectedBranchOrTag?e.reference?.ref:void 0,additionalButtons:[n]});if(o===Ei){i&&e.counter--;continue}e.reference=o,t.selectedBranchOrTag=void 0}if(x.Wb.isRevision(e.reference)||(t.selectedBranchOrTag=e.reference),e.counter<3&&null!=t.selectedBranchOrTag&&(t.pickCommit||t.pickCommitForItem||e.reference.ref===t.destination.ref)){const i=t.selectedBranchOrTag.ref;let n=t.cache.get(i);null==n&&(n=this.container.git.getLog(e.repo.path,{ref:i,merges:!1}),t.cache.set(i,n));const o=yield*mi(e,t,{ignoreFocusOut:!0,log:await n,onDidLoadMore:e=>t.cache.set(i,Promise.resolve(e)),placeholder:(e,t)=>null==t?`No commits found on ${x.Wb.toString(e.selectedBranchOrTag,{icon:!1})}`:`Choose a commit to rebase ${x.Wb.toString(e.destination,{icon:!1})} onto`,picked:e.reference?.ref});if(o===Ei)continue;e.reference=o}const n=yield*this.confirmStep(e,t);n!==Ei&&(e.flags=n,Gi(e),this.execute(e))}return e.counter<0?Ei:void 0}async*confirmStep(e,t){const i=await this.container.git.getAheadBehindCommitCount(e.repo.path,["revision"===e.reference.refType?x.pk.createRange(e.reference.ref,t.destination.ref):x.pk.createRange(t.destination.name,e.reference.name)]),n=null!=i?i.ahead+i.behind:0;if(0===n){const i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[],et(Xe.Cancel,!0,{label:`Cancel ${this.title}`,detail:`${x.Wb.toString(t.destination,{capitalize:!0})} is up to date with ${x.Wb.toString(e.reference)}`}));return Li(i,e,yield i),Ei}const o=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:this.title,detail:`Will update ${x.Wb.toString(t.destination)} by applying ${(0,k._6)("commit",n)} on top of ${x.Wb.toString(e.reference)}`}),Qe(e.flags,["--interactive"],{label:`Interactive ${this.title}`,description:"--interactive",detail:`Will interactively update ${x.Wb.toString(t.destination)} by applying ${(0,k._6)("commit",n)} on top of ${x.Wb.toString(e.reference)}`})]),r=yield o;return Li(o,e,r)?r[0].item:Ei}}function Ki(e){if(!(e.repo instanceof A._j&&"add"===e.subcommand))throw new Error("Missing repository")}function Ji(e){if(!(e.repo instanceof A._j&&"remove"===e.subcommand))throw new Error("Missing repository")}function Xi(e){if(!(e.repo instanceof A._j&&"prune"===e.subcommand))throw new Error("Missing repository")}function Zi(e){if("string"==typeof e.remote)throw new Error("Missing remote")}function en(e){if("string"==typeof e.remote)throw new Error("Missing remote")}const tn=new Map([["add","Add"],["prune","Prune"],["remove","Remove"]]);function nn(e,t){return null==t?e:`${tn.get(t)} ${e}`}class RemoteGitCommand extends QuickCommand{constructor(e,t){super(e,"remote","remote","Remote",{description:"add, prune, or remove remotes"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t?.state.subcommand){case"add":null!=t.state.name&&i++,null!=t.state.url&&i++;break;case"prune":case"remove":null!=t.state.remote&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"remove"!==this.subcommand&&"prune"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.remotesView,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===Ei)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=nn(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)continue;e.repo=i}switch(e.subcommand){case"add":Ki(e),yield*this.addCommandSteps(e,t),e.name=void 0,e.url=void 0;break;case"prune":Xi(e),yield*this.pruneCommandSteps(e,t);break;case"remove":Ji(e),yield*this.removeCommandSteps(e,t);break;default:Gi(e)}i&&e.counter--}return e.counter<0?Ei:void 0}*pickSubcommandStep(e){const t={title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"add",description:"adds a new remote",picked:"add"===e.subcommand,item:"add"},{label:"prune",description:"prunes remote branches on the specified remote",picked:"prune"===e.subcommand,item:"prune"},{label:"remove",description:"removes the specified remote",picked:"remove"===e.subcommand,item:"remove"}],buttons:[n.QuickInputButtons.Back]},i=yield t;return Li(t,e,i)?i[0].item:Ei}async*addCommandSteps(e,t){null==e.flags&&(e.flags=["-f"]);let i=0!==(await e.repo.getRemotes({filter:t=>t.name===e.name})).length;for(;this.canStepsContinue(e);){if(e.counter<3||null==e.name||i){const n=yield*ai(e,t,{placeholder:"Please provide a name for the remote",value:e.name});if(n===Ei)continue;if(i=0!==(await e.repo.getRemotes({filter:e=>e.name===n})).length,i){e.counter--;continue}e.name=n}if(e.counter<4||null==e.url){const i=yield*li(e,t,{placeholder:"Please provide a URL for the remote",value:e.url});if(i===Ei)continue;e.url=i}if(this.confirm(e.confirm)){const i=yield*this.addCommandConfirmStep(e,t);if(i===Ei)continue;e.flags=i}Gi(e),await e.repo.addRemote(e.name,e.url,e.flags.includes("-f")?{fetch:!0}:void 0),!1!==e.reveal&&Pt(void 0,{focus:!0,select:!0})}}*addCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:t.title,detail:`Will add remote '${e.name}' for ${e.url}`}),Qe(e.flags,["-f"],{label:`${t.title} and Fetch`,description:"-f",detail:`Will add and fetch remote '${e.name}' for ${e.url}`})],t),n=yield i;return Li(i,e,n)?n[0].item:Ei}async*removeCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){const[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});e.remote=null!=t?t:void 0}if(e.counter<3||null==e.remote){t.title=nn("Remotes",e.subcommand);const i=yield*wi(e,t,{picked:e.remote?.name,placeholder:"Choose remote to remove"});if(i===Ei)break;e.remote=i}Zi(e);if((yield*this.removeCommandConfirmStep(e,t))!==Ei){Gi(e);try{await e.repo.removeRemote(e.remote.name)}catch(e){B.Yd.error(e),(0,Be.W8)("Unable to remove remote")}}}}*removeCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will remove remote '${e.remote.name}'`}],t);return Li(i,e,yield i)?void 0:Ei}async*pruneCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null!=e.remote&&"string"==typeof e.remote){const[t]=await e.repo.getRemotes({filter:t=>t.name===e.remote});e.remote=null!=t?t:void 0}if(e.counter<3||null==e.remote){const i=yield*wi(e,t,{picked:e.remote?.name,placeholder:"Choose a remote to prune"});if(i===Ei)break;e.remote=i}en(e);(yield*this.pruneCommandConfirmStep(e,t))!==Ei&&(Gi(e),e.repo.pruneRemote(e.remote.name))}}*pruneCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will prune remote '${e.remote.name}'`}],t);return Li(i,e,yield i)?void 0:Ei}}class ResetGitCommand extends QuickCommand{constructor(e,t){super(e,"reset","reset","Reset",{description:"resets the current branch to a specified commit"}),this._canSkipConfirm=!1;let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:t?.confirm??!0,...t?.state},this._canSkipConfirm=!this.initialState.confirm}get canSkipConfirm(){return this._canSkipConfirm}execute(e){return e.repo.reset(...e.flags,e.reference.ref)}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(t.title=`${this.title} ${x.Wb.toString(t.destination,{icon:!1})}`,e.counter<2||null==e.reference){const n=t.destination.ref;let o=t.cache.get(n);null==o&&(o=this.container.git.getLog(e.repo.path,{ref:n,merges:!1}),t.cache.set(n,o));const r=yield*mi(e,t,{log:await o,onDidLoadMore:e=>t.cache.set(n,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:`Choose a commit to reset ${e.destination.name} to`,picked:e.reference?.ref});if(r===Ei){i&&e.counter--;continue}e.reference=r}if(this.confirm(e.confirm)){const i=yield*this.confirmStep(e,t);if(i===Ei)continue;e.flags=i}Gi(e),this.execute(e)}return e.counter<0?Ei:void 0}*confirmStep(e,t){const i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:this.title,detail:`Will reset (leaves changes in the working tree) ${x.Wb.toString(t.destination)} to ${x.Wb.toString(e.reference)}`}),Qe(e.flags,["--soft"],{label:`Soft ${this.title}`,description:"--soft",detail:`Will soft reset (leaves changes in the index and working tree) ${x.Wb.toString(t.destination)} to ${x.Wb.toString(e.reference)}`}),Qe(e.flags,["--hard"],{label:`Hard ${this.title}`,description:"--hard",detail:`Will hard reset (discards all changes) ${x.Wb.toString(t.destination)} to ${x.Wb.toString(e.reference)}`})]),n=yield i;return Li(i,e,n)?n[0].item:Ei}}class RevertGitCommand extends QuickCommand{constructor(e,t){super(e,"revert","revert","Revert",{description:"undoes the changes of specified commits, by creating new commits with inverted changes"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++,this.initialState={counter:i,confirm:!0,...t?.state}}get canSkipConfirm(){return!1}execute(e){return e.repo.revert(...e.flags,...e.references.map((e=>e.ref)).reverse())}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,cache:new Map,destination:void 0,title:this.title};null==e.flags&&(e.flags=[]),null==e.references||Array.isArray(e.references)||(e.references=[e.references]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(null==t.destination){const i=await e.repo.getBranch();if(null==i)break;t.destination=i}if(e.counter<2||null==e.references||0===e.references.length){const n=t.destination.ref;let o=t.cache.get(n);null==o&&(o=this.container.git.getLog(e.repo.path,{ref:n,merges:!1}),t.cache.set(n,o));const r=yield*gi(e,t,{log:await o,onDidLoadMore:e=>t.cache.set(n,Promise.resolve(e)),placeholder:(e,t)=>null==t?`${e.destination.name} has no commits`:"Choose commits to revert",picked:e.references?.map((e=>e.ref))});if(r===Ei){i&&e.counter--;continue}e.references=r}const n=yield*this.confirmStep(e,t);n!==Ei&&(e.flags=n,Gi(e),this.execute(e))}return e.counter<0?Ei:void 0}*confirmStep(e,t){const i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,["--no-edit"],{label:this.title,description:"--no-edit",detail:`Will revert ${x.Wb.toString(e.references)}`}),Qe(e.flags,["--edit"],{label:`${this.title} & Edit`,description:"--edit",detail:`Will revert and edit ${x.Wb.toString(e.references)}`})]),n=yield i;return Li(i,e,n)?n[0].item:Ei}}var on=i(4290),rn=i(4092);class BranchOrTagFolderNode extends De.Re{constructor(e,t,i,n,o,r,s,a,l=!1){super(_.YY.fromRepoPath(n),e,t),this.type=i,this.repoPath=n,this.folderName=o,this.relativePath=r,this.root=s,this._key=a,this._expanded=l}static getId(e,t,i,n){return`${Jr.getId(e)}:${void 0===t?i:`${t}:${i}`}-folder(${n})`}toClipboard(){return this.folderName}get id(){return BranchOrTagFolderNode.getId(this.repoPath,this._key,this.type,this.relativePath)}getChildren(){if(void 0===this.root.descendants||void 0===this.root.children)return[];const e=[];for(const t of this.root.children.values())if(void 0!==t.value)t.value.parent=this.folderName?this:this.parent,e.push(t.value);else{const i=t.descendants?.some((e=>e instanceof hr&&e.current));e.push(new BranchOrTagFolderNode(this.view,this.folderName?this:this.parent,this.type,this.repoPath,t.name,t.relativePath,t,this._key,i))}return e}getTreeItem(){const e=new n.TreeItem(this.label,this._expanded?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Folder,e.iconPath=n.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}}class MessageNode extends De.Re{constructor(e,t,i,n,o,r,s){super(_.Wj,e,t),this._message=i,this._description=n,this._tooltip=o,this._iconPath=r,this._contextValue=s}getChildren(){return[]}getTreeItem(){const e=new n.TreeItem(this._message,n.TreeItemCollapsibleState.None);return e.contextValue=this._contextValue??De.Td.Message,e.description=this._description,e.tooltip=this._tooltip,e.iconPath=this._iconPath,e}}class CommandMessageNode extends MessageNode{constructor(e,t,i,n,o,r,s){super(e,t,n,o,r,s),this._command=i}getTreeItem(){const e=super.getTreeItem();return e instanceof n.TreeItem?(e.command=this._command,e):e.then((e=>(e.command=this._command,e)))}}class PagerNode extends De.Re{constructor(e,t,i,n,o){super(_.Wj,e,t),this.message=i,this.previousNode=n,this.options=o}async loadAll(){const e=await(this.options?.getCount?.())??0;return this.view.loadMoreNodeChildren(this.parent,e>5e3?5e3:0,this.previousNode,this.options?.context)}loadMore(){return this.view.loadMoreNodeChildren(this.parent,this.options?.pageSize??r.DN.get("views.pageItemLimit"),this.previousNode,this.options?.context)}getChildren(){return[]}getTreeItem(){const e=new n.TreeItem(this.message,n.TreeItemCollapsibleState.None);return e.contextValue=De.Td.Pager,e.command=this.getCommand(),e}getCommand(){return{title:"Load more",command:"gitlens.views.loadMoreChildren",arguments:[this]}}}class LoadMoreNode extends PagerNode{constructor(e,t,i,n){super(e,t,n?.message??(0===n?.pageSize?`Load all ${s.NE.Space}${s.NE.Dash}${s.NE.Space} this may take a while`:"Load more"),i,n)}}var sn=Object.defineProperty,an=Object.getOwnPropertyDescriptor;const ln=class extends De.Re{constructor(e,t,i,n,o){super(e,t,i),this.remote=n,this.repo=o}static getId(e,t,i){return`${Jr.getId(e)}${this.key}(${t}|${i})`}toClipboard(){return this.remote.name}get id(){return ln.getId(this.remote.repoPath,this.remote.name,this.remote.id)}async getChildren(){const e=await this.repo.getBranches({filter:e=>e.remote&&e.name.startsWith(this.remote.name),sort:!0});if(0===e.values.length)return[new MessageNode(this.view,this,"No branches could be found.")];const t=e.values.map((e=>new hr(_.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,e,!1,{showComparison:!1,showTracking:!1})));if(this.view.config.branches.layout===r.CZ.List)return t;const i=(0,Ht.Mo)(t,(e=>e.treeHierarchy),((...e)=>e.join("/")),this.view.config.files.compact,(e=>(e.compacted=!0,!0)));return new BranchOrTagFolderNode(this.view,this,"remote-branch",this.repo.path,"",void 0,i,`remote(${this.remote.name})`).getChildren()}async getTreeItem(){const e=new n.TreeItem(this.remote.name,n.TreeItemCollapsibleState.Collapsed);if(e.id=this.id,e.description=(0,O.jv)(this.remote),null!=this.remote.provider){const{provider:t}=this.remote;if(e.iconPath=null!=t.avatarUri&&this.view.config.avatars?t.avatarUri:"remote"===t.icon?new n.ThemeIcon("cloud"):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-${t.icon}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-${t.icon}.svg`)},t.hasRichIntegration()){const i=t.maybeConnected??await t.isConnected();e.contextValue=`${De.Td.Remote}${i?"+connected":"+disconnected"}`,e.tooltip=`${this.remote.name} (${t.name} ${s.NE.Dash} ${i?"connected":"not connected"})\n${t.displayPath}\n`}else e.contextValue=De.Td.Remote,e.tooltip=`${this.remote.name} (${t.name})\n${t.displayPath}\n`}else e.contextValue=De.Td.Remote,e.iconPath=new n.ThemeIcon("cloud"),e.tooltip=`${this.remote.name} (${this.remote.domain})\n${this.remote.path}\n`;this.remote.default&&(e.contextValue+="+default",e.resourceUri=n.Uri.parse("gitlens-view://remote/default"));for(const{type:t,url:i}of this.remote.urls)e.tooltip+=`\n${i} (${t})`;return e}async setAsDefault(e=!0){await this.remote.setAsDefault(e),this.triggerChange()}};let cn=ln;cn.key=":remote",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?an(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&sn(t,i,r)})([(0,H.cM)()],cn.prototype,"setAsDefault",1);var hn=Object.defineProperty,un=Object.getOwnPropertyDescriptor;const dn=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.repo=n}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return dn.getId(this.repo.path)}get repoPath(){return this.repo.path}async getChildren(){if(null==this._children){const e=await this.repo.getRemotes({sort:!0});if(0===e.length)return[new MessageNode(this.view,this,"No remotes could be found")];this._children=e.map((e=>new cn(this.uri,this.view,this,e,this.repo)))}return this._children}getTreeItem(){const e=new n.TreeItem("Remotes",n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Remotes,e.iconPath=new n.ThemeIcon("cloud"),e}refresh(){this._children=void 0}};let pn=dn;pn.key=":remotes",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?un(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&hn(t,i,r)})([(0,V.H)(),(0,H.fF)()],pn.prototype,"refresh",1);var mn=Object.defineProperty,gn=Object.getOwnPropertyDescriptor,fn=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?gn(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&mn(t,i,r),r};class ViewBase{constructor(e,t,i,o){if(this.container=e,this.id=t,this.name=i,this.trackingFeature=o,this._onDidChangeTreeData=new n.EventEmitter,this._onDidChangeSelection=new n.EventEmitter,this._onDidChangeVisibility=new n.EventEmitter,this._onDidChangeNodeCollapsibleState=new n.EventEmitter,this.disposables=[],this._lastKnownLimits=new Map,this.disposables.push((0,z.IH)(e.onReady)(this.onReady,this)),this.container.debugging||r.DN.get("debug")){let e=function(e,t,i){null==e.tooltip&&(e.tooltip=new n.MarkdownString(null!=e.label&&"string"!=typeof e.label?e.label.label:e.label??"")),"string"==typeof e.tooltip?e.tooltip=`${e.tooltip}\n\n---\ncontext: ${e.contextValue}\nnode: ${t.toString()}${null!=i?`\nparent: ${i.toString()}`:""}`:e.tooltip.appendMarkdown(`\n\n---\n\ncontext: \`${e.contextValue}\`\\\nnode: \`${t.toString()}\`${null!=i?`\\\nparent: \`${i.toString()}\``:""}`)};const t=this.getTreeItem;this.getTreeItem=async function(i){const n=await t.apply(this,[i]);return null==i.resolveTreeItem&&e(n,i,i.getParent()),n};const i=this.resolveTreeItem;this.resolveTreeItem=async function(t,n){return t=await i.apply(this,[t,n]),e(t,n,n.getParent()),t}}this.disposables.push(...this.registerCommands())}get onDidChangeTreeData(){return this._onDidChangeTreeData.event}get onDidChangeSelection(){return this._onDidChangeSelection.event}get onDidChangeVisibility(){return this._onDidChangeVisibility.event}get onDidChangeNodeCollapsibleState(){return this._onDidChangeNodeCollapsibleState.event}dispose(){this._nodeState?.dispose(),this._nodeState=void 0,n.Disposable.from(...this.disposables).dispose()}onReady(){this.initialize({canSelectMany:this.canSelectMany,showCollapseAll:this.showCollapseAll}),queueMicrotask((()=>this.onConfigurationChanged()))}get canReveal(){return!0}get canSelectMany(){return this.container.prereleaseOrDebugging&&r.DN.get("views.experimental.multiSelect.enabled",void 0,!1)}get nodeState(){return null==this._nodeState&&(this._nodeState=new ViewNodeState),this._nodeState}get showCollapseAll(){return!0}filterConfigurationChanged(e){if(!r.DN.changed(e,"views"))return!1;if(r.DN.changed(e,`views.${this.configKey}`))return!0;for(const t of r.TA)if(r.DN.changed(e,`views.${t}`))return!0;return!1}get title(){return this._title}set title(e){this._title=e,null!=this.tree&&(this.tree.title=e)}get description(){return this._description}set description(e){this._description=e,null!=this.tree&&(this.tree.description=e)}get message(){return this._message}set message(e){this._message=e,null!=this.tree&&(this.tree.message=e)}getQualifiedCommand(e){return`${this.id}.${e}`}onConfigurationChanged(e){null!=e&&null!=this.root&&this.refresh(!0)}initialize(e={}){this.tree=n.window.createTreeView(this.id,{...e,treeDataProvider:this}),this.disposables.push(r.DN.onDidChange((e=>{this.filterConfigurationChanged(e)&&(this._config=void 0,this.onConfigurationChanged(e))}),this),this.tree,this.tree.onDidChangeSelection((0,K.Ds)(this.onSelectionChanged,250),this),this.tree.onDidChangeVisibility((0,K.Ds)(this.onVisibilityChanged,250),this),this.tree.onDidCollapseElement(this.onElementCollapsed,this),this.tree.onDidExpandElement(this.onElementExpanded,this)),this._title=this.tree.title}ensureRoot(e=!1){return(null==this.root||e)&&(this.root=this.getRoot()),this.root}getChildren(e){if(null!=e)return e.getChildren();return this.ensureRoot().getChildren()}getParent(e){return e.getParent()}getTreeItem(e){return e.getTreeItem()}resolveTreeItem(e,t){return t.resolveTreeItem?.(e)??e}onElementCollapsed(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:n.TreeItemCollapsibleState.Collapsed})}onElementExpanded(e){this._onDidChangeNodeCollapsibleState.fire({...e,state:n.TreeItemCollapsibleState.Expanded})}onSelectionChanged(e){this._onDidChangeSelection.fire(e)}onVisibilityChanged(e){e.visible&&this.container.usage.track(`${this.trackingFeature}:shown`),this._onDidChangeVisibility.fire(e)}get activeSelection(){if(null!=this.tree&&null!=this.root)return this.tree.selection[0]}get selection(){return null==this.tree||null==this.root?[]:this.tree.selection}get visible(){return this.tree?.visible??!1}async findNode(e,{allowPaging:t=!1,canTraverse:i,maxDepth:n=2,token:o}={}){const r=(0,G.UH)();async function s(){try{return await this.findNodeCoreBFS("string"==typeof e?t=>t.id===e:e,this.ensureRoot(),t,i,n,o)}catch(e){return void B.Yd.error(e,r)}}return null!=this.root?s.call(this):(await this.show({preserveFocus:!0}),new Promise((e=>setTimeout((()=>e(s.call(this))),100))))}async findNodeCoreBFS(e,t,i,n,o,s){const a=[t,void 0],l=r.DN.get("advanced.maxListItems");let c,h,u,d=0;for(;a.length>1;){if(s?.isCancellationRequested)return;if(c=a.shift(),null!=c){if(e(c))return c;if(null!=n){const e=n(c);if((0,Y.tI)(e)){if(!await e)continue}else if(!e)continue}if(h=await c.getChildren(),0!==h.length){for(;null!=c&&!(0,De.On)(c);)c=await(c.getSplattedChild?.());if(null!=c&&(0,De.On)(c)){let t=h.find(e);if(null!=t)return t;if(i&&c.hasMore)for(;;){if(s?.isCancellationRequested)return;if(await this.loadMoreNodeChildren(c,l),u=await(0,Y.HO)(Promise.resolve(c.getChildren()),s??6e4,{onDidCancel:e=>e([])}),t=u.find(e),null!=t)return t;if(!c.hasMore)break}}else a.push(...h)}}else if(d++,a.push(void 0),d>o)break}}async ensureRevealNode(e,t){const i=[];let n=e;for(;null!=n;)i.push(n),n=n.getParent();i.length>1&&i.pop();for(const e of i.reverse())try{await this.reveal(e,t)}catch{}}async refresh(e=!1){e&&this.nodeState.reset(),await(this.root?.refresh?.(e)),this.triggerNodeChange()}async refreshNode(e,t=!1,i=!1){const n=await(e.refresh?.(t));(i||!0!==n)&&this.triggerNodeChange(e)}async reveal(e,t){if(null!=this.tree)try{await this.tree.reveal(e,t)}catch(e){B.Yd.error(e)}}async show(e){const t=(0,G.UH)();try{await(0,ke.P0)(`${this.id}.focus`,e)}catch(e){B.Yd.error(e,t)}}getNodeLastKnownLimit(e){return this._lastKnownLimits.get(e.id)}async loadMoreNodeChildren(e,t,i,n){null!=i&&await this.reveal(i,{select:!0}),await e.loadMore(t,n),this._lastKnownLimits.set(e.id,e.limit)}resetNodeLastKnownLimit(e){this._lastKnownLimits.delete(e.id)}triggerNodeChange(e){this._onDidChangeTreeData.fire(null!=e&&e!==this.root?e:void 0)}get config(){if(null==this._config){const e={...r.DN.get("views")};for(const t of r.S4)delete e[t];this._config={...e,...r.DN.get("views")[this.configKey]}}return this._config}}fn([(0,H.cM)({args:{0:e=>"string"==typeof e?e:"<function>",1:e=>`options=${JSON.stringify({...e,canTraverse:void 0,token:void 0})}`}})],ViewBase.prototype,"findNode",1),fn([(0,H.fF)()],ViewBase.prototype,"refresh",1),fn([(0,H.fF)({args:{0:e=>e.toString()}})],ViewBase.prototype,"refreshNode",1),fn([(0,H.cM)({args:{0:e=>e.toString()}})],ViewBase.prototype,"reveal",1),fn([(0,H.cM)()],ViewBase.prototype,"show",1),fn([(0,H.fF)({args:{0:e=>e.toString(),2:e=>e?.toString()}})],ViewBase.prototype,"loadMoreNodeChildren",1),fn([(0,H.fF)({args:{0:e=>e.toString()},singleLine:!0})],ViewBase.prototype,"resetNodeLastKnownLimit",1),fn([(0,H.fF)({args:{0:e=>e?.toString()}})],ViewBase.prototype,"triggerNodeChange",1);class ViewNodeState{dispose(){this.reset()}reset(){this._state?.clear(),this._state=void 0}deleteState(e,t){null==t?this._state?.delete(e):this._state?.get(e)?.delete(t)}getState(e,t){return this._state?.get(e)?.get(t)}storeState(e,t,i){null==this._state&&(this._state=new Map);const n=this._state.get(e);null!=n?n.set(t,i):this._state.set(e,new Map([[t,i]]))}}const wn=class extends De.Re{constructor(e,t,i,n,o,r,s){super(_.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.folderName=n,this.root=o,this.containsWorkingFiles=r,this.relativePath=s,this.priority=1}static getId(e,t){return`${e.id}${this.key}(${t})`}toClipboard(){return this.folderName}get id(){return wn.getId(this.parent,this.folderName)}getChildren(){if(void 0===this.root.descendants||void 0===this.root.children)return[];let e;if(wn.getFileNesting(this.view.config.files,this.root.descendants,void 0===this.relativePath)===r.Vc.List)this.root.descendants.forEach((e=>e.relativePath=this.root.relativePath)),e=this.root.descendants;else{e=[];for(const t of this.root.children.values())void 0!==t.value?(t.value.parent=this.folderName?this:this.parent,t.value.relativePath=this.root.relativePath,e.push(t.value)):e.push(new wn(this.view,this.folderName?this:this.parent,this.repoPath,t.name,t,this.containsWorkingFiles,t.relativePath))}return e.sort(((e,t)=>(e instanceof wn?-1:1)-(t instanceof wn?-1:1)||e.priority-t.priority||(0,k.dm)(e.label,t.label))),e}getTreeItem(){const e=new n.TreeItem(this.label,n.TreeItemCollapsibleState.Expanded);return e.id=this.id,e.contextValue=De.Td.Folder,this.containsWorkingFiles&&(e.contextValue+="+working"),e.iconPath=n.ThemeIcon.Folder,e.tooltip=this.label,e}get label(){return this.folderName}static getFileNesting(e,t,i){const n=e.layout||r.Vc.Auto;if(n===r.Vc.Auto){if(i||e.compact){const i=e.threshold||5;if(t.length<=i)return r.Vc.List}return r.Vc.Tree}return n}};let _n=wn;_n.key=":folder";const vn=new Map,yn=/ /g,bn=class{constructor(e,t){this.collapsableWhitespace=0,this.reset(e,t)}reset(e,t){this._item=e,this.collapsableWhitespace=0,null==t&&null!=this._options||(null==t&&(t={}),null==t.dateFormat&&(t.dateFormat="MMMM Do, YYYY h:mma"),null==t.tokenOptions&&(t.tokenOptions={}),this._options=t)}_padOrTruncate(e,t){if(null==e||0===e.length)return e;null==t&&(t={collapseWhitespace:!1,padDirection:"left",prefix:void 0,suffix:void 0,truncateTo:void 0});let i=t.truncateTo;if(null==i)this.collapsableWhitespace=0;else{i+=this.collapsableWhitespace,this.collapsableWhitespace=0;const n=(0,k.dz)(e),o=i-n;o>0?(t.collapseWhitespace&&(this.collapsableWhitespace=o),"left"===t.padDirection?e=(0,k.Q_)(e,i,void 0,n):(t.collapseWhitespace&&(i-=o),e=(0,k.eh)(e,i,void 0,n))):o<0&&(e=(0,k.$G)(e,i,void 0,n))}return(t.prefix||t.suffix)&&(e=`${t.prefix??""}${e}${t.suffix??""}`),e}static fromTemplateCore(e,t,i,n){if(t=t.replace(yn," "),e instanceof bn)return(0,k.sX)(t,e);let o;if(o=null==n||"string"==typeof n?{dateFormat:n}:n,null==o.tokenOptions){const e=(0,k.Gg)(t).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));o.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,o):this._formatter.reset(i,o),(0,k.sX)(t,this._formatter)}static fromTemplateCoreAsync(e,t,i,n){if(t=t.replace(yn," "),e instanceof bn)return(0,k.Qu)(t,e);let o;if(o=null==n||"string"==typeof n?{dateFormat:n}:n,null==o.tokenOptions){const e=(0,k.Gg)(t).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));o.tokenOptions=e}return null==this._formatter?this._formatter=new e(i,o):this._formatter.reset(i,o),(0,k.Qu)(t,this._formatter)}static has(e,...t){const i=1===t.length?t[0]:`(${t.join("|")})`;let n=vn.get(i);return null==n&&(n=new RegExp(`\\b${i}\\b`),vn.set(i,n)),n.test(e)}};let Cn=bn;Cn._formatter=void 0;class StatusFileFormatter extends Cn{get directory(){const e=T.$9.getFormattedDirectory(this._item,!1,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.directory)}get file(){const e=(0,j.EZ)(this._item.path);return this._padOrTruncate(e,this._options.tokenOptions.file)}get filePath(){const e=T.$9.getFormattedPath(this._item,{relativeTo:this._options.relativePath,truncateTo:this._options.tokenOptions.filePath?.truncateTo});return this._padOrTruncate(e,this._options.tokenOptions.filePath)}get originalPath(){const e=T.$9.getOriginalRelativePath(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.originalPath)}get path(){const e=T.$9.getRelativePath(this._item,this._options.relativePath);return this._padOrTruncate(e,this._options.tokenOptions.path)}get status(){const e=T.$9.getStatusText(this._item.status);return this._padOrTruncate(e,this._options.tokenOptions.status)}get working(){let e="";return e=null!=this._item.workingTreeStatus&&null!=this._item.indexStatus?`${s.NE.Pencil}${s.NE.Space}${s.NE.SpaceThinnest}${s.NE.Check}`:null!=this._item.workingTreeStatus?`${s.NE.Pencil}${s.NE.SpaceThin}${s.NE.SpaceThinnest}${s.NE.EnDash}${s.NE.Space}`:null!=this._item.indexStatus?`${s.NE.Space}${s.NE.EnDash}${s.NE.Space.repeat(2)}${s.NE.Check}`:"",this._padOrTruncate(e,this._options.tokenOptions.working)}get changes(){return this._padOrTruncate(T.K8.is(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate(T.K8.is(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate(T.K8.is(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}static fromTemplate(e,t,i){return super.fromTemplateCore(this,e,t,i)}}class MergeConflictCurrentChangesNode extends De.Re{constructor(e,t,i,n){super(_.YY.fromFile(n,i.repoPath,"HEAD"),e,t),this.status=i,this.file=n}getChildren(){return[]}async getTreeItem(){const e=await this.view.container.git.getCommit(this.status.repoPath,"HEAD"),t=new n.TreeItem("Current changes",n.TreeItemCollapsibleState.None);t.contextValue=De.Td.MergeConflictCurrentChanges,t.description=`${x.Wb.toString(this.status.current,{expand:!1,icon:!1})}${null!=e?` (${x.Wb.toString(e,{expand:!1,icon:!1})})`:" (HEAD)"}`,t.iconPath=this.view.config.avatars?await(e?.getAvatarUri({defaultStyle:r.DN.get("defaultGravatarsStyle")}))??new n.ThemeIcon("diff"):new n.ThemeIcon("diff");const i=new n.MarkdownString(`Current changes to $(file)${s.NE.Space}${this.file.path} on ${x.Wb.toString(this.status.current)}${null!=e?`\n\n${await CommitFormatter.fromTemplateAsync("${avatar}&nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${link}${' via 'pullRequest}",e,{avatarSize:16,dateFormat:r.DN.get("defaultDateFormat"),messageIndent:4,outputFormat:"markdown"})}`:""}`,!0);return i.supportHtml=!0,i.isTrusted=!0,t.tooltip=i,t.command=this.getCommand(),t}getCommand(){if(null==this.status.mergeBase)return{title:"Open Revision",command:s.nA.Open,arguments:[this.view.container.git.getRevisionUri("HEAD",this.file.path,this.status.repoPath)]};const e={lhs:{sha:this.status.mergeBase,uri:_.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:"HEAD",uri:_.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${x.Wb.toString(this.status.current,{expand:!1,icon:!1})})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[e]}}}class MergeConflictIncomingChangesNode extends De.Re{constructor(e,t,i,n){super(_.YY.fromFile(n,i.repoPath,i.HEAD.ref),e,t),this.status=i,this.file=n}getChildren(){return[]}async getTreeItem(){const e=await this.view.container.git.getCommit(this.status.repoPath,"rebase"===this.status.type?this.status.steps.current.commit.ref:this.status.HEAD.ref),t=new n.TreeItem("Incoming changes",n.TreeItemCollapsibleState.None);t.contextValue=De.Td.MergeConflictIncomingChanges,t.description=`${x.Wb.toString(this.status.incoming,{expand:!1,icon:!1})}${"rebase"===this.status.type?` (${x.Wb.toString(this.status.steps.current.commit,{expand:!1,icon:!1})})`:` (${x.Wb.toString(this.status.HEAD,{expand:!1,icon:!1})})`}`,t.iconPath=this.view.config.avatars?await(e?.getAvatarUri({defaultStyle:r.DN.get("defaultGravatarsStyle")}))??new n.ThemeIcon("diff"):new n.ThemeIcon("diff");const i=new n.MarkdownString(`Incoming changes to $(file)${s.NE.Space}${this.file.path}${null!=this.status.incoming?` from ${x.Wb.toString(this.status.incoming)}${null!=e?`\n\n${await CommitFormatter.fromTemplateAsync("${avatar}&nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${link}${' via 'pullRequest}",e,{avatarSize:16,dateFormat:r.DN.get("defaultDateFormat"),messageIndent:4,outputFormat:"markdown"})}`:"rebase"===this.status.type?`\n\n${x.Wb.toString(this.status.steps.current.commit,{capitalize:!0,label:!1})}`:`\n\n${x.Wb.toString(this.status.HEAD,{capitalize:!0,label:!1})}`}`:""}`,!0);return i.supportHtml=!0,i.isTrusted=!0,t.tooltip=i,t.command=this.getCommand(),t}getCommand(){if(null==this.status.mergeBase)return{title:"Open Revision",command:s.nA.Open,arguments:[this.view.container.git.getRevisionUri(this.status.HEAD.ref,this.file.path,this.status.repoPath)]};const e={lhs:{sha:this.status.mergeBase,uri:_.YY.fromFile(this.file,this.status.repoPath,void 0,!0),title:`${this.file.path} (merge-base)`},rhs:{sha:this.status.HEAD.ref,uri:_.YY.fromFile(this.file,this.status.repoPath),title:`${this.file.path} (${null!=this.status.incoming?x.Wb.toString(this.status.incoming,{expand:!1,icon:!1}):"incoming"})`},repoPath:this.status.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[e]}}}class FileRevisionAsCommitNode extends De.RW{constructor(e,t,i,n,o={}){super(_.YY.fromFile(i,n.repoPath,n.sha),e,t,i),this.commit=n,this._options=o}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get isTip(){return(this._options.branch?.current&&this._options.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}async getChildren(){if(!this.commit.file?.hasConflicts)return[];const[e,t]=await Promise.allSettled([this.view.container.git.getMergeStatus(this.commit.repoPath),this.view.container.git.getRebaseStatus(this.commit.repoPath)]),i=(0,Y.Sb)(e);if(null==i)return[];const n=(0,Y.Sb)(t);return null==n?[]:[new MergeConflictCurrentChangesNode(this.view,this,i??n,this.file),new MergeConflictIncomingChangesNode(this.view,this,i??n,this.file)]}async getTreeItem(){if(null==this.commit.file){const e=await this.commit.getCommitForFile(this.file);if(null==e){const e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}const e=new n.TreeItem(CommitFormatter.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:r.DN.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),this.commit.file?.hasConflicts?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.None);if(e.contextValue=this.contextValue,e.description=CommitFormatter.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:r.DN.get("defaultDateFormat"),getBranchAndTagTips:e=>this._options.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),e.resourceUri=n.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`),!this.commit.isUncommitted&&this.view.config.avatars&&(e.iconPath=this._options.unpublished?new n.ThemeIcon("arrow-up",new n.ThemeColor(s.wL.UnpublishedCommitIconColor)):await this.commit.getAvatarUri({defaultStyle:r.DN.get("defaultGravatarsStyle")})),null==e.iconPath){const t=T.$9.getStatusIcon(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,j.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,j.RQ)("images","light",t))}}return e.command=this.getCommand(),e}get contextValue(){return this.commit.isUncommitted?this.commit.file?.hasConflicts?`${De.Td.File}+conflicted`:this.commit.isUncommittedStaged?`${De.Td.File}+staged`:`${De.Td.File}+unstaged`:`${De.Td.File}+committed${this._options.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this._options.unpublished?"+unpublished":""}`}getCommand(){let e;if(e=this.commit.lines.length?this.commit.lines[0].line-1:this._options.selection?.active.line??0,this.commit.file?.hasConflicts)return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[{lhs:{sha:"MERGE_HEAD",uri:_.YY.fromFile(this.file,this.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:_.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}}]};const t={commit:this.commit,uri:_.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,t]}}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getConflictBaseUri(){if(!this.commit.file?.hasConflicts)return;const e=await this.view.container.git.getMergeBase(this.repoPath,"MERGE_HEAD","HEAD");return _.YY.fromFile(this.file,this.repoPath,e??"HEAD")}async getTooltip(){const e=await this.view.container.git.getRemotesWithProviders(this.commit.repoPath),t=await this.view.container.git.getBestRemoteWithRichProvider(e);let i,o;if(null==this.commit.message&&await this.commit.ensureFullDetails(),null!=t?.provider){const[e,n]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(this.commit.message??this.commit.summary,t),this.commit.getAssociatedPullRequest({remote:t})]);i=(0,Y.Sb)(e),o=(0,Y.Sb)(n),null!=o&&i?.delete(o.id)}const s=StatusFileFormatter.fromTemplate("${status}${ (originalPath)}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}",this.file),a=await CommitFormatter.fromTemplateAsync(this.view.config.formats.commits.tooltipWithStatus.replace("{{slot-status}}",s),this.commit,{autolinkedIssuesOrPullRequests:i,dateFormat:r.DN.get("defaultDateFormat"),getBranchAndTagTips:this._options.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequestOrRemote:o,outputFormat:"markdown",remotes:e,unpublished:this._options.unpublished}),l=new n.MarkdownString(a,!0);return l.supportHtml=!0,l.isTrusted=!0,l}}class StatusFileNode extends De.Te{constructor(e,t,i,n,o,r="ahead"){let s,a=!1,l=!1;for(const e of o){if(!e.isUncommitted){if(l)break;s=e.sha;break}if(e.isUncommittedStaged){a=!0,l||(s=e.sha);break}s=void 0,l=!0}super(_.YY.fromFile(i,n,s),e,t,i),this.commits=o,this._direction=r,this._hasStagedChanges=a,this._hasUnstagedChanges=l}toClipboard(){return this.fileName}get fileName(){return this.file.path}getChildren(){return this.commits.map((e=>new FileRevisionAsCommitNode(this.view,this,this.file,e)))}getTreeItem(){const e=new n.TreeItem(this.label,n.TreeItemCollapsibleState.None);if(e.description=this.description,(this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length)e.contextValue=De.Td.File,this._hasStagedChanges?(e.contextValue+="+staged",e.tooltip=StatusFileFormatter.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)} in Index (staged)",this.file)):(e.contextValue+="+unstaged",e.tooltip=StatusFileFormatter.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)} in Working Tree",this.file)),e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=n.ThemeIcon.File,e.command=this.getCommand();else{if(e.collapsibleState=n.TreeItemCollapsibleState.Collapsed,this._hasStagedChanges||this._hasUnstagedChanges)e.contextValue=De.Td.File,this._hasStagedChanges&&this._hasUnstagedChanges?e.contextValue+="+staged+unstaged":this._hasStagedChanges?e.contextValue+="+staged":e.contextValue+="+unstaged",e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=n.ThemeIcon.File;else{e.contextValue=De.Td.StatusFileCommits;const t=T.$9.getStatusIcon(this.file.status);e.iconPath={dark:this.view.container.context.asAbsolutePath((0,j.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,j.RQ)("images","light",t))}}e.tooltip=StatusFileFormatter.fromTemplate(`\${file}\n\${directory}/\n\n\${status}\${ (originalPath)} in ${this.getChangedIn()}`,this.file),e.command=this.getCommand()}return this._label=void 0,this._description=void 0,e}get description(){return null==this._description&&(this._description=StatusFileFormatter.fromTemplate(this.view.config.formats.files.description,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._description}get folderName(){return null==this._folderName&&(this._folderName=(0,j.Fd)(this.uri.relativePath)),this._folderName}get label(){return null==this._label&&(this._label=StatusFileFormatter.fromTemplate(this.view.config.formats.files.label,{...this.file,commit:this.commit},{relativePath:this.relativePath})),this._label}get commit(){return this.commits[0]}get priority(){return this._hasStagedChanges&&!this._hasUnstagedChanges?-3:this._hasStagedChanges?-2:this._hasUnstagedChanges?-1:0}get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getChangedIn(){const e=[];let t=0;return this._hasUnstagedChanges&&(t++,e.push("Working Tree")),this._hasStagedChanges&&(t++,e.push("Index (staged)")),this.commits.length>t&&(t=this.commits.length-t),t>0&&e.push((0,k._6)("commit",t)),e.length>2&&(e[e.length-1]=`and ${e[e.length-1]}`),e.join(e.length>2?", ":" and ")}getCommand(){if((this._hasStagedChanges||this._hasUnstagedChanges)&&1===this.commits.length){const e={commit:this.commit,uri:_.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}const e="behind"===this._direction?this.commits[0]:this.commits[this.commits.length-1],t=e.files?.find((e=>e.path===this.file.path))??this.file,i={lhs:{sha:"behind"===this._direction?e.sha:`${e.sha}^`,uri:_.YY.fromFile(t,this.repoPath,void 0,!0)},rhs:{sha:"",uri:_.YY.fromFile(this.file,this.repoPath)},repoPath:this.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[i]}}}const Sn=class extends De.Re{constructor(e,t,i,n,o,r=!1){super(_.YY.fromRepoPath(n.repoPath),e,t),this.branch=i,this.status=n,this.direction=o,this.root=r,this.repoPath=n.repoPath}static getId(e,t,i,n,o){return`${hr.getId(e,t,i)}${this.key}(${n}|${o})`}get id(){return Sn.getId(this.status.repoPath,this.status.ref,this.root,this.status.upstream,this.direction)}async getChildren(){const e=await this.view.container.git.getLog(this.repoPath,{limit:0,ref:x.pk.createRange(this.status.upstream,this.branch.ref,"behind"===this.direction?"...":"..")});let t;null!=e?(await Promise.allSettled((0,q.UI)((0,q.hX)(e.commits.values(),(e=>null==e.files)),(e=>e.ensureFullDetails()))),t=[...(0,q.VS)(e.commits.values(),(e=>e.files?.map((t=>({...t,commit:e})))??[]))]):t=[],t.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const i=(0,Ht.vM)(t,(e=>e.path));let n=Object.values(i).map((e=>new StatusFileNode(this.view,this,e[e.length-1],this.repoPath,e.map((e=>e.commit)),this.direction)));if(this.view.config.files.layout!==r.Vc.List){const e=(0,Ht.Mo)(n,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);n=new _n(this.view,this,this.repoPath,"",e,!1).getChildren()}else n.sort(((e,t)=>e.priority-t.priority||(0,k.dm)(e.label,t.label)));return n}async getTreeItem(){const e=(await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}${"behind"===this.direction?"..":"..."}`))?.changedFiles??0,t=`${(0,k._6)("file",e)} changed`,i=new n.TreeItem(t,n.TreeItemCollapsibleState.Collapsed);return i.id=this.id,i.contextValue=De.Td.BranchStatusFiles,i}};let kn=Sn;kn.key=":status-branch:files";var Pn,Rn=(e=>(e[e.Branches=1]="Branches",e[e.Tags=2]="Tags",e[e.WorkingTree=4]="WorkingTree",e[e.HEAD=8]="HEAD",e[e.BranchesAndTags=3]="BranchesAndTags",e))(Rn||{});(Pn||(Pn={})).show=async function(e,t,i,o={}){const r=n.window.createQuickPick();r.ignoreFocusOut=(0,J.hE)(),r.title=t,r.placeholder=null!=o.allowEnteringRefs?`${i}${s.NE.Space.repeat(3)}(or enter a reference using #)`:i,r.matchOnDescription=!0;const a=[];let l;null!=o?.keys&&0!==o.keys.length&&null!==o?.onDidPressKey&&(l=lf.instance.keyboard.createScope(Object.fromEntries(o.keys.map((e=>[e,{onDidPressKey:e=>{0!==r.activeItems.length&&o.onDidPressKey(e,r)}}])))),l.start(),a.push(l));const c=new n.CancellationTokenSource;let h,u=async function(e,{picked:t,filter:i,include:n,sort:o}){n=n??3;const r=await oi(lf.instance.git.getRepository(e),n?["branches","tags"]:n?["branches"]:n?["tags"]:[],{buttons:[Ke.RevealInSideBar],filter:i,picked:t,sort:o??{branches:{current:!1},tags:{}}});if(t){const e=r.findIndex((e=>e.ref===t));-1!==e&&r.splice(0,0,...r.splice(e,1))}return 8&n&&r.splice(0,0,Cs("HEAD",e,void 0,{icon:!0})),4&n&&r.splice(0,0,Cs("",e,void 0,{icon:!0})),r}(e,o);o.autoPick&&(u=u.then((e=>(e.length<=1&&(h=e[0],c.cancel()),e)))),r.busy=!0,r.show();const d=ri(lf.instance.git.getRepository(e),{buttons:[Ke.RevealInSideBar],ranges:o?.allowEnteringRefs&&"boolean"!=typeof o.allowEnteringRefs?o.allowEnteringRefs.ranges:void 0});r.items=await u,r.busy=!1;try{let e=await new Promise((e=>{a.push(c.token.onCancellationRequested((()=>r.hide())),r.onDidHide((()=>e(void 0))),r.onDidAccept((()=>{0!==r.activeItems.length&&e(r.activeItems[0])})),r.onDidChangeValue((async e=>{o.allowEnteringRefs&&(await d(r,e)||(r.items=await u)),null!=l&&(0!==e.length?await l.pause(["left","right"]):await l.resume())})),r.onDidTriggerItemButton((({button:e,item:{item:t}})=>{e===Ke.RevealInSideBar&&(x.Wb.isBranch(t)?rt(t,{select:!0,expand:!0}):x.Wb.isTag(t)?Vt(t,{select:!0,expand:!0}):x.Wb.isRevision(t)&&bt(t,{pin:!1,preserveFocus:!0}))})))}));if(null==e&&null!=h&&(e=h),null==e)return;return e.item}finally{r.dispose(),a.forEach((e=>{e.dispose()}))}};const Dn=[[0,"Less than a week ago"],[7,"Over a week ago"],[25,"Over a month ago"],[77,"Over 3 months ago"]];function*$n(e,t,i,{show:n}={show:!0}){if(!t.view.config.showRelativeDateMarkers||!n)return yield*e;let o,r=i??0;const s=Date.now();let a=!0;for(const i of e){if(r<Dn.length){let[e,n]=Dn[r];if(void 0===o){const t=new Date(s);o=t.setDate(t.getDate()-e)}const l=new Date(i.commit.committer.date).setUTCHours(0,0,0,0);if(l<=o){for(;r<Dn.length-1;){[e]=Dn[r+1];const t=new Date(s);if(l>t.setDate(t.getDate()-e))break;r++,o=void 0,[,n]=Dn[r]}a||(yield new MessageNode(t.view,t,"",n,void 0,void 0,De.Td.DateMarker)),r++,o=void 0}}a=!1,yield i}}var Tn=Object.defineProperty,Fn=Object.getOwnPropertyDescriptor,xn=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Fn(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Tn(t,i,r),r};const On=class extends De.CF{constructor(e,t,i,n,o){super(e,t,i),this.folder=n,this.branch=o,this.splatted=!0,this.limit=this.view.getNodeLastKnownLimit(this)}static getId(e,t){return`${Jr.getId(e)}${this.key}(${t})`}toClipboard(){return this.uri.fileName}get id(){return On.getId(this.uri.repoPath,this.uri.toString(!0))}async getChildren(){this.view.description=`${this.label}${this.parent instanceof FileHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`;const e=[],t=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[i,n,o,r,s]=await Promise.all([this.getLog(),null==this.uri.sha?this.view.container.git.getStatusForFiles(this.uri.repoPath,this.getPathOrGlob()):void 0,null==this.uri.sha?this.view.container.git.getCurrentUser(this.uri.repoPath):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,t?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:t}):void 0]);if(n?.length)if(this.folder){const t=(0,q.UI)((0,q.uw)((0,q.VS)(n,(e=>e.getPseudoCommits(this.view.container,o))),(e=>e.sha),((e,t)=>e.with({files:{files:[...e.files,...t.files]}}))),(e=>new uo(this.view,this,e)));e.push(...t)}else{const[t]=n,i=t.getPseudoCommits(this.view.container,o);i.length&&e.push(...i.map((e=>new FileRevisionAsCommitNode(this.view,this,t,e))))}return null!=i&&(e.push(...$n((0,q.DZ)(i.commits.values(),(e=>this.folder?new uo(this.view,this,e,s?.has(e.ref),this.branch,void 0,{expand:!1}):null!=e.file?new FileRevisionAsCommitNode(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:r,unpublished:s?.has(e.ref)}):void 0)),this)),i.hasMore&&e.push(new LoadMoreNode(this.view,this,e[e.length-1]))),0===e.length?[new MessageNode(this.view,this,"No file history could be found.")]:e}getTreeItem(){this.splatted=!1;const e=this.label,t=new n.TreeItem(e,n.TreeItemCollapsibleState.Expanded);return t.contextValue=De.Td.FileHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}\n${this.uri.directory}/${null==this.uri.sha?"":`\n\n${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof FileHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return this.folder&&""===this.uri.fileName?`${(0,j.EZ)(this.uri.path)}${this.uri.sha?` ${this.uri.sha===x.pk.deletedOrMissing?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`:`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===x.pk.deletedOrMissing?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}subscribe(){const e=this.view.container.git.getRepository(this.uri);if(null==e)return;return n.Disposable.from(e.onDidChange(this.onRepositoryChanged,this),e.onDidChangeFileSystem(this.onFileSystemChanged,this),e.startWatchingFileSystem(),r.DN.onDidChange((e=>{r.DN.changed(e,"advanced.fileHistoryFollowsRenames")&&this.view.resetNodeLastKnownLimit(this)})))}etag(){return Date.now()}onRepositoryChanged(e){e.changed(A.I6.Index,A.I6.Heads,A.I6.Remotes,A.I6.RemoteProviders,A.I6.Status,A.I6.Unknown,A.du.Any)&&(B.Yd.debug(`FileHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){if(this.folder){if(!e.uris.some((e=>e.fsPath.startsWith(this.uri.fsPath))))return}else if(!e.uris.some((e=>e.toString()===this.uri.toString())))return;B.Yd.debug(`FileHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0)}refresh(e){e&&(this._log=void 0)}async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.getPathOrGlob(),{limit:this.limit??this.view.config.pageItemLimit,ref:this.uri.sha})),this._log}getPathOrGlob(){return this.folder?n.Uri.joinPath(this.uri,"*"):this.uri}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}};let An=On;An.key=":history:file",xn([(0,H.fF)()],An.prototype,"subscribe",1),xn([(0,V.H)(),(0,H.fF)()],An.prototype,"refresh",1),xn([(0,S.H)()],An.prototype,"getPathOrGlob",1),xn([(0,V.H)()],An.prototype,"loadMore",1);var In=Object.defineProperty,En=Object.getOwnPropertyDescriptor,Nn=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?En(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&In(t,i,r),r};class FileHistoryTrackerNode extends De.CF{constructor(e){super(_.Wj,e),this.splatted=!0}dispose(){super.dispose(),this.resetChild()}resetChild(){null!=this._child&&(this._child.dispose(),this._child=void 0)}async getChildren(){if(null==this._child){if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide file history information.",[];this.view.message=void 0;const e={...this.uri,repoPath:this.uri.repoPath,sha:this._base??this.uri.sha},t=new _.YY(this.uri,e);let i,o=!1;try{((await n.workspace.fs.stat(this.uri)).type&n.FileType.Directory)===n.FileType.Directory&&(o=!0)}catch{}this.view.title=o?"Folder History":"File History",e.sha&&"HEAD"!==e.sha?x.pk.isSha(e.sha)||({values:[i]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:t=>t.name===e.sha})):i=await this.view.container.git.getBranch(this.uri.repoPath),this._child=new An(t,this.view,this,o,i)}return this._child.getChildren()}getTreeItem(){this.splatted=!1;const e=new n.TreeItem("File History",n.TreeItemCollapsibleState.Expanded);return e.contextValue=De.Td.ActiveFileHistory,e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=_.Wj}async changeBase(){const e=await Pn.show(this.uri.repoPath,"Change File History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if(x.Wb.isBranch(e)){const t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this._child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){const t=(0,G.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==_.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());const i=n.window.activeTextEditor;if(null==i||!this.view.container.git.isTrackable(i.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&n.window.visibleTextEditors.some((e=>e.document?.uri.path===this.uri.path)))||(this.reset(),null!=t&&(t.exitDetails=`, uri=${B.Yd.toLoggable(this._uri)}`),!1);if(i.document.uri.path===this.uri.path)return null!=t&&(t.exitDetails=`, uri=${B.Yd.toLoggable(this._uri)}`),!0;let o,r=await _.YY.fromUri(i.document.uri);if(null!=r.sha){const e=await this.view.container.git.getWorkingUri(r.repoPath,r);null!=e&&(o=e)}return!(!this.hasUri||!qe.n.equals(o??r,this.uri))||(null!=o&&(r=await _.YY.fromUri(o)),null==r.repoPath?this.reset():(this.setUri(r),this.resetChild()),null!=t&&(t.exitDetails=`, uri=${B.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this.resetChild()}setEditorFollowing(e){e&&this.setUri(),this.canSubscribe=e,e||this.triggerChange()}async showHistoryForUri(e){this.setUri(e),await this.triggerChange()}subscribe(){return n.Disposable.from(n.window.onDidChangeActiveTextEditor((0,K.Ds)(this.onActiveEditorChanged,250),this))}etag(){return 0}onActiveEditorChanged(e){if(null==e&&(0,J.pt)(this._uri))return null==this._triggerChangeDebounced&&(this._triggerChangeDebounced=(0,K.Ds)((()=>this.triggerChange()),1500)),void this._triggerChangeDebounced();this.triggerChange()}setUri(e){this._uri=e??_.Wj,(0,a.v)(s.zf.ViewsFileHistoryCanPin,this.hasUri)}}Nn([(0,H.fF)()],FileHistoryTrackerNode.prototype,"resetChild",1),Nn([(0,V.H)(),(0,H.cM)()],FileHistoryTrackerNode.prototype,"changeBase",1),Nn([(0,V.H)(),(0,H.fF)({exit:e=>`returned ${e}`})],FileHistoryTrackerNode.prototype,"refresh",1),Nn([(0,H.cM)()],FileHistoryTrackerNode.prototype,"setEditorFollowing",1),Nn([(0,H.cM)()],FileHistoryTrackerNode.prototype,"showHistoryForUri",1),Nn([(0,H.fF)()],FileHistoryTrackerNode.prototype,"subscribe",1),Nn([(0,H.fF)({args:!1})],FileHistoryTrackerNode.prototype,"onActiveEditorChanged",1);var Un=Object.defineProperty,Ln=Object.getOwnPropertyDescriptor,Mn=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ln(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Un(t,i,r),r};const Wn=class extends De.CF{constructor(e,t,i,n,o,r){super(e,t,i),this.branch=n,this.selection=o,this.editorContents=r,this.splatted=!0,this.limit=this.view.getNodeLastKnownLimit(this)}static getId(e,t,i){return`${Jr.getId(e)}${this.key}(${t}[${i.start.line},${i.start.character}-${i.end.line},${i.end.character}])`}toClipboard(){return this.uri.fileName}get id(){return Wn.getId(this.uri.repoPath,this.uri.toString(!0),this.selection)}async getChildren(){this.view.description=`${this.label}${this.parent instanceof LineHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`;const e=[];let t=this.selection;const i=null!=this.branch?await this.view.container.git.getBranchAheadRange(this.branch):void 0,[o,r,s,a]=await Promise.all([this.getLog(t),null==this.uri.sha||x.pk.isUncommitted(this.uri.sha)?this.editorContents?await this.view.container.git.getBlameForRangeContents(this.uri,t,this.editorContents):await this.view.container.git.getBlameForRange(this.uri,t):void 0,null!=this.branch?this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.branch.name):void 0,i?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:i}):void 0]);if(null!=r)for(const i of r.commits.values()){if(!i.isUncommitted)continue;const o=r.lines[0],s=r.lines[r.lines.length-1],a=t.active.line===o.line-1;t=new n.Selection((a?s:o).originalLine-1,t.anchor.character,(a?o:s).originalLine-1,t.active.character);const l=await this.view.container.git.getStatusForFile(this.uri.repoPath,this.uri);if(null!=l){const n={conflictStatus:l?.conflictStatus,path:i.file?.path??"",indexStatus:l?.indexStatus,originalPath:i.file?.originalPath,repoPath:this.uri.repoPath,status:l?.status??T.NV.Modified,workingTreeStatus:l?.workingTreeStatus},o=await this.view.container.git.getCurrentUser(this.uri.repoPath),r=l?.getPseudoCommits(this.view.container,o);if(null!=r)for(const i of r.reverse())e.splice(0,0,new FileRevisionAsCommitNode(this.view,this,n,i,{selection:t}))}break}return null!=o&&(e.push(...$n((0,q.DZ)(o.commits.values(),(e=>null!=e.file?new FileRevisionAsCommitNode(this.view,this,e.file,e,{branch:this.branch,getBranchAndTagTips:s,selection:t,unpublished:a?.has(e.ref)}):void 0)),this)),o.hasMore&&e.push(new LoadMoreNode(this.view,this,e[e.length-1]))),0===e.length?[new MessageNode(this.view,this,"No line history could be found.")]:e}getTreeItem(){this.splatted=!1;const e=this.label,t=new n.TreeItem(e,n.TreeItemCollapsibleState.Expanded);return t.contextValue=De.Td.LineHistory,t.description=this.uri.directory,t.tooltip=`History of ${this.uri.fileName}${this.lines}\n${this.uri.directory}/${null==this.uri.sha?"":`\n\n${this.uri.sha}`}`,this.view.description=`${e}${this.parent instanceof LineHistoryTrackerNode&&!this.parent.followingEditor?" (pinned)":""}`,t}get label(){return`${this.uri.fileName}${this.lines}${this.uri.sha?` ${this.uri.sha===x.pk.deletedOrMissing?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}`}get lines(){return this.selection.isSingleLine?`:${this.selection.start.line+1}`:`:${this.selection.start.line+1}-${this.selection.end.line+1}`}subscribe(){const e=this.view.container.git.getRepository(this.uri);if(null==e)return;return n.Disposable.from(e.onDidChange(this.onRepositoryChanged,this),e.onDidChangeFileSystem(this.onFileSystemChanged,this),e.startWatchingFileSystem())}etag(){return Date.now()}onRepositoryChanged(e){e.changed(A.I6.Index,A.I6.Heads,A.I6.Remotes,A.I6.RemoteProviders,A.I6.Status,A.I6.Unknown,A.du.Any)&&(B.Yd.debug(`LineHistoryNode.onRepositoryChanged(${e.toString()}); triggering node refresh`),this.triggerChange(!0))}onFileSystemChanged(e){e.uris.some((e=>e.toString()===this.uri.toString()))&&(B.Yd.debug(`LineHistoryNode.onFileSystemChanged(${this.uri.toString(!0)}); triggering node refresh`),this.triggerChange(!0))}refresh(e){e&&(this._log=void 0)}async getLog(e){return null==this._log&&(this._log=await this.view.container.git.getLogForFile(this.uri.repoPath,this.uri,{all:!1,limit:this.limit??this.view.config.pageItemLimit,range:e??this.selection,ref:this.uri.sha,renames:!1})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1,this.splatted)))}};let Bn=Wn;Bn.key=":history:line",Mn([(0,S.H)()],Bn.prototype,"lines",1),Mn([(0,H.fF)()],Bn.prototype,"subscribe",1),Mn([(0,V.H)(),(0,H.fF)()],Bn.prototype,"refresh",1),Mn([(0,V.H)()],Bn.prototype,"loadMore",1);var Gn=Object.defineProperty,Vn=Object.getOwnPropertyDescriptor,Hn=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Vn(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Gn(t,i,r),r};class LineHistoryTrackerNode extends De.CF{constructor(e){super(_.Wj,e),this.splatted=!0}dispose(){super.dispose(),this.resetChild()}resetChild(){null!=this._child&&(this._child.dispose(),this._child=void 0)}async getChildren(){if(null==this._child){if(!this.hasUri)return this.view.description=void 0,this.view.message="There are no editors open that can provide line history information.",[];if(null==this._selection)return this.view.description=void 0,this.view.message="There was no selection provided for line history.",this.view.description=`${this.uri.fileName}${this.uri.sha?` ${this.uri.sha===x.pk.deletedOrMissing?this.uri.shortSha:`(${this.uri.shortSha})`}`:""}${this.followingEditor?"":" (pinned)"}`,[];this.view.message=void 0;const e={...this.uri,repoPath:this.uri.repoPath,sha:this.uri.sha??this._base},t=new _.YY(this.uri,e);let i;e.sha&&"HEAD"!==e.sha?x.pk.isSha(e.sha)||({values:[i]}=await this.view.container.git.getBranches(this.uri.repoPath,{filter:t=>t.name===e.sha})):i=await this.view.container.git.getBranch(this.uri.repoPath),this._child=new Bn(t,this.view,this,i,this._selection,this._editorContents)}return this._child.getChildren()}getTreeItem(){this.splatted=!1;const e=new n.TreeItem("Line History",n.TreeItemCollapsibleState.Expanded);return e.contextValue=De.Td.ActiveLineHistory,this.ensureSubscription(),e}get followingEditor(){return this.canSubscribe}get hasUri(){return this._uri!=_.Wj}async changeBase(){const e=await Pn.show(this.uri.repoPath,"Change Line History Base","Choose a reference to set as the new base",{allowEnteringRefs:!0,picked:this._base,sort:{branches:{current:!0},tags:{}}});if(null!=e){if(x.Wb.isBranch(e)){const t=await this.view.container.git.getBranch(this.uri.repoPath);this._base=t?.name===e.name?void 0:e.ref}else this._base=e.ref;null!=this._child&&(this.setUri(),await this.triggerChange())}}async refresh(e=!1){const t=(0,G.UH)();if(!this.canSubscribe)return!1;e&&(null!=this._uri&&this._uri!==_.Wj&&await this.view.container.tracker.resetCache(this._uri,"log"),this.reset());const i=n.window.activeTextEditor;if(null==i||!this.view.container.git.isTrackable(i.document.uri))return!!(!this.hasUri||this.view.container.git.isTrackable(this.uri)&&n.window.visibleTextEditors.some((e=>e.document?.uri.path===this.uri.path)))||(this.reset(),null!=t&&(t.exitDetails=`, uri=${B.Yd.toLoggable(this._uri)}`),!1);if(i.document.uri.path===this.uri.path&&null!=this._selection&&i.selection.isEqual(this._selection))return null!=t&&(t.exitDetails=`, uri=${B.Yd.toLoggable(this._uri)}`),!0;const o=await _.YY.fromUri(i.document.uri);return!!(this.hasUri&&qe.n.equals(o,this.uri)&&null!=this._selection&&i.selection.isEqual(this._selection))||(null==o.repoPath?this.reset():(this.setUri(o),this._editorContents=i.document.isDirty?i.document.getText():void 0,this._selection=i.selection,this.resetChild()),null!=t&&(t.exitDetails=`, uri=${B.Yd.toLoggable(this._uri)}`),!1)}reset(){this.setUri(),this._editorContents=void 0,this._selection=void 0,this.resetChild()}setEditorFollowing(e){this.canSubscribe=e}subscribe(){if(this.view.container.lineTracker.subscribed(this))return;const e=(0,K.Ds)(this.onActiveLinesChanged.bind(this),250);return this.view.container.lineTracker.subscribe(this,this.view.container.lineTracker.onDidChangeActiveLines((t=>{t.pending||e(t)})))}etag(){return 0}onActiveLinesChanged(e){this.triggerChange()}setUri(e){this._uri=e??_.Wj,(0,a.v)(s.zf.ViewsFileHistoryCanPin,this.hasUri)}}Hn([(0,H.fF)()],LineHistoryTrackerNode.prototype,"resetChild",1),Hn([(0,V.H)(),(0,H.cM)()],LineHistoryTrackerNode.prototype,"changeBase",1),Hn([(0,V.H)(),(0,H.fF)({exit:e=>`returned ${e}`})],LineHistoryTrackerNode.prototype,"refresh",1),Hn([(0,H.cM)()],LineHistoryTrackerNode.prototype,"setEditorFollowing",1),Hn([(0,H.fF)()],LineHistoryTrackerNode.prototype,"subscribe",1),Hn([(0,H.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineHistoryTrackerNode.prototype,"onActiveLinesChanged",1);const qn=" (pinned)";class FileHistoryView extends ViewBase{constructor(e){super(e,"gitlens.views.fileHistory","File History","fileHistoryView"),this.configKey="fileHistory",this._followCursor=!1,this._followEditor=!0,(0,a.v)(s.zf.ViewsFileHistoryCursorFollowing,this._followCursor),(0,a.v)(s.zf.ViewsFileHistoryEditorFollowing,this._followEditor)}get showCollapseAll(){return!1}getRoot(){return this._followCursor?new LineHistoryTrackerNode(this):new FileHistoryTrackerNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),Xo(this.getQualifiedCommand("changeBase"),(()=>this.changeBase()),this),Xo(this.getQualifiedCommand("setCursorFollowingOn"),(()=>this.setCursorFollowing(!0)),this),Xo(this.getQualifiedCommand("setCursorFollowingOff"),(()=>this.setCursorFollowing(!1)),this),Xo(this.getQualifiedCommand("setEditorFollowingOn"),(()=>this.setEditorFollowing(!0)),this),Xo(this.getQualifiedCommand("setEditorFollowingOff"),(()=>this.setEditorFollowing(!1)),this),Xo(this.getQualifiedCommand("setRenameFollowingOn"),(()=>this.setRenameFollowing(!0)),this),Xo(this.getQualifiedCommand("setRenameFollowingOff"),(()=>this.setRenameFollowing(!1)),this),Xo(this.getQualifiedCommand("setShowAllBranchesOn"),(()=>this.setShowAllBranches(!0)),this),Xo(this.getQualifiedCommand("setShowAllBranchesOff"),(()=>this.setShowAllBranches(!1)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat")||r.DN.changed(e,"advanced.fileHistoryFollowsRenames")||r.DN.changed(e,"advanced.fileHistoryShowAllBranches"))}async showHistoryForUri(e){this.setCursorFollowing(!1);const t=this.ensureRoot(!0);return t instanceof FileHistoryTrackerNode&&(await t.showHistoryForUri(e),this.setEditorFollowing(!1)),this.show()}changeBase(){this.root?.changeBase()}setCursorFollowing(e){const t=!this._followEditor&&this.root?.hasUri?this.root.uri:void 0;this._followCursor=e,(0,a.v)(s.zf.ViewsFileHistoryCursorFollowing,e),this.title=this._followCursor?"Line History":"File History";const i=this.ensureRoot(!0);null!=t&&i.setUri(t),i.setEditorFollowing(this._followEditor),i.ensureSubscription(),this.refresh(!0)}setEditorFollowing(e){const t=this.ensureRoot();t.hasUri&&(this._followEditor=e,(0,a.v)(s.zf.ViewsFileHistoryEditorFollowing,e),t.setEditorFollowing(e),this.description?.endsWith(qn)?e&&(this.description=this.description.substr(0,this.description.length-qn.length)):e||null==this.description||(this.description+=qn),e&&(t.ensureSubscription(),this.refresh(!0)))}setRenameFollowing(e){return r.DN.updateEffective("advanced.fileHistoryFollowsRenames",e)}setShowAllBranches(e){return r.DN.updateEffective("advanced.fileHistoryShowAllBranches",e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}}var jn=Object.defineProperty,Yn=Object.getOwnPropertyDescriptor,Qn=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Yn(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&jn(t,i,r),r};const zn=class extends De.bT{constructor(e,t,i,n){super(e,t,i),this.tag=n,this.limit=this.view.getNodeLastKnownLimit(this)}static getId(e,t){return`${Jr.getId(e)}${this.key}(${t})`}toClipboard(){return this.tag.name}get id(){return zn.getId(this.tag.repoPath,this.tag.name)}get label(){return this.view.config.branches.layout===r.CZ.Tree?this.tag.getBasename():this.tag.name}get ref(){return this.tag}async getChildren(){const e=await this.getLog();if(null==e)return[new MessageNode(this.view,this,"No commits could be found.")];const t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,this.tag.name),i=[...$n((0,q.UI)(e.commits.values(),(e=>new uo(this.view,this,e,void 0,void 0,t))),this)];return e.hasMore&&i.push(new LoadMoreNode(this.view,this,i[i.length-1],{getCount:()=>this.view.container.git.getCommitCount(this.tag.repoPath,this.tag.name)})),i}getTreeItem(){const e=new n.TreeItem(this.label,n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Tag,e.description=h(this.tag.message),e.tooltip=`${this.tag.name}${(0,k.vk)(s.NE.Dash,2,2)}${x.pk.shorten(this.tag.sha,{force:!0})}${null!=this.tag.date?`\n${this.tag.formatDateFromNow()} (${this.tag.formatDate(this.view.container.TagDateFormatting.dateFormat)})`:""}\n\n${h(this.tag.message)}${null!=this.tag.commitDate&&this.tag.date!==this.tag.commitDate?`\n${this.tag.formatCommitDateFromNow()} (${this.tag.formatCommitDate(this.view.container.TagDateFormatting.dateFormat)})`:""}`,e}refresh(e){e&&(this._log=void 0)}async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:this.tag.name})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}};let Kn=zn;Kn.key=":tag",Qn([(0,V.H)(),(0,H.fF)()],Kn.prototype,"refresh",1),Qn([(0,V.H)()],Kn.prototype,"loadMore",1);var Jn=Object.defineProperty,Xn=Object.getOwnPropertyDescriptor;const Zn=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.repo=n}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return Zn.getId(this.repo.path)}get repoPath(){return this.repo.path}async getChildren(){if(null==this._children){const e=await this.repo.getTags({sort:!0});if(0===e.values.length)return[new MessageNode(this.view,this,"No tags could be found.")];const t=e.values.map((e=>new Kn(_.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,e)));if(this.view.config.branches.layout===r.CZ.List)return t;const i=(0,Ht.Mo)(t,(e=>e.tag.name.split("/")),((...e)=>e.join("/")),this.view.config.files.compact),n=new BranchOrTagFolderNode(this.view,this,"tag",this.repo.path,"",void 0,i,"tags");this._children=n.getChildren()}return this._children}getTreeItem(){const e=new n.TreeItem("Tags",n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Tags,e.iconPath=new n.ThemeIcon("tag"),e}refresh(){this._children=void 0}};let eo=Zn;eo.key=":tags",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Xn(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&Jn(t,i,r)})([(0,V.H)(),(0,H.fF)()],eo.prototype,"refresh",1);var to=Object.defineProperty,io=Object.getOwnPropertyDescriptor,no=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?io(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&to(t,i,r),r};class TagsRepositoryNode extends De.vb{async getChildren(){return null==this.child&&(this.child=new eo(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(A.I6.Tags,A.I6.Unknown,A.du.Any)}}class TagsViewNode extends De.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No tags could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new TagsRepositoryNode(_.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getTags();return 0===t.values.length?(this.view.message="No tags could be found.",this.view.title="Tags",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Tags (${t.values.length})`,e.getChildren())}return this.view.title="Tags",this.children}getTreeItem(){return new n.TreeItem("Tags",n.TreeItemCollapsibleState.Expanded)}}class TagsView extends ViewBase{constructor(e){super(e,"gitlens.views.tags","Tags","tagsView"),this.configKey="tags"}get canReveal(){return this.config.reveal||!r.DN.get("views.repositories.showTags")}getRoot(){return new TagsViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("tags"),this.refresh(!0))),this),Xo(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout(r.CZ.List)),this),Xo(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout(r.CZ.Tree)),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat")||r.DN.changed(e,"sortTagsBy"))}findTag(e,t){const i=Jr.getId(e.repoPath);return this.findNode((t=>t.tag?.ref===e.ref),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof TagsViewNode||(e instanceof TagsRepositoryNode||e instanceof BranchOrTagFolderNode)&&e.id.startsWith(i),token:t})}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof TagsViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}revealTag(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findTag(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}setLayout(e){return r.DN.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}}no([(0,V.H)((()=>""))],TagsView.prototype,"revealRepository",1),no([(0,V.H)((()=>""))],TagsView.prototype,"revealTag",1);const oo=class extends De.RW{constructor(e,t,i,n,o={}){super(_.YY.fromFile(i,n.repoPath,n.sha),e,t,i),this.commit=n,this._options=o}static getId(e,t){return`${e.id}${this.key}(${t})`}toClipboard(){return this.file.path}get id(){return oo.getId(this.parent,this.file.path)}get priority(){return 0}get ref(){return this.commit}getChildren(){return[]}async getTreeItem(){if(null==this.commit.file){const e=await this.commit.getCommitForFile(this.file);if(null==e){const e=await this.view.container.git.getLogForFile(this.repoPath,this.file.path,{limit:2,ref:this.commit.sha});null!=e&&(this.commit=e.commits.get(this.commit.sha)??this.commit)}else this.commit=e}const e=new n.TreeItem(this.label,n.TreeItemCollapsibleState.None);e.id=this.id,e.contextValue=this.contextValue,e.description=this.description,e.resourceUri=n.Uri.parse(`gitlens-view://commit-file/status/${this.file.status}`),e.tooltip=this.tooltip;const t=T.$9.getStatusIcon(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,j.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,j.RQ)("images","light",t))},e.command=this.getCommand(),this._label=void 0,e}get contextValue(){return this.commit.isUncommitted?this.commit.isUncommittedStaged?`${De.Td.File}+staged`:`${De.Td.File}+unstaged`:`${De.Td.File}+committed${this._options.branch?.current?"+current":""}${this._options.branch?.current&&this._options.branch.sha===this.commit.ref?"+HEAD":""}${this._options.unpublished?"+unpublished":""}`}get description(){return StatusFileFormatter.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})}get folderName(){return void 0===this._folderName&&(this._folderName=(0,j.Fd)(this.uri.relativePath)),this._folderName}get label(){return void 0===this._label&&(this._label=StatusFileFormatter.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0}get tooltip(){const e=StatusFileFormatter.fromTemplate("${file}${'&nbsp;&nbsp;•&nbsp;&nbsp;'changesDetail}${'&nbsp;\\\n'directory}&nbsp;\n\n${status}${ (originalPath)}",this.file),t=new n.MarkdownString(e,!0);return t.supportHtml=!0,t.isTrusted=!0,t}getCommand(){let e;e=this.commit.lines.length?this.commit.lines[0].line-1:this._options.selection?.active.line??0;const t={commit:this.commit,uri:_.YY.fromFile(this.file,this.commit.repoPath),line:e,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,t]}}};let ro=oo;ro.key=":file";const so=class extends De.Re{constructor(e,t,i,n){let o,r;"string"==typeof n?r=n:(r=n.repoPath,o=n),super(_.YY.fromRepoPath(r),e,t),this.parent=t,this.branchOrCommit=o,this.pullRequest=i,this.repoPath=r}static getId(e,t,i){return`${e.id}${this.key}(${t}):${i}`}toClipboard(){return this.pullRequest.url}get id(){return so.getId(this.parent,this.pullRequest.id,this.branchOrCommit?.ref)}getChildren(){return[]}getTreeItem(){const e=new n.TreeItem(`#${this.pullRequest.id}: ${this.pullRequest.title}`,n.TreeItemCollapsibleState.None);e.id=this.id,e.contextValue=De.Td.PullRequest,e.description=`${this.pullRequest.state}, ${this.pullRequest.formatDateFromNow()}`,e.iconPath=rn.i7.getThemeIcon(this.pullRequest);const t=new n.MarkdownString("",!0);t.supportHtml=!0,t.isTrusted=!0,(0,y.f_)(this.branchOrCommit)&&t.appendMarkdown(`Commit \`$(git-commit) ${this.branchOrCommit.shortSha}\` was introduced by $(git-pull-request) PR #${this.pullRequest.id}\n\n`);const i=` "Open Pull Request \\#${this.pullRequest.id} on ${this.pullRequest.provider.name}"`;return t.appendMarkdown(`${rn.i7.getMarkdownIcon(this.pullRequest)} [**${this.pullRequest.title.trim()}**](${this.pullRequest.url}${i}) \\\n[#${this.pullRequest.id}](${this.pullRequest.url}${i}) by [@${this.pullRequest.author.name}](${this.pullRequest.author.url} "Open @${this.pullRequest.author.name} on ${this.pullRequest.provider.name}") was ${this.pullRequest.state===rn.o0.Open?"opened":this.pullRequest.state.toLowerCase()} ${this.pullRequest.formatDateFromNow()}`),e.tooltip=t,e}};let ao=so;ao.key=":pullrequest";var lo=Object.defineProperty,co=Object.getOwnPropertyDescriptor;const ho=class extends De.bT{constructor(e,t,i,n,o,r,s={}){super(i.getGitUri(),e,t),this.parent=t,this.commit=i,this.unpublished=n,this.branch=o,this.getBranchAndTagTips=r,this._options=s}static getId(e,t){return`${e.id}${this.key}(${t})`}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get id(){return ho.getId(this.parent,this.commit.sha)}get isTip(){return(this.branch?.current&&this.branch.sha===this.commit.ref)??!1}get ref(){return this.commit}async getChildren(){if(null==this._children){const e=this.commit;let t,i,n=[];if(!(this.view instanceof TagsView)&&!(this.view instanceof FileHistoryView)&&!this.unpublished&&(0,a.fw)(s.zf.HasConnectedRemotes)&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForCommits&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,Y.PQ)();const i=this.getAssociatedPullRequest(e);queueMicrotask((async()=>{await(t?.promise);let n=!1;const o=setTimeout((()=>{n=!0,this.view.triggerNodeChange(this)}),250),r=await i;clearTimeout(o),null!=r&&null!=this._children&&this._children.splice(0,0,new ao(this.view,this,r,e)),(n||null!=r)&&this.view.triggerNodeChange(this)}))}const o=await e.getCommitsForFiles();for(const e of o)n.push(new ro(this.view,this,e.file,e));if(this.view.config.files.layout!==r.Vc.List){const e=(0,Ht.Mo)(n,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);n=new _n(this.view,this,this.repoPath,"",e).getChildren()}else n.sort(((e,t)=>(0,k.dm)(e.label,t.label)));null!=i&&n.splice(0,0,new ao(this.view,this,i,e)),this._children=n,setTimeout((()=>t?.fulfill()),1)}return this._children}async getTreeItem(){const e=CommitFormatter.fromTemplate(this.view.config.formats.commits.label,this.commit,{dateFormat:r.DN.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0}),t=new n.TreeItem(e,this._options.expand?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.Collapsed);t.id=this.id,t.contextValue=`${De.Td.Commit}${this.branch?.current?"+current":""}${this.isTip?"+HEAD":""}${this.unpublished?"+unpublished":""}`,t.description=CommitFormatter.fromTemplate(this.view.config.formats.commits.description,this.commit,{dateFormat:r.DN.get("defaultDateFormat"),getBranchAndTagTips:e=>this.getBranchAndTagTips?.(e,{compact:!0}),messageTruncateAtNewLine:!0});const i=this.getState("pendingPullRequest");return t.iconPath=null!=i?new n.ThemeIcon("loading~spin"):this.unpublished?new n.ThemeIcon("arrow-up",new n.ThemeColor(s.wL.UnpublishedCommitIconColor)):this.view.config.avatars?await this.commit.getAvatarUri({defaultStyle:r.DN.get("defaultGravatarsStyle")}):new n.ThemeIcon("git-commit"),t}getCommand(){const e={commit:this.commit,uri:this.uri,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}refresh(e){this._children=void 0,e&&this.deleteState()}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let n=this.getState("pendingPullRequest");return n??(n=e.getAssociatedPullRequest({remote:t}),this.storeState("pendingPullRequest",n),i=await n,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}async getTooltip(){const e=await this.view.container.git.getRemotesWithProviders(this.commit.repoPath,{sort:!0}),t=await this.view.container.git.getBestRemoteWithRichProvider(e);let i,o;if(null==this.commit.message&&await this.commit.ensureFullDetails(),null!=t?.provider){const[e,n]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(this.commit.message??this.commit.summary,t),this.getAssociatedPullRequest(this.commit,t)]);i=(0,Y.Sb)(e),o=(0,Y.Sb)(n),null!=o&&i?.delete(o.id)}const s=await CommitFormatter.fromTemplateAsync(this.view.config.formats.commits.tooltip,this.commit,{autolinkedIssuesOrPullRequests:i,dateFormat:r.DN.get("defaultDateFormat"),getBranchAndTagTips:this.getBranchAndTagTips,messageAutolinks:!0,messageIndent:4,pullRequestOrRemote:o,outputFormat:"markdown",remotes:e,unpublished:this.unpublished}),a=new n.MarkdownString(s,!0);return a.supportHtml=!0,a.isTrusted=!0,a}};let uo=ho;uo.key=":commit",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?co(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&lo(t,i,r)})([(0,V.H)()],uo.prototype,"refresh",1);var po=Object.defineProperty,mo=Object.getOwnPropertyDescriptor,go=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?mo(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&po(t,i,r),r};const fo=class extends De.Re{constructor(e,t,i,n,o,r=!1,s){super(_.YY.fromRepoPath(n.repoPath),e,t),this.branch=i,this.status=n,this.upstreamType=o,this.root=r,this.limit=this.view.getNodeLastKnownLimit(this),this.options={showAheadCommits:!1,...s}}static getId(e,t,i,n,o){return`${hr.getId(e,t,i)}${this.key}(${n??""}):${o}`}get id(){return fo.getId(this.status.repoPath,this.status.ref,this.root,this.status.upstream,this.upstreamType)}get repoPath(){return this.uri.repoPath}async getChildren(){if("same"===this.upstreamType||"none"===this.upstreamType)return[];const e=await this.getLog();if(null==e)return[];let t;if("ahead"===this.upstreamType){t=[...e.commits.values()];const i=t[t.length-1];if(null==await i.getPreviousSha()){const e=await this.view.container.git.getLog(this.uri.repoPath,{limit:2,ref:i.sha});null!=e&&(t[t.length-1]=(0,q.Ps)(e.commits.values()))}}else t=e.commits.values();const i=[];let n=!0;return!this.options.showAheadCommits&&"ahead"===this.upstreamType&&this.status.upstream&&this.status.state.ahead>0?(n=!1,i.push(...await new kn(this.view,this,this.branch,this.status,this.upstreamType,this.root).getChildren())):(i.push(...$n((0,q.UI)(t,(e=>new uo(this.view,this,e,"ahead"===this.upstreamType,this.branch))),this,1)),e.hasMore&&i.push(new LoadMoreNode(this.view,this,i[i.length-1]))),n&&i.splice(0,0,new kn(this.view,this,this.branch,this.status,this.upstreamType,this.root)),i}async getTreeItem(){let e,t,i,o,r,a,l=0;if("none"!==this.upstreamType){const e=this.view.container.git.getRepository(this.repoPath);l=await(e?.getLastFetched())??0}switch(this.upstreamType){case"ahead":{const l=await this.branch.getRemote();e=`Changes to push to ${l?.name??(0,v.Lo)(this.status.upstream)}${l?.provider?.name?` on ${l?.provider.name}`:""}`,t=(0,k._6)("commit",this.status.state.ahead),a=`Branch $(git-branch) ${this.branch.name} is ${(0,k._6)("commit",this.status.state.ahead,{infix:"$(arrow-up) "})} ahead of $(git-branch) ${this.status.upstream}${l?.provider?.name?` on ${l.provider.name}`:""}`,i=n.TreeItemCollapsibleState.Collapsed,o=this.root?De.Td.StatusAheadOfUpstream:De.Td.BranchStatusAheadOfUpstream,r=new n.ThemeIcon("cloud-upload",new n.ThemeColor(s.wL.UnpublishedChangesIconColor));break}case"behind":{const l=await this.branch.getRemote();e=`Changes to pull from ${l?.name??(0,v.Lo)(this.status.upstream)}${l?.provider?.name?` on ${l.provider.name}`:""}`,t=(0,k._6)("commit",this.status.state.behind),a=`Branch $(git-branch) ${this.branch.name} is ${(0,k._6)("commit",this.status.state.behind,{infix:"$(arrow-down) "})} behind $(git-branch) ${this.status.upstream}${l?.provider?.name?` on ${l.provider.name}`:""}`,i=n.TreeItemCollapsibleState.Collapsed,o=this.root?De.Td.StatusBehindUpstream:De.Td.BranchStatusBehindUpstream,r=new n.ThemeIcon("cloud-download",new n.ThemeColor(s.wL.UnpulledChangesIconColor));break}case"same":{const s=await this.branch.getRemote();e=`Up to date with ${s?.name??(0,v.Lo)(this.status.upstream)}${s?.provider?.name?` on ${s.provider.name}`:""}`,t=l?`Last fetched ${(0,C.Zh)(new Date(l))}`:"",a=`Branch $(git-branch) ${this.branch.name} is up to date with $(git-branch) ${this.status.upstream}${s?.provider?.name?` on ${s.provider.name}`:""}`,i=n.TreeItemCollapsibleState.None,o=this.root?De.Td.StatusSameAsUpstream:De.Td.BranchStatusSameAsUpstream,r=new n.ThemeIcon("cloud");break}case"none":{const t=await this.view.container.git.getRemotesWithProviders(this.branch.repoPath),l=O.ss.getHighlanderProviders(t),c=l?.length?l[0].name:void 0;e=`Publish ${this.branch.name} to ${c??"a remote"}`,a=`Branch $(git-branch) ${this.branch.name} hasn't been published to ${c??"a remote"}`,i=n.TreeItemCollapsibleState.None,o=this.root?De.Td.StatusNoUpstream:De.Td.BranchStatusNoUpstream,r=new n.ThemeIcon("cloud-upload",t.length?new n.ThemeColor(s.wL.UnpublishedChangesIconColor):void 0);break}}const c=new n.TreeItem(e,i);c.id=this.id,c.contextValue=o,c.description=t,l&&(a+=`\n\nLast fetched ${(0,C.Zh)(new Date(l))}`),c.iconPath=r;const h=new n.MarkdownString(a,!0);return h.supportHtml=!0,h.isTrusted=!0,c.tooltip=h,c}refresh(e){e&&(this._log=void 0)}async getLog(){if("same"!==this.upstreamType&&"none"!==this.upstreamType){if(null==this._log){const e="ahead"===this.upstreamType?x.pk.createRange(this.status.upstream,this.status.ref):x.pk.createRange(this.status.ref,this.status.upstream);this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}};let wo=fo;wo.key=":status-branch:upstream",go([(0,V.H)(),(0,H.fF)()],wo.prototype,"refresh",1),go([(0,V.H)()],wo.prototype,"loadMore",1);class AutolinkedItemNode extends De.Re{constructor(e,t,i,n){super(_.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.item=n}toClipboard(){return this.item.url}get id(){return`${this.parent.id}:item(${this.item.id})`}getChildren(){return[]}getTreeItem(){if(!function(e){return"closed"in e&&"boolean"==typeof e.closed}(this.item)){const{provider:e}=this.item,t=new n.TreeItem(`${this.item.prefix}${this.item.id}`,n.TreeItemCollapsibleState.None);return t.description=e?.name??"Custom",t.iconPath=new n.ThemeIcon(null==this.item.type?"link":this.item.type===Ye.fH.PullRequest?"git-pull-request":"issues"),t.contextValue=De.Td.AutolinkedItem,t.tooltip=new n.MarkdownString(`${this.item.description?`Autolinked ${this.item.description}`:`${null==this.item.type?"Autolinked":this.item.type===Ye.fH.PullRequest?"Autolinked Pull Request":"Autolinked Issue"} ${this.item.prefix}${this.item.id}`} \\\n[${this.item.url}](${this.item.url}${null!=this.item.title?` "${this.item.title}"`:""})`),t}const e=(0,C.Zh)(this.item.closedDate??this.item.date),t=new n.TreeItem(`${this.item.id}: ${this.item.title}`,n.TreeItemCollapsibleState.None);t.description=e,t.iconPath=ue.um.getThemeIcon(this.item),t.contextValue=this.item.type===ue.mX.PullRequest?De.Td.PullRequest:De.Td.AutolinkedIssue;const i=` "Open ${this.item.type===ue.mX.PullRequest?"Pull Request":"Issue"} \\#${this.item.id} on ${this.item.provider.name}"`,o=new n.MarkdownString(`${ue.um.getMarkdownIcon(this.item)} [**${this.item.title.trim()}**](${this.item.url}${i}) \\\n[#${this.item.id}](${this.item.url}${i}) was ${this.item.closed?"closed":"opened"} ${e}`,!0);return o.supportHtml=!0,o.isTrusted=!0,t.tooltip=o,t}}var _o=Object.defineProperty,vo=Object.getOwnPropertyDescriptor;let yo=0;class AutolinkedItemsNode extends De.Re{constructor(e,t,i,n,o){super(_.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.log=n,this.expand=o,this._instanceId=yo++}get id(){return`${this.parent.id}:results:autolinked:${this._instanceId}`}async getChildren(){if(null==this._children){const e=[...this.log.commits.values()];let t;if(e.length){const i=e.map((e=>e.message)).join("\n");let n;const o=this.view.container.autolinks.getAutolinks(i),r=await this.view.container.git.getBestRemoteWithProvider(this.repoPath);if(null!=r){const e=this.view.container.autolinks.getAutolinks(i,r);n=e;const[t]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(i,r,{autolinks:e})]);if("fulfilled"===t.status&&null!=t.value)for(const[e,i]of t.value)n.set(e,i);n=new Map((0,q.G0)(n,o))}else n=o;t=[...n.values()].map((e=>rn.i7.is(e)?new ao(this.view,this,e,this.log.repoPath):new AutolinkedItemNode(this.view,this,this.repoPath,e)))}null!=t&&0!==t.length||(t=[new MessageNode(this.view,this,"No autolinked issues or pull requests could be found.")]),this.log.hasMore&&t.push(new LoadMoreNode(this.view,this.parent,t[t.length-1],{context:{expandAutolinks:!0},message:"Load more commits to search for autolinks"})),this._children=t}return this._children}getTreeItem(){const e=new n.TreeItem("Autolinked Issues and Pull Requests",this.expand?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.AutolinkedItems,e}refresh(e=!1){e&&(this._children=void 0)}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?vo(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&_o(t,i,r)})([(0,V.H)(),(0,H.fF)()],AutolinkedItemsNode.prototype,"refresh",1);class ResultsFileNode extends De.RW{constructor(e,t,i,n,o,r,s){super(_.YY.fromFile(n,i,o||r),e,t,n),this.ref1=o,this.ref2=r,this.direction=s}toClipboard(){return this.file.path}get ref(){return x.Wb.create(this.ref1||this.ref2,this.uri.repoPath)}getChildren(){return[]}getTreeItem(){const e=new n.TreeItem(this.label,n.TreeItemCollapsibleState.None);e.contextValue=De.Td.ResultsFile,e.description=this.description,e.tooltip=StatusFileFormatter.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)}",this.file);const t=T.$9.getStatusIcon(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,j.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,j.RQ)("images","light",t))},e.command=this.getCommand(),e}get description(){return void 0===this._description&&(this._description=StatusFileFormatter.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}get folderName(){return void 0===this._folderName&&(this._folderName=(0,j.Fd)(this.uri.relativePath)),this._folderName}get label(){return void 0===this._label&&(this._label=StatusFileFormatter.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}get priority(){return 0}getCommand(){const e={lhs:{sha:this.ref1,uri:"R"!==this.file.status&&"C"!==this.file.status||"behind"!==this.direction?this.uri:_.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0)},rhs:{sha:this.ref2,uri:"R"!==this.file.status&&"C"!==this.file.status||"behind"===this.direction?this.uri:_.YY.fromFile(this.file,this.uri.repoPath,this.ref2,!0)},repoPath:this.uri.repoPath,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes",command:s.Gh.DiffWith,arguments:[e]}}}var bo=Object.defineProperty,Co=Object.getOwnPropertyDescriptor,So=(e=>(e[e.Left=0]="Left",e[e.Right=1]="Right",e))(So||{});class ResultsFilesNode extends De.Re{constructor(e,t,i,n,o,r,s,a={}){super(_.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this.ref1=n,this.ref2=o,this._filesQuery=r,this.direction=s,this._options=a,this._options={expand:!0,...a}}get id(){return`${this.parent.id}:results:files`}get filter(){return this.view.nodeState.getState(this.id,"filter")}set filter(e){this.filter!==e&&(this.view.nodeState.storeState(this.id,"filter",e),this._filterResults=void 0,this.triggerChange(!1))}get filterable(){return null!=this.filter||this.ref1!==this.ref2&&void 0===this.direction}getFilterContextValue(){switch(this.filter){case 0:return"+filtered~left";case 1:return"+filtered~right";default:return""}}async getChildren(){const e=await this.getFilesQueryResults(),t=(null!=this.filter?e.filtered?.get(this.filter):void 0)??e.files;if(null==t)return[];let i=[...(0,q.UI)(t,(e=>new ResultsFileNode(this.view,this,this.repoPath,e,this.ref1,this.ref2,this.direction)))];if(this.view.config.files.layout!==r.Vc.List){const e=(0,Ht.Mo)(i,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);i=new _n(this.view,this,this.repoPath,"",e).getChildren()}else i.sort(((e,t)=>e.priority-t.priority||(0,k.dm)(e.label,t.label)));return i}async getTreeItem(){let e,t,i,o,r,s;const a=this.filter;try{const l=await(0,Y.HO)(this.getFilesQueryResults(),100);e=l.label,null==a&&null!=l.stats&&(t=`${(0,k._6)("addition",l.stats.additions)} (+), ${(0,k._6)("deletion",l.stats.deletions)} (-)${l.stats.approximated?" *approximated":""}`,s=`${e}, ${t}`),null!=a?(t="Filtered",s=`${e} &mdash; ${t}`,o=l.filtered?.get(a),null==o&&(e="files changed",i=new n.ThemeIcon("ellipsis"),r=n.TreeItemCollapsibleState.Collapsed,this._filterResults?.then((()=>queueMicrotask((()=>this.triggerChange(!1))))))):o=l.files,void 0===r&&(r=null==o||0===o.length?n.TreeItemCollapsibleState.None:this._options.expand?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.Collapsed)}catch(t){t instanceof Y.PK&&t.promise.then((()=>queueMicrotask((()=>this.triggerChange(!1))))),e="files changed",i=new n.ThemeIcon("ellipsis"),r=n.TreeItemCollapsibleState.Collapsed}const l=new n.TreeItem(`${null!=a&&null!=o?`Showing ${o.length} of `:""}${e}`,r);return l.description=t,l.id=this.id,l.iconPath=i,l.contextValue=`${De.Td.ResultsFiles}${this.filterable?"+filterable":""}${this.getFilterContextValue()}`,l.tooltip=s,l}refresh(e=!1){e&&(this.view.nodeState.deleteState(this.id,"filter"),this._filterResults=void 0,this._filesQueryResults=this._filesQuery())}async getFilesQueryResults(){void 0===this._filesQueryResults&&(this._filesQueryResults=this._filesQuery());const e=await this._filesQueryResults;return null!=e.files&&this.filterable&&null!=this.filter&&null==e.filtered?.get(this.filter)?(void 0===this._filterResults&&(this._filterResults=this.filterResults(this.filter,e)),await this._filterResults,e):e}async filterResults(e,t){let i;const n=0===this.filter?this.ref2:this.ref1,o=await this.view.container.git.getMergeBase(this.repoPath,this.ref1||"HEAD",this.ref2||"HEAD");if(null!=o){const e=await this.view.container.git.getDiffStatus(this.uri.repoPath,`${o}..${n}`);null!=e&&(i=new Set(e.map((e=>e.path))))}else{const e=await this.view.container.git.getCommit(this.uri.repoPath,n||"HEAD");null!=e?.files&&(i=new Set(e.files.map((e=>e.path))))}null==t.filtered&&(t.filtered=new Map),t.filtered.set(e,null==i?[]:t.files.filter((e=>i.has(e.path))))}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Co(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&bo(t,i,r)})([(0,V.H)(),(0,H.fF)()],ResultsFilesNode.prototype,"refresh",1);var ko=Object.defineProperty,Po=Object.getOwnPropertyDescriptor;class ResultsCommitsNode extends De.Re{constructor(e,t,i,n,o,r={},s){super(_.YY.fromRepoPath(i),e,t),this.parent=t,this.repoPath=i,this._label=n,this._results=o,this._options=r,this._hasMore=!0,this._expandAutolinks=!1,this.limit=this.view.getNodeLastKnownLimit(this),null!=s&&(this.splatted=s),this._options={expand:!0,...r}}get ref1(){return this._results.comparison?.ref1}get ref2(){return this._results.comparison?.ref2}get id(){return`${this.parent.id}:results:commits${this._options.id?`:${this._options.id}`:""}`}async getChildren(){const{log:e}=await this.getCommitsQueryResults();if(null==e)return[];const[t]=await Promise.all([this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath)]),i=[new AutolinkedItemsNode(this.view,this,this.uri.repoPath,e,this._expandAutolinks)];this._expandAutolinks=!1;const{files:n}=this._results;null!=n&&i.push(new ResultsFilesNode(this.view,this,this.uri.repoPath,n.ref1,n.ref2,n.query,this._results.direction,{expand:!1}));const o={expand:this._options.expand&&1===e.count};return i.push(...$n((0,q.UI)(e.commits.values(),(e=>new uo(this.view,this,e,void 0,void 0,t,o))),this,void 0,{show:e.count>1})),e.hasMore&&i.push(new LoadMoreNode(this.view,this,i[i.length-1])),i}async getTreeItem(){let e,t;if(this._results.deferred)e=this._label,t=n.TreeItemCollapsibleState.Collapsed;else try{let i;({label:e,log:i}=await(0,Y.HO)(this.getCommitsQueryResults(),100)),t=null==i||0===i.count?n.TreeItemCollapsibleState.None:this._options.expand||1===i.count?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.Collapsed}catch(e){e instanceof Y.PK&&e.promise.then((()=>this.triggerChange(!1))),t=n.TreeItemCollapsibleState.Collapsed}const i=new n.TreeItem(e??this._label,t);return i.id=this.id,i.contextValue=null!=this._results.comparison?De.Td.CompareResultsCommits:De.Td.SearchResultsCommits,i.description=this._options.description,i}refresh(e=!1){e&&(this._commitsQueryResults=void 0,this.getCommitsQueryResults())}async getCommitsQueryResults(){if(null==this._commitsQueryResults){this._commitsQueryResults=this._results.query(this.limit??r.DN.get("advanced.maxSearchItems"));const e=await this._commitsQueryResults;this._hasMore=e.hasMore,this._results.deferred&&(this._results.deferred=!1,this.triggerChange(!1))}return this._commitsQueryResults}get hasMore(){return this._hasMore}async loadMore(e,t){const i=await this.getCommitsQueryResults();null!=i&&i.hasMore&&(null!=t&&"expandAutolinks"in t&&(this._expandAutolinks=Boolean(t.expandAutolinks)),await(i.more?.(e??this.view.config.pageItemLimit)),this.limit=i.log?.count,this.triggerChange(!1))}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Po(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&ko(t,i,r)})([(0,V.H)(),(0,H.fF)()],ResultsCommitsNode.prototype,"refresh",1);var Ro=Object.defineProperty,Do=Object.getOwnPropertyDescriptor,$o=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Do(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ro(t,i,r),r};const To=class extends De.Re{constructor(e,t,i,n,o,r=!1){super(e,t,i),this.branch=n,this.showComparison=o,this.root=r,this.loadCompareWith()}static getId(e,t,i){return`${Jr.getId(e)}${this.key}(${t})${i?":root":""}`}get ahead(){return{ref1:this._compareWith?.ref||"HEAD",ref2:this.branch.ref}}get behind(){return{ref1:this.branch.ref,ref2:this._compareWith?.ref||"HEAD"}}get id(){return To.getId(this.branch.repoPath,this.branch.name,this.root)}get repoPath(){return this.branch.repoPath}async getChildren(){if(null==this._compareWith)return[];if(null==this._children){const e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.branch.repoPath,[x.pk.createRange(t.ref1,t.ref2,"...")]),n=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2);this._children=[new ResultsCommitsNode(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery(x.pk.createRange(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:this.compareWithWorkingTree?"":n??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{id:"behind",description:(0,k._6)("commit",i?.behind??0),expand:!1}),new ResultsCommitsNode(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery(x.pk.createRange(e.ref1,this.compareWithWorkingTree?"":e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:n??e.ref1,ref2:this.compareWithWorkingTree?"":e.ref2,query:this.getAheadFilesQuery.bind(this)}},{id:"ahead",description:(0,k._6)("commit",i?.ahead??0),expand:!1}),new ResultsFilesNode(this.view,this,this.repoPath,this._compareWith.ref||"HEAD",this.compareWithWorkingTree?"":this.branch.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})]}return this._children}getTreeItem(){let e,t,i;null==this._compareWith?(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with <branch, tag, or ref>`,e=n.TreeItemCollapsibleState.None,i=`Click to compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with a branch, tag, or ref`):(t=`Compare ${this.compareWithWorkingTree?"Working Tree":this.branch.name} with ${x.pk.shorten(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,e=n.TreeItemCollapsibleState.Collapsed);const o=new n.TreeItem(t,e);return o.id=this.id,o.contextValue=`${De.Td.CompareBranch}${this.branch.current?"+current":""}+${this.comparisonType}${null==this._compareWith?"":"+comparing"}${this.root?"+root":""}`,null==this._compareWith&&(o.command={title:`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with${s.NE.Ellipsis}`,command:"gitlens.views.editNode",arguments:[this]}),o.iconPath=new n.ThemeIcon("git-compare"),o.tooltip=i,o}async clear(){this._compareWith=void 0,await this.updateCompareWith(void 0),this._children=void 0,this.view.triggerNodeChange(this)}async edit(){await this.compareWith()}refresh(){this._children=void 0,this.loadCompareWith()}async setComparisonType(e){null!=this._compareWith?await this.updateCompareWith({...this._compareWith,type:e}):this.showComparison=e,this._children=void 0,this.view.triggerNodeChange(this)}get comparisonType(){return this._compareWith?.type??this.showComparison}get compareWithWorkingTree(){return this.comparisonType===r.DH.Working}async compareWith(){const e=await Pn.show(this.branch.repoPath,`Compare ${this.branch.name}${this.compareWithWorkingTree?" (working)":""} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:this.branch.ref,sort:{branches:{current:!0},tags:{}}});null==e||e instanceof CommandQuickPickItem||(await this.updateCompareWith({ref:e.ref,notation:void 0,type:this.comparisonType}),this._children=void 0,this.view.triggerNodeChange(this))}async getAheadFilesQuery(){const e=x.pk.createRange(this._compareWith?.ref||"HEAD",this.branch.ref||"HEAD","..."),[t,i,n,o]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),this.compareWithWorkingTree?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]);let r=(0,Y.Sb)(t)??[],s=(0,Y.Sb)(n);if(this.compareWithWorkingTree){const e=(0,Y.Sb)(i);if(null!=e)if(0===r.length)r=e;else for(const t of e){const e=r.findIndex((e=>e.path===t.path));-1!==e?r.splice(e,1,t):r.push(t)}const t=(0,Y.Sb)(o);null!=t&&(s=null==s?t:{additions:s.additions+t.additions,deletions:s.deletions+t.deletions,changedFiles:r.length,approximated:!0})}return{label:`${(0,k._6)("file",r.length,{zero:"No"})} changed`,files:r,stats:s}}async getBehindFilesQuery(){const e=x.pk.createRange(this.branch.ref,this._compareWith?.ref||"HEAD","..."),[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),n=(0,Y.Sb)(t)??[];return{label:`${(0,k._6)("file",n.length,{zero:"No"})} changed`,files:n,stats:(0,Y.Sb)(i)}}getCommitsQuery(e){const t=this.repoPath;return async i=>{const n=await this.view.container.git.getLog(t,{limit:i,ref:e}),o={log:n,hasMore:n?.hasMore??!0};return o.hasMore&&(o.more=async e=>{o.log=await(o.log?.more?.(e))??o.log,o.hasMore=o.log?.hasMore??!0}),o}}async getFilesQuery(){let e;e=this._compareWith?.ref?this.compareWithWorkingTree?this._compareWith.ref:`${this._compareWith.ref}..${this.branch.ref}`:this.branch.ref;const[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),n=(0,Y.Sb)(t)??[];return{label:`${(0,k._6)("file",n.length,{zero:"No"})} changed`,files:n,stats:(0,Y.Sb)(i)}}loadCompareWith(){const e=this.view.container.storage.getWorkspace("branch:comparisons")?.[`${this.branch.id}${this.branch.current?"+current":""}`];this._compareWith=null!=e&&"string"==typeof e?{ref:e,notation:void 0,type:this.showComparison}:e}async updateCompareWith(e){this._compareWith=e;let t=this.view.container.storage.getWorkspace("branch:comparisons");if(null==t){if(null==e)return;t=Object.create(null)}const i=`${this.branch.id}${this.branch.current?"+current":""}`;if(null!=e)t[i]={...e};else{if(null==t[i])return;const{[i]:e,...n}=t;t=n}await this.view.container.storage.storeWorkspace("branch:comparisons",t)}};let Fo=To;Fo.key=":compare-branch",$o([(0,H.cM)()],Fo.prototype,"clear",1),$o([(0,H.cM)()],Fo.prototype,"edit",1),$o([(0,V.H)(),(0,H.fF)()],Fo.prototype,"refresh",1),$o([(0,H.cM)()],Fo.prototype,"setComparisonType",1);var xo=Object.defineProperty,Oo=Object.getOwnPropertyDescriptor,Ao=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Oo(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&xo(t,i,r),r};const Io=class extends De.Re{constructor(e,t,i,n,o){super(e,t,i),this.contributor=n,this._options=o,this.limit=this.view.getNodeLastKnownLimit(this)}static getId(e,t,i,n){return`${Jr.getId(e)}${this.key}(${t}|${i}|${n})`}toClipboard(){return`${this.contributor.name}${this.contributor.email?` <${this.contributor.email}>`:""}`}get id(){return Io.getId(this.contributor.repoPath,this.contributor.name,this.contributor.email,this.contributor.username)}get repoPath(){return this.contributor.repoPath}async getChildren(){const e=await this.getLog();if(null==e)return[new MessageNode(this.view,this,"No commits could be found.")];const t=await this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),i=[...$n((0,q.UI)(e.commits.values(),(e=>new uo(this.view,this,e,void 0,void 0,t))),this)];return e.hasMore&&i.push(new LoadMoreNode(this.view,this,i[i.length-1])),i}async getTreeItem(){const e=this._options?.presence?.get(this.contributor.email),t=new n.TreeItem(this.contributor.current?`${this.contributor.label} (you)`:this.contributor.label,n.TreeItemCollapsibleState.Collapsed);let i,o;if(t.id=this.id,t.contextValue=this.contributor.current?`${De.Td.Contributor}+current`:De.Td.Contributor,t.description=`${null!=e&&"offline"!==e.status?`${e.statusText} ${s.NE.Space}${s.NE.Dot}${s.NE.Space} `:""}${null!=this.contributor.date?`${this.contributor.formatDateFromNow()}, `:""}${(0,k._6)("commit",this.contributor.count)}`,this.view.config.avatars){const t=r.DN.get("hovers.avatarSize");if(i=await this.contributor.getAvatarUri({defaultStyle:r.DN.get("defaultGravatarsStyle"),size:t}),null!=e){const n=`${this.contributor.count?"You are":`${this.contributor.label} is`} ${"dnd"===e.status?"in ":""}${e.statusText.toLocaleLowerCase()}`;o=`![${n}](${i.toString(!0)}|width=${t},height=${t} "${n}")![${n}](${(0,b.TU)(e.status)} "${n}")`}else o=`![${this.contributor.label}](${i.toString(!0)}|width=${t},height=${t} "${this.contributor.label}")`}const a=new Intl.NumberFormat,l=null!=this.contributor.stats?`\\\n${(0,k._6)("file",this.contributor.stats.files,{format:a.format})} changed, ${(0,k._6)("addition",this.contributor.stats.additions,{format:a.format})}, ${(0,k._6)("deletion",this.contributor.stats.deletions,{format:a.format})}`:"",c=this.contributor.email?`__[${this.contributor.name}](mailto:${this.contributor.email} "Email ${this.contributor.label} (${this.contributor.email})")__`:`__${this.contributor.label}__`,h=null!=this.contributor.date?`Last commit ${this.contributor.formatDateFromNow()} (${this.contributor.formatDate()})\\\n`:"",u=new n.MarkdownString(`${null!=o?o:""} &nbsp;${c} \n\n${h}${(0,k._6)("commit",this.contributor.count,{format:a.format})}${l}`);return u.supportHtml=!0,u.isTrusted=!0,t.tooltip=u,t.iconPath=i,t}refresh(e){e&&(this._log=void 0)}async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{all:this._options?.all,ref:this._options?.ref,limit:this.limit??this.view.config.defaultItemLimit,authors:[{name:this.contributor.name,email:this.contributor.email,username:this.contributor.username,id:this.contributor.id}]})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}};let Eo=Io;Eo.key=":contributor",Ao([(0,V.H)(),(0,H.fF)()],Eo.prototype,"refresh",1),Ao([(0,V.H)()],Eo.prototype,"loadMore",1);class MergeConflictFileNode extends De.Te{constructor(e,t,i,n){super(_.YY.fromFile(i,n.repoPath,n.HEAD.ref),e,t,i),this.status=n}toClipboard(){return this.fileName}get baseUri(){return _.YY.fromFile(this.file,this.status.repoPath,this.status.mergeBase??"HEAD")}get fileName(){return this.file.path}getChildren(){return[new MergeConflictCurrentChangesNode(this.view,this,this.status,this.file),new MergeConflictIncomingChangesNode(this.view,this,this.status,this.file)]}getTreeItem(){const e=new n.TreeItem(this.label,n.TreeItemCollapsibleState.Collapsed);e.description=this.description,e.contextValue=`${De.Td.File}+conflicted`;const t=StatusFileFormatter.fromTemplate("${file}${ • changesDetail}${\\\\\ndirectory}${\n\nstatus}${ (originalPath)} in Index (staged)",this.file),i=new n.MarkdownString(t,!0);return i.isTrusted=!0,i.supportHtml=!0,e.tooltip=i,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),e.iconPath=n.ThemeIcon.File,e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}get description(){return null==this._description&&(this._description=StatusFileFormatter.fromTemplate(this.view.config.formats.files.description,this.file,{relativePath:this.relativePath})),this._description}get folderName(){return null==this._folderName&&(this._folderName=(0,j.Fd)(this.uri.relativePath)),this._folderName}get label(){return null==this._label&&(this._label=StatusFileFormatter.fromTemplate(this.view.config.formats.files.label,this.file,{relativePath:this.relativePath})),this._label}get priority(){return 0}get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){return{title:"Open File",command:s.nA.Open,arguments:[this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath),{preserveFocus:!0,preview:!0}]}}}class StashFileNode extends ro{constructor(e,t,i,n){super(e,t,i,n)}get contextValue(){return`${De.Td.File}+stashed`}}const No=class extends De.bT{constructor(e,t,i){super(i.getGitUri(),e,t),this.commit=i}static getId(e,t){return`${Jr.getId(e)}${this.key}(${t})`}toClipboard(){return this.commit.stashName}get id(){return No.getId(this.commit.repoPath,this.commit.sha)}get ref(){return this.commit}async getChildren(){let e=(await this.commit.getCommitsForFiles()).map((e=>new StashFileNode(this.view,this,e.file,e)));if(this.view.config.files.layout!==Ye.Vc.List){const t=(0,Ht.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);e=new _n(this.view,this,this.repoPath,"",t).getChildren()}else e.sort(((e,t)=>(0,k.dm)(e.label,t.label)));return e}getTreeItem(){const e=new n.TreeItem(CommitFormatter.fromTemplate(this.view.config.formats.stashes.label,this.commit,{messageTruncateAtNewLine:!0,dateFormat:r.DN.get("defaultDateFormat")}),n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=CommitFormatter.fromTemplate(this.view.config.formats.stashes.description,this.commit,{messageTruncateAtNewLine:!0,dateFormat:r.DN.get("defaultDateFormat")}),e.contextValue=De.Td.Stash,e.tooltip=CommitFormatter.fromTemplate("${'On 'stashOnRef\n}${ago} (${date})\n\n${message}",this.commit,{dateFormat:r.DN.get("defaultDateFormat")}),e}};let Uo=No;Uo.key=":stash";class UncommittedFileNode extends De.Te{constructor(e,t,i,n){super(_.YY.fromFile(n,i),e,t,n)}toClipboard(){return this.path}get path(){return this.file.path}getChildren(){return[]}getTreeItem(){const e=new n.TreeItem(this.label,n.TreeItemCollapsibleState.None);e.contextValue=De.Td.File,e.description=this.description,e.resourceUri=this.view.container.git.getAbsoluteUri(this.file.path,this.repoPath);const t=T.$9.getStatusIcon(this.file.status);return e.iconPath={dark:this.view.container.context.asAbsolutePath((0,j.RQ)("images","dark",t)),light:this.view.container.context.asAbsolutePath((0,j.RQ)("images","light",t))},e.tooltip=StatusFileFormatter.fromTemplate("${file}\n${directory}/\n\n${status}${ (originalPath)}",this.file),e.command=this.getCommand(),this._label=void 0,this._description=void 0,e}get description(){return null==this._description&&(this._description=StatusFileFormatter.fromTemplate(this.view.config.formats.files.description,{...this.file},{relativePath:this.relativePath})),this._description}get folderName(){return null==this._folderName&&(this._folderName=(0,j.XX)(this.uri.relativePath)),this._folderName}get label(){return null==this._label&&(this._label=StatusFileFormatter.fromTemplate("${file}",{...this.file},{relativePath:this.relativePath})),this._label}get priority(){return 0}get relativePath(){return this._relativePath}set relativePath(e){this._relativePath=e,this._label=void 0,this._description=void 0}getCommand(){const e={uri:_.YY.fromFile(this.file,this.repoPath),line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}}const Lo=class extends De.Re{constructor(e,t,i,n){super(_.YY.fromRepoPath(i.repoPath),e,t),this.status=i,this.range=n,this.repoPath=i.repoPath}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return Lo.getId(this.repoPath)}getChildren(){const e=this.repoPath,t=[...(0,q.VS)(this.status.files,(e=>{if(null!=e.workingTreeStatus&&null!=e.indexStatus){const t=new Date;return t.setMilliseconds(t.getMilliseconds()-1),[this.getFileWithPseudoCommit(e,x.pk.uncommitted,x.pk.uncommittedStaged),this.getFileWithPseudoCommit(e,x.pk.uncommittedStaged,"HEAD",t)]}return null!=e.indexStatus?[this.getFileWithPseudoCommit(e,x.pk.uncommittedStaged,"HEAD")]:[this.getFileWithPseudoCommit(e,x.pk.uncommitted,"HEAD")]}))];t.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const i=(0,Ht.vM)(t,(e=>e.path));let n=Object.values(i).map((t=>new UncommittedFileNode(this.view,this,e,t[t.length-1])));if(this.view.config.files.layout!==Ye.Vc.List){const t=(0,Ht.Mo)(n,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);n=new _n(this.view,this,e,"",t,!0).getChildren()}else n.sort(((e,t)=>e.priority-t.priority||e.label.localeCompare(t.label,void 0,{numeric:!0,sensitivity:"base"})));return n}getTreeItem(){const e=new n.TreeItem("Uncommitted changes",n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.UncommittedFiles,e.iconPath=new n.ThemeIcon("folder"),e}getFileWithPseudoCommit(e,t,i,n){return n=n??new Date,{status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:new y.aM(this.view.container,e.repoPath,t,new y._j("You",void 0,n),new y._j("You",void 0,n),"Uncommitted changes",[i],"Uncommitted changes",new T.K8(e.repoPath,e.path,e.status,e.originalPath,i),void 0,[])}}};let Mo=Lo;Mo.key=":uncommitted-files";var Wo=Object.defineProperty,Bo=Object.getOwnPropertyDescriptor,Go=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Bo(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Wo(t,i,r),r};const Vo=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.worktree=n,this.limit=this.view.getNodeLastKnownLimit(this)}static getId(e,t){return`${Jr.getId(e)}${this.key}(${t.path})`}toClipboard(){return this.worktree.uri.fsPath}get id(){return Vo.getId(this.worktree.repoPath,this.worktree.uri)}get repoPath(){return this.uri.repoPath}async getChildren(){if(null==this._children){const e=this._branch;let t,i;if(null!=e&&this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=e.upstream||e.remote)&&(0,a.fw)(s.zf.HasConnectedRemotes)&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,Y.PQ)();const i=this.getAssociatedPullRequest(e,{include:[rn.o0.Open,rn.o0.Merged]});queueMicrotask((async()=>{await(t?.promise);let n=!1;const o=setTimeout((()=>{n=!0,this.view.triggerNodeChange(this)}),250),r=await i;clearTimeout(o),null!=r&&null!=this._children&&this._children.splice(this._children[0]instanceof Fo?1:0,0,new ao(this.view,this,r,e)),(n||null!=r)&&this.view.triggerNodeChange(this)}))}const[n,o,r,l]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath),this.worktree.getStatus(),null==e||e.remote?void 0:this.view.container.git.getBranchAheadRange(e).then((e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e}):void 0))]),c=(0,Y.Sb)(n);if(null==c)return[new MessageNode(this.view,this,"No commits could be found.")];const h=[];null!=e&&!1!==this.view.config.showBranchComparison&&h.push(new Fo(this.uri,this.view,this,e,this.view.config.showBranchComparison,this.splatted)),null!=e&&null!=i&&h.push(new ao(this.view,this,i,e));const u=(0,Y.Sb)(l),d=(0,Y.Sb)(o);h.push(...$n((0,q.UI)(c.commits.values(),(t=>new uo(this.view,this,t,u?.has(t.ref),e,d))),this)),c.hasMore&&h.push(new LoadMoreNode(this.view,this,h[h.length-1]));const p=(0,Y.Sb)(r);p?.hasChanges&&h.splice(0,0,new Mo(this.view,this,p,void 0)),this._children=h,t?.fulfill()}return this._children}async getTreeItem(){this.splatted=!1;let e="";const t=new n.MarkdownString("",!0);let i,o=!1;const r=this.worktree.main||this.worktree.opened?`${(0,k.vk)(s.NE.Dash,2,2)} ${this.worktree.main?"_Main"+(this.worktree.opened?", Active_":"_"):this.worktree.opened?"_Active_":""} `:"";switch(this.worktree.type){case"bare":i=new n.ThemeIcon("folder"),t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Bare Worktree${r}\\\n\`${this.worktree.friendlyPath}\``);break;case"branch":{const[a,l]=await Promise.all([this.worktree.getBranch(),this.worktree.getStatus()]);if(this._branch=a,t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Worktree for Branch $(git-branch) ${a?.getNameWithoutRemote()??this.worktree.branch}${r}\\\n\`${this.worktree.friendlyPath}\``),i=new n.ThemeIcon("git-branch"),null!=l&&(o=l.hasChanges,t.appendMarkdown(`\n\n${l.getFormattedDiffStatus({prefix:"Has Uncommitted Changes\\\n",empty:"No Uncommitted Changes",expand:!0})}`)),null!=a&&(t.appendMarkdown(`\n\nBranch $(git-branch) ${a.getNameWithoutRemote()}`),!a.remote))if(null!=a.upstream){let i=s.NE.Dash;const n=await a.getRemote();if(a.upstream.missing)i=s.NE.Warning;else if(null!=n){let e,t;for(const{type:i}of n.urls)if(i===O.XG.Fetch){if(e=!0,t)break}else if(i===O.XG.Push&&(t=!0,e))break;e&&t?i=s.NE.ArrowsRightLeft:t?i=s.NE.ArrowRight:e&&(i=s.NE.ArrowLeft)}e=`${a.getTrackingStatus({empty:(0,k.vk)(i,0,2),suffix:(0,k.vk)(i,2,2)})}${a.upstream.name}`,t.appendMarkdown(` is ${a.getTrackingStatus({empty:a.upstream.missing?`missing upstream $(git-branch) ${a.upstream.name}`:`up to date with $(git-branch)  ${a.upstream.name}${n?.provider?.name?` on ${n.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${a.upstream.name}${n?.provider?.name?` on ${n.provider.name}`:""}`})}`)}else{const e=O.ss.getHighlanderProviderName(await this.view.container.git.getRemotesWithProviders(a.repoPath));t.appendMarkdown(` hasn't been published to ${e??"a remote"}`)}break}case"detached":{i=new n.ThemeIcon("git-commit"),t.appendMarkdown(`${this.worktree.main?"$(pass) ":""}Detached Worktree at $(git-commit) ${x.pk.shorten(this.worktree.sha)}${r}\\\n\`${this.worktree.friendlyPath}\``);const e=await this.worktree.getStatus();null!=e&&(o=e.hasChanges,t.appendMarkdown(`\n\n${e.getFormattedDiffStatus({prefix:"Has Uncommitted Changes",empty:"No Uncommitted Changes",expand:!0})}`));break}}const a=this.getState("pendingPullRequest");null!=a&&t.appendMarkdown(`\n\n$(loading~spin) Loading associated pull request${s.NE.Ellipsis}`);const l=new n.TreeItem(this.worktree.name,n.TreeItemCollapsibleState.Collapsed);return l.id=this.id,l.description=e,l.contextValue=`${De.Td.Worktree}${this.worktree.main?"+main":""}${this.worktree.opened?"+active":""}`,l.iconPath=null!=a?new n.ThemeIcon("loading~spin"):this.worktree.opened?new n.ThemeIcon("check"):i,l.tooltip=t,l.resourceUri=o?n.Uri.parse("gitlens-view://worktree/changes"):void 0,l}refresh(e){this._children=void 0,e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let n=this.getState("pendingPullRequest");return n??(n=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",n),i=await n,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}async getLog(){return null==this._log&&(this._log=await this.view.container.git.getLog(this.uri.repoPath,{ref:this.worktree.sha,limit:this.limit??this.view.config.defaultItemLimit})),this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this._children=void 0,this.triggerChange(!1)))}};let Ho=Vo;Ho.key=":worktree",Go([(0,V.H)(),(0,H.fF)()],Ho.prototype,"refresh",1),Go([(0,V.H)()],Ho.prototype,"loadMore",1);var qo=Object.defineProperty,jo=Object.getOwnPropertyDescriptor;const Yo=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.repo=n}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return Yo.getId(this.repo.path)}get repoPath(){return this.repo.path}async getChildren(){if(null==this._children){if(!(await this.repo.access(p.Worktrees)).allowed)return[];const e=await this.repo.getWorktrees();if(0===e.length)return[new MessageNode(this.view,this,"No worktrees could be found.")];this._children=e.map((e=>new Ho(this.uri,this.view,this,e)))}return this._children}async getTreeItem(){const e=await this.repo.access(p.Worktrees),t=new n.TreeItem("Worktrees",e.allowed?n.TreeItemCollapsibleState.Collapsed:n.TreeItemCollapsibleState.None);return t.id=this.id,t.contextValue=De.Td.Worktrees,t.description=e.allowed?void 0:` ${s.NE.Warning}  Requires GitLens Pro to access Worktrees on private repos`,t.iconPath=new n.ThemeIcon("folder-opened"),t}refresh(){this._children=void 0}};let Qo=Yo;Qo.key=":worktrees",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?jo(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&qo(t,i,r)})([(0,V.H)(),(0,H.fF)()],Qo.prototype,"refresh",1);var zo=Object.defineProperty,Ko=Object.getOwnPropertyDescriptor,Jo=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ko(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&zo(t,i,r),r};function Xo(e,t,i,n=1){return(0,ke.xR)(e,((...e)=>{if(0!==n){let[o,r,...s]=e;if(o instanceof De.Re&&Array.isArray(r)&&r[0]instanceof De.Re)return r=r.filter((e=>e?.constructor===o.constructor)),2===n?t.apply(i,[o,r,...s]):(0,K.df)(t,r.map((e=>[e,...s])),i)}return t.apply(i,e)}),i)}class ViewCommands{constructor(e){this.container=e,Xo("gitlens.views.clearNode",(e=>(0,De.kr)(e)&&e.clear()),this),(0,ke.xR)(s.Gh.ViewsCopy,(async(e,t)=>{if(0===(t=Array.isArray(t)?t:null!=e?[e]:[]).length)return;const i=t.map((e=>e.toClipboard?.())).filter((e=>Boolean(e))).join("\n");await n.env.clipboard.writeText(i)}),this),Xo("gitlens.views.dismissNode",(e=>(0,De.kP)(e.view)&&e.view.dismissNode(e)),this),Xo("gitlens.views.editNode",(e=>(0,De.LD)(e)&&e.edit()),this),Xo("gitlens.views.expandNode",(e=>e.view.reveal(e,{select:!1,focus:!1,expand:3})),this),Xo("gitlens.views.loadMoreChildren",(e=>e.loadMore()),this),Xo("gitlens.views.loadAllChildren",(e=>e.loadAll()),this),Xo("gitlens.views.refreshNode",((e,t)=>(null==t&&(0,De.On)(e)&&(e.limit=void 0,e.view.resetNodeLastKnownLimit(e)),e.view.refreshNode(e,t??!0))),this),Xo("gitlens.views.setShowRelativeDateMarkersOn",(()=>this.setShowRelativeDateMarkers(!0)),this),Xo("gitlens.views.setShowRelativeDateMarkersOff",(()=>this.setShowRelativeDateMarkers(!1)),this),Xo("gitlens.views.fetch",this.fetch,this),Xo("gitlens.views.publishBranch",this.publishBranch,this),Xo("gitlens.views.publishRepository",this.publishRepository,this),Xo("gitlens.views.pull",this.pull,this),Xo("gitlens.views.push",this.push,this),Xo("gitlens.views.pushWithForce",(e=>this.push(e,!0)),this),Xo("gitlens.views.closeRepository",this.closeRepository,this),Xo("gitlens.views.setAsDefault",this.setAsDefault,this),Xo("gitlens.views.unsetAsDefault",this.unsetAsDefault,this),Xo("gitlens.views.openInTerminal",this.openInTerminal,this),Xo("gitlens.views.star",this.star,this),Xo("gitlens.views.unstar",this.unstar,this),Xo("gitlens.views.browseRepoAtRevision",this.browseRepoAtRevision,this),Xo("gitlens.views.browseRepoAtRevisionInNewWindow",(e=>this.browseRepoAtRevision(e,{openInNewWindow:!0})),this),Xo("gitlens.views.browseRepoBeforeRevision",(e=>this.browseRepoAtRevision(e,{before:!0})),this),Xo("gitlens.views.browseRepoBeforeRevisionInNewWindow",(e=>this.browseRepoAtRevision(e,{before:!0,openInNewWindow:!0})),this),Xo("gitlens.views.addAuthors",this.addAuthors,this),Xo("gitlens.views.addAuthor",this.addAuthor,this),Xo("gitlens.views.openChanges",this.openChanges,this),Xo("gitlens.views.openChangesWithWorking",this.openChangesWithWorking,this),Xo("gitlens.views.openPreviousChangesWithWorking",this.openPreviousChangesWithWorking,this),Xo("gitlens.views.openFile",this.openFile,this),Xo("gitlens.views.openFileRevision",this.openRevision,this),Xo("gitlens.views.openChangedFiles",this.openFiles,this),Xo("gitlens.views.openChangedFileDiffs",this.openAllChanges,this),Xo("gitlens.views.openChangedFileDiffsWithWorking",this.openAllChangesWithWorking,this),Xo("gitlens.views.openChangedFileRevisions",this.openRevisions,this),Xo("gitlens.views.applyChanges",this.applyChanges,this),Xo("gitlens.views.highlightChanges",this.highlightChanges,this),Xo("gitlens.views.highlightRevisionChanges",this.highlightRevisionChanges,this),Xo("gitlens.views.restore",this.restore,this),Xo("gitlens.views.switchToAnotherBranch",this.switch,this),Xo("gitlens.views.switchToBranch",this.switchTo,this),Xo("gitlens.views.switchToCommit",this.switchTo,this),Xo("gitlens.views.switchToTag",this.switchTo,this),Xo("gitlens.views.addRemote",this.addRemote,this),Xo("gitlens.views.pruneRemote",this.pruneRemote,this),Xo("gitlens.views.removeRemote",this.removeRemote,this),Xo("gitlens.views.stageDirectory",this.stageDirectory,this),Xo("gitlens.views.stageFile",this.stageFile,this),Xo("gitlens.views.unstageDirectory",this.unstageDirectory,this),Xo("gitlens.views.unstageFile",this.unstageFile,this),Xo("gitlens.views.compareAncestryWithWorking",this.compareAncestryWithWorking,this),Xo("gitlens.views.compareWithHead",this.compareHeadWith,this),Xo("gitlens.views.compareWithUpstream",this.compareWithUpstream,this),Xo("gitlens.views.compareWithSelected",this.compareWithSelected,this),Xo("gitlens.views.selectForCompare",this.selectForCompare,this),Xo("gitlens.views.compareFileWithSelected",this.compareFileWithSelected,this),Xo("gitlens.views.selectFileForCompare",this.selectFileForCompare,this),Xo("gitlens.views.compareWithWorking",this.compareWorkingWith,this),Xo("gitlens.views.setBranchComparisonToWorking",(e=>this.setBranchComparison(e,r.DH.Working)),this),Xo("gitlens.views.setBranchComparisonToBranch",(e=>this.setBranchComparison(e,r.DH.Branch)),this),Xo("gitlens.views.cherryPick",this.cherryPick,this,2),Xo("gitlens.views.title.createBranch",(()=>this.createBranch())),Xo("gitlens.views.createBranch",this.createBranch,this),Xo("gitlens.views.deleteBranch",this.deleteBranch,this),Xo("gitlens.views.renameBranch",this.renameBranch,this),Xo("gitlens.views.title.applyStash",(()=>this.applyStash())),Xo("gitlens.views.deleteStash",this.deleteStash,this,2),Xo("gitlens.views.title.createTag",(()=>this.createTag())),Xo("gitlens.views.createTag",this.createTag,this),Xo("gitlens.views.deleteTag",this.deleteTag,this),Xo("gitlens.views.mergeBranchInto",this.merge,this),Xo("gitlens.views.pushToCommit",this.pushToCommit,this),Xo("gitlens.views.rebaseOntoBranch",this.rebase,this),Xo("gitlens.views.rebaseOntoUpstream",this.rebaseToRemote,this),Xo("gitlens.views.rebaseOntoCommit",this.rebase,this),Xo("gitlens.views.resetCommit",this.resetCommit,this),Xo("gitlens.views.resetToCommit",this.resetToCommit,this),Xo("gitlens.views.revert",this.revert,this),Xo("gitlens.views.undoCommit",this.undoCommit,this),Xo("gitlens.views.createPullRequest",this.createPullRequest,this),Xo("gitlens.views.openPullRequest",this.openPullRequest,this),Xo("gitlens.views.title.createWorktree",(()=>this.createWorktree())),Xo("gitlens.views.createWorktree",this.createWorktree,this),Xo("gitlens.views.deleteWorktree",this.deleteWorktree,this),Xo("gitlens.views.openWorktree",this.openWorktree,this),Xo("gitlens.views.revealWorktreeInExplorer",this.revealWorktreeInExplorer,this),Xo("gitlens.views.openWorktreeInNewWindow",(e=>this.openWorktree(e,{location:J.Tc.NewWindow})),this)}addAuthors(e){return Ct((0,De.pp)(e))}addAuthor(e){return e instanceof Eo?Ct(e.repoPath,e.contributor.current?void 0:e.contributor):Promise.resolve()}addRemote(e){return kt((0,De.pp)(e))}applyChanges(e){return e instanceof De.RW?e instanceof ResultsFileNode?st(e.file,x.Wb.create(e.ref1,e.repoPath),x.Wb.create(e.ref2,e.repoPath)):null==e.ref||"HEAD"===e.ref.ref?Promise.resolve():st(e.file,e.ref):Promise.resolve()}applyStash(){return Nt()}browseRepoAtRevision(e,t){return e instanceof De.bT?Re(e.uri,{before:t?.before,openInNewWindow:t?.openInNewWindow}):Promise.resolve()}cherryPick(e,t){return e instanceof uo?null!=t&&0!==t.length?Rt(e.repoPath,t.map((e=>e.ref))):Rt(e.repoPath,e.ref):Promise.resolve()}closeRepository(e){(e instanceof Jr||e instanceof De.vb)&&(e.repo.closed=!0)}async createBranch(e){let t=e instanceof De.bT?e?.ref:e instanceof wo?e.branch:void 0;if(null==t){t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)}return it(e?.repoPath,t)}async createPullRequest(e){if(!(e instanceof hr||e instanceof wo))return Promise.resolve();const t=await e.branch.getRemote();return(0,ke.SI)("createPullRequest",{repoPath:e.repoPath,remote:null!=t?{name:t.name,provider:null!=t.provider?{id:t.provider.id,name:t.provider.name,domain:t.provider.domain}:void 0,url:t.url}:void 0,branch:{name:e.branch.name,upstream:e.branch.upstream?.name,isRemote:e.branch.remote}})}async createTag(e){let t=e instanceof De.bT?e?.ref:e instanceof wo?e.branch:void 0;if(null==t){t=await this.container.git.getBranch(e?.repoPath??this.container.git.getBestRepository()?.uri)}return Bt(e?.repoPath,t)}async createWorktree(e){if(e instanceof Qo&&(e=void 0),null==e||e instanceof hr)return qt(e?.repoPath,void 0,e?.ref)}deleteBranch(e){return e instanceof hr?nt(e.repoPath,e.branch):Promise.resolve()}deleteStash(e,t){if(!(e instanceof Uo))return Promise.resolve();if(null!=t&&0!==t.length){const e=t.sort(((e,t)=>parseInt(t.commit.number,10)-parseInt(e.commit.number,10)));return(0,K.df)(Ut,e.map((e=>[e.repoPath,e.commit])),this)}return Ut(e.repoPath,e.commit)}deleteTag(e){return e instanceof Kn?Gt(e.repoPath,e.tag):Promise.resolve()}async deleteWorktree(e){var t,i;if(e instanceof Ho)return t=e.repoPath,i=e.worktree.uri,Pe({command:"worktree",state:{subcommand:"delete",repo:t,uris:(0,Ht.zx)(i)}})}fetch(e){return e instanceof Jr||e instanceof De.vb?Dt(e.repo):e instanceof cn?async function(e,t){if("string"==typeof e){const t=lf.instance.git.getRepository(e);if(null==t)return;e=t}await e.fetch({remote:t})}(e.remote.repoPath,e.remote.name):e instanceof hr||e instanceof wo?Dt(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}async highlightChanges(e){(e instanceof ro||e instanceof StashFileNode||e instanceof FileRevisionAsCommitNode||e instanceof ResultsFileNode)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(n.window.activeTextEditor,r.VP.Changes,{sha:e.ref.ref},!0))}async highlightRevisionChanges(e){(e instanceof ro||e instanceof StashFileNode||e instanceof FileRevisionAsCommitNode||e instanceof ResultsFileNode)&&(await this.openFile(e,{preserveFocus:!0,preview:!0}),await this.container.fileAnnotations.toggle(n.window.activeTextEditor,r.VP.Changes,{sha:e.ref.ref,only:!0},!0))}merge(e){return e instanceof hr||e instanceof Kn?$t(e.repoPath,e instanceof hr?e.branch:e.tag):Promise.resolve()}openInTerminal(e){return e instanceof Jr||e instanceof De.vb?(0,ke.dO)(s.nA.OpenInTerminal,n.Uri.file(e.repo.path)):Promise.resolve()}openPullRequest(e){return e instanceof ao?(0,ke.SI)("openPullRequest",{repoPath:e.uri.repoPath,provider:{id:e.pullRequest.provider.id,name:e.pullRequest.provider.name,domain:e.pullRequest.provider.domain},pullRequest:{id:e.pullRequest.id,url:e.pullRequest.url}}):Promise.resolve()}openWorktree(e,t){if(e instanceof Ho)return(0,J.ic)(e.worktree.uri,t)}pruneRemote(e){return e instanceof cn?async function(e,t){return Pe({command:"remote",state:{repo:e,subcommand:"prune",remote:t}})}(e.repo,e.remote.name):Promise.resolve()}async removeRemote(e){return e instanceof cn?async function(e,t){return Pe({command:"remote",state:{repo:e,subcommand:"remove",remote:t}})}(e.repo,e.remote.name):Promise.resolve()}publishBranch(e){return e instanceof hr||e instanceof wo?Ft(e.repoPath,void 0,e.branch):Promise.resolve()}publishRepository(e){return e instanceof hr||e instanceof wo?(0,ke.Zv)(s.S8.Publish,n.Uri.file(e.repoPath)):Promise.resolve()}pull(e){return e instanceof Jr||e instanceof De.vb?Tt(e.repo):e instanceof hr||e instanceof wo?Tt(e.repoPath,e.root?void 0:e.branch):Promise.resolve()}push(e,t){return e instanceof Jr||e instanceof De.vb?Ft(e.repo,t):e instanceof hr||e instanceof wo?Ft(e.repoPath,t,e.root?void 0:e.branch):e instanceof uo||e instanceof FileRevisionAsCommitNode?e.isTip?Ft(e.repoPath,t):this.pushToCommit(e):Promise.resolve()}pushToCommit(e){return e instanceof uo||e instanceof FileRevisionAsCommitNode?Ft(e.repoPath,!1,e.commit):Promise.resolve()}rebase(e){return e instanceof hr||e instanceof uo||e instanceof FileRevisionAsCommitNode||e instanceof Kn?xt(e.repoPath,e.ref):Promise.resolve()}rebaseToRemote(e){if(!(e instanceof hr||e instanceof wo))return Promise.resolve();const t=e instanceof hr?e.branch.upstream?.name:e.status.upstream;return null==t?Promise.resolve():xt(e.repoPath,x.Wb.create(t,e.repoPath,{refType:"branch",name:t,remote:!0}))}renameBranch(e){return e instanceof hr?ot(e.repoPath,e.branch):Promise.resolve()}resetCommit(e){return e instanceof uo||e instanceof FileRevisionAsCommitNode?Ot(e.repoPath,x.Wb.create(`${e.ref.ref}^`,e.ref.repoPath,{refType:"revision",name:`${e.ref.name}^`,message:e.ref.message})):Promise.resolve()}resetToCommit(e){return e instanceof uo||e instanceof FileRevisionAsCommitNode?Ot(e.repoPath,e.ref):Promise.resolve()}restore(e){return e instanceof De.RW?_t(e.file,e.ref):Promise.resolve()}revealWorktreeInExplorer(e){if(e instanceof Ho)return Yt(e.worktree)}revert(e){return e instanceof uo||e instanceof FileRevisionAsCommitNode?At(e.repoPath,e.ref):Promise.resolve()}setAsDefault(e){return e instanceof cn?e.setAsDefault():Promise.resolve()}setBranchComparison(e,t){if(e instanceof Fo)return e.setComparisonType(t)}setShowRelativeDateMarkers(e){return r.DN.updateEffective("views.showRelativeDateMarkers",e)}async stageFile(e){(e instanceof ro||e instanceof FileRevisionAsCommitNode||e instanceof StatusFileNode)&&(await this.container.git.stageFile(e.repoPath,e.file.path),e.triggerChange())}async stageDirectory(e){e instanceof _n&&e.relativePath&&(await this.container.git.stageDirectory(e.repoPath,e.relativePath),e.triggerChange())}star(e){return e instanceof hr||e instanceof Jr||e instanceof De.vb?e.star():Promise.resolve()}switch(e){return It((0,De.pp)(e))}switchTo(e){return e instanceof De.bT?It(e.repoPath,e instanceof hr&&e.branch.current?void 0:e.ref):It((0,De.pp)(e))}async undoCommit(e){if(!(e instanceof uo||e instanceof FileRevisionAsCommitNode))return;const t=await this.container.git.getOrOpenScmRepository(e.repoPath);(await(t?.getCommit("HEAD")))?.hash===e.ref.ref?await(0,ke.Zv)(s.S8.UndoCommit,e.repoPath):n.window.showWarningMessage(`Commit ${x.Wb.toString(e.ref,{capitalize:!0,icon:!1})} cannot be undone, because it is no longer the most recent commit.`)}unsetAsDefault(e){return e instanceof cn?e.setAsDefault(!1):Promise.resolve()}async unstageFile(e){(e instanceof ro||e instanceof FileRevisionAsCommitNode||e instanceof StatusFileNode)&&(await this.container.git.unStageFile(e.repoPath,e.file.path),e.triggerChange())}async unstageDirectory(e){e instanceof _n&&e.relativePath&&(await this.container.git.unStageDirectory(e.repoPath,e.relativePath),e.triggerChange())}unstar(e){return e instanceof hr||e instanceof Jr||e instanceof De.vb?e.unstar():Promise.resolve()}compareHeadWith(e){return e instanceof De.bT?this.container.searchAndCompareView.compare(e.repoPath,"HEAD",e.ref):Promise.resolve()}compareWithUpstream(e){return e instanceof hr?null==e.branch.upstream?Promise.resolve():this.container.searchAndCompareView.compare(e.repoPath,e.ref,e.branch.upstream.name):Promise.resolve()}compareWorkingWith(e){return e instanceof De.bT?this.container.searchAndCompareView.compare(e.repoPath,"",e.ref):Promise.resolve()}async compareAncestryWithWorking(e){if(!(e instanceof hr))return;const t=await this.container.git.getBranch(e.repoPath);if(null==t)return;const i=await this.container.git.getMergeBase(e.repoPath,t.ref,e.ref.ref);return null!=i?this.container.searchAndCompareView.compare(e.repoPath,{ref:i,label:`ancestry with ${e.ref.ref} (${x.pk.shorten(i)})`},""):void 0}compareWithSelected(e){e instanceof De.bT&&this.container.searchAndCompareView.compareWithSelected(e.repoPath,e.ref)}selectForCompare(e){e instanceof De.bT&&this.container.searchAndCompareView.selectForCompare(e.repoPath,e.ref)}compareFileWithSelected(e){if(null==this._selectedFile||!(e instanceof De.RW)||null==e.ref)return Promise.resolve();if(this._selectedFile.repoPath!==e.repoPath)return this.selectFileForCompare(e),Promise.resolve();const t=this._selectedFile;return this._selectedFile=void 0,(0,a.v)(s.zf.ViewsCanCompareFile,!1),(0,ke.P0)(s.Gh.DiffWith,{repoPath:t.repoPath,lhs:{sha:t.ref,uri:t.uri},rhs:{sha:e.ref.ref,uri:e.uri}})}selectFileForCompare(e){e instanceof De.RW&&null!=e.ref&&(this._selectedFile={ref:e.ref.ref,repoPath:e.repoPath,uri:e.uri},(0,a.v)(s.zf.ViewsCanCompareFile,!0))}async openAllChanges(e,t){if(e instanceof uo||e instanceof Uo||e instanceof ResultsFilesNode){if(e instanceof ResultsFilesNode){const{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return lt(i,{repoPath:e.repoPath,ref1:e.ref1,ref2:e.ref2},t)}return lt(e.commit,t)}}openChanges(e){if(!(e instanceof De.RW||e instanceof MergeConflictFileNode||e instanceof StatusFileNode))return;if(e instanceof MergeConflictFileNode)return void(0,ke.P0)(s.Gh.DiffWith,{lhs:{sha:e.status.HEAD.ref,uri:_.YY.fromFile(e.file,e.repoPath,void 0,!0)},rhs:{sha:"HEAD",uri:_.YY.fromFile(e.file,e.repoPath)},repoPath:e.repoPath,line:0,showOptions:{preserveFocus:!1,preview:!1}});const t=e.getCommand();if(null!=t?.arguments)switch(t.command){case s.Gh.DiffWith:{const[e]=t.arguments;e.showOptions.preview=!1,(0,ke.P0)(t.command,e);break}case s.Gh.DiffWithPrevious:{const[,e]=t.arguments;e.showOptions.preview=!1,(0,ke.b2)(t.command,void 0,e);break}default:throw new Error(`Unexpected command: ${t.command}`)}}async openAllChangesWithWorking(e,t){if(e instanceof uo||e instanceof Uo||e instanceof ResultsFilesNode){if(e instanceof ResultsFilesNode){const{files:i}=await e.getFilesQueryResults();if(null==i||0===i.length)return;return ct(i,{repoPath:e.repoPath,ref:e.ref1||e.ref2},t)}return ct(e.commit,t)}}async openChangesWithWorking(e){if(!(e instanceof De.RW||e instanceof MergeConflictFileNode||e instanceof StatusFileNode))return Promise.resolve();if(e instanceof StatusFileNode)return(0,ke.b2)(s.Gh.DiffWithWorking,void 0,{uri:e.uri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof MergeConflictFileNode)return(0,ke.b2)(s.Gh.DiffWithWorking,void 0,{uri:e.baseUri,showOptions:{preserveFocus:!0,preview:!0}});if(e instanceof FileRevisionAsCommitNode&&e.commit.file?.hasConflicts){const t=await e.getConflictBaseUri();if(null!=t)return(0,ke.b2)(s.Gh.DiffWithWorking,void 0,{uri:t,showOptions:{preserveFocus:!0,preview:!0}})}return dt(e.file,{repoPath:e.repoPath,ref:e.ref.ref})}async openPreviousChangesWithWorking(e){return e instanceof De.RW?dt(e.file,{repoPath:e.repoPath,ref:`${e.ref.ref}^`}):Promise.resolve()}openFile(e,t){return e instanceof De.RW||e instanceof MergeConflictFileNode||e instanceof StatusFileNode||e instanceof An||e instanceof Bn?mt(e.uri,{preserveFocus:!0,preview:!1,...t}):Promise.resolve()}async openFiles(e){if(e instanceof uo||e instanceof Uo||e instanceof ResultsFilesNode){if(e instanceof ResultsFilesNode){const{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return ft(t,e.repoPath,e.ref1||e.ref2)}return ft(e.commit)}}async openRevision(e,t){if(!(e instanceof ro||e instanceof FileRevisionAsCommitNode||e instanceof ResultsFileNode||e instanceof StashFileNode||e instanceof MergeConflictFileNode||e instanceof StatusFileNode))return Promise.resolve();let i=(t={showOptions:{preserveFocus:!0,preview:!1},...t}).revisionUri;return null==i&&(i=e instanceof ResultsFileNode||e instanceof MergeConflictFileNode?this.container.git.getRevisionUri(e.uri):"D"===e.commit.file?.status?this.container.git.getRevisionUri(await e.commit.getPreviousSha()??x.pk.deletedOrMissing,e.commit.file.path,e.commit.repoPath):this.container.git.getRevisionUri(e.uri)),gt(i,t.showOptions??{preserveFocus:!0,preview:!1})}async openRevisions(e,t){if(e instanceof uo||e instanceof Uo||e instanceof ResultsFilesNode){if(e instanceof ResultsFilesNode){const{files:t}=await e.getFilesQueryResults();if(null==t||0===t.length)return;return wt(t,e.repoPath,e.ref1,e.ref2)}return wt(e.commit)}}}Jo([(0,H.fF)()],ViewCommands.prototype,"addAuthors",1),Jo([(0,H.fF)()],ViewCommands.prototype,"addAuthor",1),Jo([(0,H.fF)()],ViewCommands.prototype,"addRemote",1),Jo([(0,H.fF)()],ViewCommands.prototype,"applyChanges",1),Jo([(0,H.fF)()],ViewCommands.prototype,"applyStash",1),Jo([(0,H.fF)()],ViewCommands.prototype,"browseRepoAtRevision",1),Jo([(0,H.fF)()],ViewCommands.prototype,"cherryPick",1),Jo([(0,H.fF)()],ViewCommands.prototype,"closeRepository",1),Jo([(0,H.fF)()],ViewCommands.prototype,"createBranch",1),Jo([(0,H.fF)()],ViewCommands.prototype,"createPullRequest",1),Jo([(0,H.fF)()],ViewCommands.prototype,"createTag",1),Jo([(0,H.fF)()],ViewCommands.prototype,"createWorktree",1),Jo([(0,H.fF)()],ViewCommands.prototype,"deleteBranch",1),Jo([(0,H.fF)()],ViewCommands.prototype,"deleteStash",1),Jo([(0,H.fF)()],ViewCommands.prototype,"deleteTag",1),Jo([(0,H.fF)()],ViewCommands.prototype,"deleteWorktree",1),Jo([(0,H.fF)()],ViewCommands.prototype,"fetch",1),Jo([(0,H.fF)()],ViewCommands.prototype,"highlightChanges",1),Jo([(0,H.fF)()],ViewCommands.prototype,"highlightRevisionChanges",1),Jo([(0,H.fF)()],ViewCommands.prototype,"merge",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openInTerminal",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openPullRequest",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openWorktree",1),Jo([(0,H.fF)()],ViewCommands.prototype,"pruneRemote",1),Jo([(0,H.fF)()],ViewCommands.prototype,"removeRemote",1),Jo([(0,H.fF)()],ViewCommands.prototype,"publishBranch",1),Jo([(0,H.fF)()],ViewCommands.prototype,"publishRepository",1),Jo([(0,H.fF)()],ViewCommands.prototype,"pull",1),Jo([(0,H.fF)()],ViewCommands.prototype,"push",1),Jo([(0,H.fF)()],ViewCommands.prototype,"pushToCommit",1),Jo([(0,H.fF)()],ViewCommands.prototype,"rebase",1),Jo([(0,H.fF)()],ViewCommands.prototype,"rebaseToRemote",1),Jo([(0,H.fF)()],ViewCommands.prototype,"renameBranch",1),Jo([(0,H.fF)()],ViewCommands.prototype,"resetCommit",1),Jo([(0,H.fF)()],ViewCommands.prototype,"resetToCommit",1),Jo([(0,H.fF)()],ViewCommands.prototype,"restore",1),Jo([(0,H.fF)()],ViewCommands.prototype,"revealWorktreeInExplorer",1),Jo([(0,H.fF)()],ViewCommands.prototype,"revert",1),Jo([(0,H.fF)()],ViewCommands.prototype,"setAsDefault",1),Jo([(0,H.fF)()],ViewCommands.prototype,"setBranchComparison",1),Jo([(0,H.fF)()],ViewCommands.prototype,"setShowRelativeDateMarkers",1),Jo([(0,H.fF)()],ViewCommands.prototype,"stageFile",1),Jo([(0,H.fF)()],ViewCommands.prototype,"stageDirectory",1),Jo([(0,H.fF)()],ViewCommands.prototype,"star",1),Jo([(0,H.fF)()],ViewCommands.prototype,"switch",1),Jo([(0,H.fF)()],ViewCommands.prototype,"switchTo",1),Jo([(0,H.fF)()],ViewCommands.prototype,"undoCommit",1),Jo([(0,H.fF)()],ViewCommands.prototype,"unsetAsDefault",1),Jo([(0,H.fF)()],ViewCommands.prototype,"unstageFile",1),Jo([(0,H.fF)()],ViewCommands.prototype,"unstageDirectory",1),Jo([(0,H.fF)()],ViewCommands.prototype,"unstar",1),Jo([(0,H.fF)()],ViewCommands.prototype,"compareHeadWith",1),Jo([(0,H.fF)()],ViewCommands.prototype,"compareWithUpstream",1),Jo([(0,H.fF)()],ViewCommands.prototype,"compareWorkingWith",1),Jo([(0,H.fF)()],ViewCommands.prototype,"compareAncestryWithWorking",1),Jo([(0,H.fF)()],ViewCommands.prototype,"compareWithSelected",1),Jo([(0,H.fF)()],ViewCommands.prototype,"selectForCompare",1),Jo([(0,H.fF)()],ViewCommands.prototype,"compareFileWithSelected",1),Jo([(0,H.fF)()],ViewCommands.prototype,"selectFileForCompare",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openAllChanges",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openChanges",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openAllChangesWithWorking",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openChangesWithWorking",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openPreviousChangesWithWorking",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openFile",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openFiles",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openRevision",1),Jo([(0,H.fF)()],ViewCommands.prototype,"openRevisions",1);var Zo=Object.defineProperty,er=Object.getOwnPropertyDescriptor,tr=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?er(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Zo(t,i,r),r};class RemotesRepositoryNode extends De.vb{async getChildren(){return null==this.child&&(this.child=new pn(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(A.I6.Config,A.I6.Remotes,A.I6.RemoteProviders,A.I6.Unknown,A.du.Any)}}class RemotesViewNode extends De.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No remotes could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new RemotesRepositoryNode(_.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getRemotes();return 0===t.length?(this.view.message="No remotes could be found.",this.view.title="Remotes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Remotes (${t.length})`,e.getChildren())}return this.view.title="Remotes",this.children}getTreeItem(){return new n.TreeItem("Remotes",n.TreeItemCollapsibleState.Expanded)}}class RemotesView extends ViewBase{constructor(e){super(e,"gitlens.views.remotes","Remotes","remotesView"),this.configKey="remotes"}get canReveal(){return this.config.reveal||!r.DN.get("views.repositories.showRemotes")}getRoot(){return new RemotesViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","remotes"),this.refresh(!0))),this),Xo(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout(r.CZ.List)),this),Xo(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout(r.CZ.Tree)),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat")||r.DN.changed(e,"integrations.enabled")||r.DN.changed(e,"sortBranchesBy"))}findBranch(e,t){if(!e.remote)return;const i=Jr.getId(e.repoPath);return this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:t=>t instanceof RemotesViewNode||(t instanceof RemotesRepositoryNode||t instanceof BranchOrTagFolderNode?t.id.startsWith(i):t instanceof cn&&(!!t.id.startsWith(i)&&t.remote.name===(0,v.Lo)(e.name))),token:t})}async findCommit(e,t){const i=Jr.getId(e.repoPath),n=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,y.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0});if(0===n.length)return;const o=n.map((e=>e.split("/",1)[0]));return this.findNode((t=>void 0!==t.commit&&t.commit.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:e=>e instanceof RemotesViewNode||(e instanceof RemotesRepositoryNode||e instanceof BranchOrTagFolderNode?e.id.startsWith(i):e instanceof cn?e.id.startsWith(i)&&o.includes(e.remote.name):e instanceof hr?e.id.startsWith(i)&&n.includes(e.branch.name):(e instanceof Jr||e instanceof pn||e instanceof BranchOrTagFolderNode)&&e.id.startsWith(i)),token:t})}findRemote(e,t){const i=Jr.getId(e.repoPath);return this.findNode((t=>t.remote?.name===e.name),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof RemotesViewNode||e instanceof RemotesRepositoryNode&&e.id.startsWith(i),token:t})}revealBranch(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findBranch(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealCommit(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findCommit(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}revealRemote(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findRemote(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof RemotesViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return r.DN.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}async setShowBranchPullRequest(e){await r.DN.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await r.DN.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}tr([(0,V.H)((()=>""))],RemotesView.prototype,"revealBranch",1),tr([(0,V.H)((()=>""))],RemotesView.prototype,"revealCommit",1),tr([(0,V.H)((()=>""))],RemotesView.prototype,"revealRemote",1),tr([(0,V.H)((()=>""))],RemotesView.prototype,"revealRepository",1);const ir=class extends De.Re{constructor(e,t,i,n,o,r){super(_.YY.fromRepoPath(n.repoPath),e,t),this.branch=i,this.mergeStatus=n,this.status=o,this.root=r}static getId(e,t,i){return`${hr.getId(e,t,i)}${this.key}`}get id(){return ir.getId(this.mergeStatus.repoPath,this.mergeStatus.current.name,this.root)}get repoPath(){return this.uri.repoPath}getChildren(){if(!0!==this.status?.hasConflicts)return[];let e=this.status.conflicts.map((e=>new MergeConflictFileNode(this.view,this,e,this.mergeStatus)));if(this.view.config.files.layout!==r.Vc.List){const t=(0,Ht.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);e=new _n(this.view,this,this.repoPath,"",t).getChildren()}else e.sort(((e,t)=>(0,k.dm)(e.label,t.label)));return e}getTreeItem(){const e=new n.TreeItem(`${this.status?.hasConflicts?"Resolve conflicts before merging":"Merging"} ${null!=this.mergeStatus.incoming?`${x.Wb.toString(this.mergeStatus.incoming,{expand:!1,icon:!1})} `:""}into ${x.Wb.toString(this.mergeStatus.current,{expand:!1,icon:!1})}`,n.TreeItemCollapsibleState.Expanded);e.id=this.id,e.contextValue=De.Td.Merge,e.description=this.status?.hasConflicts?(0,k._6)("conflict",this.status.conflicts.length):void 0,e.iconPath=this.status?.hasConflicts?new n.ThemeIcon("warning",new n.ThemeColor("list.warningForeground")):new n.ThemeIcon("debug-pause",new n.ThemeColor("list.foreground"));const t=new n.MarkdownString(`Merging ${null!=this.mergeStatus.incoming?x.Wb.toString(this.mergeStatus.incoming):""}into ${x.Wb.toString(this.mergeStatus.current)}${this.status?.hasConflicts?`\n\n${(0,k._6)("conflicted file",this.status.conflicts.length)}`:""}`,!0);return t.supportHtml=!0,t.isTrusted=!0,e.tooltip=t,e}};let nr=ir;nr.key=":merge";const or=class extends De.Re{constructor(e,t,i,n,o,r){super(_.YY.fromRepoPath(n.repoPath),e,t),this.branch=i,this.rebaseStatus=n,this.status=o,this.root=r}static getId(e,t,i){return`${hr.getId(e,t,i)}${this.key}`}get id(){return or.getId(this.rebaseStatus.repoPath,this.rebaseStatus.incoming.name,this.root)}get repoPath(){return this.uri.repoPath}async getChildren(){let e=this.status?.conflicts.map((e=>new MergeConflictFileNode(this.view,this,e,this.rebaseStatus)))??[];if(this.view.config.files.layout!==r.Vc.List){const t=(0,Ht.Mo)(e,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);e=new _n(this.view,this,this.repoPath,"",t).getChildren()}else e.sort(((e,t)=>(0,k.dm)(e.label,t.label)));const t=await this.view.container.git.getCommit(this.rebaseStatus.repoPath,this.rebaseStatus.steps.current.commit.ref);return null!=t&&e.splice(0,0,new RebaseCommitNode(this.view,this,t)),e}getTreeItem(){const e=new n.TreeItem(`${this.status?.hasConflicts?"Resolve conflicts to continue rebasing":"Rebasing"} ${null!=this.rebaseStatus.incoming?`${x.Wb.toString(this.rebaseStatus.incoming,{expand:!1,icon:!1})}`:""} (${this.rebaseStatus.steps.current.number}/${this.rebaseStatus.steps.total})`,n.TreeItemCollapsibleState.Expanded);e.id=this.id,e.contextValue=De.Td.Rebase,e.description=this.status?.hasConflicts?(0,k._6)("conflict",this.status.conflicts.length):void 0,e.iconPath=this.status?.hasConflicts?new n.ThemeIcon("warning",new n.ThemeColor("list.warningForeground")):new n.ThemeIcon("debug-pause",new n.ThemeColor("list.foreground"));const t=new n.MarkdownString(`Rebasing ${null!=this.rebaseStatus.incoming?x.Wb.toString(this.rebaseStatus.incoming):""}onto ${x.Wb.toString(this.rebaseStatus.current)}\n\nStep ${this.rebaseStatus.steps.current.number} of ${this.rebaseStatus.steps.total}\\\nPaused at ${x.Wb.toString(this.rebaseStatus.steps.current.commit,{icon:!0})}${this.status?.hasConflicts?`\n\n${(0,k._6)("conflicted file",this.status.conflicts.length)}`:""}`,!0);return t.supportHtml=!0,t.isTrusted=!0,e.tooltip=t,e}async openEditor(){const e=n.Uri.joinPath(this.uri,".git","rebase-merge","git-rebase-todo");await(0,ke.dO)(s.nA.OpenWith,e,"gitlens.rebase",{preview:!1})}};let rr=or;rr.key=":rebase";class RebaseCommitNode extends De.bT{constructor(e,t,i){super(i.getGitUri(),e,t),this.commit=i}toClipboard(){return`${this.commit.shortSha}: ${this.commit.summary}`}get ref(){return this.commit}async getChildren(){const e=this.commit;let t=(await e.getCommitsForFiles()).map((e=>new ro(this.view,this,e.file,e)));if(this.view.config.files.layout!==r.Vc.List){const e=(0,Ht.Mo)(t,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);t=new _n(this.view,this,this.repoPath,"",e).getChildren()}else t.sort(((e,t)=>(0,k.dm)(e.label,t.label)));return t}getTreeItem(){const e=new n.TreeItem(`Paused at commit ${this.commit.shortSha}`,n.TreeItemCollapsibleState.Collapsed);return e.description=CommitFormatter.fromTemplate("${message}",this.commit,{messageTruncateAtNewLine:!0}),e.iconPath=new n.ThemeIcon("git-commit"),e}getCommand(){const e={commit:this.commit,uri:this.uri,line:0,showOptions:{preserveFocus:!0,preview:!0}};return{title:"Open Changes with Previous Revision",command:s.Gh.DiffWithPrevious,arguments:[void 0,e]}}async resolveTreeItem(e){return null==e.tooltip&&(e.tooltip=await this.getTooltip()),e}async getTooltip(){const e=await this.view.container.git.getRemotesWithProviders(this.commit.repoPath),t=await this.view.container.git.getBestRemoteWithRichProvider(e);let i,o;if(null==this.commit.message&&await this.commit.ensureFullDetails(),null!=t?.provider){const[e,n]=await Promise.allSettled([this.view.container.autolinks.getLinkedIssuesAndPullRequests(this.commit.message??this.commit.summary,t),this.commit.getAssociatedPullRequest({remote:t})]);i=(0,Y.Sb)(e),o=(0,Y.Sb)(n),null!=o&&i?.delete(o.id)}const s=await CommitFormatter.fromTemplateAsync(`Rebase paused at ${this.view.config.formats.commits.tooltip}`,this.commit,{autolinkedIssuesOrPullRequests:i,dateFormat:r.DN.get("defaultDateFormat"),messageAutolinks:!0,messageIndent:4,pullRequestOrRemote:o,outputFormat:"markdown",remotes:e}),a=new n.MarkdownString(s,!0);return a.supportHtml=!0,a.isTrusted=!0,a}}var sr=Object.defineProperty,ar=Object.getOwnPropertyDescriptor,lr=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ar(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&sr(t,i,r),r};const cr=class extends De.bT{constructor(e,t,i,n,o,r){super(e,t,i),this.branch=n,this.root=o,this.splatted=!0,this.compacted=!1,this.limit=this.view.getNodeLastKnownLimit(this),this.options={expanded:!1,limitCommits:!1,showAsCommits:!1,showComparison:!1,showCurrent:!this.root,showStatus:!0,showTracking:!this.root,...r}}static getId(e,t,i){return`${Jr.getId(e)}${this.key}(${t})${i?":root":""}`}toClipboard(){return this.branch.name}get id(){return cr.getId(this.branch.repoPath,this.branch.name,this.root)}get current(){return this.branch.current}get label(){if(this.options.showAsCommits)return"Commits";const e=this.branch.getNameWithoutRemote();return`${this.view.config.branches?.layout!==r.CZ.Tree||this.compacted||this.root||this.current||this.branch.detached||this.branch.starred?e:this.branch.getBasename()}${this.branch.rebasing?" (Rebasing)":""}`}get ref(){return this.branch}get treeHierarchy(){return this.root||this.current||this.branch.detached||this.branch.starred?[this.branch.name]:this.branch.getNameWithoutRemote().split("/")}async getChildren(){if(null==this._children){const e=this.branch;let t,i;if(this.view.config.pullRequests.enabled&&this.view.config.pullRequests.showForBranches&&(null!=e.upstream||e.remote)&&(0,a.fw)(s.zf.HasConnectedRemotes)&&(i=this.getState("pullRequest"),void 0===i&&void 0===this.getState("pendingPullRequest"))){t=(0,Y.PQ)();const i=this.getAssociatedPullRequest(e,this.root?{include:[rn.o0.Open,rn.o0.Merged]}:void 0);queueMicrotask((async()=>{await(t?.promise);let n=!1;const o=setTimeout((()=>{n=!0,this.view.triggerNodeChange(this)}),250),r=await i;clearTimeout(o),null!=r&&null!=this._children&&this._children.splice(this._children[0]instanceof Fo?1:0,0,new ao(this.view,this,r,e)),(n||null!=r)&&this.view.triggerNodeChange(this)}))}const[n,o,r,l,c,h]=await Promise.allSettled([this.getLog(),this.view.container.git.getBranchesAndTagsTipsFn(this.uri.repoPath,e.name),this.options.showStatus&&e.current?this.view.container.git.getStatusForRepo(this.uri.repoPath):void 0,this.options.showStatus&&e.current?this.view.container.git.getMergeStatus(this.uri.repoPath):void 0,this.options.showStatus?this.view.container.git.getRebaseStatus(this.uri.repoPath):void 0,e.remote?void 0:this.view.container.git.getBranchAheadRange(e).then((e=>e?this.view.container.git.getLogRefsOnly(this.uri.repoPath,{limit:0,ref:e}):void 0))]),u=(0,Y.Sb)(n);if(null==u)return[new MessageNode(this.view,this,"No commits could be found.")];const d=[];!1===this.options.showComparison||this.view instanceof RemotesView||d.push(new Fo(this.uri,this.view,this,e,this.options.showComparison,this.splatted)),null!=i&&d.push(new ao(this.view,this,i,e));const p=(0,Y.Sb)(r),m=(0,Y.Sb)(l),g=(0,Y.Sb)(c);if(this.options.showStatus&&null!=m)d.push(new nr(this.view,this,e,m,p??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showStatus&&null!=g&&(e.current||e.name===g.incoming.name))d.push(new rr(this.view,this,e,g,p??await this.view.container.git.getStatusForRepo(this.uri.repoPath),this.root));else if(this.options.showTracking){const t={ref:e.ref,repoPath:e.repoPath,state:e.state,upstream:e.upstream?.name};null!=e.upstream?!this.root||t.state.behind||t.state.ahead?(t.state.behind&&d.push(new wo(this.view,this,e,t,"behind",this.root)),t.state.ahead&&d.push(new wo(this.view,this,e,t,"ahead",this.root))):d.push(new wo(this.view,this,e,t,"same",this.root)):d.push(new wo(this.view,this,e,t,"none",this.root))}0!==d.length&&d.push(new MessageNode(this.view,this,"",s.NE.Dash.repeat(2),""));const f=(0,Y.Sb)(h),w=(0,Y.Sb)(o);d.push(...$n((0,q.UI)(u.commits.values(),(t=>new uo(this.view,this,t,f?.has(t.ref),e,w))),this)),u.hasMore&&d.push(new LoadMoreNode(this.view,this,d[d.length-1],{getCount:()=>this.view.container.git.getCommitCount(e.repoPath,e.name)})),this._children=d,setTimeout((()=>t?.fulfill()),1)}return this._children}async getTreeItem(){this.splatted=!1;let e,t,i=`${this.current?"Current branch":"Branch"} $(git-branch) ${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}`,o=De.Td.Branch;this.current&&(o+="+current"),this.branch.remote&&(o+="+remote"),this.branch.starred&&(o+="+starred"),null==this.branch.upstream||this.branch.upstream.missing||(o+="+tracking"),this.options.showAsCommits&&(o+="+commits");let r="";if(!this.branch.remote)if(null!=this.branch.upstream){let a=s.NE.Dash;const l=await this.branch.getRemote();if(this.branch.upstream.missing)a=s.NE.Warning;else if(null!=l){let e,t;for(const{type:i}of l.urls)if(i===O.XG.Fetch){if(e=!0,t)break}else if(i===O.XG.Push&&(t=!0,e))break;e&&t?a=s.NE.ArrowsRightLeft:t?a=s.NE.ArrowRight:e&&(a=s.NE.ArrowLeft)}t=this.options.showAsCommits?`${this.branch.getTrackingStatus({suffix:(0,k.vk)(s.NE.Dot,1,1)})}${this.branch.getNameWithoutRemote()}${this.branch.rebasing?" (Rebasing)":""}${(0,k.vk)(a,2,2)}${this.branch.upstream.name}`:`${this.branch.getTrackingStatus({suffix:`${s.NE.Space} `})}${a}${s.NE.Space} ${this.branch.upstream.name}`,i+=` is ${this.branch.getTrackingStatus({empty:this.branch.upstream.missing?`missing upstream $(git-branch) ${this.branch.upstream.name}`:`up to date with $(git-branch)  ${this.branch.upstream.name}${l?.provider?.name?` on ${l.provider.name}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${this.branch.upstream.name}${l?.provider?.name?` on ${l.provider.name}`:""}`})}`,(this.branch.state.ahead||this.branch.state.behind)&&(this.branch.state.ahead&&(o+="+ahead",e=new n.ThemeColor(s.wL.UnpublishedChangesIconColor),r="-green"),this.branch.state.behind&&(o+="+behind",e=new n.ThemeColor(s.wL.UnpulledChangesIconColor),r=this.branch.state.ahead?"-yellow":"-red"))}else{const e=O.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(this.branch.repoPath));i+=` hasn't been published to ${(e?.length?e[0].name:void 0)??"a remote"}`}null!=this.branch.date&&(t=`${t?`${t}${(0,k.vk)(s.NE.Dot,2,2)}`:""}${this.branch.formattedDate}`,i+=`\n\nLast commit ${this.branch.formatDateFromNow()} (${this.branch.formatDate(this.view.container.BranchDateFormatting.dateFormat)})`),i=new n.MarkdownString(i,!0),i.supportHtml=!0,i.isTrusted=!0,this.branch.starred&&i.appendMarkdown("\\\n$(star-full) Favorited");const a=this.getState("pendingPullRequest");null!=a&&i.appendMarkdown(`\n\n$(loading~spin) Loading associated pull request${s.NE.Ellipsis}`);const l=new n.TreeItem(this.label,this.options.expanded?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.Collapsed);return l.id=this.id,l.contextValue=o,l.description=t,l.iconPath=null!=a?new n.ThemeIcon("loading~spin"):this.options.showAsCommits?new n.ThemeIcon("git-commit",e):{dark:this.view.container.context.asAbsolutePath(`images/dark/icon-branch${r}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-branch${r}.svg`)},l.tooltip=i,l.resourceUri=n.Uri.parse(`gitlens-view://branch/status/${await this.branch.getStatus()}${this.options.showCurrent&&this.current?"/current":""}`),l}async star(){await this.branch.star(),this.view.refresh(!0)}async unstar(){await this.branch.unstar(),this.view.refresh(!0)}refresh(e){this._children=void 0,e&&(this._log=void 0,this.deleteState())}async getAssociatedPullRequest(e,t){let i=this.getState("pullRequest");if(void 0!==i)return Promise.resolve(i??void 0);let n=this.getState("pendingPullRequest");return n??(n=e.getAssociatedPullRequest(t),this.storeState("pendingPullRequest",n),i=await n,this.storeState("pullRequest",i??null),this.deleteState("pendingPullRequest"),i)}async getLog(){if(null==this._log){let e=this.limit??(this.root&&!this.options.limitCommits?this.view.config.pageItemLimit:this.view.config.defaultItemLimit);0!==e&&this.branch.state.ahead>e&&(e=Math.min(this.branch.state.ahead+1,2*e)),this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:e,ref:this.ref.ref,authors:this.options?.authors})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));null!=t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this._children=void 0,this.triggerChange(!1)))}};let hr=cr;function ur(e,t){let i,n=!1;return"boolean"==typeof e?n=e:i=e,(e,o,r)=>{let s;if("function"==typeof r.value&&(s=r.value),null==s)throw new Error("Not supported");r.value=function(...e){if(n){const n=e[e.length-1];i=null!=n&&"number"==typeof n?n:t}const o=s?.apply(this,e);return null==i||i<1||!(0,Y.tI)(o)?o:(0,Y.HO)(o,i,{onDidCancel:e=>e(void 0)})}}}hr.key=":branch",lr([(0,H.cM)()],hr.prototype,"star",1),lr([(0,H.cM)()],hr.prototype,"unstar",1),lr([(0,V.H)(),(0,H.fF)()],hr.prototype,"refresh",1),lr([(0,V.H)()],hr.prototype,"loadMore",1);var dr=Object.defineProperty,pr=Object.getOwnPropertyDescriptor,mr=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?pr(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&dr(t,i,r),r};const gr=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.repo=n,this.splatted=!0}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return gr.getId(this.repo.path)}get repoPath(){return this.repo.path}async getChildren(){if(null==this._children){const e=r.DN.get("views.contributors.showAllBranches");let t;if(!e)try{const e=await this.view.container.git.getBranch(this.uri.repoPath);null==e?.upstream?.name||e.upstream.missing||(t="@{u}")}catch{}const i=r.DN.get("views.contributors.showStatistics"),n=await this.repo.getContributors({all:e,ref:t,stats:i});if(0===n.length)return[new MessageNode(this.view,this,"No contributors could be found.")];$.sort(n);const o=await this.maybeGetPresenceMap(n);this._children=n.map((i=>new Eo(this.uri,this.view,this,i,{all:e,ref:t,presence:o})))}return this._children}getTreeItem(){this.splatted=!1;const e=new n.TreeItem("Contributors",n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Contributors,e.iconPath=new n.ThemeIcon("organization"),e}updateAvatar(e){if(null!=this._children)for(const t of this._children)t.contributor.email===e&&t.triggerChange()}refresh(){this._children=void 0}async maybeGetPresenceMap(e){const t=e.find((e=>e.current))?.email;if(null!=t)return this.view.container.vsls.getContactsPresence([t])}};let fr=gr;fr.key=":contributors",mr([(0,V.H)(),(0,H.fF)()],fr.prototype,"refresh",1),mr([(0,H.fF)({args:!1}),ur(250)],fr.prototype,"maybeGetPresenceMap",1);var wr=Object.defineProperty,_r=Object.getOwnPropertyDescriptor,vr=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?_r(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&wr(t,i,r),r};const yr=class extends De.Re{constructor(e,t,i){super(_.YY.fromRepoPath(i.repoPath),e,t),this.record=i,this.limit=this.view.getNodeLastKnownLimit(this)}static getId(e,t,i,n,o,r){return`${Jr.getId(e)}${this.key}(${t}|${i}|${n}|${o??""}|${r.getTime()})`}get id(){return yr.getId(this.uri.repoPath,this.record.sha,this.record.selector,this.record.command,this.record.commandArgs,this.record.date)}async getChildren(){const e=await this.getLog();if(void 0===e)return[new MessageNode(this.view,this,"No commits could be found.")];const t=[...(0,q.UI)(e.commits.values(),(e=>new uo(this.view,this,e)))];return e.hasMore&&t.push(new LoadMoreNode(this.view,this,t[t.length-1])),t}getTreeItem(){const e=new n.TreeItem(`${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}`,n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.description=`${0===this.record.HEAD.length?"":`${this.record.HEAD} ${s.NE.Space}${s.NE.Dot}${s.NE.Space} `}${this.record.formattedDate}`,e.contextValue=De.Td.ReflogRecord,e.tooltip=`${0===this.record.HEAD.length?"":`${this.record.HEAD}\n`}${this.record.command}${this.record.commandArgs?` ${this.record.commandArgs}`:""}${this.record.details?` (${this.record.details})`:""}\n${this.record.formatDateFromNow()} (${this.record.formatDate()})\n${this.record.previousShortSha} ${s.NE.Space}${s.NE.ArrowRight}${s.NE.Space} ${this.record.shortSha}`,e}refresh(e){e&&(this._log=void 0)}async getLog(){if(void 0===this._log){const e=`${this.record.previousSha}..${this.record.sha}`;this._log=await this.view.container.git.getLog(this.uri.repoPath,{limit:this.limit??this.view.config.defaultItemLimit,ref:e})}return this._log}get hasMore(){return this._log?.hasMore??!0}async loadMore(e){let t=await n.window.withProgress({location:{viewId:this.view.id}},(()=>this.getLog()));void 0!==t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._log!==t&&(this._log=t,this.limit=t?.count,this.triggerChange(!1)))}};let br=yr;br.key=":reflog-record",vr([(0,V.H)(),(0,H.fF)()],br.prototype,"refresh",1),vr([(0,V.H)()],br.prototype,"loadMore",1);var Cr=Object.defineProperty,Sr=Object.getOwnPropertyDescriptor;const kr=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.repo=n,this.limit=this.view.getNodeLastKnownLimit(this)}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return kr.getId(this.repo.path)}async getChildren(){if(void 0===this._children){const e=[],t=await this.getReflog();if(void 0===t||0===t.records.length)return[new MessageNode(this.view,this,"No activity could be found.")];e.push(...t.records.map((e=>new br(this.view,this,e)))),t.hasMore&&e.push(new LoadMoreNode(this.view,this,e[e.length-1])),this._children=e}return this._children}getTreeItem(){const e=new n.TreeItem("Incoming Activity",n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Reflog,e.description="experimental",e.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-activity.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-activity.svg")},e}refresh(e){this._children=void 0,e&&(this._reflog=void 0)}async getReflog(){return void 0===this._reflog&&(this._reflog=await this.view.container.git.getIncomingActivity(this.repo.path,{all:!0,limit:this.limit??this.view.config.defaultItemLimit})),this._reflog}get hasMore(){return this._reflog?.hasMore??!0}async loadMore(e){let t=await this.getReflog();void 0!==t&&t.hasMore&&(t=await(t.more?.(e??this.view.config.pageItemLimit)),this._reflog!==t&&(this._reflog=t,this.limit=t?.count,this.triggerChange(!1)))}};let Pr=kr;Pr.key=":reflog",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Sr(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&Cr(t,i,r)})([(0,V.H)(),(0,H.fF)()],Pr.prototype,"refresh",1);var Rr=Object.defineProperty,Dr=Object.getOwnPropertyDescriptor,$r=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Dr(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Rr(t,i,r),r};class RepositoriesNode extends De.CF{constructor(e){super(_.Wj,e)}dispose(){super.dispose(),this.resetChildren()}resetChildren(){if(null!=this._children){for(const e of this._children)e instanceof Jr&&e.dispose();this._children=void 0}}getChildren(){if(null==this._children){const e=this.view.container.git.openRepositories;if(0===e.length)return[new MessageNode(this.view,this,"No repositories could be found.")];this._children=e.map((e=>new Jr(_.YY.fromRepoPath(e.path),this.view,this,e)))}return this._children}getTreeItem(){const e=new n.TreeItem("Repositories",n.TreeItemCollapsibleState.Expanded);return e.contextValue=De.Td.Repositories,e}async refresh(e=!1){if(null==this._children)return;if(e)return this.resetChildren(),await this.unsubscribe(),void this.ensureSubscription();const t=this.view.container.git.openRepositories;if(0===t.length&&(null==this._children||0===this._children.length))return;if(0===t.length)return void(this._children=[new MessageNode(this.view,this,"No repositories could be found.")]);const i=[];for(const e of t){const t=e.id,n=this._children.find((e=>e.repo.id===t));null!=n?(i.push(n),n.refresh()):i.push(new Jr(_.YY.fromRepoPath(e.path),this.view,this,e))}for(const e of this._children)i.includes(e)||e.dispose();this._children=i,this.ensureSubscription()}subscribe(){const e=[this.view.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this)];return this.view.config.autoReveal&&e.push(n.window.onDidChangeActiveTextEditor((0,K.Ds)(this.onActiveEditorChanged,500),this)),n.Disposable.from(...e)}etag(){return(0,K.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}onActiveEditorChanged(e){if(null!=e&&null!=this._children&&1!==this._children.length)try{const t=e.document.uri,i=this._children.find((e=>e instanceof Jr&&e.repo.containsUri(t)));if(null==i)return;let n=0===this.view.selection.length?void 0:this.view.selection[0];for(;null!=n;){if(n===i)return;n=n.getParent()}this.view.reveal(i,{expand:!0})}catch(e){B.Yd.error(e)}}onRepositoriesChanged(e){this.triggerChange()}}$r([(0,H.fF)()],RepositoriesNode.prototype,"resetChildren",1),$r([(0,V.H)(),(0,H.fF)()],RepositoriesNode.prototype,"refresh",1),$r([(0,H.fF)()],RepositoriesNode.prototype,"subscribe",1),$r([(0,H.fF)({args:!1})],RepositoriesNode.prototype,"onActiveEditorChanged",1),$r([(0,H.fF)()],RepositoriesNode.prototype,"onRepositoriesChanged",1);var Tr=Object.defineProperty,Fr=Object.getOwnPropertyDescriptor;const xr=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.repo=n}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return xr.getId(this.repo.path)}async getChildren(){if(null==this._children){const e=await this.repo.getStash();if(null==e)return[new MessageNode(this.view,this,"No stashes could be found.")];this._children=[...(0,q.UI)(e.commits.values(),(e=>new Uo(this.view,this,e)))]}return this._children}getTreeItem(){const e=new n.TreeItem("Stashes",n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Stashes,e.iconPath=new n.ThemeIcon("gitlens-stashes"),e}refresh(){this._children=void 0}};let Or=xr;Or.key=":stashes",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Fr(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&Tr(t,i,r)})([(0,V.H)(),(0,H.fF)()],Or.prototype,"refresh",1);var Ar=Object.defineProperty,Ir=Object.getOwnPropertyDescriptor,Er=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ir(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ar(t,i,r),r};class RepositoriesView extends ViewBase{constructor(e){super(e,"gitlens.views.repositories","Repositories","repositoriesView"),this.configKey="repositories",this._onDidChangeAutoRefresh=new n.EventEmitter}get onDidChangeAutoRefresh(){return this._onDidChangeAutoRefresh.event}get canSelectMany(){return!1}getRoot(){return new RepositoriesNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","contributors","remotes","stashes","status","tags"),this.refresh(!0))),this),Xo(this.getQualifiedCommand("setBranchesLayoutToList"),(()=>this.setBranchesLayout(r.CZ.List)),this),Xo(this.getQualifiedCommand("setBranchesLayoutToTree"),(()=>this.setBranchesLayout(r.CZ.Tree)),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setAutoRefreshToOn"),(()=>this.setAutoRefresh(r.DN.get("views.repositories.autoRefresh"),!0)),this),Xo(this.getQualifiedCommand("setAutoRefreshToOff"),(()=>this.setAutoRefresh(r.DN.get("views.repositories.autoRefresh"),!1)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Xo(this.getQualifiedCommand("setBranchesShowBranchComparisonOn"),(()=>this.setBranchShowBranchComparison(!0)),this),Xo(this.getQualifiedCommand("setBranchesShowBranchComparisonOff"),(()=>this.setBranchShowBranchComparison(!1)),this),Xo(this.getQualifiedCommand("setShowBranchesOn"),(()=>this.toggleSection("showBranches",!0)),this),Xo(this.getQualifiedCommand("setShowBranchesOff"),(()=>this.toggleSection("showBranches",!1)),this),Xo(this.getQualifiedCommand("setShowCommitsOn"),(()=>this.toggleSection("showCommits",!0)),this),Xo(this.getQualifiedCommand("setShowCommitsOff"),(()=>this.toggleSection("showCommits",!1)),this),Xo(this.getQualifiedCommand("setShowContributorsOn"),(()=>this.toggleSection("showContributors",!0)),this),Xo(this.getQualifiedCommand("setShowContributorsOff"),(()=>this.toggleSection("showContributors",!1)),this),Xo(this.getQualifiedCommand("setShowRemotesOn"),(()=>this.toggleSection("showRemotes",!0)),this),Xo(this.getQualifiedCommand("setShowRemotesOff"),(()=>this.toggleSection("showRemotes",!1)),this),Xo(this.getQualifiedCommand("setShowStashesOn"),(()=>this.toggleSection("showStashes",!0)),this),Xo(this.getQualifiedCommand("setShowStashesOff"),(()=>this.toggleSection("showStashes",!1)),this),Xo(this.getQualifiedCommand("setShowTagsOn"),(()=>this.toggleSection("showTags",!0)),this),Xo(this.getQualifiedCommand("setShowTagsOff"),(()=>this.toggleSection("showTags",!1)),this),Xo(this.getQualifiedCommand("setShowWorktreesOn"),(()=>this.toggleSection("showWorktrees",!0)),this),Xo(this.getQualifiedCommand("setShowWorktreesOff"),(()=>this.toggleSection("showWorktrees",!1)),this),Xo(this.getQualifiedCommand("setShowUpstreamStatusOn"),(()=>this.toggleSection("showUpstreamStatus",!0)),this),Xo(this.getQualifiedCommand("setShowUpstreamStatusOff"),(()=>this.toggleSection("showUpstreamStatus",!1)),this),Xo(this.getQualifiedCommand("setShowSectionOff"),(e=>this.toggleSectionByNode(e,!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat")||r.DN.changed(e,"sortBranchesBy")||r.DN.changed(e,"sortContributorsBy")||r.DN.changed(e,"sortTagsBy"))}onConfigurationChanged(e){r.DN.changed(e,`views.${this.configKey}.autoRefresh`)&&this.setAutoRefresh(r.DN.get("views.repositories.autoRefresh")),super.onConfigurationChanged(e)}get autoRefresh(){return this.config.autoRefresh&&this.container.storage.getWorkspace("views:repositories:autoRefresh",!0)}findBranch(e,t){const i=Jr.getId(e.repoPath);return e.remote?this.findNode((t=>void 0!==t.branch&&t.branch.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:t=>t instanceof RepositoriesNode||(t instanceof cn?!!t.id.startsWith(i)&&(e.remote&&t.remote.name===(0,v.Lo)(e.name)):(t instanceof Jr||t instanceof Mr||t instanceof pn||t instanceof BranchOrTagFolderNode)&&t.id.startsWith(i)),token:t}):this.findNode((t=>void 0!==t.branch&&t.branch.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof Jr||e instanceof Mr||e instanceof BranchOrTagFolderNode)&&e.id.startsWith(i),token:t})}async findCommit(e,t){const i=Jr.getId(e.repoPath);let n=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,y.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==n.length)return this.findNode((t=>void 0!==t.commit&&t.commit.ref===e.ref),{allowPaging:!0,maxDepth:6,canTraverse:async t=>t instanceof RepositoriesNode||(t instanceof hr&&t.id.startsWith(i)&&n.includes(t.branch.name)?(await t.loadMore({until:e.ref}),!0):(t instanceof Jr||t instanceof Mr||t instanceof BranchOrTagFolderNode)&&t.id.startsWith(i)),token:t});if(n=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,y.f_)(e)?{commitDate:e.committer.date,remotes:!0}:{remotes:!0}),0===n.length)return;const o=n.map((e=>e.split("/",1)[0]));return this.findNode((t=>void 0!==t.commit&&t.commit.ref===e.ref),{allowPaging:!0,maxDepth:8,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof cn?e.id.startsWith(i)&&o.includes(e.remote.name):e instanceof hr?e.id.startsWith(i)&&n.includes(e.branch.name):(e instanceof Jr||e instanceof pn||e instanceof BranchOrTagFolderNode)&&e.id.startsWith(i)),token:t})}findContributor(e,t){const i=Jr.getId(e.repoPath);return this.findNode(Eo.getId(e.repoPath,e.name,e.email,e.username),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof Jr||e instanceof fr)&&e.id.startsWith(i),token:t})}findRemote(e,t){const i=Jr.getId(e.repoPath);return this.findNode((t=>t.remote?.name===e.name),{allowPaging:!0,maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof Jr||e instanceof pn)&&e.id.startsWith(i),token:t})}findStash(e,t){const i=Jr.getId(e.repoPath);return this.findNode(Uo.getId(e.repoPath,e.ref),{maxDepth:3,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof Jr||e instanceof Or)&&e.id.startsWith(i),token:t})}findTag(e,t){const i=Jr.getId(e.repoPath);return this.findNode((t=>void 0!==t.tag&&t.tag.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof Jr||e instanceof eo||e instanceof BranchOrTagFolderNode)&&e.id.startsWith(i),token:t})}findWorktree(e,t){const i=Jr.getId(e.repoPath);return this.findNode(Ho.getId(e.repoPath,e.uri),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||(e instanceof Jr||e instanceof Qo)&&e.id.startsWith(i),token:t})}revealBranch(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,n)=>{const o=await this.findBranch(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealBranches(e,t){const i=Jr.getId(e),n=await this.findNode(Mr.getId(e),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||e instanceof Jr&&e.id.startsWith(i)});return void 0!==n&&await this.reveal(n,t),n}async revealCommit(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,n)=>{const o=await this.findCommit(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealContributor(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing contributor '${e.name} in the Repositories view...`,cancellable:!0},(async(i,n)=>{const o=await this.findContributor(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}revealRemote(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing remote '${e.name}' in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findRemote(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealRepository(e,t){const i=Jr.getId(e),n=await this.findNode(i,{maxDepth:1,canTraverse:e=>e instanceof RepositoriesNode});return void 0!==n&&await this.reveal(n,t),n}async revealStash(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,n)=>{const o=await this.findStash(e,n);return void 0!==o&&await this.reveal(o,t),o}))}async revealStashes(e,t){const i=Jr.getId(e),n=await this.findNode(Or.getId(e),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||e instanceof Jr&&e.id.startsWith(i)});return void 0!==n&&await this.reveal(n,t),n}revealTag(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the Repositories view...`,cancellable:!0},(async(i,n)=>{const o=await this.findTag(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealTags(e,t){const i=Jr.getId(e),n=await this.findNode(eo.getId(e),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||e instanceof Jr&&e.id.startsWith(i)});return void 0!==n&&await this.reveal(n,t),n}revealWorktree(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findWorktree(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealWorktrees(e,t){const i=Jr.getId(e),n=await this.findNode(Qo.getId(e),{maxDepth:2,canTraverse:e=>e instanceof RepositoriesNode||e instanceof Jr&&e.id.startsWith(i)});return void 0!==n&&await this.reveal(n,t),n}async setAutoRefresh(e,t){e&&(void 0===t?t=this.container.storage.getWorkspace("views:repositories:autoRefresh",!0):await this.container.storage.storeWorkspace("views:repositories:autoRefresh",t)),(0,a.v)(s.zf.ViewsRepositoriesAutoRefresh,e&&t),this._onDidChangeAutoRefresh.fire()}setBranchesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return r.DN.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&r.DH.Working)}setBranchShowBranchComparison(e){return r.DN.updateEffective(`views.${this.configKey}.branches.showBranchComparison`,!!e&&r.DH.Branch)}toggleSection(e,t){return r.DN.updateEffective(`views.${this.configKey}.${e}`,t)}toggleSectionByNode(e,t){return e instanceof Mr?r.DN.updateEffective(`views.${this.configKey}.showBranches`,t):e instanceof hr?r.DN.updateEffective(`views.${this.configKey}.showCommits`,t):e instanceof wo?r.DN.updateEffective(`views.${this.configKey}.showUpstreamStatus`,t):e instanceof Fo?this.setShowBranchComparison(t):e instanceof fr?r.DN.updateEffective(`views.${this.configKey}.showContributors`,t):e instanceof Pr?r.DN.updateEffective(`views.${this.configKey}.showIncomingActivity`,t):e instanceof pn?r.DN.updateEffective(`views.${this.configKey}.showRemotes`,t):e instanceof Or?r.DN.updateEffective(`views.${this.configKey}.showStashes`,t):e instanceof eo?r.DN.updateEffective(`views.${this.configKey}.showTags`,t):e instanceof Qo?r.DN.updateEffective(`views.${this.configKey}.showWorktrees`,t):Promise.resolve()}}Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealBranch",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealBranches",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealCommit",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealContributor",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealRemote",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealRepository",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealStash",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealStashes",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealTag",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealTags",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealWorktree",1),Er([(0,V.H)((()=>""))],RepositoriesView.prototype,"revealWorktrees",1);var Nr=Object.defineProperty,Ur=Object.getOwnPropertyDescriptor;const Lr=class extends De.Re{constructor(e,t,i,n){super(e,t,i),this.repo=n}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return Lr.getId(this.repo.path)}get repoPath(){return this.repo.path}async getChildren(){if(null==this._children){const e=await this.repo.getBranches({filter:e=>!e.remote,sort:{current:!1}});if(0===e.values.length)return[new MessageNode(this.view,this,"No branches could be found.")];const t=e.values.map((e=>new hr(_.YY.fromRepoPath(this.uri.repoPath,e.ref),this.view,this,e,!1,{showComparison:this.view instanceof RepositoriesView?this.view.config.branches.showBranchComparison:this.view.config.showBranchComparison})));if(this.view.config.branches.layout===r.CZ.List)return t;const i=(0,Ht.Mo)(t,(e=>e.treeHierarchy),((...e)=>e.join("/")),this.view.config.files.compact,(e=>(e.compacted=!0,!0))),n=new BranchOrTagFolderNode(this.view,this,"branch",this.repo.path,"",void 0,i,"branches");this._children=n.getChildren()}return this._children}async getTreeItem(){const e=new n.TreeItem("Branches",n.TreeItemCollapsibleState.Collapsed);return e.id=this.id,e.contextValue=De.Td.Branches,await this.repo.hasRemotes()&&(e.contextValue+="+remotes"),e.iconPath=new n.ThemeIcon("git-branch"),e}refresh(){this._children=void 0}};let Mr=Lr;function Wr(){return(0,a.fw)(s.zf.PlusEnabled,r.DN.get("plusFeatures.enabled",void 0,!0))}async function Br(){if(Wr())return!0;const e={title:"Enable"};return await n.window.showInformationMessage("GitLens+ features are currently disabled. Would you like to enable them?",{modal:!0},e,{title:"Cancel",isCloseAffordance:!0})===e&&(await r.DN.updateEffective("plusFeatures.enabled",!0),!0)}Mr.key=":branches",((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ur(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&Nr(t,i,r)})([(0,V.H)(),(0,H.fF)()],Mr.prototype,"refresh",1);var Gr=Object.defineProperty,Vr=Object.getOwnPropertyDescriptor,Hr=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Vr(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Gr(t,i,r),r};class WorktreesRepositoryNode extends De.vb{getChildren(){return null==this.child&&(this.child=new Qo(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(A.I6.Config,A.I6.Worktrees,A.I6.Unknown,A.du.Any)}}class WorktreesViewNode extends De.FZ{async getChildren(){if(!1===(await this.view.container.git.access(p.Worktrees)).allowed)return[];if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No worktrees could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new WorktreesRepositoryNode(_.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.getChildren();return t.length<=1?(this.view.message=void 0,this.view.title="Worktrees",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Worktrees (${t.length})`,t)}return this.view.title="Worktrees",this.children}getTreeItem(){return new n.TreeItem("Worktrees",n.TreeItemCollapsibleState.Expanded)}}class WorktreesView extends ViewBase{constructor(e){super(e,"gitlens.views.worktrees","Worktrees","workspaceView"),this.configKey="worktrees",this.disposables.push(n.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"===e.scheme&&"worktree"===e.authority&&e.path.includes("/changes"))return{badge:"●",color:new n.ThemeColor("gitlens.decorations.worktreeView.hasUncommittedChangesForegroundColoSr"),tooltip:"Has Uncommitted Changes"}}}))}get canReveal(){return this.config.reveal||!r.DN.get("views.repositories.showWorktrees")}async show(e){if(await Br())return super.show(e)}onVisibilityChanged(e){e.visible?(this.updateDescription(),this._visibleDisposable?.dispose(),this._visibleDisposable=this.container.subscription.onDidChange((()=>{this.updateDescription()}))):(this._visibleDisposable?.dispose(),this._visibleDisposable=void 0),super.onVisibilityChanged(e)}async updateDescription(){const e=await this.container.subscription.getSubscription();switch(e.state){case Xt.jc.Free:case Xt.jc.FreePreviewTrialExpired:case Xt.jc.FreePlusTrialExpired:this.description="✨ GitLens+ feature";break;case Xt.jc.FreeInPreviewTrial:case Xt.jc.FreePlusInTrial:{const t=(0,Xt.PY)(e,"days");this.description=`✨ GitLens Pro (Trial), ${t<1?"<1 day":(0,k._6)("day",t)} left`;break}case Xt.jc.VerificationRequired:this.description=`✨ ${e.plan.effective.name} (Unverified)`;break;case Xt.jc.Paid:this.description=void 0}}getRoot(){return new WorktreesViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(async()=>this.refresh(!0)),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat"))}findWorktree(e,t){const i=Jr.getId(e.repoPath);return this.findNode(Ho.getId(e.repoPath,e.uri),{maxDepth:2,canTraverse:e=>e instanceof WorktreesViewNode||e instanceof WorktreesRepositoryNode&&e.id.startsWith(i),token:t})}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof WorktreesViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}revealWorktree(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing worktree '${e.name}' in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findWorktree(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return r.DN.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&r.DH.Branch)}async setShowBranchPullRequest(e){await r.DN.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await r.DN.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}Hr([(0,V.H)((()=>""))],WorktreesView.prototype,"revealRepository",1),Hr([(0,V.H)((()=>""))],WorktreesView.prototype,"revealWorktree",1);const qr=class extends De.Re{constructor(e,t,i,n){super(_.YY.fromRepoPath(i.repoPath),e,t),this.status=i,this.range=n,this.repoPath=i.repoPath}static getId(e){return`${Jr.getId(e)}${this.key}`}get id(){return qr.getId(this.repoPath)}async getChildren(){let e=[];const t=this.repoPath;let i;null!=this.range&&(i=await this.view.container.git.getLog(t,{limit:0,ref:this.range}),null!=i&&(await Promise.allSettled((0,q.UI)((0,q.hX)(i.commits.values(),(e=>null==e.files)),(e=>e.ensureFullDetails()))),e=[...(0,q.VS)(i.commits.values(),(e=>e.files?.map((t=>({...t,commit:e})))??[]))])),(this.view instanceof WorktreesView||this.view.config.includeWorkingTree)&&0!==this.status.files.length&&e.splice(0,0,...(0,q.VS)(this.status.files,(e=>(0,q.UI)(e.getPseudoCommits(this.view.container,void 0),(t=>this.getFileWithPseudoCommit(e,t)))))),e.sort(((e,t)=>t.commit.date.getTime()-e.commit.date.getTime()));const n=(0,Ht.vM)(e,(e=>e.path));let o=Object.values(n).map((e=>new StatusFileNode(this.view,this,e[e.length-1],t,e.map((e=>e.commit)))));if(this.view.config.files.layout!==r.Vc.List){const e=(0,Ht.Mo)(o,(e=>e.uri.relativePath.split("/")),((...e)=>(0,j.AH)((0,j.RQ)(...e))),this.view.config.files.compact);o=new _n(this.view,this,t,"",e,!0).getChildren()}else o.sort(((e,t)=>e.priority-t.priority||(0,k.dm)(e.label,t.label)));return o}async getTreeItem(){let e=this.view instanceof WorktreesView||this.view.config.includeWorkingTree?this.status.files.length:0;if(null!=this.range&&null!=this.status.upstream&&this.status.state.ahead>0)if(e>0){const t=await this.view.container.git.getDiffStatus(this.repoPath,`${this.status.upstream}...`);if(null!=t){const i=new Set;for(const e of this.status.files)i.add(e.path);for(const e of t)i.add(e.path);e=i.size}}else{const t=await this.view.container.git.getChangedFilesCount(this.repoPath,`${this.status.upstream}...`);null!=t?e+=t.changedFiles:e=-1}const t=-1===e?"?? files changed":`${(0,k._6)("file",e)} changed`,i=new n.TreeItem(t,n.TreeItemCollapsibleState.Collapsed);return i.id=this.id,i.contextValue=De.Td.StatusFiles,i.iconPath={dark:this.view.container.context.asAbsolutePath("images/dark/icon-diff.svg"),light:this.view.container.context.asAbsolutePath("images/light/icon-diff.svg")},i}getFileWithPseudoCommit(e,t){return{status:e.status,repoPath:e.repoPath,indexStatus:e.indexStatus,workingTreeStatus:e.workingTreeStatus,path:e.path,originalPath:e.originalPath,commit:t}}};let jr=qr;jr.key=":status-files";var Yr=Object.defineProperty,Qr=Object.getOwnPropertyDescriptor,zr=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Qr(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Yr(t,i,r),r};const Kr=class extends De.CF{constructor(e,t,i,n){super(e,t,i),this.repo=n,this._status=this.repo.getStatus()}static getId(e){return`gitlens${this.key}(${e})`}toClipboard(){return this.repo.path}get id(){return Kr.getId(this.repo.path)}async getChildren(){if(void 0===this._children){const e=[],t=await this._status;if(null!=t){const i=new v.XI(t.repoPath,t.branch,!1,!0,void 0,t.sha,t.upstream?{name:t.upstream,missing:!1}:void 0,t.state.ahead,t.state.behind,t.detached,t.rebasing);!1!==this.view.config.showBranchComparison&&e.push(new Fo(this.uri,this.view,this,i,this.view.config.showBranchComparison,!0));const[n,o]=await Promise.all([this.view.container.git.getMergeStatus(t.repoPath),this.view.container.git.getRebaseStatus(t.repoPath)]);if(null!=n?e.push(new nr(this.view,this,i,n,t,!0)):null!=o?e.push(new rr(this.view,this,i,o,t,!0)):this.view.config.showUpstreamStatus&&(t.upstream?t.state.behind||t.state.ahead?(t.state.behind&&e.push(new wo(this.view,this,i,t,"behind",!0)),t.state.ahead&&e.push(new wo(this.view,this,i,t,"ahead",!0,{showAheadCommits:!0}))):e.push(new wo(this.view,this,i,t,"same",!0)):e.push(new wo(this.view,this,i,t,"none",!0))),this.view.config.includeWorkingTree&&0!==t.files.length){const i=void 0;e.push(new jr(this.view,this,t,i))}0===e.length||this.view.config.compact||e.push(new MessageNode(this.view,this,"",s.NE.Dash.repeat(2),"")),this.view.config.showCommits&&e.push(new hr(this.uri,this.view,this,i,!0,{showAsCommits:!0,showComparison:!1,showCurrent:!1,showStatus:!1,showTracking:!1}))}this.view.config.showBranches&&e.push(new Mr(this.uri,this.view,this,this.repo)),this.view.config.showRemotes&&e.push(new pn(this.uri,this.view,this,this.repo)),this.view.config.showStashes&&await this.repo.supports(d.Stashes)&&e.push(new Or(this.uri,this.view,this,this.repo)),this.view.config.showTags&&e.push(new eo(this.uri,this.view,this,this.repo)),this.view.config.showWorktrees&&await this.repo.supports(d.Worktrees)&&e.push(new Qo(this.uri,this.view,this,this.repo)),this.view.config.showContributors&&e.push(new fr(this.uri,this.view,this,this.repo)),this.view.config.showIncomingActivity&&e.push(new Pr(this.uri,this.view,this,this.repo)),this._children=e}return this._children}async getTreeItem(){const e=this.repo.formattedName??this.uri.repoPath??"",t=await(this.repo?.getLastFetched())??0;let i,o=`${this.repo.formattedName??this.uri.repoPath??""}${t?`${(0,k.vk)(s.NE.Dash,2,2)}Last fetched ${A._j.formatLastFetched(t,!1)}`:""}${this.repo.formattedName?`\n${this.uri.repoPath}`:""}`,r="",a="",l=De.Td.Repository;this.repo.starred&&(l+="+starred");const c=await this._status;if(null!=c){o+=`\n\nCurrent branch $(git-branch) ${c.branch}${c.rebasing?" (Rebasing)":""}`,this.view.config.includeWorkingTree&&0!==c.files.length&&(a=c.getFormattedDiffStatus({compact:!0,prefix:(0,k.vk)(s.NE.Dot,1,1)}));let e;if(i=`${c.getUpstreamStatus({suffix:(0,k.vk)(s.NE.Dot,1,1)})}${c.branch}${c.rebasing?" (Rebasing)":""}${a}`,null!=c.upstream){const t=O.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(c.repoPath));e=t?.length?t[0].name:void 0}else{e=(await c.getRemote())?.provider?.name}r=a?"-blue":"",null!=c.upstream&&(o+=` is ${c.getUpstreamStatus({empty:`up to date with $(git-branch) ${c.upstream}${e?` on ${e}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${c.upstream}${e?` on ${e}`:""}`})}`,c.state.behind&&(l+="+behind",r="-red"),c.state.ahead&&(r=c.state.behind?"-yellow":"-green",l+="+ahead")),a&&(o+=`\n\nWorking tree has uncommitted changes${c.getFormattedDiffStatus({expand:!0,prefix:"\n",separator:"\n"})}`)}const h=new n.TreeItem(e,n.TreeItemCollapsibleState.Expanded);h.id=this.id,h.contextValue=l,h.description=`${i??""}${t?`${(0,k.vk)(s.NE.Dot,1,1)}Last fetched ${A._j.formatLastFetched(t)}`:""}`,h.iconPath={dark:this.view.container.context.asAbsolutePath(`images/dark/icon-repo${r}.svg`),light:this.view.container.context.asAbsolutePath(`images/light/icon-repo${r}.svg`)};const u=new n.MarkdownString(o,!0);return u.supportHtml=!0,u.isTrusted=!0,h.tooltip=u,h}fetch(e={}){return this.repo.fetch(e)}pull(e={}){return this.repo.pull(e)}push(e={}){return this.repo.push(e)}async refresh(e=!1){e&&(this._status=this.repo.getStatus(),this._children=void 0),await this.ensureSubscription()}async star(){await this.repo.star(),this.parent.triggerChange()}async unstar(){await this.repo.unstar(),this.parent.triggerChange()}async subscribe(){const e=await(this.repo?.getLastFetched())??0,t=[this.repo.onDidChange(this.onRepositoryChanged,this)],i=A._j.getLastFetchedUpdateInterval(e);return 0!==e&&i>0&&t.push((0,K.DH)((()=>{i!==A._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)}),i)),this.view.config.includeWorkingTree&&t.push(this.repo.onDidChangeFileSystem(this.onFileSystemChanged,this),this.repo.startWatchingFileSystem()),n.Disposable.from(...t)}etag(){return this.repo.etag}async onFileSystemChanged(e){if(this._status=this.repo.getStatus(),void 0!==this._children){const e=await this._status;let t=this._children.findIndex((e=>e instanceof jr));if(void 0===e||!e.state.ahead&&0===e.files.length)-1!==t&&this._children.splice(t,1);else{let i=1;-1===t&&(t=(0,Ht.qr)(this._children,(e=>e instanceof wo||e instanceof hr)),i=0,t++);const n=void 0;this._children.splice(t,i,new jr(this.view,this,e,n))}}this.triggerChange(!1)}onRepositoryChanged(e){if(e.changed(A.I6.Closed,A.du.Any))this.dispose();else if(null==this._children||e.changed(A.I6.Config,A.I6.Index,A.I6.Heads,A.I6.Status,A.I6.Unknown,A.du.Any))this.triggerChange(!0);else{if(e.changed(A.I6.Remotes,A.I6.RemoteProviders,A.du.Any)){const e=this._children.find((e=>e instanceof pn));null!=e&&this.view.triggerNodeChange(e)}if(e.changed(A.I6.Stash,A.du.Any)){const e=this._children.find((e=>e instanceof Or));null!=e&&this.view.triggerNodeChange(e)}if(e.changed(A.I6.Tags,A.du.Any)){const e=this._children.find((e=>e instanceof eo));null!=e&&this.view.triggerNodeChange(e)}}}};let Jr=Kr;Jr.key=":repository",zr([(0,H.cM)()],Jr.prototype,"fetch",1),zr([(0,H.cM)()],Jr.prototype,"pull",1),zr([(0,H.cM)()],Jr.prototype,"push",1),zr([(0,V.H)(),(0,H.fF)()],Jr.prototype,"refresh",1),zr([(0,H.cM)()],Jr.prototype,"star",1),zr([(0,H.cM)()],Jr.prototype,"unstar",1),zr([(0,H.fF)()],Jr.prototype,"subscribe",1),zr([(0,H.fF)({args:{0:e=>`{ repository: ${e.repository?.name??""}, uris(${e.uris.length}): [${e.uris.slice(0,1).map((e=>e.fsPath)).join(", ")}${e.uris.length>1?", ...":""}] }`}})],Jr.prototype,"onFileSystemChanged",1),zr([(0,H.fF)({args:{0:e=>e.toString()}})],Jr.prototype,"onRepositoryChanged",1);var Xr=Object.defineProperty,Zr=Object.getOwnPropertyDescriptor,es=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Zr(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Xr(t,i,r),r};let ts=0;const is=class extends De.Re{constructor(e,t,i,n,o,r,s=0){super(_.YY.fromRepoPath(i),e,t),this.repoPath=i,this._labels=o,this._searchQueryOrLog=r,this._pinned=s,this._order=Date.now(),this._search=n,this._instanceId=ts++,this._order=Date.now()}static getId(e,t,i){return`${Jr.getId(e)}${this.key}(${null==t?"?":U(t)}):${i}`}static getPinnableId(e,t){return(0,on.FB)(`${e}|${U(t)}`,"base64")}get id(){return is.getId(this.repoPath,this.search,this._instanceId)}get canDismiss(){return!this.pinned}get order(){return this._pinned||this._order}get pinned(){return 0!==this._pinned}get search(){return this._search}ensureResults(){if(null==this._resultsNode){let e;null==this._searchQueryOrLog?(e=!0,this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel})):"function"!=typeof this._searchQueryOrLog&&(this._searchQueryOrLog=this.getSearchQuery({label:this._labels.queryLabel},this._searchQueryOrLog)),this._resultsNode=new ResultsCommitsNode(this.view,this,this.repoPath,this._labels.label,{query:this._searchQueryOrLog,deferred:e},{expand:!this.pinned},!0)}return this._resultsNode}async getChildren(){return this.ensureResults().getChildren()}async getTreeItem(){const e=await this.ensureResults().getTreeItem();if(e.id=this.id,e.contextValue=`${De.Td.SearchResults}${this._pinned?"+pinned":""}`,this.view.container.git.repositoryCount>1){const t=this.view.container.git.getRepository(this.repoPath);e.description=t?.formattedName??this.repoPath}return this._pinned&&(e.iconPath=new n.ThemeIcon("pinned")),e}get hasMore(){return this.ensureResults().hasMore}async loadMore(e){return this.ensureResults().loadMore(e)}async edit(e){if(null==e)return void await Pe({command:"search",prefillOnly:!0,state:{repo:this.repoPath,...this.search,showResultsInSideBar:this}});const t=this.getPinnableId();this._search=e.pattern,this._labels=e.labels,this._searchQueryOrLog=e.log,this._resultsNode=void 0,this.pinned&&(await this.view.updatePinned(t),await this.updatePinned()),this.triggerChange(!1),queueMicrotask((()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0})))}refresh(e=!1){this._resultsNode?.refresh(e)}async pin(){this.pinned||(this._pinned=Date.now(),await this.updatePinned(),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}async unpin(){this.pinned&&(this._pinned=0,await this.view.updatePinned(this.getPinnableId()),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}getPinnableId(){return is.getPinnableId(this.repoPath,this.search)}getSearchLabel(e,t){if("string"==typeof e)return e;const i=t?.count??0,n=void 0===e.resultsType?{singular:"result",plural:"results"}:e.resultsType;return`${(0,k._6)(n.singular,i,{format:e=>t?.hasMore?`${e}+`:void 0,plural:n.plural,zero:"No"})} ${e.label}`}getSearchQuery(e,t){let i=!0;return async n=>{t=await(t??this.view.container.git.richSearchCommits(this.repoPath,this.search)),i||null==t||null==t.query||(t=await t.query(n)),i=!1;const o={label:this.getSearchLabel(e.label,t),log:t,hasMore:t?.hasMore??!1};return o.hasMore&&(o.more=async t=>{o.log=await(o.log?.more?.(t))??o.log,o.label=this.getSearchLabel(e.label,o.log),o.hasMore=o.log?.hasMore??!0}),o}}updatePinned(){return this.view.updatePinned(this.getPinnableId(),{type:"search",timestamp:this._pinned,path:this.repoPath,labels:this._labels,search:(e=this.search,{pattern:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex})});var e}};let ns=is;ns.key=":search-results",es([(0,V.H)(),(0,H.fF)()],ns.prototype,"refresh",1),es([(0,H.cM)()],ns.prototype,"pin",1),es([(0,H.cM)()],ns.prototype,"unpin",1);const os=new Map([["","Search by Message"],["=:","Search by Message"],["message:","Search by Message"],["@:","Search by Author"],["author:","Search by Author"],["#:","Search by Commit SHA"],["commit:","Search by Commit SHA"],["?:","Search by File"],["file:","Search by File"],["~:","Search by Changes"],["change:","Search by Changes"]]);class SearchGitCommand extends QuickCommand{constructor(e,t){super(e,"search","search","Commit Search",{description:"aka grep, searches for commits"});let i=0;null!=t?.state?.repo&&i++,null==t?.state?.query||t.prefillOnly||i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}isMatch(e){return super.isMatch(e)||"grep"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"grep"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.searchAndCompareView,commit:void 0,hasVirtualFolders:(0,a.fw)(s.zf.HasVirtualFolders,!1),resultsKey:void 0,resultsPromise:void 0,title:this.title},i=r.DN.get("gitCommands.search");null==e.matchAll&&(e.matchAll=i.matchAll),null==e.matchCase&&(e.matchCase=i.matchCase),null==e.matchRegex&&(e.matchRegex=i.matchRegex),null==e.showResultsInSideBar&&(e.showResultsInSideBar=i.showResultsInSideBar??void 0);let n=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(n=!1,1===t.repos.length)n=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(e.counter<2||null==e.query){const i=yield*this.pickSearchOperatorStep(e,t);if(i===Ei){n&&e.counter--,e.query=void 0;continue}e.query=i}const i={query:e.query,matchAll:e.matchAll,matchCase:e.matchCase,matchRegex:e.matchRegex},o=U(i);if(null!=t.resultsPromise&&t.resultsKey===o||(t.resultsPromise=e.repo.richSearchCommits(i),t.resultsKey=o),e.showResultsInSideBar){this.container.searchAndCompareView.search(e.repo.path,i,{label:{label:`for ${e.query}`}},t.resultsPromise,e.showResultsInSideBar instanceof ns?e.showResultsInSideBar:void 0);break}if(e.counter<3||null==t.commit){const n=e.repo.path,o=yield*mi(e,t,{ignoreFocusOut:!0,log:await t.resultsPromise,onDidLoadMore:e=>t.resultsPromise=Promise.resolve(e),placeholder:(t,i)=>null==i?`No results for ${e.query}`:`${(0,k._6)("result",i.count,{format:e=>i.hasMore?`${e}+`:void 0})} for ${e.query}`,picked:t.commit?.ref,showInSideBarCommand:new ActionQuickPickItem("$(link-external)  Show Results in Side Bar",(()=>{this.container.searchAndCompareView.search(n,i,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)})),showInSideBarButton:{button:Ke.ShowResultsInSideBar,onDidClick:()=>{this.container.searchAndCompareView.search(n,i,{label:{label:`for ${e.query}`},reveal:{select:!0,focus:!1,expand:!0}},t.resultsPromise)}}});if(o===Ei){e.counter--;continue}t.commit=o}let r;e.openPickInView?(bt(t.commit,{pin:!1,preserveFocus:!1}),r=Ei):r=yield*vs(this.container,{command:"show",state:{repo:e.repo,reference:t.commit}},this.pickedVia),e.counter--,r===Ei&&Gi(e)}return e.counter<0?Ei:void 0}*pickSearchOperatorStep(e,t){const i=[{label:os.get(""),description:`pattern or message: pattern or =: pattern ${s.NE.Dash} use quotes to search for phrases`,item:"message:"},{label:os.get("author:"),description:"author: pattern or @: pattern",item:"author:"},{label:os.get("commit:"),description:"commit: sha or #: sha",item:"commit:"},t.hasVirtualFolders?void 0:{label:os.get("file:"),description:"file: glob or ?: glob",item:"file:"},t.hasVirtualFolders?void 0:{label:os.get("change:"),description:"change: pattern or ~: pattern",item:"change:"}].filter((e=>null!=e)),n=new Ke.MatchCaseToggle(e.matchCase),o=new Ke.MatchAllToggle(e.matchAll),r=new Ke.MatchRegexToggle(e.matchRegex),a={title:ei(t.title,e,t),placeholder:'e.g. "Updates dependencies" author:eamodio',matchOnDescription:!0,matchOnDetail:!0,additionalButtons:[n,o,r],items:i,value:e.query,selectValueWhenShown:!1,onDidAccept:e=>{const t=e.selectedItems[0];if(!N.has(t.item))return!0;const i=e.value.trim();return 0===i.length||N.has(i)?e.value=t.item:e.value=`${i} ${t.item}`,a.onDidChangeValue(e),!1},onDidClickButton:(t,i)=>{i===n?(e.matchCase=!e.matchCase,n.on=e.matchCase):i===o?(e.matchAll=!e.matchAll,o.on=e.matchAll):i===r&&(e.matchRegex=!e.matchRegex,r.on=e.matchRegex)},onDidChangeValue:n=>{const o=n.value.trim();e.counter=o?3:2;const r=W({query:o,matchCase:e.matchCase,matchAll:e.matchAll,matchRegex:e.matchRegex});return n.title=ei(0===r.size||r.size>1?t.title:`Commit ${os.get(r.keys().next().value)}`,e,t),0===n.value.length?n.items=i:(n.ignoreFocusOut=!0,a.ignoreFocusOut=!0,n.items=[{label:"Search for",description:n.value,item:n.value}]),!0}},l=yield a;return Li(a,e,l)?(e.counter--,l[0].item.trim()):(e.counter--,Ei)}}function rs(e){if(!(e.repo instanceof A._j))throw new Error("Missing repository")}function ss(e){if(!(0,y.f_)(e.reference))throw new Error("Missing reference")}function as(e){if(!e.fileName)throw new Error("Missing filename")}class ShowGitCommand extends QuickCommand{constructor(e,t){super(e,"show","show","Show",{description:"shows information about a git reference"});let i=0;null!=t?.state?.repo&&i++,null!=t?.state?.reference&&i++,null!=t?.state?.fileName&&(i+=2),this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}getStepState(e){const t=super.getStepState(e);return{...t,startingStep:e?Math.min(t.startingStep??0,1):0}}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(rs(e),(e.counter<2||null==e.reference||!(0,y.f_)(e.reference)||null!=e.reference.file)&&(null==e.reference||(0,y.f_)(e.reference)||(e.reference=await this.container.git.getCommit(e.reference.repoPath,e.reference.ref)),e.counter<2||null==e.reference)){const n=yield*mi(e,t,{log:{repoPath:e.repo.path,commits:new Map,sha:void 0,range:void 0,count:0,limit:void 0,hasMore:!1},placeholder:"Enter a reference or commit SHA",picked:e.reference?.ref});if(n===Ei){i&&e.counter--;continue}e.reference=n}if(ss(e),e.counter<3){null==e.reference.files&&await e.reference.ensureFullDetails();const i=yield*ki(e,t);if(i===Ei)continue;if(i instanceof GitCommandQuickPickItem){const t=yield*i.executeSteps(this.pickedVia);e.counter--,t===Ei&&Gi(e);continue}if(i instanceof CommandQuickPickItem&&!(i instanceof CommitFilesQuickPickItem)){Gi(e),i.execute();break}}if(e.counter<4||null==e.fileName){const i=yield*Ri(e,t,{picked:e.fileName});if(i===Ei)continue;if(i instanceof CommitFilesQuickPickItem){e.counter-=2;continue}e.fileName=i.file.path}as(e);const n=yield*Di(e,t);if(n!==Ei)if(n instanceof CommitFilesQuickPickItem)e.counter-=2;else if(n instanceof GitCommandQuickPickItem)yield*n.executeSteps(this.pickedVia),e.counter--;else if(n instanceof CommandQuickPickItem){Gi(e),n.execute();break}}return e.counter<0?Ei:void 0}}const ls=new Map([["apply","Apply"],["drop","Drop"],["list","List"],["pop","Pop"],["push","Push"]]);function cs(e,t){return null==t?e:`${ls.get(t)} ${e}`}class StashGitCommand extends QuickCommand{constructor(e,t){super(e,"stash","stash","Stash",{description:"shelves (stashes) local changes to be reapplied later"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"apply":case"drop":case"pop":null!=t.state.reference&&i++;break;case"push":null!=t.state.message&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand&&"list"!==this.subcommand}get canSkipConfirm(){return"drop"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.stashesView,readonly:(0,a.fw)(s.zf.Readonly,!1)||(0,a.fw)(s.zf.Untrusted,!1)||(0,a.fw)(s.zf.HasVirtualFolders,!1),title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,t.readonly&&(e.subcommand="list"),e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===Ei)break;e.subcommand=t}if(this.subcommand=e.subcommand,t.title=cs(this.title,e.subcommand),e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)continue;e.repo=i}switch(e.subcommand){case"apply":case"pop":yield*this.applyOrPopCommandSteps(e,t);break;case"drop":yield*this.dropCommandSteps(e,t);break;case"list":yield*this.listCommandSteps(e,t);break;case"push":yield*this.pushCommandSteps(e,t);break;default:Gi(e)}i&&e.counter--}return e.counter<0?Ei:void 0}*pickSubcommandStep(e){const t={title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"apply",description:"integrates changes from the specified stash into the current branch",picked:"apply"===e.subcommand,item:"apply"},{label:"drop",description:"deletes the specified stash",picked:"drop"===e.subcommand,item:"drop"},{label:"list",description:"lists the saved stashes",picked:"list"===e.subcommand,item:"list"},{label:"pop",description:"integrates changes from the specified stash into the current branch and deletes the stash",picked:"pop"===e.subcommand,item:"pop"},{label:"push",description:"saves your local changes to a new stash and discards them from the working tree and index",picked:"push"===e.subcommand,item:"push"}],buttons:[n.QuickInputButtons.Back]},i=yield t;return Li(t,e,i)?i[0].item:Ei}async*applyOrPopCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*yi(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to apply to your working tree",picked:e.reference?.ref});if(i===Ei)break;e.reference=i}if(this.confirm(e.confirm)){const i=yield*this.applyOrPopCommandConfirmStep(e,t);if(i===Ei)continue;e.subcommand=i}Gi(e);try{if(await e.repo.stashApply("pop"===e.subcommand?`stash@{${e.reference.number}}`:e.reference.ref,{deleteAfter:"pop"===e.subcommand}),e.reference.message){const t=await this.container.git.getScmRepository(e.repo.path);null==t||t.inputBox.value||(t.inputBox.value=e.reference.message)}}catch(e){B.Yd.error(e,t.title),StashApplyError.is(e,m.WorkingChanges)?n.window.showWarningMessage("Unable to apply stash. Your working tree changes would be overwritten. Please commit or stash your changes before trying again"):(0,Be.W8)(e.message)}}}*applyOrPopCommandConfirmStep(e,t){const i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[{label:t.title,detail:"pop"===e.subcommand?`Will delete ${x.Wb.toString(e.reference)} and apply the changes to the working tree`:`Will apply the changes from ${x.Wb.toString(e.reference)} to the working tree`,item:e.subcommand},{label:cs(this.title,"pop"===e.subcommand?"apply":"pop"),detail:"pop"===e.subcommand?`Will apply the changes from ${x.Wb.toString(e.reference)} to the working tree`:`Will delete ${x.Wb.toString(e.reference)} and apply the changes to the working tree`,item:"pop"===e.subcommand?"apply":"pop"}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[Ke.ShowDetailsView,Ke.RevealInSideBar],onDidClickButton:(t,i)=>{i===Ke.ShowDetailsView?Wt(e.reference,{pin:!1,preserveFocus:!0}):i===Ke.RevealInSideBar&&Mt(e.reference,{select:!0,expand:!0})}}),n=yield i;return Li(i,e,n)?n[0].item:Ei}async*dropCommandSteps(e,t){for(;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*yi(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash to delete",picked:e.reference?.ref});if(i===Ei)break;e.reference=i}if((yield*this.dropCommandConfirmStep(e,t))!==Ei){Gi(e);try{await e.repo.stashDelete(`stash@{${e.reference.number}}`,e.reference.ref)}catch(e){return B.Yd.error(e,t.title),void(0,Be.W8)("Unable to delete stash")}}}}*dropCommandConfirmStep(e,t){const i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${x.Wb.toString(e.reference)}`}],void 0,{placeholder:`Confirm ${t.title}`,additionalButtons:[Ke.ShowDetailsView,Ke.RevealInSideBar],onDidClickButton:(t,i)=>{i===Ke.ShowDetailsView?Wt(e.reference,{pin:!1,preserveFocus:!0}):i===Ke.RevealInSideBar&&Mt(e.reference,{select:!0,expand:!0})}}),n=yield i;return Li(i,e,n)?void 0:Ei}async*listCommandSteps(e,t){for(t.title="Stashes";this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*yi(e,t,{stash:await this.container.git.getStash(e.repo.path),placeholder:(t,i)=>null==i?`No stashes found in ${e.repo.formattedName}`:"Choose a stash",picked:e.reference?.ref});if(i===Ei)break;e.reference=i}const i=yield*vs(this.container,{command:"show",state:{repo:e.repo,reference:e.reference}},this.pickedVia);e.counter--,i===Ei&&Gi(e)}}async*pushCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.message){if(null==e.message){const t=await this.container.git.getScmRepository(e.repo.path);e.message=t?.inputBox.value}const i=yield*this.pushCommandInputMessageStep(e,t);if(i===Ei)break;e.message=i}if(this.confirm(e.confirm)){const i=yield*this.pushCommandConfirmStep(e,t);if(i===Ei)continue;e.flags=i}Gi(e);try{await e.repo.stashSave(e.message,e.uris,{includeUntracked:e.flags.includes("--include-untracked"),keepIndex:e.flags.includes("--keep-index")})}catch(e){B.Yd.error(e,t.title);const i=e?.message??e?.toString()??"";return i.includes("newer version of Git")?void n.window.showErrorMessage(`Unable to stash changes. ${i}`):void(0,Be.W8)("Unable to stash changes")}}}async*pushCommandInputMessageStep(e,t){const i=Bi({title:ei(t.title,e,t,null!=e.uris?`${(0,k.vk)(s.NE.Dot,2,2)}${1===e.uris.length?(0,Zt.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`:void 0),placeholder:"Please provide a stash message",value:e.message,prompt:"Enter stash message"}),n=yield i;return Mi(0,e,n)&&await Ui(i,e,n)?n:Ei}*pushCommandConfirmStep(e,t){const i=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),null==e.uris||0===e.uris.length?[Qe(e.flags,[],{label:t.title,detail:"Will stash uncommitted changes"}),Qe(e.flags,["--include-untracked"],{label:`${t.title} & Include Untracked`,description:"--include-untracked",detail:"Will stash uncommitted changes, including untracked files"}),Qe(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,description:"--keep-index",detail:"Will stash uncommitted changes, but will keep staged files intact"})]:[Qe(e.flags,[],{label:t.title,detail:`Will stash changes from ${1===e.uris.length?(0,Zt.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}`}),Qe(e.flags,["--keep-index"],{label:`${t.title} & Keep Staged`,detail:`Will stash changes from ${1===e.uris.length?(0,Zt.d)(e.uris[0],{fileOnly:!0}):`${e.uris.length} files`}, but will keep staged files intact`})],void 0,{placeholder:`Confirm ${t.title}`}),n=yield i;return Li(i,e,n)?n[0].item:Ei}}class StatusGitCommand extends QuickCommand{constructor(e,t){super(e,"status","status","Status",{description:"shows status information about a repository"});let i=0;null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:!1,...t?.state}}get canConfirm(){return!1}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,status:void 0,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,null==e.repo&&e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)break;e.repo=i}if(t.status=await e.repo.getStatus(),null==t.status)return;t.title=`${this.title}${(0,k.vk)(s.NE.Dot,2,2)}${x.Wb.toString(x.Wb.create(t.status.branch,e.repo.path,{refType:"branch",name:t.status.branch,remote:!1,upstream:null!=t.status.upstream?{name:t.status.upstream,missing:!1}:void 0}),{icon:!1})}`;const n=yield*Ti(e,t);if(n!==Ei){if(n instanceof GitCommandQuickPickItem){const t=yield*n.executeSteps(this.pickedVia);e.counter--,t===Ei&&Gi(e)}else if(n instanceof CommandQuickPickItem){Gi(e),n.execute();break}}else i&&e.counter--}}}class SwitchGitCommand extends QuickCommand{constructor(e,t){super(e,"switch","switch","Switch",{description:"aka checkout, switches the current branch to a specified branch"});let i=0;null==t?.state?.repos||Array.isArray(t.state.repos)&&0===t.state.repos.length||i++,null!=t?.state?.reference&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}async execute(e){await n.window.withProgress({location:n.ProgressLocation.Notification,title:`Switching ${1===e.repos.length?e.repos[0].formattedName:`${e.repos.length} repositories`} to ${e.reference.name}`},(()=>Promise.all(e.repos.map((t=>t.switch(e.reference.ref,{createBranch:e.createBranch,progress:!1})))))),null!=e.fastForwardTo&&e.repos[0].merge("--ff-only",e.fastForwardTo.ref)}isMatch(e){return super.isMatch(e)||"checkout"===e}isFuzzyMatch(e){return super.isFuzzyMatch(e)||"checkout"===e}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.commitsView,showTags:!1,switchToLocalFrom:void 0,title:this.title};null==e.repos||Array.isArray(e.repos)||(e.repos=[e.repos]);let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.repos||0===e.repos.length||(0,Ht.GI)(e.repos))if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repos=[t.repos[0]];else{const i=yield*vi(e,t,{skipIfPossible:e.counter>=1});if(i===Ei)break;e.repos=i}if(e.counter<2||null==e.reference){const n=yield*pi(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to switch to`});if(n===Ei){i&&e.counter--;continue}e.reference=n}if(x.Wb.isBranch(e.reference)&&e.reference.remote){t.title=`Create Branch and ${this.title}`;const{values:i}=await this.container.git.getBranches(e.reference.repoPath,{filter:t=>t.upstream?.name===e.reference.name,sort:{orderBy:Ye.Vz.DateDesc}});if(0===i.length){const i=yield*si(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` based on ${x.Wb.toString(e.reference,{icon:!1})}`,value:e.createBranch??x.Wb.getNameWithoutRemote(e.reference)});if(i===Ei)continue;e.createBranch=i}else t.title=`${this.title} to Local Branch`,t.switchToLocalFrom=e.reference,e.reference=i[0],e.createBranch=void 0}else e.createBranch=void 0;if(this.confirm(e.confirm||null!=t.switchToLocalFrom)){const i=yield*this.confirmStep(e,t);if(i===Ei)continue;"switch+fast-forward"===i&&(e.fastForwardTo=t.switchToLocalFrom)}Gi(e),this.execute(e)}return e.counter<0?Ei:void 0}*confirmStep(e,t){let i;i=null!=t.switchToLocalFrom&&1===e.repos.length?[{label:`${t.title} and Fast-Forward`,description:"",detail:`Will switch to and fast-forward local ${x.Wb.toString(e.reference)} in $(repo) ${e.repos[0].formattedName}`,item:"switch+fast-forward"}]:[];const n=this.createConfirmStep(ei(`Confirm ${t.title}`,e,t),[{label:t.title,description:e.createBranch?"-b":"",detail:`Will ${e.createBranch?`create and switch to a new branch named ${e.createBranch} from ${x.Wb.toString(e.reference)}`:`switch to ${null!=t.switchToLocalFrom?"local ":""}${x.Wb.toString(e.reference)}`} in ${1===e.repos.length?`$(repo) ${e.repos[0].formattedName}`:`${e.repos.length} repositories`}`,item:"switch"},...i],void 0,{placeholder:`Confirm ${t.title}`}),o=yield n;return Li(n,e,o)?o[0].item:Ei}}const hs=new Map([["create","Create"],["delete","Delete"]]);function us(e,t){return null==t?e:`${hs.get(t)} ${e}`}class TagGitCommand extends QuickCommand{constructor(e,t){super(e,"tag","tag","Tag",{description:"create, or delete tags"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"create":null!=t.state.reference&&i++,null!=t.state.name&&i++,null!=t.state.message&&i++;break;case"delete":null==t.state.references||Array.isArray(t.state.references)&&0===t.state.references.length||i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return"delete"!==this.subcommand&&super.canSkipConfirm}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.tagsView,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===Ei)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)continue;e.repo=i}switch(t.title=us("delete"===e.subcommand?"Tags":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.name=void 0;break;case"delete":yield*this.deleteCommandSteps(e,t);break;default:Gi(e)}i&&e.counter--}return e.counter<0?Ei:void 0}*pickSubcommandStep(e){const t={title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"create",description:"creates a new tag",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified tags",picked:"delete"===e.subcommand,item:"delete"}],buttons:[n.QuickInputButtons.Back]},i=yield t;return Li(t,e,i)?i[0].item:Ei}async*createCommandSteps(e,t){for(null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*di(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new tag from`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" from",value:x.Wb.isRevision(e.reference)?e.reference.ref:void 0});if(i===Ei)break;e.reference=i}if(e.counter<4||null==e.name){const i=yield*ci(e,t,{placeholder:"Please provide a name for the new tag",titleContext:` at ${x.Wb.toString(e.reference,{capitalize:!0,icon:!1})}`,value:e.name??x.Wb.getNameWithoutRemote(e.reference)});if(i===Ei)continue;e.name=i}if(e.counter<5||null==e.message){const i=yield*this.createCommandInputMessageStep(e,t);if(i===Ei)continue;e.message=i}if(0===e.message.length||e.flags.includes("-m")||e.flags.push("-m"),this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===Ei)continue;e.flags=i}Gi(e),e.repo.tag(...e.flags,...0!==e.message.length?[`"${e.message}"`]:[],e.name,e.reference.ref)}}async*createCommandInputMessageStep(e,t){const i=Bi({title:ei(`${t.title} at ${x.Wb.toString(e.reference,{capitalize:!0,icon:!1})}`,e,t),placeholder:"Please provide an optional message to annotate the tag",value:e.message,prompt:"Enter optional message"}),n=yield i;return Mi(0,e,n)&&await Ui(i,e,n)?n:Ei}*createCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,0!==e.message.length?["-m"]:[],{label:t.title,description:0!==e.message.length?"-m":"",detail:`Will create a new tag named ${e.name} at ${x.Wb.toString(e.reference)}`}),Qe(e.flags,0!==e.message.length?["--force","-m"]:["--force"],{label:`Force ${t.title}`,description:"--force"+(0!==e.message.length?" -m":""),detail:`Will forcibly create a new tag named ${e.name} at ${x.Wb.toString(e.reference)}`})],t),n=yield i;return Li(i,e,n)?n[0].item:Ei}async*deleteCommandSteps(e,t){for(;this.canStepsContinue(e);){if(null==e.references||Array.isArray(e.references)||(e.references=[e.references]),e.counter<3||null==e.references||0===e.references.length){t.title=us("Tags",e.subcommand);const i=yield*bi(e,t,{picked:e.references?.map((e=>e.ref)),placeholder:"Choose tags to delete"});if(i===Ei)break;e.references=i}t.title=us((0,k._6)("Tag",e.references.length,{only:!0}),e.subcommand);(yield*this.deleteCommandConfirmStep(e,t))!==Ei&&(Gi(e),e.repo.tagDelete(e.references))}}*deleteCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[{label:t.title,detail:`Will delete ${x.Wb.toString(e.references)}`}],t);return Li(i,e,yield i)?void 0:Ei}}var ds=Object.defineProperty,ps=Object.getOwnPropertyDescriptor,ms=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ps(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ds(t,i,r),r};const gs=class{constructor(e,t,i,n,o,r,s,a){this.main=e,this.type=t,this.repoPath=i,this.uri=n,this.locked=o,this.prunable=r,this.sha=s,this.branch=a}static is(e){return e instanceof gs}get opened(){return this.workspaceFolder?.uri.toString()===this.uri.toString()}get name(){switch(this.type){case"bare":return"(bare)";case"detached":return x.pk.shorten(this.sha);default:return this.branch||this.friendlyPath}}get friendlyPath(){return gs.getFriendlyPath(this.uri)}get workspaceFolder(){return n.workspace.getWorkspaceFolder(this.uri)}getBranch(){return"branch"!==this.type||null==this.branch?Promise.resolve(void 0):(null==this._branch&&(this._branch=lf.instance.git.getBranches(this.repoPath,{filter:e=>e.name===this.branch}).then((e=>e.values[0]))),this._branch)}getStatus(e){return"bare"===this.type?Promise.resolve(void 0):((null==this._status||e?.force)&&(this._status=lf.instance.git.getStatusForRepo(this.uri.fsPath)),this._status)}static getFriendlyPath(e){const t=n.workspace.getWorkspaceFolder(e);if(null==t)return(0,j.AH)(e.fsPath);const i=(0,j.AH)((0,j.Gf)(t.uri.fsPath,e.fsPath));return 0===i.length?t.name:i}};let fs=gs;ms([(0,S.H)()],fs.prototype,"friendlyPath",1),ms([(0,S.H)()],fs.prototype,"workspaceFolder",1);const ws=new Map([["create","Create"],["delete","Delete"],["open","Open"]]);function _s(e,t){return null==t?e:`${ws.get(t)} ${e}`}class WorktreeGitCommand extends QuickCommand{constructor(e,t){super(e,"worktree","worktree","Worktree",{description:"open, create, or delete worktrees"});let i=0;if(null!=t?.state?.subcommand)switch(i++,t.state.subcommand){case"create":null!=t.state.uri&&i++,null!=t.state.reference&&i++;break;case"delete":null==t.state.uris||Array.isArray(t.state.uris)&&0===t.state.uris.length||i++;break;case"open":null!=t.state.uri&&i++}null!=t?.state?.repo&&i++,this.initialState={counter:i,confirm:t?.confirm,...t?.state}}get canConfirm(){return null!=this.subcommand}get canSkipConfirm(){return this.canSkipConfirmOverride??!1}get skipConfirmKey(){return`${this.key}${null==this.subcommand?"":`-${this.subcommand}`}:${this.pickedVia}`}async*steps(e){const t={repos:this.container.git.openRepositories,associatedView:this.container.worktreesView,showTags:!1,title:this.title};let i=!1;for(;this.canStepsContinue(e);){if(t.title=this.title,e.counter<1||null==e.subcommand){this.subcommand=void 0;const t=yield*this.pickSubcommandStep(e);if(t===Ei)break;e.subcommand=t}if(this.subcommand=e.subcommand,e.counter<2||null==e.repo||"string"==typeof e.repo)if(i=!1,1===t.repos.length)i=!0,e.counter++,e.repo=t.repos[0];else{const i=yield*_i(e,t);if(i===Ei)continue;e.repo=i}e.repo=await e.repo.getMainRepository();if((yield*xi(e,t,p.Worktrees))===Ei)break;switch(t.title=_s("delete"===e.subcommand?"Worktrees":this.title,e.subcommand),e.subcommand){case"create":yield*this.createCommandSteps(e,t),e.uri=void 0;break;case"delete":null==e.uris||Array.isArray(e.uris)||(e.uris=[e.uris]),yield*this.deleteCommandSteps(e,t);break;case"open":yield*this.openCommandSteps(e,t);break;default:Gi(e)}i&&e.counter--}return e.counter<0?Ei:void 0}*pickSubcommandStep(e){const t={title:this.title,placeholder:`Choose a ${this.label} command`,items:[{label:"open",description:"opens the specified worktree",picked:"open"===e.subcommand,item:"open"},{label:"create",description:"creates a new worktree",picked:"create"===e.subcommand,item:"create"},{label:"delete",description:"deletes the specified worktrees",picked:"delete"===e.subcommand,item:"delete"}],buttons:[n.QuickInputButtons.Back]},i=yield t;return Li(t,e,i)?i[0].item:Ei}async*createCommandSteps(e,t){for(null==t.defaultUri&&(t.defaultUri=await e.repo.getWorktreesDefaultUri()),null==e.flags&&(e.flags=[]),t.pickedUri=void 0,e.confirm=!0,this.canSkipConfirmOverride=void 0;this.canStepsContinue(e);){if(e.counter<3||null==e.reference){const i=yield*di(e,t,{placeholder:e=>`Choose a branch${e.showTags?" or tag":""} to create the new worktree for`,picked:e.reference?.ref??(await e.repo.getBranch())?.ref,titleContext:" for",value:x.Wb.isRevision(e.reference)?e.reference.ref:void 0});if(i===Ei)break;e.reference=i}if(e.counter<4||null==e.uri)if(null==e.reference||r.DN.get("worktrees.promptForLocation",e.repo.folder)||null==t.defaultUri){const i=yield*this.createCommandChoosePathStep(e,t,{titleContext:` for ${x.Wb.toString(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,defaultUri:t.defaultUri});if(i===Ei)continue;e.uri=i,t.pickedUri=e.uri}else e.uri=t.defaultUri;if(this.confirm(e.confirm)){const i=yield*this.createCommandConfirmStep(e,t);if(i===Ei)continue;[e.uri,e.flags]=i}e.confirm=!0,this.canSkipConfirmOverride=void 0;if("branch"===e.reference?.refType&&e.reference?.remote&&!e.flags.includes("-b")&&(e.flags.push("-b"),e.createBranch=x.Wb.getNameWithoutRemote(e.reference)),e.flags.includes("-b")&&null==e.createBranch){const i=yield*si(e,t,{placeholder:"Please provide a name for the new branch",titleContext:` from ${x.Wb.toString(e.reference,{capitalize:!0,icon:!1,label:"branch"!==e.reference.refType})}`,value:e.createBranch??x.Wb.getNameWithoutRemote(e.reference)});if(i===Ei){e.flags=[];continue}e.createBranch=i}const i=e.flags.includes("--direct")?e.uri:n.Uri.joinPath(e.uri,...(e.createBranch??e.reference.name).replace(/\\/g,"/").split("/"));let o;try{o=await e.repo.createWorktree(i,{commitish:e.reference?.name,createBranch:e.flags.includes("-b")?e.createBranch:void 0,detach:e.flags.includes("--detach"),force:e.flags.includes("--force")}),!1!==e.reveal&&jt(void 0,{select:!0,focus:!0})}catch(t){if(WorktreeCreateError.is(t,g.AlreadyCheckedOut)&&!e.flags.includes("--force")){const t={title:"Create New Branch"},i={title:"Create Anyway"},o={title:"Cancel",isCloseAffordance:!0},r=await n.window.showWarningMessage(`Unable to create the new worktree because ${x.Wb.toString(e.reference,{icon:!1,quoted:!0})} is already checked out.\n\nWould you like to create a new branch for this worktree or forcibly create it anyway?`,{modal:!0},t,i,o);if(r===t){e.flags.push("-b"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}if(r===i){e.flags.push("--force"),this.canSkipConfirmOverride=!0,e.confirm=!1;continue}}else WorktreeCreateError.is(t,g.AlreadyExists)?n.window.showErrorMessage(`Unable to create a new worktree in '${fs.getFriendlyPath(i)}' because the folder already exists and is not empty.`,"OK"):(0,Be.W8)(`Unable to create a new worktree in '${fs.getFriendlyPath(i)}.`)}if(Gi(e),null==o)break;const s=r.DN.get("worktrees.openAfterCreate");if("never"===s)break;if("prompt"===s){yield*this.openCommandSteps({subcommand:"open",repo:e.repo,uri:o.uri,counter:3,confirm:!0},t);break}queueMicrotask((()=>{switch(s){case"always":(0,J.ic)(o.uri,{location:J.Tc.CurrentWindow});break;case"alwaysNewWindow":(0,J.ic)(o.uri,{location:J.Tc.NewWindow});break;case"onlyWhenEmpty":(0,J.ic)(o.uri,{location:n.workspace.workspaceFolders?.length?J.Tc.CurrentWindow:J.Tc.NewWindow})}}))}}async*createCommandChoosePathStep(e,t,i){const o={show:async o=>{const r=null!=i?.defaultUri,s=await n.window.showInformationMessage(`Choose a location in which to create the worktree${i.titleContext}.`,{modal:!0},{title:"Choose Location"},...r?[{title:"Use Default Location"}]:[]);if(null==s)return Xe.Back;if("Use Default Location"===s.title)return i.defaultUri;const a=await n.window.showOpenDialog({canSelectFiles:!1,canSelectFolders:!0,canSelectMany:!1,defaultUri:t.pickedUri??e.uri??t.defaultUri,openLabel:"Select Worktree Location",title:`${ei(`Choose a Worktree Location${i.titleContext}`,e,t)}`});return null==a||0===a.length?Xe.Back:a[0]}},r=yield o;return Mi(0,e,r)&&await Ui(o,e,r)?r:Ei}*createCommandConfirmStep(e,t){const i=t.pickedUri??e.uri,o=(0,k.AO)(fs.getFriendlyPath(i),60);let r,s=!0;const a=e.repo.uri,l=`${(0,j.EZ)(a.path)}.worktrees`;a.toString()!==i.toString()?r=(0,j.$d)(i,a)?n.Uri.joinPath(a,"..",l):(0,j.EZ)(i.path)===l?i:n.Uri.joinPath(i,l):(r=n.Uri.joinPath(a,"..",l),s=!1);const c=null!=e.reference?n.Uri.joinPath(r,...x.Wb.getNameWithoutRemote(e.reference).replace(/\\/g,"/").split("/")):r,h=(0,k.AO)(fs.getFriendlyPath(c),65),u=(0,k.AO)(fs.getFriendlyPath(n.Uri.joinPath(r,"<new-branch-name>")),60),d="branch"===e.reference?.refType&&e.reference?.remote,p=Wi(ei(`Confirm ${t.title} • ${x.Wb.toString(e.reference,{icon:!1,label:!1})}`,e,t),[Qe(e.flags,[],{label:d?"Create Local Branch and Worktree":t.title,description:" in subfolder",detail:`Will create worktree in $(folder) ${h}`},r),Qe(e.flags,["-b"],{label:d?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" in subfolder",detail:`Will create worktree in $(folder) ${u}`},r),...s?[je(),Qe(e.flags,["--direct"],{label:d?"Create Local Branch and Worktree":t.title,description:" directly in folder",detail:`Will create worktree directly in $(folder) ${o}`},i),Qe(e.flags,["-b","--direct"],{label:d?"Create New Local Branch and Worktree":"Create New Branch and Worktree",description:" directly in folder",detail:`Will create worktree directly in $(folder) ${o}`},i)]:[]],t),m=yield p;return Li(p,e,m)?[m[0].context,m[0].item]:Ei}async*deleteCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uris||0===e.uris.length){t.title=_s("Worktrees",e.subcommand);const i=yield*Si(e,t,{filter:e=>e.main||!e.opened,includeStatus:!0,picked:e.uris?.map((e=>e.toString())),placeholder:"Choose worktrees to delete"});if(i===Ei)break;e.uris=i.map((e=>e.uri))}t.title=_s((0,k._6)("Worktree",e.uris.length,{only:!0}),e.subcommand);const i=yield*this.deleteCommandConfirmStep(e,t);if(i!==Ei){e.flags=i,Gi(e);for(const i of e.uris){let o=!1;do{o=!1;const r=e.flags.includes("--force");try{if(r){const e=t.worktrees.find((e=>e.uri.toString()===i.toString()));if((await(e?.getStatus()))?.hasChanges){const e={title:"Force Delete"},t={title:"Cancel",isCloseAffordance:!0};if(await n.window.showWarningMessage(`The worktree in '${i.fsPath}' has uncommitted changes.\n\nDeleting it will cause those changes to be FOREVER LOST.\nThis is IRREVERSIBLE!\n\nAre you sure you still want to delete it?`,{modal:!0},e,t)!==e)return}}await e.repo.deleteWorktree(i,{force:r})}catch(t){if(WorktreeDeleteError.is(t)){if(t.reason===f.MainWorkingTree)n.window.showErrorMessage("Unable to delete the main worktree");else if(!r){const r={title:"Force Delete"},s={title:"Cancel",isCloseAffordance:!0};await n.window.showErrorMessage(t.reason===f.HasChanges?`Unable to delete worktree because there are UNCOMMITTED changes in '${i.fsPath}'.\n\nForcibly deleting it will cause those changes to be FOREVER LOST.\nThis is IRREVERSIBLE!\n\nWould you like to forcibly delete it?`:`Unable to delete worktree in '${i.fsPath}'.\n\nWould you like to try to forcibly delete it?`,{modal:!0},r,s)===r&&(e.flags.push("--force"),o=!0)}}else(0,Be.W8)(`Unable to delete worktree in '${i.fsPath}.`)}}while(o)}}}}*deleteCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:t.title,detail:`Will delete ${(0,k._6)("worktree",e.uris.length,{only:1===e.uris.length})}${1===e.uris.length?` in $(folder) ${fs.getFriendlyPath(e.uris[0])}`:""}`}),Qe(e.flags,["--force"],{label:`Force ${t.title}`,description:"including ANY UNCOMMITTED changes",detail:`Will forcibly delete ${(0,k._6)("worktree",e.uris.length,{only:1===e.uris.length})} ${1===e.uris.length?` in $(folder) ${fs.getFriendlyPath(e.uris[0])}`:""}`})],t),n=yield i;return Li(i,e,n)?n[0].item:Ei}async*openCommandSteps(e,t){for(t.worktrees=await e.repo.getWorktrees(),null==e.flags&&(e.flags=[]);this.canStepsContinue(e);){if(e.counter<3||null==e.uri){t.title=_s("Worktree",e.subcommand);const i=yield*Ci(e,t,{includeStatus:!0,picked:e.uri?.toString(),placeholder:"Choose worktree to open"});if(i===Ei)break;e.uri=i.uri}t.title=_s("Worktree",e.subcommand);const i=yield*this.openCommandConfirmStep(e,t);if(i===Ei)continue;e.flags=i,Gi(e);const n=t.worktrees.find((t=>t.uri.toString()===e.uri.toString()));if(null==n)break;e.flags.includes("--reveal-explorer")?Yt(n):(0,J.ic)(n.uri,{location:zt(e.flags)})}}*openCommandConfirmStep(e,t){const i=Wi(ei(`Confirm ${t.title}`,e,t),[Qe(e.flags,[],{label:t.title,detail:`Will open in the current window, the worktree in $(folder) ${fs.getFriendlyPath(e.uri)}`}),Qe(e.flags,["--new-window"],{label:`${t.title} in a New Window`,detail:`Will open in a new window, the worktree in $(folder) ${fs.getFriendlyPath(e.uri)}`}),Qe(e.flags,["--add-to-workspace"],{label:"Add Worktree to Workspace",detail:`Will add into the current workspace, the worktree in $(folder) ${fs.getFriendlyPath(e.uri)}`}),Qe(e.flags,["--reveal-explorer"],{label:"Reveal in File Explorer",detail:`Will open in the File Explorer, the worktree in $(folder) ${fs.getFriendlyPath(e.uri)}`})],t),n=yield i;return Li(i,e,n)?n[0].item:Ei}}function vs(e,t,i){const n=new PickCommandStep(e,t),o=n.find(t.command);return null==o?function*(){}():(n.setCommand(o,i),o.executeSteps())}class PickCommandStep{constructor(e,t){this.container=e,this.buttons=[],this.ignoreFocusOut=!1,this.matchOnDescription=!0,this.placeholder="Choose a git command",this.title="GitLens";const i=(0,a.fw)(s.zf.HasVirtualFolders,!1),n=i||(0,a.fw)(s.zf.Readonly,!1)||(0,a.fw)(s.zf.Untrusted,!1);if(this.items=[n?void 0:new BranchGitCommand(e,"branch"===t?.command?t:void 0),n?void 0:new CherryPickGitCommand(e,"cherry-pick"===t?.command?t:void 0),i?void 0:new CoAuthorsGitCommand(e,"co-authors"===t?.command?t:void 0),n?void 0:new FetchGitCommand(e,"fetch"===t?.command?t:void 0),new LogGitCommand(e,"log"===t?.command?t:void 0),n?void 0:new MergeGitCommand(e,"merge"===t?.command?t:void 0),n?void 0:new PullGitCommand(e,"pull"===t?.command?t:void 0),n?void 0:new PushGitCommand(e,"push"===t?.command?t:void 0),n?void 0:new RebaseGitCommand(e,"rebase"===t?.command?t:void 0),n?void 0:new RemoteGitCommand(e,"remote"===t?.command?t:void 0),n?void 0:new ResetGitCommand(e,"reset"===t?.command?t:void 0),n?void 0:new RevertGitCommand(e,"revert"===t?.command?t:void 0),new SearchGitCommand(e,"search"===t?.command||"grep"===t?.command?t:void 0),new ShowGitCommand(e,"show"===t?.command?t:void 0),i?void 0:new StashGitCommand(e,"stash"===t?.command?t:void 0),i?void 0:new StatusGitCommand(e,"status"===t?.command?t:void 0),n?void 0:new SwitchGitCommand(e,"switch"===t?.command||"checkout"===t?.command?t:void 0),n?void 0:new TagGitCommand(e,"tag"===t?.command?t:void 0),i?void 0:new WorktreeGitCommand(e,"worktree"===t?.command?t:void 0)].filter((e=>null!=e)),r.DN.get("gitCommands.sortBy")===Ye.zL.Usage){const e=this.container.storage.getWorkspace("gitComandPalette:usage");null!=e&&this.items.sort(((t,i)=>(e[i.key]??0)-(e[t.key]??0)))}this.hiddenItems=[]}get command(){return this._command}find(e,t=!1){if(t){const t=e.toLowerCase();return this.items.find((e=>e.isFuzzyMatch(t)))??this.hiddenItems.find((e=>e.isFuzzyMatch(t)))}return this.items.find((t=>t.isMatch(e)))??this.hiddenItems.find((t=>t.isMatch(e)))}setCommand(e,t){null!=this._command&&(this._command.picked=!1),null!=e&&(e.picked=!0,e.pickedVia=t),this._command=e,null!=e&&this.updateCommandUsage(e.key,Date.now())}async updateCommandUsage(e,t){let i=this.container.storage.getWorkspace("gitComandPalette:usage");void 0===i&&(i=Object.create(null)),i[e]=t,await this.container.storage.storeWorkspace("gitComandPalette:usage",i)}}class GitCommandQuickPickItem extends CommandQuickPickItem{constructor(e,t){super(e,s.Gh.GitCommands,[t],{suppressKeyPress:!0})}executeSteps(e){return vs(lf.instance,this.args[0],e)}}async function ys(e,t,i){let n="";if(!0===i?.type?n=!0===i.current&&e.current?"current branch":"branch":"remote"===i?.type?e.remote&&(n="remote branch"):!0===i?.current&&e.current&&(n="current branch"),i?.status&&!e.remote&&null!=e.upstream){let t=s.NE.Dash;if(e.upstream.missing)t=s.NE.Warning;else{const i=await e.getRemote();if(null!=i){let e,n;for(const{type:t}of i.urls)if(t===O.XG.Fetch){if(e=!0,n)break}else if(t===O.XG.Push&&(n=!0,e))break;e&&n?t=s.NE.ArrowsRightLeft:n?t=s.NE.ArrowRight:e&&(t=s.NE.ArrowLeft)}}const i=`${e.getTrackingStatus({suffix:`${s.NE.Space} `})}${t}${s.NE.Space} ${e.upstream.name}`;n=`${n?`${n}${s.NE.Space.repeat(2)}${i}`:i}`}i?.ref&&(e.sha&&(n=n?`${n} $(git-commit)${s.NE.Space}${x.pk.shorten(e.sha)}`:`$(git-commit)${s.NE.Space}${x.pk.shorten(e.sha)}`),void 0!==e.date&&(n=n?`${n}${(0,k.vk)(s.NE.Dot,2,2)}${e.formattedDate}`:e.formattedDate));const o=i?.checked||null==i?.checked&&"checkmark"===i?.current&&e.current;return{label:`$(git-branch)${s.NE.Space}${e.starred?`$(star-full)${s.NE.Space}`:""}${e.name}${o?(0,k.vk)("$(check)",2):""}`,description:n,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t??e.current,item:e,current:e.current,ref:e.name,remote:e.remote}}function bs(e,t,i){if((0,y.G2)(e)){const n=null==e.number?"":`${e.number}: `;if(i?.compact){return{label:`${i.icon?`$(archive)${s.NE.Space}`:""}${n}${e.summary}`,description:`${e.formattedDate}${(0,k.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}}return{label:`${i?.icon?`$(archive)${s.NE.Space}`:""}${n}${e.summary}`,description:"",detail:`${s.NE.Space.repeat(2)}${e.formattedDate}${(0,k.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}if(i?.compact){return{label:`${i.icon?`$(git-commit)${s.NE.Space}`:""}${e.summary}`,description:`${e.author.name}, ${e.formattedDate}${(0,k.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,k.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i.alwaysShow,buttons:i.buttons,picked:t,item:e}}return{label:`${i?.icon?`$(git-commit)${s.NE.Space}`:""}${e.summary}`,description:"",detail:`${s.NE.Space.repeat(2)}${e.author.name}, ${e.formattedDate}${(0,k.vk)("$(git-commit)",2,1)}${e.shortSha}${(0,k.vk)(s.NE.Dot,2,2)}${e.formatStats({compact:!0})}`,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}function Cs(e,t,i,n){if(""===e)return{label:(n?.icon?`$(file-directory)${s.NE.Space}`:"")+"Working Tree",description:"",alwaysShow:n?.alwaysShow,buttons:n?.buttons,picked:i,item:x.Wb.create(e,t,{refType:"revision",name:"Working Tree"}),current:!1,ref:e,remote:!1};if("HEAD"===e)return{label:(n?.icon?`$(git-branch)${s.NE.Space}`:"")+"HEAD",description:"",alwaysShow:n?.alwaysShow,buttons:n?.buttons,picked:i,item:x.Wb.create(e,t,{refType:"revision",name:"HEAD"}),current:!1,ref:e,remote:!1};let o;if("string"==typeof e?o=x.Wb.create(e,t):(o=e,e=o.ref),x.pk.isRange(e))return{label:`Range ${o.name}`,description:"",alwaysShow:n?.alwaysShow,buttons:n?.buttons,picked:i,item:o,current:!1,ref:e,remote:!1};return{label:`Commit ${o.name}`,description:n?.ref?`$(git-commit)${s.NE.Space}${e}`:"",alwaysShow:n?.alwaysShow,buttons:n?.buttons,picked:i,item:o,current:!1,ref:e,remote:!1}}function Ss(e,t,i){let n="";if(i?.type&&(n="remote"),i?.upstream){const t=(0,O.jv)(e);n=n?`${n}${(0,k.vk)(s.NE.Dot,2,2)}${t}`:t}return{label:`$(cloud)${s.NE.Space}${e.name}${i?.checked?(0,k.vk)("$(check)",2):""}`,description:n,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e}}async function ks(e,t,i){let n;(i?.branch||i?.status)&&(n=await e.getStatus());let o="";if(i?.branch&&null!=n&&(o=n.branch),i?.status&&null!=n){let e="";0!==n.files.length&&(e=n.getFormattedDiffStatus({compact:!0,prefix:(0,k.vk)(s.NE.Dot,2,2)}));const t=`${n.getUpstreamStatus({prefix:o?`${s.NE.Space} `:""})}${e}`;t&&(o=`${o?`${o}${t}`:t}`)}if(i?.fetched){const t=await e.getLastFetched();if(0!==t){const e=`Last fetched ${(0,C.Zh)(new Date(t))}`;o=`${o?`${o}${(0,k.vk)(s.NE.Dot,2,2)}${e}`:e}`}}return{label:e.formattedName,description:o,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,repoPath:e.path}}function Ps(e,t,i){let n="";if(i?.type&&(n="tag"),i?.ref&&(n=`${n}${(0,k.vk)("$(git-commit)",n?2:0,1)}${x.pk.shorten(e.sha)}`,n=`${n?`${n}${(0,k.vk)(s.NE.Dot,2,2)}`:""}${e.formattedDate}`),i?.message){const t=h(e.message);n=n?`${n}${(0,k.vk)(s.NE.Dot,2,2)}${t}`:t}return{label:`$(tag)${s.NE.Space}${e.name}${i?.checked?(0,k.vk)("$(check)",2):""}`,description:n,alwaysShow:i?.alwaysShow,buttons:i?.buttons,picked:t,item:e,current:!1,ref:e.name,remote:!1}}var Rs,Ds;(Ds=Rs||(Rs={})).getBestRepositoryOrShow=async function(e,t,i){const n=lf.instance.git.getBestRepository(e,t);if(null!=n)return n;const o=await Ds.show(i);if(!(o instanceof CommandQuickPickItem))return o?.item;await o.execute()},Ds.getRepositoryOrShow=async function(e,t){let i;if(i=null==t?lf.instance.git.highlander:await lf.instance.git.getOrOpenRepository(t),null!=i)return i;const n=await Ds.show(e);if(!(n instanceof CommandQuickPickItem))return n?.item;await n.execute()},Ds.show=async function(e,t="Choose a repository",i){const o=await Promise.all([...(0,q.UI)(i??lf.instance.git.openRepositories,(e=>ks(e,void 0,{branch:!0,status:!0})))]),r=n.window.createQuickPick();r.ignoreFocusOut=(0,J.hE)();const s=[];try{const i=await new Promise((i=>{s.push(r.onDidHide((()=>i(void 0))),r.onDidAccept((()=>{0!==r.activeItems.length&&i(r.activeItems[0])}))),r.title=e,r.placeholder=t,r.matchOnDescription=!0,r.matchOnDetail=!0,r.items=o,r.show()}));if(null==i)return;return i}finally{r.dispose(),s.forEach((e=>{e.dispose()}))}};var $s=Object.defineProperty,Ts=Object.getOwnPropertyDescriptor;let Fs=class extends Command{constructor(e){super(s.Gh.CloseUnchangedFiles),this.container=e}async execute(e){e={...e};try{if(null==e.uris){const t=await Rs.getRepositoryOrShow("Close All Unchanged Files");if(null==t)return;const i=await this.container.git.getStatusForRepo(t.uri);if(null==i)return void n.window.showWarningMessage("Unable to close unchanged files");e.uris=i.files.map((e=>e.uri))}const t=0===e.uris.length;for(const i of n.window.tabGroups.all)for(const o of i.tabs)if(o.input instanceof n.TabInputText||o.input instanceof n.TabInputCustom||o.input instanceof n.TabInputNotebook){const i=o.input.uri;!t&&e.uris.some((e=>qe.n.equals(e,i)))||n.window.tabGroups.close(o,!0)}else if(o.input instanceof n.TabInputTextDiff||o.input instanceof n.TabInputNotebookDiff){const i=o.input.modified;!t&&e.uris.some((e=>qe.n.equals(e,i)))||n.window.tabGroups.close(o,!0)}}catch(e){B.Yd.error(e,"CloseUnchangedFilesCommand"),(0,Be.W8)("Unable to close all unchanged files")}}};Fs=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ts(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&$s(t,i,r),r})([(0,ke.WD)()],Fs);var xs=Object.defineProperty,Os=Object.getOwnPropertyDescriptor;let As=class extends ActiveEditorCommand{constructor(e){super([s.Gh.CompareWith,s.Gh.CompareHeadWith,s.Gh.CompareWorkingWith,s.Gh.Deprecated_DiffHeadWith,s.Gh.Deprecated_DiffWorkingWith]),this.container=e}preExecute(e,t){switch(e.command){case s.Gh.CompareWith:t={...t};break;case s.Gh.CompareHeadWith:case s.Gh.Deprecated_DiffHeadWith:(t={...t}).ref1="HEAD";break;case s.Gh.CompareWorkingWith:case s.Gh.Deprecated_DiffWorkingWith:(t={...t}).ref1=""}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=$e(t,e),i={...i};try{let n;switch(i.ref1){case null:n="Compare";break;case"":n="Compare Working Tree with";break;case"HEAD":n="Compare HEAD with";break;default:n=`Compare ${i.ref1} with`}const o=(await Rs.getBestRepositoryOrShow(t,e,n))?.path;if(!o)return;null!=i.ref1&&null!=i.ref2?await this.container.searchAndCompareView.compare(o,i.ref1,i.ref2):this.container.searchAndCompareView.selectForCompare(o,i.ref1,{prompt:!0})}catch(e){B.Yd.error(e,"CompareWithCommmand"),(0,Be.W8)("Unable to open comparison")}}};As=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Os(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&xs(t,i,r),r})([(0,ke.WD)()],As);var Is=Object.defineProperty,Es=Object.getOwnPropertyDescriptor;let Ns=class extends ActiveEditorCommand{constructor(e){super(s.Gh.CopyCurrentBranch),this.container=e}async execute(e,t){const i=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0,o=await Rs.getBestRepositoryOrShow(i,e,"Copy Current Branch Name");if(null!=o)try{const e=await o.getBranch();e?.name&&await n.env.clipboard.writeText(e.name)}catch(e){B.Yd.error(e,"CopyCurrentBranchCommand"),(0,Be.W8)("Unable to copy current branch name")}}};var Us;Ns=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Es(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Is(t,i,r),r})([(0,ke.WD)()],Ns),(Us||(Us={})).show=async function(e,t="Choose a remote",i,o){const r=[];let s;if(0===i.length)t="No remotes found";else{if("default"===o?.autoPick&&i.length>1){const e=i.find((e=>e.default));null!=e&&(i=[e])}const e={upstream:!0,buttons:o?.setDefault?[Ke.SetRemoteAsDefault]:void 0};for(const t of i)r.push(Ss(t,void 0,e)),t.name===o?.picked&&(s=r[r.length-1])}if(o?.autoPick&&1===i.length)return r[0];const a=n.window.createQuickPick();a.ignoreFocusOut=(0,J.hE)();const l=[];try{const i=await new Promise((i=>{l.push(a.onDidHide((()=>i(void 0))),a.onDidAccept((()=>{0!==a.activeItems.length&&i(a.activeItems[0])})),a.onDidTriggerItemButton((async e=>{e.button===Ke.SetRemoteAsDefault&&(await e.item.item.setAsDefault(),i(e.item))}))),a.title=e,a.placeholder=t,a.matchOnDetail=!0,a.items=r,null!=s&&(a.activeItems=[s]),a.show()}));if(null==i)return;return i}finally{a.dispose(),l.forEach((e=>{e.dispose()}))}};var Ls=(e=>(e.DeepLink="link",e))(Ls||{}),Ms=(e=>(e.Branch="b",e.Commit="c",e.Repository="r",e.Tag="t",e))(Ms||{});function Ws(e){switch(e){case"b":return"Branch";case"c":return"Commit";case"r":return"Repository";case"t":return"Tag";default:return"Unknown"}}function Bs(e){const[,t,i,n,o,...r]=e.path.split("/");if("link"!==t||"r"!==i)return;const s=new URLSearchParams(e.query).get("url");return s?null==o?{type:"r",repoId:n,remoteUrl:s}:{type:o,repoId:n,remoteUrl:s,targetId:r.join("/")}:void 0}var Gs=(e=>(e[e.Idle=0]="Idle",e[e.RepoMatch=1]="RepoMatch",e[e.CloneOrAddRepo=2]="CloneOrAddRepo",e[e.OpeningRepo=3]="OpeningRepo",e[e.AddedRepoMatch=4]="AddedRepoMatch",e[e.RemoteMatch=5]="RemoteMatch",e[e.AddRemote=6]="AddRemote",e[e.TargetMatch=7]="TargetMatch",e[e.Fetch=8]="Fetch",e[e.FetchedTargetMatch=9]="FetchedTargetMatch",e[e.OpenGraph=10]="OpenGraph",e))(Gs||{}),Vs=(e=>(e[e.DeepLinkEventFired=0]="DeepLinkEventFired",e[e.DeepLinkCancelled=1]="DeepLinkCancelled",e[e.DeepLinkResolved=2]="DeepLinkResolved",e[e.DeepLinkStored=3]="DeepLinkStored",e[e.DeepLinkErrored=4]="DeepLinkErrored",e[e.OpenRepo=5]="OpenRepo",e[e.RepoMatchedWithId=6]="RepoMatchedWithId",e[e.RepoMatchedWithRemoteUrl=7]="RepoMatchedWithRemoteUrl",e[e.RepoMatchFailed=8]="RepoMatchFailed",e[e.RepoAdded=9]="RepoAdded",e[e.RepoOpened=10]="RepoOpened",e[e.RemoteMatched=11]="RemoteMatched",e[e.RemoteMatchFailed=12]="RemoteMatchFailed",e[e.RemoteAdded=13]="RemoteAdded",e[e.TargetIsRemote=14]="TargetIsRemote",e[e.TargetMatched=15]="TargetMatched",e[e.TargetMatchFailed=16]="TargetMatchFailed",e[e.TargetFetched=17]="TargetFetched",e))(Vs||{}),Hs=(e=>(e.Folder="folder",e.Workspace="workspace",e))(Hs||{});const qs={0:{0:1},1:{6:5,7:7,8:2},2:{5:3,10:5,4:0,1:0,3:0},3:{9:4,4:0,1:0},4:{6:5,7:7,4:0},5:{11:7,12:6},6:{13:10,4:0,1:0},7:{14:10,15:10,16:8},8:{17:9,4:0,1:0},9:{15:10,4:0},10:{2:0,4:0}};var js=Object.defineProperty,Ys=Object.getOwnPropertyDescriptor;let Qs=class extends ActiveEditorCommand{constructor(e){super([s.Gh.CopyDeepLinkToBranch,s.Gh.CopyDeepLinkToCommit,s.Gh.CopyDeepLinkToRepo,s.Gh.CopyDeepLinkToTag]),this.container=e}preExecute(e,t){return null==t&&(Fe(e)?t={refOrRepoPath:e.node.commit}:Te(e)?t={refOrRepoPath:e.node.branch}:Ae(e)?t={refOrRepoPath:e.node.tag}:xe(e)&&(t={refOrRepoPath:e.node.remote.repoPath,remote:e.node.remote.name})),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let n,o;if(null==(i={...i})?.refOrRepoPath){const i=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0;n=Ms.Repository,o=(await Rs.getBestRepositoryOrShow(i,e,`Copy Link to ${Ws(n)}`))?.path}else"string"==typeof i.refOrRepoPath?(n=Ms.Repository,o=i.refOrRepoPath,i.refOrRepoPath=void 0):(n=function(e){switch(e){case"branch":return"b";case"revision":return"c";case"tag":return"t";default:return"r"}}(i.refOrRepoPath.refType),o=i.refOrRepoPath.repoPath);if(o){if(!i.remote&&"branch"===i.refOrRepoPath?.refType&&(i.refOrRepoPath.remote||null!=i.refOrRepoPath.upstream?.name)){const[e,t]=(0,v.g2)(i.refOrRepoPath.remote?i.refOrRepoPath.name:i.refOrRepoPath.upstream.name);null!=e&&(i.remote=t,i.prePickRemote=!0)}try{let e;const t=await this.container.git.getRemotes(o,{sort:!0});if(i.remote&&!i.prePickRemote)e=t.find((e=>e.name===i?.remote));else{const o=await Us.show(`Copy Link to ${Ws(n)}`,"Choose which remote to copy the link for",t,{autoPick:!0,picked:i.remote,setDefault:!0});if(null==o)return;e=o.item}if(null==e)return;null==i.refOrRepoPath?await this.container.deepLinks.copyDeepLinkUrl(o,e.url):await this.container.deepLinks.copyDeepLinkUrl(i.refOrRepoPath,e.url)}catch(e){B.Yd.error(e,"CopyDeepLinkCommand"),(0,Be.W8)("Unable to copy link")}}}};Qs=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ys(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&js(t,i,r),r})([(0,ke.WD)()],Qs);var zs=Object.defineProperty,Ks=Object.getOwnPropertyDescriptor;let Js=class extends ActiveEditorCommand{constructor(e){super(s.Gh.CopyMessageToClipboard),this.container=e}async preExecute(e,t){return Fe(e)?((t={...t}).sha=e.node.commit.sha,null!=e.node.commit.message&&await e.node.commit.ensureFullDetails(),t.message=e.node.commit.message,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):Te(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):Ae(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=$e(t,e),i={...i};try{if(!i.message){if(null!=i.repoPath&&null!=i.sha)return void await at({ref:i.sha,repoPath:i.repoPath});let n;if(null==t){if(n=this.container.git.getBestRepository(e)?.path,!n)return;const t=await this.container.git.getLog(n,{limit:1});if(null==t)return;const o=(0,q.Ps)(t.commits.values());if(null==o?.message)return;i.message=o.message}else if(null==i.message){const o=await _.YY.fromUri(t);if(n=o.repoPath,null!=i.sha)return void await at({ref:i.sha,repoPath:n});{const t=e?.selection.active.line??0;if(t<0)return;try{const i=await this.container.git.getBlameForLine(o,t,e?.document);if(null==i||i.commit.isUncommitted)return;return void await at(i.commit)}catch(e){return B.Yd.error(e,"CopyMessageToClipboardCommand",`getBlameForLine(${t})`),void(0,Be.W8)("Unable to copy message")}}}}await n.env.clipboard.writeText(i.message)}catch(e){B.Yd.error(e,"CopyMessageToClipboardCommand"),(0,Be.W8)("Unable to copy message")}}};Js=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ks(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&zs(t,i,r),r})([(0,ke.WD)()],Js);var Xs=Object.defineProperty,Zs=Object.getOwnPropertyDescriptor;let ea=class extends ActiveEditorCommand{constructor(e){super(s.Gh.CopyShaToClipboard),this.container=e}preExecute(e,t){return Fe(e)?((t={...t}).sha=e.node.commit.sha,this.execute(e.editor,e.node.commit.file?.uri??e.node.commit.getRepository()?.uri,t)):Te(e)?((t={...t}).sha=e.node.branch.sha,this.execute(e.editor,e.node.uri,t)):Ae(e)?((t={...t}).sha=e.node.tag.sha,this.execute(e.editor,e.node.uri,t)):this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=$e(t,e),i={...i};try{if(!i.sha)if(null==t){const t=this.container.git.getBestRepository(e)?.path;if(!t)return;const n=await this.container.git.getLog(t,{limit:1});if(null==n)return;if(i.sha=(0,q.Ps)(n.commits.values())?.sha,null==i.sha)return}else if(null==i.sha){const n=e?.selection.active.line??0;if(n<0)return;try{const o=await _.YY.fromUri(t),r=await this.container.git.getBlameForLine(o,n,e?.document);if(null==r)return;i.sha=r.commit.sha}catch(e){return B.Yd.error(e,"CopyShaToClipboardCommand",`getBlameForLine(${n})`),void(0,Be.W8)("Unable to copy commit SHA")}}await n.env.clipboard.writeText(r.DN.get("advanced.abbreviateShaOnCopy")?x.pk.shorten(i.sha):i.sha)}catch(e){B.Yd.error(e,"CopyShaToClipboardCommand"),(0,Be.W8)("Unable to copy commit SHA")}}};ea=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Zs(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Xs(t,i,r),r})([(0,ke.WD)()],ea);var ta=Object.defineProperty,ia=Object.getOwnPropertyDescriptor;let na=class extends Command{constructor(e){super(s.Gh.CreatePullRequestOnRemote),this.container=e}async execute(e){if(null==e?.repoPath)return;const t=this.container.git.getRepository(e.repoPath);if(null==t)return;const i=await t.getRemote(e.remote);if(null==i?.provider)return;const n=i.provider.id,o=await t.getRemotes({filter:e=>e.provider?.id===n}),r={type:Jt.J.CreatePullRequest,base:{branch:e.base,remote:void 0},compare:{branch:e.compare,remote:{path:i.path,url:i.url}}};await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:r,remotes:o})}};na=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ia(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ta(t,i,r),r})([(0,ke.WD)()],na);var oa=Object.defineProperty,ra=Object.getOwnPropertyDescriptor,sa=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ra(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&oa(t,i,r),r};let aa=0;const la=class extends De.Re{constructor(e,t,i,n,o,r=0){super(_.YY.fromRepoPath(i),e,t),this.repoPath=i,this._ref=n,this._compareWith=o,this._pinned=r,this._order=Date.now(),this._instanceId=aa++}static getId(e,t,i,n){return`${Jr.getId(e)}${this.key}(${t}|${i}):${n}`}static getPinnableId(e,t,i){return(0,on.FB)(`${e}|${t}|${i}`,"base64")}get ahead(){return{ref1:this._compareWith.ref||"HEAD",ref2:this._ref.ref}}get behind(){return{ref1:this._ref.ref,ref2:this._compareWith.ref||"HEAD"}}get id(){return la.getId(this.repoPath,this._ref.ref,this._compareWith.ref,this._instanceId)}get canDismiss(){return!this.pinned}get order(){return this._pinned||this._order}get pinned(){return 0!==this._pinned}async getChildren(){if(null==this._children){const e=this.ahead,t=this.behind,i=await this.view.container.git.getAheadBehindCommitCount(this.repoPath,[x.pk.createRange(t.ref1||"HEAD",t.ref2,"...")]),n=await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2,{forkPoint:!0})??await this.view.container.git.getMergeBase(this.repoPath,t.ref1,t.ref2);this._children=[new ResultsCommitsNode(this.view,this,this.repoPath,"Behind",{query:this.getCommitsQuery(x.pk.createRange(t.ref1,t.ref2,"..")),comparison:t,direction:"behind",files:{ref1:""===t.ref1?"":n??t.ref1,ref2:t.ref2,query:this.getBehindFilesQuery.bind(this)}},{id:"behind",description:(0,k._6)("commit",i?.behind??0),expand:!1}),new ResultsCommitsNode(this.view,this,this.repoPath,"Ahead",{query:this.getCommitsQuery(x.pk.createRange(e.ref1,e.ref2,"..")),comparison:e,direction:"ahead",files:{ref1:n??e.ref1,ref2:e.ref2,query:this.getAheadFilesQuery.bind(this)}},{id:"ahead",description:(0,k._6)("commit",i?.ahead??0),expand:!1}),new ResultsFilesNode(this.view,this,this.repoPath,this._compareWith.ref,this._ref.ref,this.getFilesQuery.bind(this),void 0,{expand:!1})]}return this._children}getTreeItem(){let e;if(this.view.container.git.repositoryCount>1){e=(this.repoPath?this.view.container.git.getRepository(this.repoPath):void 0)?.formattedName??this.repoPath}const t=new n.TreeItem(`Comparing ${this._ref.label??x.pk.shorten(this._ref.ref,{strings:{working:"Working Tree"}})} with ${this._compareWith.label??x.pk.shorten(this._compareWith.ref,{strings:{working:"Working Tree"}})}`,n.TreeItemCollapsibleState.Collapsed);return t.id=this.id,t.contextValue=`${De.Td.CompareResults}${this._pinned?"+pinned":""}${""===this._ref.ref?"+working":""}`,t.description=e,this._pinned&&(t.iconPath=new n.ThemeIcon("pinned")),t}async getDiffRefs(){return Promise.resolve([this._compareWith.ref,this._ref.ref])}async pin(){this.pinned||(this._pinned=Date.now(),await this.updatePinned(),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}refresh(e=!1){e&&(this._children=void 0)}async swap(){if(""===this._ref.ref)return void n.window.showErrorMessage("Cannot swap comparisons with the working tree");const e=this.getPinnableId(),t=this._ref;this._ref=this._compareWith,this._compareWith=t,this.pinned&&(await this.view.updatePinned(e),await this.updatePinned()),this._children=void 0,this.view.triggerNodeChange(this.parent),queueMicrotask((()=>this.view.reveal(this,{expand:!0,focus:!0,select:!0})))}async unpin(){this.pinned&&(this._pinned=0,await this.view.updatePinned(this.getPinnableId()),queueMicrotask((()=>this.view.reveal(this,{focus:!0,select:!0}))))}getPinnableId(){return la.getPinnableId(this.repoPath,this._ref.ref,this._compareWith.ref)}async getAheadFilesQuery(){return this.getAheadBehindFilesQuery(x.pk.createRange(this._compareWith?.ref||"HEAD",this._ref.ref||"HEAD","..."),""===this._ref.ref)}async getBehindFilesQuery(){return this.getAheadBehindFilesQuery(x.pk.createRange(this._ref.ref||"HEAD",this._compareWith.ref||"HEAD","..."),!1)}async getAheadBehindFilesQuery(e,t){const[i,n,o,r]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),t?this.view.container.git.getDiffStatus(this.repoPath,"HEAD"):void 0,this.view.container.git.getChangedFilesCount(this.repoPath,e),t?this.view.container.git.getChangedFilesCount(this.repoPath,"HEAD"):void 0]);let s=(0,Y.Sb)(i)??[],a=(0,Y.Sb)(o);if(t){const e=(0,Y.Sb)(n);if(null!=e)if(0===s.length)s=e??[];else for(const t of e){const e=s.findIndex((e=>e.path===t.path));-1!==e?s.splice(e,1,t):s.push(t)}const t=(0,Y.Sb)(r);null!=t&&(a=null==a?t:{additions:a.additions+t.additions,deletions:a.deletions+t.deletions,changedFiles:s.length,approximated:!0})}return{label:`${(0,k._6)("file",s.length,{zero:"No"})} changed`,files:s,stats:a}}getCommitsQuery(e){const t=this.repoPath;return async i=>{const n=await this.view.container.git.getLog(t,{limit:i,ref:e}),o={log:n,hasMore:n?.hasMore??!0};return o.hasMore&&(o.more=async e=>{o.log=await(o.log?.more?.(e))??o.log,o.hasMore=o.log?.hasMore??!0}),o}}async getFilesQuery(){let e;if(""===this._compareWith.ref)throw new Error("Cannot get files for comparisons of a ref with working tree");e=""===this._ref.ref?this._compareWith.ref:`${this._compareWith.ref}..${this._ref.ref}`;const[t,i]=await Promise.allSettled([this.view.container.git.getDiffStatus(this.repoPath,e),this.view.container.git.getChangedFilesCount(this.repoPath,e)]),n=(0,Y.Sb)(t)??[];return{label:`${(0,k._6)("file",n.length,{zero:"No"})} changed`,files:n,stats:(0,Y.Sb)(i)}}updatePinned(){return this.view.updatePinned(this.getPinnableId(),{type:"comparison",timestamp:this._pinned,path:this.repoPath,ref1:{label:this._ref.label,ref:this._ref.ref},ref2:{label:this._compareWith.label,ref:this._compareWith.ref}})}};let ca=la;ca.key=":compare-results",sa([(0,V.H)(),(0,H.fF)()],ca.prototype,"getDiffRefs",1),sa([(0,H.cM)()],ca.prototype,"pin",1),sa([(0,V.H)(),(0,H.fF)()],ca.prototype,"refresh",1),sa([(0,H.cM)()],ca.prototype,"swap",1),sa([(0,H.cM)()],ca.prototype,"unpin",1);var ha=Object.defineProperty,ua=Object.getOwnPropertyDescriptor;let da=class extends ActiveEditorCommand{constructor(e){super([s.Gh.DiffDirectory,s.Gh.DiffDirectoryWithHead,s.Gh.ViewsOpenDirectoryDiff,s.Gh.ViewsOpenDirectoryDiffWithWorking]),this.container=e}async preExecute(e,t){switch(e.command){case s.Gh.DiffDirectoryWithHead:(t={...t}).ref1="HEAD",t.ref2=void 0;break;case s.Gh.ViewsOpenDirectoryDiff:"viewItem"===e.type&&e.node instanceof ca&&(t={...t},[t.ref1,t.ref2]=await e.node.getDiffRefs());break;case s.Gh.ViewsOpenDirectoryDiffWithWorking:(function(e){return"viewItem"===e.type&&e.node instanceof De.bT})(e)&&((t={...t}).ref1=e.node.ref.ref,t.ref2=void 0)}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){t=$e(t,e),i={...i};try{const n=(await Rs.getBestRepositoryOrShow(t,e,"Directory Compare Working Tree With"))?.path;if(!n)return;if(!i.ref1){const e=await Pn.show(n,"Directory Compare Working Tree with","Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==e)return;if(i.ref1=e.ref,null==i.ref1)return}pt(n,i.ref1,i.ref2)}catch(e){B.Yd.error(e,"OpenDirectoryCompareCommand"),(0,Be.W8)("Unable to open directory compare")}}};da=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ua(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ha(t,i,r),r})([(0,ke.WD)()],da);var pa=Object.defineProperty,ma=Object.getOwnPropertyDescriptor;let ga=class extends ActiveEditorCommand{constructor(e){super(s.Gh.DiffLineWithPrevious),this.container=e}async execute(e,t,i){if(null==(t=$e(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const n=i.commit?.getGitUri()??await _.YY.fromUri(t);try{const e=await this.container.git.getPreviousComparisonUrisForLine(n.repoPath,n,i.line,n.sha);if(null==e||null==e.previous)return void(0,Be.RR)();await(0,ke.P0)(s.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:e.line,showOptions:i.showOptions})}catch(e){B.Yd.error(e,"DiffLineWithPreviousCommand",`getPreviousLineDiffUris(${n.repoPath}, ${n.fsPath}, ${n.sha})`),(0,Be.W8)("Unable to open compare")}}};ga=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ma(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&pa(t,i,r),r})([(0,ke.WD)()],ga);var fa=Object.defineProperty,wa=Object.getOwnPropertyDescriptor;let _a=class extends ActiveEditorCommand{constructor(e){super(s.Gh.DiffLineWithWorking),this.container=e}async execute(e,t,i){if(null==(t=$e(t,e)))return;const o=await _.YY.fromUri(t);let r,a;if(null==(i={...i}).line&&(i.line=e?.selection.active.line??0),null==i.commit||i.commit.isUncommitted){const t=i.line;if(t<0)return;try{const n=await this.container.git.getBlameForLine(o,t,e?.document);if(null==n)return void(0,Be.zk)("Unable to open compare");if(i.commit=n.commit,i.commit.isUncommitted){const e=await this.container.git.getStatusForFile(o.repoPath,o);null!=e?.indexStatus?(r=x.pk.uncommittedStaged,a=this.container.git.getAbsoluteUri(e.originalPath||e.path,i.commit.repoPath)):(r=i.commit.unresolvedPreviousSha,a=i.commit.file.originalUri??i.commit.file.uri)}else r=i.commit.sha,a=i.commit.file.uri;i.line=n.line.line-1}catch(e){return B.Yd.error(e,"DiffLineWithWorkingCommand",`getBlameForLine(${t})`),void(0,Be.W8)("Unable to open compare")}}else r=i.commit.sha,a=i.commit.file?.uri??o;const l=await(i.commit.file?.getWorkingUri());null!=l?await(0,ke.P0)(s.Gh.DiffWith,{repoPath:i.commit.repoPath,lhs:{sha:r,uri:a},rhs:{sha:"",uri:l},line:i.line,showOptions:i.showOptions}):n.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree")}};_a=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?wa(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&fa(t,i,r),r})([(0,ke.WD)()],_a);var va=Object.defineProperty,ya=Object.getOwnPropertyDescriptor;let ba=class extends Command{constructor(e){super(s.Gh.DiffWith),this.container=e}static getMarkdownCommandArgs(e,t){let i;if((0,y.f_)(e)){const n=e;if(null==n.file||null==n.unresolvedPreviousSha)throw new Error("Commit has no file");i=n.isUncommitted?{repoPath:n.repoPath,lhs:{sha:"HEAD",uri:n.file.uri},rhs:{sha:"",uri:n.file.uri},line:t}:{repoPath:n.repoPath,lhs:{sha:n.unresolvedPreviousSha,uri:n.file.originalUri??n.file.uri},rhs:{sha:n.sha,uri:n.file.uri},line:t}}else i=e;return super.getMarkdownCommandArgsCore(s.Gh.DiffWith,i)}async execute(e){if(null!=e?.lhs&&null!=e?.rhs&&null!=(e={...e,lhs:{...e.lhs},rhs:{...e.rhs},showOptions:null==e.showOptions?void 0:{...e.showOptions}}).repoPath)try{let t=e.lhs.sha,i=e.rhs.sha;if([e.lhs.sha,e.rhs.sha]=await Promise.all([await this.container.git.resolveReference(e.repoPath,e.lhs.sha,e.lhs.uri,{timeout:x.pk.isShaLike(e.lhs.sha)?100:void 0}),await this.container.git.resolveReference(e.repoPath,e.rhs.sha,e.rhs.uri,{timeout:x.pk.isShaLike(e.rhs.sha)?100:void 0})]),e.lhs.sha!==x.pk.deletedOrMissing&&(t=e.lhs.sha),e.rhs.sha&&e.rhs.sha!==x.pk.deletedOrMissing){const t=await this.container.git.getFileStatusForCommit(e.repoPath,e.rhs.uri,e.rhs.sha);"D"===t?.status?e.rhs.sha=x.pk.deletedOrMissing:i=e.rhs.sha,"A"===t?.status&&e.lhs.sha.endsWith("^")&&(e.lhs.sha=x.pk.deletedOrMissing)}const[o,r]=await Promise.all([this.container.git.getBestRevisionUri(e.repoPath,e.lhs.uri.fsPath,e.lhs.sha),this.container.git.getBestRevisionUri(e.repoPath,e.rhs.uri.fsPath,e.rhs.sha)]);let a=x.pk.shorten(i,{strings:{uncommitted:"Working Tree"}});null==r?a=x.pk.isUncommitted(e.rhs.sha)?"deleted":0===a.length&&e.rhs.sha===x.pk.deletedOrMissing?"not in Working Tree":"deleted"+(0===a.length?"":` in ${a}`):null==o&&(a="added"+(0===a.length?"":` in ${a}`));let l=e.lhs.sha!==x.pk.deletedOrMissing?x.pk.shorten(t):"";null==o&&0===e.rhs.sha.length&&(null!=r?(l=0===l.length?"":`not in ${l}`,a=""):l="deleted"+(0===l.length?"":` in ${l}`)),null!=e.lhs.title||null==o&&0===l.length||(e.lhs.title=`${(0,j.EZ)(e.lhs.uri.fsPath)}${l?` (${l})`:""}`),null==e.rhs.title&&(e.rhs.title=`${(0,j.EZ)(e.rhs.uri.fsPath)}${a?` (${a})`:""}`);const c=null!=e.lhs.title&&null!=e.rhs.title?`${e.lhs.title} ${s.NE.ArrowLeftRightLong} ${e.rhs.title}`:e.lhs.title??e.rhs.title;null==e.showOptions&&(e.showOptions={}),null==e.showOptions.viewColumn&&(e.showOptions.viewColumn=n.ViewColumn.Active),null!=e.line&&0!==e.line&&(e.showOptions.selection=new n.Range(e.line,0,e.line,0)),await(0,ke.dO)(s.nA.Diff,o??this.container.git.getRevisionUri(x.pk.deletedOrMissing,e.lhs.uri.fsPath,e.repoPath),r??this.container.git.getRevisionUri(x.pk.deletedOrMissing,e.rhs.uri.fsPath,e.repoPath),c,e.showOptions)}catch(e){B.Yd.error(e,"DiffWithCommand","getVersionedFile"),(0,Be.W8)("Unable to open compare")}}};ba=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ya(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&va(t,i,r),r})([(0,ke.WD)()],ba);var Ca=Object.defineProperty,Sa=Object.getOwnPropertyDescriptor;let ka=class extends ActiveEditorCommand{constructor(e){super([s.Gh.DiffWithNext,s.Gh.DiffWithNextInDiffLeft,s.Gh.DiffWithNextInDiffRight]),this.container=e}preExecute(e,t){return e.command===s.Gh.DiffWithNextInDiffLeft&&(t={...t,inDiffLeftEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=$e(t,e)))return;null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const n=i.commit?.getGitUri()??await _.YY.fromUri(t);try{const e=await this.container.git.getNextComparisonUris(n.repoPath,n,n.sha,i.inDiffLeftEditor?1:0);if(null==e||null==e.next)return;await(0,ke.P0)(s.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.current.sha??"",uri:e.current.documentUri()},rhs:{sha:e.next.sha??"",uri:e.next.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){B.Yd.error(e,"DiffWithNextCommand",`getNextDiffUris(${n.repoPath}, ${n.fsPath}, ${n.sha})`),(0,Be.W8)("Unable to open compare")}}};ka=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Sa(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ca(t,i,r),r})([(0,ke.WD)()],ka);var Pa=Object.defineProperty,Ra=Object.getOwnPropertyDescriptor;let Da=class extends ActiveEditorCommand{constructor(e){super([s.Gh.DiffWithPrevious,s.Gh.DiffWithPreviousInDiffLeft,s.Gh.DiffWithPreviousInDiffRight]),this.container=e}preExecute(e,t){return e.command===s.Gh.DiffWithPreviousInDiffRight&&(t={...t,inDiffRightEditor:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(i={...i}).uri){if(null==(t=$e(t,e)))return}else t=i.uri;let n;if(null==i.line&&(i.line=e?.selection.active.line??0),null!=i.commit?.file){if(!i.commit.isUncommitted)return void await(0,ke.P0)(s.Gh.DiffWith,{repoPath:i.commit.repoPath,lhs:{sha:`${i.commit.sha}^`,uri:i.commit.file.originalUri??i.commit.file.uri},rhs:{sha:"?"===i.commit.file.status?`${i.commit.sha}^3`:i.commit.sha||"",uri:i.commit.file.uri},line:i.line,showOptions:i.showOptions});n=i.commit?.getGitUri()}else n=await _.YY.fromUri(t);try{const e=await this.container.git.getPreviousComparisonUris(n.repoPath,n,n.sha,i.inDiffRightEditor?1:0);if(null==e||null==e.previous){if(null==e)return void(0,Be.RR)();if(null==e.current.sha)return void await(0,J.GR)(e.current,i.showOptions);if(!e.current.isUncommittedStaged)return void(0,Be.RR)();e.previous=_.YY.fromFile(e.current.fileName,e.current.repoPath,x.pk.deletedOrMissing)}await(0,ke.P0)(s.Gh.DiffWith,{repoPath:e.current.repoPath,lhs:{sha:e.previous.sha??"",uri:e.previous.documentUri()},rhs:{sha:e.current.sha??"",uri:e.current.documentUri()},line:i.line,showOptions:i.showOptions})}catch(e){B.Yd.error(e,"DiffWithPreviousCommand",`getPreviousDiffUris(${n.repoPath}, ${n.fsPath}, ${n.sha})`),(0,Be.W8)("Unable to open compare")}}};var $a,Ta;Da=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ra(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Pa(t,i,r),r})([(0,ke.WD)()],Da),($a||($a={})).show=async function(e,t,i,o){const s=n.window.createQuickPick();function a(e){return null==e?[et(Xe.Cancel)]:[...o?.showOtherReferences??[],...(0,q.UI)(e.commits.values(),(e=>bs(e,o?.picked===e.ref,{compact:!0,icon:!0}))),...e?.hasMore?[et(Xe.LoadMore)]:[]]}s.ignoreFocusOut=(0,J.hE)(),s.title=t,s.placeholder=i,s.matchOnDescription=!0,s.matchOnDetail=!0,(0,Y.tI)(e)&&(s.busy=!0,s.show(),null==(e=await e)&&(s.placeholder="Unable to show commit history")),s.items=a(e),o?.picked&&(s.activeItems=s.items.filter((e=>!CommandQuickPickItem.is(e)&&e.picked)));const l=[];let c;null!=o?.keys&&0!==o.keys.length&&null!==o?.onDidPressKey&&(c=lf.instance.keyboard.createScope(Object.fromEntries(o.keys.map((e=>[e,{onDidPressKey:e=>{if(0!==s.activeItems.length){const[t]=s.activeItems;null==t||tt(t)||CommandQuickPickItem.is(t)||o.onDidPressKey(e,t)}}}])))),c.start(),l.push(c));try{const t=await new Promise((t=>{l.push(s.onDidHide((()=>t(void 0))),s.onDidAccept((()=>{if(0!==s.activeItems.length){const[i]=s.activeItems;if(tt(i))return i.directive===Xe.LoadMore?void async function(){s.busy=!0;try{const t=a(e=await((await e)?.more?.(r.DN.get("advanced.maxListItems"))));let i=-1;if(0!==s.activeItems.length){const e=s.activeItems[0];i=s.items.indexOf(e),tt(e)&&i--}s.items=t,i&&(s.activeItems=[s.items[i]])}finally{s.busy=!1}}():void t(void 0);t(i)}})),s.onDidChangeValue((async e=>{null!=c&&(0!==e.length?await c.pause(["left","right"]):await c.resume())}))),s.busy=!1,s.show()}));if(null==t||tt(t))return;return t instanceof CommandQuickPickItem?void await t.execute():t.item}finally{s.dispose(),l.forEach((e=>{e.dispose()}))}},(Ta||(Ta={})).show=async function(e,t,i,o){const r=n.window.createQuickPick();r.ignoreFocusOut=(0,J.hE)(),r.title=t,r.placeholder=i,r.matchOnDescription=!0,r.matchOnDetail=!0,(0,Y.tI)(e)&&(r.busy=!0,r.show(),e=await e),null!=e&&(r.items=[...o?.showOtherReferences??[],...(0,q.UI)(null!=o?.filter?(0,q.hX)(e.commits.values(),o.filter):e.commits.values(),(e=>bs(e,o?.picked===e.ref,{compact:!0,icon:!0})))]),(null==e||r.items.length<=(o?.showOtherReferences?.length??0))&&(r.placeholder=null==e?"No stashes found":o?.empty??"No matching stashes found",r.items=[et(Xe.Cancel)]),o?.picked&&(r.activeItems=r.items.filter((e=>!CommandQuickPickItem.is(e)&&e.picked)));const s=[];let a;null!=o?.keys&&0!==o.keys.length&&null!==o?.onDidPressKey&&(a=lf.instance.keyboard.createScope(Object.fromEntries(o.keys.map((e=>[e,{onDidPressKey:e=>{if(0!==r.activeItems.length){const[t]=r.activeItems;null==t||tt(t)||CommandQuickPickItem.is(t)||o.onDidPressKey(e,t)}}}])))),a.start(),s.push(a));try{const e=await new Promise((e=>{s.push(r.onDidHide((()=>e(void 0))),r.onDidAccept((()=>{if(0!==r.activeItems.length){const[t]=r.activeItems;if(tt(t))return void e(void 0);e(t)}})),r.onDidChangeValue((async e=>{null!=a&&(0!==e.length?await a.pause(["left","right"]):await a.resume())}))),r.busy=!1,r.show()}));if(null==e||tt(e))return;return e instanceof CommandQuickPickItem?void await e.execute():e.item}finally{r.dispose(),s.forEach((e=>{e.dispose()}))}};var Fa=Object.defineProperty,xa=Object.getOwnPropertyDescriptor;let Oa=class extends ActiveEditorCommand{constructor(e){super(s.Gh.DiffWithRevision),this.container=e}async execute(e,t,i){if(null==(t=$e(t,e)))return;const n=await _.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{const e=this.container.git.getLogForFile(n.repoPath,n.fsPath).then((e=>e??(n.sha?this.container.git.getLogForFile(n.repoPath,n.fsPath,{ref:n.sha}):void 0))),t=`Open Changes with Revision${(0,k.vk)(s.NE.Dot,2,2)}`,o=await $a.show(e,`${t}${n.getFormattedFileName({suffix:n.sha?`:${x.pk.shorten(n.sha)}`:void 0,truncateTo:s.d$-t.length})}`,"Choose a commit to compare with",{picked:n.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await(0,ke.P0)(s.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:t.item.ref,uri:n},rhs:{sha:"",uri:n},line:i.line,showOptions:i.showOptions})},showOtherReferences:[CommandQuickPickItem.fromCommand("Choose a Branch or Tag...",s.Gh.DiffWithRevisionFrom),CommandQuickPickItem.fromCommand("Choose a Stash...",s.Gh.DiffWithRevisionFrom,{stash:!0})]});if(null==o)return;await(0,ke.P0)(s.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:o.ref,uri:n},rhs:{sha:"",uri:n},line:i.line,showOptions:i.showOptions})}catch(e){B.Yd.error(e,"DiffWithRevisionCommand"),(0,Be.W8)("Unable to open compare")}}};Oa=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?xa(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Fa(t,i,r),r})([(0,ke.WD)()],Oa);var Aa=Object.defineProperty,Ia=Object.getOwnPropertyDescriptor;let Ea=class extends ActiveEditorCommand{constructor(e){super(s.Gh.DiffWithRevisionFrom),this.container=e}async execute(e,t,i){if(null==(t=$e(t,e)))return;const n=await _.YY.fromUri(t);if(!n.repoPath)return void(0,Be.bi)("Unable to open file compare");null==(i={...i}).line&&(i.line=e?.selection.active.line??0);const o=this.container.git.getRelativePath(n,n.repoPath);let r,a,l,c;if(i?.stash){const e=`Open Changes with Stash${(0,k.vk)(s.NE.Dot,2,2)}`,t=await Ta.show(this.container.git.getStash(n.repoPath),`${e}${n.getFormattedFileName({truncateTo:s.d$-e.length})}`,"Choose a stash to compare with",{empty:`No stashes with '${n.getFormattedFileName()}' found`,filter:e=>e.files?.some((e=>e.path===o||e.originalPath===o))??!0});if(null==t)return;r=t.ref,a=r}else{const e=`Open Changes with Branch or Tag${(0,k.vk)(s.NE.Dot,2,2)}`,t=await Pn.show(n.repoPath,`${e}${n.getFormattedFileName({truncateTo:s.d$-e.length})}`,"Choose a branch or tag to compare with",{allowEnteringRefs:!0});if(null==t)return;r=t.ref,a=x.Wb.isBranch(t)&&t.remote?`remotes/${r}`:r}if(null==r)return;const h=await this.container.git.getDiffStatus(n.repoPath,"HEAD",r,{filters:["R","C"]});if(null!=h){const e=h.find((e=>e.path===o));null!=e?.originalPath&&(l=this.container.git.getAbsoluteUri(e.originalPath,n.repoPath),c=`${(0,j.EZ)(e.originalPath)} (${x.pk.shorten(r)})`)}await(0,ke.P0)(s.Gh.DiffWith,{repoPath:n.repoPath,lhs:{sha:a,uri:l??n,title:c??`${(0,j.EZ)(n.fsPath)} (${x.pk.shorten(r)})`},rhs:{sha:"",uri:n},line:i.line,showOptions:i.showOptions})}};Ea=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ia(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Aa(t,i,r),r})([(0,ke.WD)()],Ea);var Na=Object.defineProperty,Ua=Object.getOwnPropertyDescriptor;let La=class extends ActiveEditorCommand{constructor(e){super([s.Gh.DiffWithWorking,s.Gh.DiffWithWorkingInDiffLeft,s.Gh.DiffWithWorkingInDiffRight]),this.container=e}async execute(e,t,i){if(null==(i={...i}).uri){if(null==(t=$e(t,e)))return}else t=i.uri;let o=await _.YY.fromUri(t);if(null==i.line&&(i.line=e?.selection.active.line??0),i.inDiffRightEditor)try{o=(await this.container.git.getPreviousComparisonUris(o.repoPath,o,o.sha))?.previous??o}catch(e){return B.Yd.error(e,"DiffWithWorkingCommand",`getPreviousDiffUris(${o.repoPath}, ${o.fsPath}, ${o.sha})`),void(0,Be.W8)("Unable to open compare")}if(null==o.sha)return void n.window.showInformationMessage("File matches the working tree");if(o.sha===x.pk.deletedOrMissing)return void n.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree");if(o.isUncommittedStaged){if(null!=(await this.container.git.getStatusForFile(o.repoPath,o))?.indexStatus)return void await(0,ke.P0)(s.Gh.DiffWith,{repoPath:o.repoPath,lhs:{sha:x.pk.uncommittedStaged,uri:o.documentUri()},rhs:{sha:"",uri:o.documentUri()},line:i.line,showOptions:i.showOptions})}t=o.toFileUri();const r=await this.container.git.getWorkingUri(o.repoPath,t);null!=r?await(0,ke.P0)(s.Gh.DiffWith,{repoPath:o.repoPath,lhs:{sha:o.sha,uri:t},rhs:{sha:"",uri:r},line:i.line,showOptions:i.showOptions}):n.window.showWarningMessage("Unable to open compare. File has been deleted from the working tree")}};La=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ua(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Na(t,i,r),r})([(0,ke.WD)()],La);var Ma=i(5640),Wa=(e=>(e[e.Merge=0]="Merge",e[e.Index=1]="Index",e[e.WorkingTree=2]="WorkingTree",e))(Wa||{}),Ba=Object.defineProperty,Ga=Object.getOwnPropertyDescriptor;let Va=class extends Command{constructor(e){super([s.Gh.ExternalDiff,s.Gh.ExternalDiffAll]),this.container=e}async preExecute(e,t){if(t={...t},function(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&(0,y.f_)(t.commit)&&(null!=t.file.repoPath||null!=t.repoPath)}(e)){const i=await e.node.commit.getPreviousSha(),n=x.pk.isUncommitted(i)?"":i,o=e.node.commit.isUncommitted?"":e.node.commit.sha;return t.files=[{uri:_.YY.fromFile(e.node.file,e.node.file.repoPath??e.node.repoPath),staged:e.node.commit.isUncommittedStaged||null!=e.node.file.indexStatus,ref1:n,ref2:o}],this.execute(t)}if(function(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&null!=t.ref1&&null!=t.ref2&&(null!=t.file.repoPath||null!=t.repoPath)}(e))return t.files=[{uri:_.YY.fromFile(e.node.file,e.node.file.repoPath??e.node.repoPath),staged:null!=e.node.file.indexStatus,ref1:e.node.ref1,ref2:e.node.ref2}],this.execute(t);if(null==t.files&&("scm-states"===e.type?t.files=e.scmResourceStates.map((e=>({uri:e.resourceUri,staged:e.resourceGroupType===Wa.Index}))):"scm-groups"===e.type&&(t.files=(0,Ht.DZ)(e.scmResourceGroups[0].resourceStates,(e=>this.isModified(e)?{uri:e.resourceUri,staged:e.resourceGroupType===Wa.Index}:void 0)))),e.command===s.Gh.ExternalDiffAll&&null==t.files){const e=await Rs.getRepositoryOrShow("Open All Changes (difftool)");if(null==e)return;const i=await this.container.git.getStatusForRepo(e.uri);if(null==i)return n.window.showInformationMessage("The repository doesn't have any changes");t.files=[];for(const e of i.files)"M"===e.indexStatus&&t.files.push({uri:e.uri,staged:!0}),"M"===e.workingTreeStatus&&t.files.push({uri:e.uri,staged:!1})}return this.execute(t)}isModified(e){const t=e.type;return t===Ma.qb.BOTH_MODIFIED||t===Ma.qb.INDEX_MODIFIED||t===Ma.qb.MODIFIED}async execute(e){e={...e};try{let t;if(null==e.files){const i=n.window.activeTextEditor;if(null==i)return;if(t=this.container.git.getBestRepository(i)?.path,!t)return;const o=i.document.uri,r=await this.container.git.getStatusForFile(t,o);if(null==r)return void n.window.showInformationMessage("The current file doesn't have any changes");e.files=[],"M"===r.indexStatus&&e.files.push({uri:r.uri,staged:!0}),"M"===r.workingTreeStatus&&e.files.push({uri:r.uri,staged:!1})}else if(t=(await this.container.git.getOrOpenRepository(e.files[0].uri))?.path,!t)return;const i=r.DN.get("advanced.externalDiffTool")||await this.container.git.getDiffTool(t);if(!i){const e="View Git Docs";return void(await n.window.showWarningMessage("Unable to open changes because no Git diff tool is configured",e)===e&&n.env.openExternal(n.Uri.parse("https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool")))}for(const n of e.files)this.container.git.openDiffTool(t,n.uri,{ref1:n.ref1,ref2:n.ref2,staged:n.staged,tool:i})}catch(e){B.Yd.error(e,"ExternalDiffCommand"),(0,Be.W8)("Unable to open changes in diff tool")}}};Va=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ga(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ba(t,i,r),r})([(0,ke.WD)()],Va);var Ha=i(4794),qa=Object.defineProperty,ja=Object.getOwnPropertyDescriptor;let Ya=class extends Command{constructor(e){super(s.Gh.OpenOrCreateWorktreeForGHPR),this.container=e}async execute(...e){const[t]=e;let i;i="pullRequestModel"in t?t.pullRequestModel:t;const{base:{repositoryCloneUrl:{owner:o,repositoryName:r}},githubRepository:{rootUri:s},head:{repositoryCloneUrl:{url:a,owner:l},ref:c},item:{number:h}}=i;let u=this.container.git.getRepository(s);if(null==u)return void n.window.showWarningMessage(`Unable to find repository(${s.toString()}) for PR #${h}`);if(u=await u.getMainRepository(),null==u)return void n.window.showWarningMessage(`Unable to find main repository(${s.toString()}) for PR #${h}`);const d=(await u.getWorktrees()).find((e=>e.branch===c));if(null!=d)return void function(e,t){Pe({command:"worktree",state:{subcommand:"open",repo:e.repoPath,uri:e.uri,flags:Qt(t?.location)}})}(d);const p=a.toString(),[,m,g]=(0,Ha.S)(p);let f;if([f]=await u.getRemotes({filter:e=>e.matches(m,g)}),null==f){if("Yes"!==(await n.window.showInformationMessage(`Unable to find a remote for '${p}'. Would you like to add a new remote?`,{modal:!0},{title:"Yes"},{title:"No",isCloseAffordance:!0}))?.title)return;if(await kt(u,l,p,{confirm:!1,fetch:!0,reveal:!1}),[f]=await u.getRemotes({filter:e=>e.url===p}),null==f)return}else await this.container.git.fetch(u.path,{remote:f.name});await(0,Y.ag)();try{await qt(u,void 0,x.Wb.create(`${f.name}/${c}`,u.path,{refType:"branch",name:`${f.name}/${c}`,remote:!0}));if(null==await this.container.git.getWorktree(u.path,(e=>e.branch===c)))return;this.container.git.setConfig(u.path,`branch.${c}.github-pr-owner-number`,`${o}#${r}#${h}`)}catch(e){B.Yd.error(e,"CreateWorktreeCommand","Unable to create worktree"),n.window.showErrorMessage(`Unable to create worktree for ${c}`)}}};Ya=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ja(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&qa(t,i,r),r})([(0,ke.WD)()],Ya);var Qa=Object.defineProperty,za=Object.getOwnPropertyDescriptor,Ka=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?za(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Qa(t,i,r),r};const Ja=/\$\(.+?\)|\s/g,Xa=Symbol("ShowLoading");let Za=class extends Command{constructor(e){super([s.Gh.GitCommands,s.Gh.GitCommandsBranch,s.Gh.GitCommandsCherryPick,s.Gh.GitCommandsMerge,s.Gh.GitCommandsRebase,s.Gh.GitCommandsReset,s.Gh.GitCommandsRevert,s.Gh.GitCommandsSwitch,s.Gh.GitCommandsTag,s.Gh.GitCommandsWorktree]),this.container=e,this.startedWith="menu"}preExecute(e,t){switch(e.command){case s.Gh.GitCommandsBranch:t={command:"branch"};break;case s.Gh.GitCommandsCherryPick:t={command:"cherry-pick"};break;case s.Gh.GitCommandsMerge:t={command:"merge"};break;case s.Gh.GitCommandsRebase:t={command:"rebase"};break;case s.Gh.GitCommandsReset:t={command:"reset"};break;case s.Gh.GitCommandsRevert:t={command:"revert"};break;case s.Gh.GitCommandsSwitch:t={command:"switch"};break;case s.Gh.GitCommandsTag:t={command:"tag"};break;case s.Gh.GitCommandsWorktree:t={command:"worktree"}}return this.execute(t)}async execute(e){const t=new PickCommandStep(this.container,e),i=null!=e?.command?t.find(e.command):void 0;let n,o;for(this.startedWith=null!=i?"command":"menu",o=null==i?t:await this.showLoadingIfNeeded(i,this.getCommandStep(i,t)),!0===o?.ignoreFocusOut&&(o.ignoreFocusOut=void 0);null!=o;)if(o!==t||null==i)if(n&&null==o.ignoreFocusOut&&(o.ignoreFocusOut=!0),Ii(o))o=await this.showPickStep(o,t),!0===o?.ignoreFocusOut&&(n=!0);else if(Ai(o))o=await this.showInputStep(o,t),!0===o?.ignoreFocusOut&&(n=!0);else{if(!Oi(o))break;o=await this.showCustomStep(o,t),!0===o?.ignoreFocusOut&&(n=!0)}else o=await this.getCommandStep(i,t);e?.completion?.fulfill()}async showLoadingIfNeeded(e,t){const i=await Promise.race([t,new Promise((e=>setTimeout(e,250,Xa)))]);if(i!==Xa)return i;const o=n.window.createQuickPick();o.ignoreFocusOut=!1;const r=[];let s;try{return await new Promise((async i=>{r.push(o.onDidHide((()=>i(s)))),o.title=e.title,o.placeholder="Loading...",o.busy=!0,o.enabled=!1,o.show(),s=await t,o.hide()}))}finally{o.dispose(),r.forEach((e=>{e.dispose()}))}}getButtons(e,t){const i=[];if(null!=e){if(null!=e.buttons)return i.push(...e.buttons),i;i.push(n.QuickInputButtons.Back),null!=e.additionalButtons&&i.push(...e.additionalButtons)}if(t?.canConfirm)if(t.canSkipConfirm){const e=new Ke.WillConfirmToggle(t.confirm(),(async()=>{if(null==t?.skipConfirmKey)return;const e=r.DN.get("gitCommands.skipConfirmations")??[],i=e.indexOf(t.skipConfirmKey);-1!==i?e.splice(i,1):e.push(t.skipConfirmKey),await r.DN.updateEffective("gitCommands.skipConfirmations",e)}));i.push(e)}else i.push(Ke.WillConfirmForced);return i}async getCommandStep(e,t){t.setCommand(e,"command");const i=await e.next();if(!i.done)return i.value}async nextStep(e,t,i){null!=i&&(i.busy=!0);const n=await e.next(t);if(!n.done)return null!=i&&(i.value=""),n.value}async showCustomStep(e,t){const i=await e.show(e);if(i!==Ei){if(!Ze(i))return this.nextStep(t.command,i);switch(i){case Xe.Back:return await(t?.command?.previous())??t;case Xe.Noop:return t.command?.retry();case Xe.Cancel:default:return}}}async showInputStep(e,t){const i=n.window.createInputBox();i.ignoreFocusOut=!r.DN.get("gitCommands.closeOnFocusOut")||(e.ignoreFocusOut??!1);const o=[];try{return await new Promise((async r=>{const s=async()=>{i.value="",null!=t.command&&(i.busy=!0,r(await t.command.previous()??t))},a={left:{onDidPressKey:s}};if(null!=e.onDidPressKey&&null!=e.keys&&0!==e.keys.length)for(const t of e.keys)a[t]={onDidPressKey:t=>e.onDidPressKey(i,t)};const l=this.container.keyboard.createScope(a);if(l.start(),o.push(l,i.onDidHide((()=>r(void 0))),i.onDidTriggerButton((async o=>{if(o!==n.QuickInputButtons.Back){if(o!==Ke.WillConfirmForced){if(o instanceof ToggleQuickInputButton&&null!=o.onDidClick){const n=o.onDidClick(i);return i.buttons=this.getButtons(e,t.command),!0===await n?void r(t.command?.retry()):void((0,Y.tI)(n)&&(i.buttons=this.getButtons(e,t.command)))}if(null!=e.onDidClickButton){const n=e.onDidClickButton(i,o);i.buttons=this.getButtons(e,t.command),!0===await n&&r(t.command?.retry())}}}else s()})),i.onDidChangeValue((async t=>{if(null!=l&&(0!==t.length?await l.pause(["left","right"]):await l.resume()),null==e.validate)return;const[,n]=await e.validate(t);i.validationMessage=n})),i.onDidAccept((async()=>{r(await this.nextStep(t.command,i.value,i))}))),i.buttons=this.getButtons(e,t.command),i.title=e.title,i.placeholder=e.placeholder,i.prompt=e.prompt,null!=e.value&&(i.value=e.value,null!=e.validate)){const[t,o]=await e.validate(e.value);t||null==o||(i.validationMessage={severity:n.InputBoxValidationSeverity.Error,message:o})}if(null!=t.command&&e===t&&t.setCommand(void 0,"menu"),i.show(),null!=e.value)try{i._onDidChangeValueEmitter?.fire(i.value)}catch{}}))}finally{i.dispose(),o.forEach((e=>{e.dispose()}))}}async showPickStep(e,t){const i=!r.DN.get("gitCommands.closeOnFocusOut")||(e.ignoreFocusOut??!1),o=e.ignoreFocusOut,s=n.window.createQuickPick();s.ignoreFocusOut=i;const a=[];try{return await new Promise((r=>{async function l(){s.value="",null!=t.command&&(s.busy=!0,r(await t.command.previous()??t))}async function c(){if(null!=e.onDidLoadMore){s.busy=!0;try{const t=await(e.onDidLoadMore?.(s));let i=-1;if(0!==s.activeItems.length){const e=s.activeItems[0];i=s.items.indexOf(e),tt(e)&&i--}s.items=e.items=t,i&&(s.activeItems=[s.items[i]])}finally{s.busy=!1}}}const h={left:{onDidPressKey:l}};if(null!=e.onDidPressKey&&null!=e.keys&&0!==e.keys.length)for(const t of e.keys)h[t]={onDidPressKey:t=>e.onDidPressKey(s,t)};const u=this.container.keyboard.createScope(h);u.start();let d=!1;a.push(u,s.onDidHide((()=>r(void 0))),s.onDidTriggerItemButton((async i=>{!0===await(e.onDidClickItemButton?.(s,i.button,i.item))&&r(await this.nextStep(t.command,[i.item],s))})),s.onDidTriggerButton((async i=>{if(i!==n.QuickInputButtons.Back){if(i!==Ke.WillConfirmForced)if(i!==Ke.LoadMore){if(i instanceof ToggleQuickInputButton&&null!=i.onDidClick){let n;if(null==t.command&&0!==s.activeItems.length){const e=s.activeItems[0];Ni(e)&&(n=e)}const o=i.onDidClick(s);return s.buttons=this.getButtons(null!=n?n.value:e,n??t.command),!0===await o?void r(t.command?.retry()):void((0,Y.tI)(o)&&(s.buttons=this.getButtons(null!=n?n.value:e,n??t.command)))}if(null!=e.onDidClickButton){const n=e.onDidClickButton(s,i);s.buttons=this.getButtons(e,t.command),!0===await n&&r(t.command?.retry())}}else c()}else l()})),s.onDidChangeValue((async n=>{if(null!=u&&(0!==n.length?await u.pause(["left","right"]):await u.resume()),null!=e.onDidChangeValue){if(await e.onDidChangeValue(s))return}if(0===n.length||s.ignoreFocusOut?0===n.length&&s.ignoreFocusOut&&!i&&(s.ignoreFocusOut=i,e.ignoreFocusOut=o):(s.ignoreFocusOut=!0,e.ignoreFocusOut=!0),!d){if(s.canSelectMany&&" "===n)return s.value="",void(s.selectedItems=s.selectedItems.length===s.items.length?[]:s.items);if(n.endsWith(" ")){if(s.canSelectMany&&0!==s.selectedItems.length)return;let i;if(null==t.command){const e=t.find(s.value.trim(),!0);if(null==e)return;t.setCommand(e,this.startedWith)}else{const t=s.value.trim().toLowerCase(),n=e.items.find((e=>e.label.replace(Ja,"").toLowerCase()===t));if(null==n)return;i=[n]}return void r(await this.nextStep(t.command,i,s))}}if(s.canSelectMany||null==t.command||0===n.trim().length||!d&&0!==s.activeItems.length)d=!1;else{if(null==e.onValidateValue)return;d=await e.onValidateValue(s,n.trim(),e.items)}d||s.items.length===e.items.length||(s.items=e.items)})),s.onDidChangeActive((()=>{if(null!=t.command||0===s.activeItems.length)return;const e=s.activeItems[0];Ni(e)&&(s.buttons=this.getButtons(void 0,e))})),s.onDidChangeSelection((t=>{s.canSelectMany&&(0===t.length||s.ignoreFocusOut?0===t?.length&&s.ignoreFocusOut&&!i&&(s.ignoreFocusOut=i,e.ignoreFocusOut=o):(s.ignoreFocusOut=!0,e.ignoreFocusOut=!0))})),s.onDidAccept((async()=>{let i=s.selectedItems;if(0===i.length){if(!s.canSelectMany||0===s.activeItems.length){const i=s.value.trim();if(0===i.length&&!e.allowEmpty)return;return null==e.onDidAccept?void(e.allowEmpty&&r(await this.nextStep(t.command,[],s))):(s.busy=!0,await e.onDidAccept(s)&&r(await this.nextStep(t.command,i,s)),void(s.busy=!1))}i=s.activeItems}if(1===i.length){const[e]=i;if(tt(e))switch(e.directive){case Xe.Cancel:return void r(void 0);case Xe.Back:return void l();case Xe.LoadMore:return void c();case Xe.StartPreviewTrial:return lf.instance.subscription.startPreviewTrial(),void r(void 0);case Xe.RequiresVerification:return lf.instance.subscription.resendVerification(),void r(void 0);case Xe.ExtendTrial:return lf.instance.subscription.loginOrSignUp(),void r(void 0);case Xe.RequiresPaidSubscription:return lf.instance.subscription.purchase(),void r(void 0)}}if(null==t.command){const[e]=i;if(!Ni(e))return;t.setCommand(e,this.startedWith)}if(!s.canSelectMany&&null!=e.onDidAccept){s.busy=!0;const t=await e.onDidAccept(s);if(s.busy=!1,!t)return}r(await this.nextStep(t.command,i,s))}))),s.title=e.title,s.placeholder=e.placeholder,s.matchOnDescription=Boolean(e.matchOnDescription),s.matchOnDetail=Boolean(e.matchOnDetail),s.canSelectMany=Boolean(e.multiselect),s.items=e.items,s.canSelectMany?(s.selectedItems=e.selectedItems??s.items.filter((e=>e.picked)),s.activeItems=s.selectedItems):s.activeItems=e.selectedItems??s.items.filter((e=>e.picked)),null!=t.command&&e===t&&t.setCommand(void 0,"menu"),s.buttons=this.getButtons(e,t.command);const p=e.selectValueWhenShown??!0;if(null!=e.value&&p&&(s.value=e.value),s.show(),null==e.value||p||(s.value=e.value),null!=e.value&&p)try{s._onDidChangeValueEmitter?.fire(s.value)}catch{}}))}finally{s.dispose(),a.forEach((e=>{e.dispose()}))}}};Ka([(0,H.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],Za.prototype,"execute",1),Za=Ka([(0,ke.WD)()],Za);var el=Object.defineProperty,tl=Object.getOwnPropertyDescriptor;let il=class extends Command{constructor(e){super(s.Gh.InviteToLiveShare),this.container=e}static getMarkdownCommandArgs(e){const t=void 0===e||"string"==typeof e?{email:e}:e;return super.getMarkdownCommandArgsCore(s.Gh.InviteToLiveShare,t)}preExecute(e,t){return function(e){return"viewItem"===e.type&&$.is(e.node.contributor)}(e)?((t={...t}).email=e.node.contributor.email,this.execute(t)):this.execute(t)}async execute(e){if(e?.email){const t=await this.container.vsls.getContact(e.email);if(null!=t)return t.invite()}return this.container.vsls.startSession()}};il=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?tl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&el(t,i,r),r})([(0,ke.WD)()],il);var nl=Object.defineProperty,ol=Object.getOwnPropertyDescriptor,rl=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ol(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&nl(t,i,r),r};let sl=class extends Command{constructor(e){super(s.Gh.EnableDebugLogging),this.container=e}async execute(){await r.DN.updateEffective("outputLevel",r.M7.Debug)}};sl=rl([(0,ke.WD)()],sl);let al=class extends Command{constructor(e){super(s.Gh.DisableDebugLogging),this.container=e}async execute(){await r.DN.updateEffective("outputLevel",r.M7.Errors)}};al=rl([(0,ke.WD)()],al);var ll=Object.defineProperty,cl=Object.getOwnPropertyDescriptor;let hl=class extends ActiveEditorCommand{constructor(e){super(s.Gh.OpenAssociatedPullRequestOnRemote),this.container=e}async execute(e,t){if(null==e)return;if(null==(t=$e(t,e)))return;const i=await _.YY.fromUri(t),n=e.selection.active.line;if(!(n<0))try{const e=await this.container.git.getBlameForLine(i,n);if(null==e)return;await(0,ke.P0)(s.Gh.OpenPullRequestOnRemote,{clipboard:!1,ref:e.commit.sha,repoPath:e.commit.repoPath})}catch(e){B.Yd.error(e,"OpenAssociatedPullRequestOnRemoteCommand",`getBlameForLine(${n})`)}}};hl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?cl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ll(t,i,r),r})([(0,ke.WD)()],hl);var ul=Object.defineProperty,dl=Object.getOwnPropertyDescriptor;let pl=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenBranchesOnRemote,s.Gh.Deprecated_OpenBranchesInRemote,s.Gh.CopyRemoteBranchesUrl]),this.container=e}preExecute(e,t){return xe(e)&&(t={...t,remote:e.node.remote.name}),e.command===s.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const n=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0,o=(await Rs.getBestRepositoryOrShow(n,e,i?.clipboard?"Copy Remote Branches URL":"Open Branches on Remote"))?.path;if(o)try{await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:{type:Jt.J.Branches},repoPath:o,remote:i?.remote,clipboard:i?.clipboard})}catch(e){B.Yd.error(e,"OpenBranchesOnRemoteCommand"),(0,Be.W8)("Unable to open branches on remote provider")}}};pl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?dl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ul(t,i,r),r})([(0,ke.WD)()],pl);var ml=Object.defineProperty,gl=Object.getOwnPropertyDescriptor;let fl=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenBranchOnRemote,s.Gh.Deprecated_OpenBranchInRemote,s.Gh.CopyRemoteBranchUrl]),this.container=e}preExecute(e,t){return Te(e)&&(t={...t,branch:e.node.branch.name,remote:e.node.branch.getRemoteName()}),e.command===s.Gh.CopyRemoteBranchUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const n=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0,o=(await Rs.getBestRepositoryOrShow(n,e,i?.clipboard?"Copy Remote Branch URL":"Open Branch On Remote"))?.path;if(o){i={...i};try{if(null==i.branch){const e=await Pn.show(o,i.clipboard?"Copy Remote Branch URL":"Open Branch On Remote",i.clipboard?"Choose a branch to copy the URL from":"Choose a branch to open",{autoPick:!0,filter:{branches:e=>null!=e.upstream},include:Rn.Branches,sort:{branches:{current:!0},tags:{}}});if(null==e||e instanceof CommandQuickPickItem)return;i.branch=e.ref}await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:{type:Jt.J.Branch,branch:i.branch||"HEAD"},repoPath:o,remote:i.remote,clipboard:i.clipboard})}catch(e){B.Yd.error(e,"OpenBranchOnRemoteCommand"),(0,Be.W8)("Unable to open branch on remote provider")}}}};fl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?gl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ml(t,i,r),r})([(0,ke.WD)()],fl);var wl=Object.defineProperty,_l=Object.getOwnPropertyDescriptor;let vl=class extends ActiveEditorCommand{constructor(e){super(s.Gh.OpenCurrentBranchOnRemote),this.container=e}async execute(e,t){const i=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0,n=await Rs.getBestRepositoryOrShow(i,e,"Open Current Branch Name");if(null!=n)try{const e=await n.getBranch();e?.name&&await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:{type:Jt.J.Branch,branch:e.name||"HEAD"},repoPath:n.path})}catch(e){B.Yd.error(e,"OpenCurrentBranchOnRemoteCommand"),(0,Be.W8)("Unable to open branch on remote provider")}}};vl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?_l(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&wl(t,i,r),r})([(0,ke.WD)()],vl);var yl=Object.defineProperty,bl=Object.getOwnPropertyDescriptor;let Cl=class extends Command{constructor(e){super(s.Gh.OpenChangedFiles),this.container=e}async execute(e){e={...e};try{if(null==e.uris){const t=await Rs.getRepositoryOrShow("Open All Changed Files");if(null==t)return;const i=await this.container.git.getStatusForRepo(t.uri);if(null==i)return void n.window.showWarningMessage("Unable to open changed files");e.uris=(0,Ht.DZ)(i.files,(e=>"D"!==e.status?e.uri:void 0))}(0,J.$_)(e.uris)}catch(e){B.Yd.error(e,"OpenChangedFilesCommand"),(0,Be.W8)("Unable to open all changed files")}}};Cl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?bl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&yl(t,i,r),r})([(0,ke.WD)()],Cl);var Sl=Object.defineProperty,kl=Object.getOwnPropertyDescriptor;let Pl=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenCommitOnRemote,s.Gh.Deprecated_OpenCommitInRemote,s.Gh.CopyRemoteCommitUrl]),this.container=e}static getMarkdownCommandArgs(e){const t="string"==typeof e?{sha:e}:e;return super.getMarkdownCommandArgsCore(s.Gh.OpenCommitOnRemote,t)}preExecute(e,t){let i=e.uri;if(Fe(e)){if(e.node.commit.isUncommitted)return Promise.resolve(void 0);t={...t,sha:e.node.commit.sha},i=e.node.uri}return function(e){return"timeline-item:git"===e.type}(e)&&(t={sha:e.item.ref},i=e.uri),e.command===s.Gh.CopyRemoteCommitUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,i,t)}async execute(e,t,i){let n=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0;const o=(await Rs.getBestRepositoryOrShow(n,e,i?.clipboard?"Copy Remote Commit URL":"Open Commit On Remote"))?.path;if(o){null==n&&(n=_.YY.fromRepoPath(o)),i={...i};try{if(null==i.sha){const t=null==e?0:e.selection.active.line;if(t<0)return;const o=await this.container.git.getBlameForLine(n,t,e?.document);if(null==o)return void(0,Be.zk)("Unable to open commit on remote provider");i.sha=o.commit.isUncommitted?await o.commit.getPreviousSha()??x.pk.deletedOrMissing:o.commit.sha}await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:{type:Jt.J.Commit,sha:i.sha},repoPath:o,clipboard:i.clipboard})}catch(e){B.Yd.error(e,"OpenCommitOnRemoteCommand"),(0,Be.W8)("Unable to open commit on remote provider")}}}};Pl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?kl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Sl(t,i,r),r})([(0,ke.WD)()],Pl);var Rl=Object.defineProperty,Dl=Object.getOwnPropertyDescriptor;let $l=class extends Command{constructor(e){super([s.Gh.OpenComparisonOnRemote,s.Gh.CopyRemoteComparisonUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof ResultsCommitsNode&&(t={...t,repoPath:e.node.repoPath,ref1:e.node.ref1,ref2:e.node.ref2}),e.command===s.Gh.CopyRemoteBranchesUrl&&(t={...t,clipboard:!0}),this.execute(t)}async execute(e){if(null!=e?.repoPath&&null!=e.ref1&&null!=e.ref2)try{await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:{type:Jt.J.Comparison,base:e.ref1,compare:e.ref2,notation:e.notation},repoPath:e.repoPath,clipboard:e?.clipboard})}catch(e){B.Yd.error(e,"OpenComparisonOnRemoteCommand"),(0,Be.W8)("Unable to open comparison on remote provider")}}};$l=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Dl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Rl(t,i,r),r})([(0,ke.WD)()],$l);var Tl=Object.defineProperty,Fl=Object.getOwnPropertyDescriptor;let xl=class extends Command{constructor(e){super(s.Gh.OpenFileFromRemote),this.container=e}async execute(){let e=await n.env.clipboard.readText();try{n.Uri.parse(e,!0)}catch{e=void 0}const t=await n.window.showInputBox({prompt:"Enter a remote file url to open",placeHolder:"Remote file url",value:e,ignoreFocusOut:!0});if(null==t||0===t.length)return;let i,o=await this.container.git.getLocalInfoFromRemoteUri(n.Uri.parse(t));if(null==o){if(o=await this.container.git.getLocalInfoFromRemoteUri(n.Uri.parse(t),{validate:!1}),null==o)return void n.window.showWarningMessage("Unable to parse the provided remote url.");const e="Open File...";if(await n.window.showWarningMessage("Unable to find a workspace folder that matches the provided remote url.",e)!==e)return}o.startLine&&(i=o.endLine?new n.Range(o.startLine-1,0,o.endLine,0):new n.Range(o.startLine-1,0,o.startLine-1,0));try{await(0,J.bM)(o.uri,{selection:i,rethrow:!0})}catch{const e=await n.window.showOpenDialog({title:"Open local file",defaultUri:o.uri,canSelectMany:!1,canSelectFolders:!1});if(null==e||0===e.length)return;await(0,J.bM)(e[0])}}};xl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Fl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Tl(t,i,r),r})([(0,ke.WD)()],xl);var Ol=Object.defineProperty,Al=Object.getOwnPropertyDescriptor;let Il=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenFileOnRemote,s.Gh.Deprecated_OpenFileInRemote,s.Gh.CopyRemoteFileUrl,s.Gh.CopyRemoteFileUrlWithoutRange,s.Gh.OpenFileOnRemoteFrom,s.Gh.CopyRemoteFileUrlFrom]),this.container=e}async preExecute(e,t){let i=e.uri;if(e.command===s.Gh.CopyRemoteFileUrlWithoutRange&&(t={...t,range:!1}),Fe(e)?(t={...t,range:!1},e.command===s.Gh.CopyRemoteFileUrl||e.command===s.Gh.CopyRemoteFileUrlWithoutRange||e.command===s.Gh.CopyRemoteFileUrlFrom?t.sha=e.node instanceof StatusFileNode?void 0:e.node.commit.sha:Te(e)&&(t.branchOrTag=e.node.branch?.name),i=e.node.uri):"viewItem"===e.type&&(t={...t,range:!1},i=e.node.uri??e.uri),(e.command===s.Gh.CopyRemoteFileUrl||e.command===s.Gh.CopyRemoteFileUrlWithoutRange||e.command===s.Gh.CopyRemoteFileUrlFrom)&&null==(t={...t,clipboard:!0}).sha){const i=$e(e.uri,e.editor);if(null!=i){const e=await _.YY.fromUri(i);if(e.repoPath)if(null==e.sha){const i=await this.container.git.getCommitForFile(e.repoPath,e,{firstIfNotFound:!0});null!=i&&(t.sha=i.sha)}else t.sha=e.sha}}return e.command!==s.Gh.OpenFileOnRemoteFrom&&e.command!==s.Gh.CopyRemoteFileUrlFrom||(t={...t,pickBranchOrTag:!0,range:!1}),this.execute(e.editor,i,t)}async execute(e,t,i){if(null==(t=$e(t,e)))return;const o=await _.YY.fromUri(t);if(o.repoPath){i={range:!0,...i};try{let a=await this.container.git.getRemotesWithProviders(o.repoPath);const l=i.range&&null!=e&&qe.n.equals(e.document.uri,t)?new n.Range(e.selection.start.with({line:e.selection.start.line+1}),e.selection.end.with({line:e.selection.end.line+(0===e.selection.end.character?0:1)})):void 0;let c=i.sha??o.sha;if(null==i.branchOrTag&&null!=c&&!x.pk.isSha(c)&&0!==a.length){const[e,t]=(0,k.pW)(c,"/");if(null!=t){const n=a.find((t=>t.name===e));null!=n&&(i.branchOrTag=t,c=void 0,a=[n])}}if(null==i.sha&&null==i.branchOrTag||i.pickBranchOrTag){let e;if(i.pickBranchOrTag||(e=await this.container.git.getBranch(o.repoPath)),null==e?.upstream){const e=await Pn.show(o.repoPath,i.clipboard?`Copy Remote File URL From${(0,k.vk)(s.NE.Dot,2,2)}${o.relativePath}`:`Open File on Remote From${(0,k.vk)(s.NE.Dot,2,2)}${o.relativePath}`,`Choose a branch or tag to ${i.clipboard?"copy":"open"} the file revision from`,{allowEnteringRefs:!0,autoPick:!0,filter:{branches:e=>e.remote||null!=e.upstream},picked:i.branchOrTag,sort:{branches:{current:!0,orderBy:r.Vz.DateDesc},tags:{orderBy:r.RV.DateDesc}}});if(null==e)return;if("branch"===e.refType){if(e.remote){i.branchOrTag=(0,v.S3)(e.name);const t=(0,v.Lo)(e.name),n=a.find((e=>e.name===t));null!=n&&(a=[n])}else i.branchOrTag=e.name;c=void 0}else"tag"===e.refType?(i.branchOrTag=e.ref,c=void 0):(i.branchOrTag=void 0,c=e.ref)}else i.branchOrTag=e.name}await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:{type:null==c?Jt.J.File:Jt.J.Revision,branchOrTag:i.branchOrTag??"HEAD",fileName:o.relativePath,range:l,sha:c??void 0},repoPath:o.repoPath,remotes:a,clipboard:i.clipboard})}catch(e){B.Yd.error(e,"OpenFileOnRemoteCommand"),(0,Be.W8)("Unable to open file on remote provider")}}}};Il=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Al(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ol(t,i,r),r})([(0,ke.WD)()],Il);var El=Object.defineProperty,Nl=Object.getOwnPropertyDescriptor;let Ul=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenFileAtRevision,s.Gh.OpenBlamePriorToChange]),this.container=e}static getMarkdownCommandArgs(e,t,i){let o;if(e instanceof n.Uri){o={revisionUri:e,line:i,annotationType:t}}else o=e;return super.getMarkdownCommandArgsCore(s.Gh.OpenFileAtRevision,o)}async preExecute(e,t){if(e.command===s.Gh.OpenBlamePriorToChange){if(null==(t={...t,annotationType:r.VP.Blame}).revisionUri&&null!=e.editor){const i=e.editor.selection.active.line;if(i>=0)try{const n=await _.YY.fromUri(e.editor.document.uri),o=await this.container.git.getBlameForLine(n,i);if(null!=o)if(o.commit.isUncommitted){const e=await o.commit.getPreviousComparisonUrisForLine(i);if(null==e?.previous)return void(0,Be.RR)(o.commit);t.revisionUri=this.container.git.getRevisionUri(e.previous)}else{if(null==(null!=o?await(o?.commit.getPreviousSha()):void 0))return void(0,Be.RR)(o.commit);t.revisionUri=this.container.git.getRevisionUri(o.commit.getGitUri(!0))}}catch(e){B.Yd.error(e,"OpenBlamePriorToChangeCommand")}}if(null==t.revisionUri)return void(0,Be.W8)("Unable to open blame")}return this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=$e(t,e)))return;const n=await _.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri){const e=this.container.git.getLogForFile(n.repoPath,n.fsPath).then((e=>e??(n.sha?this.container.git.getLogForFile(n.repoPath,n.fsPath,{ref:n.sha}):void 0))),t=`Open ${i.annotationType===r.VP.Blame?"Blame":"File"} at Revision${(0,k.vk)(s.NE.Dot,2,2)}`,o=await $a.show(e,`${t}${n.getFormattedFileName({suffix:n.sha?`:${x.pk.shorten(n.sha)}`:void 0,truncateTo:s.d$-t.length})}`,`Choose a commit to ${i.annotationType===r.VP.Blame?"blame":"open"} the file revision from`,{picked:n.sha,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{await gt(t.item.file,t.item,{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})},showOtherReferences:[CommandQuickPickItem.fromCommand("Choose a Branch or Tag...",s.Gh.OpenFileAtRevisionFrom),CommandQuickPickItem.fromCommand("Choose a Stash...",s.Gh.OpenFileAtRevisionFrom,{stash:!0})]});if(null==o?.file)return;return void await gt(o.file,o,{annotationType:i.annotationType,line:i.line,...i.showOptions})}await gt(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){B.Yd.error(e,"OpenFileAtRevisionCommand"),(0,Be.W8)("Unable to open file at revision")}}};Ul=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Nl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&El(t,i,r),r})([(0,ke.WD)()],Ul);var Ll=Object.defineProperty,Ml=Object.getOwnPropertyDescriptor;let Wl=class extends ActiveEditorCommand{constructor(e){super(s.Gh.OpenFileAtRevisionFrom),this.container=e}async execute(e,t,i){if(null==(t=$e(t,e)))return;const n=await _.YY.fromUri(t);if(n.repoPath){if(null==(i={...i}).line&&(i.line=e?.selection.active.line??0),null==i.reference)if(i?.stash){const e=this.container.git.getRelativePath(n,n.repoPath),t=`Open Changes with Stash${(0,k.vk)(s.NE.Dot,2,2)}`,o=await Ta.show(this.container.git.getStash(n.repoPath),`${t}${n.getFormattedFileName({truncateTo:s.d$-t.length})}`,"Choose a stash to compare with",{filter:t=>t.files?.some((t=>t.path===e||t.originalPath===e))??!0});if(null==o)return;i.reference=o}else{const e=`Open File at Branch or Tag${(0,k.vk)(s.NE.Dot,2,2)}`,t=await Pn.show(n.repoPath,`${e}${n.getFormattedFileName({truncateTo:s.d$-e.length})}`,"Choose a branch or tag to open the file revision from",{allowEnteringRefs:!0,keys:["right","alt+right","ctrl+right"],onDidPressKey:async(e,t)=>{const[o]=t.activeItems;null!=o&&await gt(this.container.git.getRevisionUri(o.ref,n.fsPath,n.repoPath),{annotationType:i.annotationType,line:i.line,preserveFocus:!0,preview:!1})}});if(null==t)return;i.reference=t}await gt(this.container.git.getRevisionUri(i.reference.ref,n.fsPath,n.repoPath),{annotationType:i.annotationType,line:i.line,...i.showOptions})}else(0,Be.bi)("Unable to open file revision")}};Wl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ml(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ll(t,i,r),r})([(0,ke.WD)()],Wl);var Bl=Object.defineProperty,Gl=Object.getOwnPropertyDescriptor;let Vl=class extends Command{constructor(e){super([s.Gh.OpenOnRemote,s.Gh.Deprecated_OpenInRemote]),this.container=e}async execute(e){if(null==e?.resource)return;let t="remotes"in e?e.remotes:await this.container.git.getRemotesWithProviders(e.repoPath);if(null!=e.remote){const i=t.filter((t=>t.name===e.remote));t.length>0&&(t=i)}try{let i=function(t){return e?.clipboard?`Copy Link to ${t} for ${o}`:`Open Branch on ${o}`};if(e.resource.type===Jt.J.Branch){const[i,n]=(0,k.pW)(e.resource.branch,"/");if(null!=n){const o=t.find((e=>e.name===i));null!=o&&(e.resource.branch=n,t=[o])}}else if(e.resource.type===Jt.J.Revision){const{commit:t,fileName:i}=e.resource;if(null!=t){const n=await t.findFile(i);e.resource.sha="D"===n?.status?await this.container.git.resolveReference(t.repoPath,`${t.sha}^`,i):t.sha}}const n=O.ss.getHighlanderProviders(t),o=n?.length?n[0].name:"Remote",r={autoPick:"default",clipboard:e.clipboard,setDefault:!0};let a,l="Choose which remote to "+(e.clipboard?"copy the link for":"open on");switch(e.resource.type){case Jt.J.Branch:a=`${i("Branch")}${(0,k.vk)(s.NE.Dot,2,2)}${e.resource.branch}`;break;case Jt.J.Branches:a=i("Branches");break;case Jt.J.Commit:a=`${i("Commit")}${(0,k.vk)(s.NE.Dot,2,2)}${x.pk.shorten(e.resource.sha)}`;break;case Jt.J.Comparison:a=`${i("Comparison")}${(0,k.vk)(s.NE.Dot,2,2)}${x.pk.createRange(e.resource.base,e.resource.compare,e.resource.notation??"...")}`;break;case Jt.J.CreatePullRequest:r.autoPick=!0,r.setDefault=!1,a=`${e.clipboard?`Copy Create Pull Request Link for ${o}`:`Create Pull Request on ${o}`}${(0,k.vk)(s.NE.Dot,2,2)}${e.resource.base?.branch?x.pk.createRange(e.resource.base.branch,e.resource.compare.branch,"..."):e.resource.compare.branch}`,l="Choose which remote to "+(e.clipboard?"copy the create pull request link for":"create the pull request on");break;case Jt.J.File:a=`${i("File")}${(0,k.vk)(s.NE.Dot,2,2)}${e.resource.fileName}`;break;case Jt.J.Repo:a=i("Repository");break;case Jt.J.Revision:a=`${i("File")}${(0,k.vk)(s.NE.Dot,2,2)}${x.pk.shorten(e.resource.sha)}${(0,k.vk)(s.NE.Dot,1,1)}${e.resource.fileName}`}const c=await Kt.show(a,l,e.resource,t,r);await(c?.execute())}catch(e){B.Yd.error(e,"OpenOnRemoteCommand"),(0,Be.W8)("Unable to open in remote provider")}}};Vl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Gl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Bl(t,i,r),r})([(0,ke.WD)()],Vl);var Hl=Object.defineProperty,ql=Object.getOwnPropertyDescriptor;let jl=class extends Command{constructor(e){super([s.Gh.OpenIssueOnRemote,s.Gh.CopyRemoteIssueUrl,s.Gh.OpenAutolinkUrl,s.Gh.CopyAutolinkUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof AutolinkedItemNode&&(t={...t,issue:{url:e.node.item.url},clipboard:e.command===s.Gh.CopyRemoteIssueUrl||e.command===s.Gh.CopyAutolinkUrl}),this.execute(t)}async execute(e){e.clipboard?await n.env.clipboard.writeText(e.issue.url):n.env.openExternal(n.Uri.parse(e.issue.url))}};jl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ql(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Hl(t,i,r),r})([(0,ke.WD)()],jl);var Yl=Object.defineProperty,Ql=Object.getOwnPropertyDescriptor;let zl=class extends Command{constructor(e){super([s.Gh.OpenPullRequestOnRemote,s.Gh.CopyRemotePullRequestUrl]),this.container=e}preExecute(e,t){return"viewItem"===e.type&&e.node instanceof ao&&(t={...t,pr:{url:e.node.pullRequest.url},clipboard:e.command===s.Gh.CopyRemotePullRequestUrl}),this.execute(t)}async execute(e){if(null==e?.pr){if(null==e?.repoPath||null==e?.ref)return;const t=await this.container.git.getBestRemoteWithRichProvider(e.repoPath);if(null==t?.provider)return;const i=await this.container.git.getPullRequestForCommit(e.ref,t.provider);if(null==i)return;(e={...e}).pr=i}e.clipboard?await n.env.clipboard.writeText(e.pr.url):n.env.openExternal(n.Uri.parse(e.pr.url))}};zl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ql(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Yl(t,i,r),r})([(0,ke.WD)()],zl);var Kl=Object.defineProperty,Jl=Object.getOwnPropertyDescriptor;let Xl=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenRepoOnRemote,s.Gh.Deprecated_OpenRepoInRemote,s.Gh.CopyRemoteRepositoryUrl]),this.container=e}preExecute(e,t){return xe(e)&&(t={...t,remote:e.node.remote.name}),e.command===s.Gh.CopyRemoteRepositoryUrl&&(t={...t,clipboard:!0}),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const n=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0,o=(await Rs.getBestRepositoryOrShow(n,e,i?.clipboard?"Choose which repository to copy the url from":"Choose which repository to open on remote"))?.path;if(o)try{await(0,ke.P0)(s.Gh.OpenOnRemote,{resource:{type:Jt.J.Repo},repoPath:o,remote:i?.remote,clipboard:i?.clipboard})}catch(e){B.Yd.error(e,"OpenRepoOnRemoteCommand"),(0,Be.W8)("Unable to open repository on remote provider")}}};Xl=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Jl(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Kl(t,i,r),r})([(0,ke.WD)()],Xl);var Zl=Object.defineProperty,ec=Object.getOwnPropertyDescriptor;let tc=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenRevisionFile,s.Gh.OpenRevisionFileInDiffLeft,s.Gh.OpenRevisionFileInDiffRight]),this.container=e}async execute(e,t,i){if(null==(t=$e(t,e)))return;const n=await _.YY.fromUri(t);null==(i={...i}).line&&(i.line=e?.selection.active.line??0);try{if(null==i.revisionUri)if(n?.sha){const e=await this.container.git.getCommit(n.repoPath,n.sha);i.revisionUri="D"===e?.file?.status?this.container.git.getRevisionUri(await e.getPreviousSha()??x.pk.deletedOrMissing,e.file,e.repoPath):this.container.git.getRevisionUri(n)}else i.revisionUri=this.container.git.getRevisionUri(n);await gt(i.revisionUri,{annotationType:i.annotationType,line:i.line,...i.showOptions})}catch(e){B.Yd.error(e,"OpenRevisionFileCommand"),(0,Be.W8)("Unable to open file revision")}}};tc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ec(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Zl(t,i,r),r})([(0,ke.WD)()],tc);var ic=Object.defineProperty,nc=Object.getOwnPropertyDescriptor;let oc=class extends ActiveEditorCommand{constructor(e){super([s.Gh.OpenWorkingFile,s.Gh.OpenWorkingFileInDiffLeft,s.Gh.OpenWorkingFileInDiffRight]),this.container=e}async execute(e,t,i){null==(i={...i}).line&&(i.line=e?.selection.active.line);try{if(null==i.uri){if(null==(t=$e(t,e)))return}else t=i.uri;if(i.uri=await _.YY.fromUri(t),(0,_.uy)(i.uri)&&i.uri.sha){const e=await this.container.git.getWorkingUri(i.uri.repoPath,i.uri);if(void 0===e)return void n.window.showWarningMessage("Unable to open working file. File could not be found in the working tree");i.uri=new _.YY(e,i.uri.repoPath)}void 0!==i.line&&0!==i.line&&(void 0===i.showOptions&&(i.showOptions={}),i.showOptions.selection=new n.Range(i.line,0,i.line,0));const o=await(0,J.GR)(i.uri,{...i.showOptions,throwOnError:!0});if(void 0===i.annotationType)return;await this.container.fileAnnotations.show(o,i.annotationType,{selection:{line:i.line}})}catch(e){B.Yd.error(e,"OpenWorkingFileCommand"),(0,Be.W8)("Unable to open working file")}}};oc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?nc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ic(t,i,r),r})([(0,ke.WD)()],oc);var rc=Object.defineProperty,sc=Object.getOwnPropertyDescriptor,ac=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?sc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&rc(t,i,r),r};let lc=class extends Command{constructor(e){super(s.Gh.DisableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!1)}};lc=ac([(0,ke.WD)()],lc);let cc=class extends Command{constructor(e){super(s.Gh.EnableRebaseEditor),this.container=e}execute(){return this.container.rebaseEditor.setEnabled(!0)}};cc=ac([(0,ke.WD)()],cc);var hc=Object.defineProperty,uc=Object.getOwnPropertyDescriptor;let dc=class extends Command{constructor(e){super(s.Gh.RefreshHover),this.container=e}async execute(){await(0,ke.dO)(s.nA.EditorShowHover)}};dc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?uc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&hc(t,i,r),r})([(0,ke.WD)()],dc);var pc=Object.defineProperty,mc=Object.getOwnPropertyDescriptor,gc=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?mc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&pc(t,i,r),r};let fc=class extends Command{constructor(e){super(s.Gh.ConnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=O.ss.is(e)?{remote:e.id,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(s.Gh.ConnectRemoteProvider,t)}preExecute(e,t){return xe(e)&&(t={...t,remote:e.node.remote.id,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i,n;if(null==e?.repoPath){const e=new Map;for(const t of this.container.git.openRepositories){const i=await t.getRichRemote();null==i?.provider||await i.provider.isConnected()||e.set(t,i)}if(0===e.size)return!1;if(1===e.size){let i;[i,t]=(0,q.Ps)(e),n=i.path}else{const i=await Rs.show(void 0,"Choose which repository to connect to the remote provider",[...e.keys()]);if(null==i?.item)return;n=i.repoPath,t=e.get(i.item)}}else if(null==e?.remote){if(n=e.repoPath,t=await this.container.git.getBestRemoteWithRichProvider(n,{includeDisconnected:!0}),null==t)return!1}else if(n=e.repoPath,i=await this.container.git.getRemotesWithProviders(n),t=i.find((t=>t.id===e.remote)),!t?.hasRichProvider())return!1;const o=await t.provider.connect();return o&&!(i??await this.container.git.getRemotesWithProviders(n)).some((e=>e.default))&&await t.setAsDefault(!0),o}};fc=gc([(0,ke.WD)()],fc);let wc=class extends Command{constructor(e){super(s.Gh.DisconnectRemoteProvider),this.container=e}static getMarkdownCommandArgs(e){let t;return t=O.ss.is(e)?{remote:e.id,repoPath:e.repoPath}:e,super.getMarkdownCommandArgsCore(s.Gh.DisconnectRemoteProvider,t)}preExecute(e,t){return xe(e)&&(t={...t,remote:e.node.remote.id,repoPath:e.node.remote.repoPath}),this.execute(t)}async execute(e){let t,i;if(null==e?.repoPath){const e=new Map;for(const t of this.container.git.openRepositories){const i=await t.getRichRemote(!0);null!=i&&e.set(t,i)}if(0===e.size)return;if(1===e.size){let n;[n,t]=(0,q.Ps)(e),i=n.path}else{const n=await Rs.show(void 0,"Choose which repository to disconnect from the remote provider",[...e.keys()]);if(null==n?.item)return;i=n.repoPath,t=e.get(n.item)}}else if(null==e?.remote){if(i=e.repoPath,t=await this.container.git.getBestRemoteWithRichProvider(i,{includeDisconnected:!1}),null==t)return}else if(i=e.repoPath,t=(await this.container.git.getRemotesWithProviders(i)).find((t=>t.id===e.remote)),!t?.hasRichProvider())return;return t.provider.disconnect()}};wc=gc([(0,ke.WD)()],wc);var _c=Object.defineProperty,vc=Object.getOwnPropertyDescriptor,yc=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?vc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&_c(t,i,r),r};let bc=class extends Command{constructor(e){super(s.Gh.FetchRepositories),this.container=e}async execute(){return Pe({command:"fetch",state:{repos:this.container.git.openRepositories}})}};bc=yc([(0,ke.WD)()],bc);let Cc=class extends Command{constructor(e){super(s.Gh.PullRepositories),this.container=e}async execute(){return Pe({command:"pull",state:{repos:this.container.git.openRepositories}})}};Cc=yc([(0,ke.WD)()],Cc);let Sc=class extends Command{constructor(e){super(s.Gh.PushRepositories),this.container=e}async execute(){return Pe({command:"push",state:{repos:this.container.git.openRepositories}})}};Sc=yc([(0,ke.WD)()],Sc);var kc=Object.defineProperty,Pc=Object.getOwnPropertyDescriptor,Rc=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Pc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&kc(t,i,r),r};let Dc=class extends Command{constructor(e){super(s.Gh.ResetAvatarCache),this.container=e}execute(){(0,b.E3)("all")}};Dc=Rc([(0,ke.WD)()],Dc);let $c=class extends Command{constructor(e){super(s.Gh.ResetSuppressedWarnings),this.container=e}async execute(){await r.DN.update("advanced.messages",void 0,n.ConfigurationTarget.Global)}};$c=Rc([(0,ke.WD)()],$c);let Tc=class extends Command{constructor(e){super(s.Gh.ResetTrackedUsage),this.container=e}async execute(){await this.container.usage.reset()}};Tc=Rc([(0,ke.WD)()],Tc);var Fc=Object.defineProperty,xc=Object.getOwnPropertyDescriptor,Oc=(e=>(e.GitLens="gitlens",e.SourceControl="scm",e))(Oc||{});let Ac=class extends Command{constructor(e){super(s.Gh.SetViewsLayout),this.container=e}async execute(e){let t=e?.layout;if(null==t){const e=await n.window.showQuickPick([{label:"Source Control Layout",description:"(default)",detail:"Shows all the views together on the Source Control side bar",layout:"scm"},{label:"GitLens Layout",description:"",detail:"Shows all the views together on the GitLens side bar",layout:"gitlens"}],{placeHolder:"Choose a GitLens views layout"});if(null==e)return;t=e.layout}this.container.storage.store("views:layout",t);const i=r.S4.filter((e=>"contributors"!==e));switch(t){case"gitlens":try{let e=0;for(;e++<2;)await(0,ke.dO)(s.nA.MoveViews,{viewIds:i.map((e=>`gitlens.views.${e}`)),destinationId:"workbench.view.extension.gitlens"})}catch{}break;case"scm":try{let e=0;for(;e++<2;)await(0,ke.dO)(s.nA.MoveViews,{viewIds:i.map((e=>`gitlens.views.${e}`)),destinationId:"workbench.view.scm"})}catch{for(const e of i)await(0,ke.P0)(`gitlens.views.${e}.resetViewLocation`)}}}};Ac=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?xc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Fc(t,i,r),r})([(0,ke.WD)()],Ac);var Ic=Object.defineProperty,Ec=Object.getOwnPropertyDescriptor;let Nc=class extends Command{constructor(e){super([s.Gh.SearchCommits,s.Gh.SearchCommitsInView]),this.container=e}preExecute(e,t){return e.command===s.Gh.SearchCommitsInView?(t={...t}).showResultsInSideBar=!0:"viewItem"===e.type&&((t={...t}).showResultsInSideBar=!0,e.node instanceof ns&&(t.repoPath=e.node.repoPath,t.search=e.node.search,t.prefillOnly=!0),Oe(e)&&(t.repoPath=e.node.repo.path)),this.execute(t)}async execute(e){await Pe({command:"search",prefillOnly:e?.prefillOnly,state:{repo:e?.repoPath,...e?.search,showResultsInSideBar:r.DN.get("gitCommands.search.showResultsInSideBar")??e?.showResultsInSideBar,openPickInView:e?.openPickInView??!1}})}};Nc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Ec(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ic(t,i,r),r})([(0,ke.WD)()],Nc);var Uc=Object.defineProperty,Lc=Object.getOwnPropertyDescriptor;let Mc=class extends ActiveEditorCommand{constructor(e){super([s.Gh.ShowCommitInView,s.Gh.ShowInDetailsView,s.Gh.ShowCommitsInView]),this.container=e}static getMarkdownCommandArgs(e,t){const i="string"==typeof e?{refs:[e],repoPath:t}:e;return super.getMarkdownCommandArgsCore(s.Gh.ShowCommitInView,i)}preExecute(e,t){return"viewItem"===e.type&&(t={...t},Fe(e)&&(t.refs=[e.node.commit.sha],t.repoPath=e.node.commit.repoPath)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(void 0===(i={...i}).refs){if(null==(t=$e(t,e)))return;const n=await _.YY.fromUri(t);if(i.repoPath=n.repoPath,null!=e)try{const t=e.document.isDirty?await this.container.git.getBlameForRangeContents(n,e.selection,e.document.getText()):await this.container.git.getBlameForRange(n,e.selection);if(void 0===t)return(0,Be.zk)("Unable to find commits");i.refs=[...(0,q.DZ)(t.commits.values(),(e=>e.isUncommitted?void 0:e.ref))]}catch(e){return B.Yd.error(e,"ShowCommitsInViewCommand","getBlameForRange"),(0,Be.W8)("Unable to find commits")}else{if(null==n.sha)return;i.refs=[n.sha]}}return 1===i.refs.length?bt(x.Wb.create(i.refs[0],i.repoPath,{refType:"revision"})):Pe({command:"search",state:{repo:i?.repoPath,query:(n=i.refs,n.map((e=>`#:${"string"==typeof e?x.pk.shorten(e):e.name}`)).join(" ")),showResultsInSideBar:!0}});var n}};Mc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Lc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Uc(t,i,r),r})([(0,ke.WD)()],Mc);var Wc=Object.defineProperty,Bc=Object.getOwnPropertyDescriptor;let Gc=class extends Command{constructor(e){super(s.Gh.ShowLastQuickPick),this.container=e}execute(){const e=Ue;if(void 0===e)return Promise.resolve(void 0);try{return n.commands.executeCommand(e.command,...e.args)}catch(e){return B.Yd.error(e,"ShowLastQuickPickCommand"),(0,Be.W8)("Unable to show last quick pick")}}};Gc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Bc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Wc(t,i,r),r})([(0,ke.WD)()],Gc);var Vc=Object.defineProperty,Hc=Object.getOwnPropertyDescriptor;let qc=class extends ActiveEditorCachedCommand{constructor(e){super([s.Gh.ShowQuickBranchHistory,s.Gh.ShowQuickCurrentBranchHistory]),this.container=e}preExecute(e,t){return e.command===s.Gh.ShowQuickCurrentBranchHistory&&((t={...t}).branch="HEAD"),this.execute(e.editor,e.uri,t)}async execute(e,t,i){const n=null!=(t=$e(t,e))?await _.YY.fromUri(t):void 0,o=i?.repoPath??n?.repoPath??this.container.git.highlander?.path;let r;return null!=o&&(null!=i?.branch?r="HEAD"===i.branch?"HEAD":x.Wb.create(i.branch,o,{refType:"branch",name:i.branch,remote:!1}):null!=i?.tag&&(r=x.Wb.create(i.tag,o,{refType:"tag",name:i.tag}))),Pe({command:"log",state:null!=o?{repo:o,reference:r}:{}})}};qc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Hc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Vc(t,i,r),r})([(0,ke.WD)()],qc);var jc=Object.defineProperty,Yc=Object.getOwnPropertyDescriptor;let Qc=class extends ActiveEditorCachedCommand{constructor(e){super([s.Gh.RevealCommitInView,s.Gh.ShowQuickCommit]),this.container=e}static getMarkdownCommandArgs(e,t){const i="string"==typeof e?{sha:e,repoPath:t}:e;return super.getMarkdownCommandArgsCore(s.Gh.ShowQuickCommit,i)}preExecute(e,t){return e.command===s.Gh.RevealCommitInView&&((t={...t}).revealInView=!0),"viewItem"===e.type&&((t={...t}).sha=e.node.uri.sha,Fe(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){let n,o;if(null==i?.commit)if(null!=i?.repoPath&&null!=i.sha)o=i.repoPath,n=_.YY.fromRepoPath(o);else{if(null==(t=$e(t,e)))return;n=await _.YY.fromUri(t),o=n.repoPath}else null==i.sha&&(i.sha=i.commit.sha),n=i.commit.getGitUri(),o=i.commit.repoPath,null==t&&(t=i.commit.file?.uri);if(null==(i={...i}).sha){if(null==e)return;const t=e.selection.active.line;if(t<0)return;try{const e=await this.container.git.getBlameForLine(n,t);if(null==e)return void(0,Be.zk)("Unable to show commit");if(e.commit.isUncommitted)return void(0,Be.f3)("Unable to show commit");i.sha=e.commit.sha,o=e.commit.repoPath,i.commit=e.commit}catch(e){return B.Yd.error(e,"ShowQuickCommitCommand",`getBlameForLine(${t})`),void(0,Be.W8)("Unable to show commit")}}try{if(null!=i.commit&&null==i.commit.file||(null!=i.repoLog&&(i.commit=i.repoLog.commits.get(i.sha),null==i.commit&&(i.repoLog=void 0)),null==i.repoLog&&(i.commit=await this.container.git.getCommit(o,i.sha))),null==i.commit)return void(0,Be.G)("Unable to show commit");if(i.revealInView)return void await vt(i.commit,{select:!0,focus:!0,expand:!0});await Pe({command:"show",state:{repo:o,reference:i.commit}})}catch(e){B.Yd.error(e,"ShowQuickCommitCommand"),(0,Be.W8)("Unable to show commit")}}};Qc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Yc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&jc(t,i,r),r})([(0,ke.WD)()],Qc);var zc=Object.defineProperty,Kc=Object.getOwnPropertyDescriptor;let Jc=class extends ActiveEditorCachedCommand{constructor(e){super([s.Gh.ShowQuickCommitFile,s.Gh.ShowQuickCommitRevision,s.Gh.ShowQuickCommitRevisionInDiffLeft,s.Gh.ShowQuickCommitRevisionInDiffRight]),this.container=e}static getMarkdownCommandArgs(e){return super.getMarkdownCommandArgsCore(s.Gh.ShowQuickCommitFile,e)}async preExecute(e,t){if(null!=e.editor&&e.command.startsWith(s.Gh.ShowQuickCommitRevision)){t={...t};const i=await _.YY.fromUri(e.editor.document.uri);t.sha=i.sha}return"viewItem"===e.type&&((t={...t}).sha=e.node.uri.sha,Fe(e)&&(t.commit=e.node.commit)),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=$e(t,e)))return;let o;if(null!=(i={...i}).revisionUri?(o=_.YY.fromRevisionUri(n.Uri.parse(i.revisionUri,!0)),i.sha=o.sha):o=await _.YY.fromUri(t),null==i.sha){if(null==e)return;const t=e.selection.active.line;if(t<0)return;try{const e=await this.container.git.getBlameForLine(o,t);if(null==e)return void(0,Be.zk)("Unable to show commit file details");if(e.commit.isUncommitted)return void(0,Be.f3)("Unable to show commit file details");i.sha=e.commit.sha,i.commit=e.commit}catch(e){return B.Yd.error(e,"ShowQuickCommitFileDetailsCommand",`getBlameForLine(${t})`),void(0,Be.W8)("Unable to show commit file details")}}try{if(null==i.commit&&(null!=i.fileLog&&(i.commit=i.fileLog.commits.get(i.sha),null==i.commit&&(i.fileLog=void 0)),null==i.fileLog)){const e=i.commit?.repoPath??o.repoPath;if(i.commit=await this.container.git.getCommitForFile(e,o,{ref:i.sha}),null==i.commit)return void(0,Be.G)("Unable to show commit file details")}if(null==i.commit)return void(0,Be.G)("Unable to show commit file details");const e=i.commit?.file?.path??o.fsPath;(0,y.f_)(i.commit)&&null==i.commit.files&&await i.commit.ensureFullDetails(),await Pe({command:"show",state:{repo:i.commit.repoPath,reference:i.commit,fileName:e}})}catch(e){B.Yd.error(e,"ShowQuickCommitFileDetailsCommand"),(0,Be.W8)("Unable to show commit file details")}}};Jc=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Kc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&zc(t,i,r),r})([(0,ke.WD)()],Jc);var Xc=Object.defineProperty,Zc=Object.getOwnPropertyDescriptor;let eh=class extends ActiveEditorCachedCommand{constructor(e){super([s.Gh.OpenFileHistory,s.Gh.OpenFolderHistory,s.Gh.ShowQuickFileHistory,s.Gh.QuickOpenFileHistory,s.Gh.Deprecated_ShowFileHistoryInView]),this.container=e}preExecute(e,t){return e.command!==s.Gh.OpenFileHistory&&e.command!==s.Gh.OpenFolderHistory&&e.command!==s.Gh.Deprecated_ShowFileHistoryInView||((t={...t}).showInSideBar=!0),this.execute(e.editor,e.uri,t)}async execute(e,t,i){if(null==(t=$e(t,e)))return;const n=await _.YY.fromUri(t);i?.showInSideBar?await this.container.fileHistoryView.showHistoryForUri(n):await Pe({command:"log",state:null!=n?.repoPath?{repo:n.repoPath,reference:i?.reference??"HEAD",fileName:n.relativePath}:{}})}};eh=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Zc(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Xc(t,i,r),r})([(0,ke.WD)()],eh);var th=Object.defineProperty,ih=Object.getOwnPropertyDescriptor;let nh=class extends Command{constructor(e){super(s.Gh.ShowQuickRepoStatus),this.container=e}async execute(e){return Pe({command:"status",state:{repo:e?.repoPath}})}};nh=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?ih(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&th(t,i,r),r})([(0,ke.WD)()],nh);var oh=Object.defineProperty,rh=Object.getOwnPropertyDescriptor;let sh=class extends Command{constructor(e){super(s.Gh.ShowQuickStashList),this.container=e}execute(e){return Pe({command:"stash",state:{subcommand:"list",repo:e?.repoPath}})}};sh=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?rh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&oh(t,i,r),r})([(0,ke.WD)()],sh);var ah=Object.defineProperty,lh=Object.getOwnPropertyDescriptor;let ch=class extends Command{constructor(e){super([s.Gh.ShowBranchesView,s.Gh.ShowCommitDetailsView,s.Gh.ShowCommitsView,s.Gh.ShowContributorsView,s.Gh.ShowFileHistoryView,s.Gh.ShowLineHistoryView,s.Gh.ShowRemotesView,s.Gh.ShowRepositoriesView,s.Gh.ShowSearchAndCompareView,s.Gh.ShowStashesView,s.Gh.ShowTagsView,s.Gh.ShowTimelineView,s.Gh.ShowWorktreesView,s.Gh.ShowHomeView]),this.container=e}preExecute(e){return this.execute(e.command)}async execute(e){switch(e){case s.Gh.ShowBranchesView:return this.container.branchesView.show();case s.Gh.ShowCommitDetailsView:return this.container.commitDetailsView.show();case s.Gh.ShowCommitsView:return this.container.commitsView.show();case s.Gh.ShowContributorsView:return this.container.contributorsView.show();case s.Gh.ShowFileHistoryView:return this.container.fileHistoryView.show();case s.Gh.ShowHomeView:return this.container.homeView.show();case s.Gh.ShowLineHistoryView:return this.container.lineHistoryView.show();case s.Gh.ShowRemotesView:return this.container.remotesView.show();case s.Gh.ShowRepositoriesView:return this.container.repositoriesView.show();case s.Gh.ShowSearchAndCompareView:return this.container.searchAndCompareView.show();case s.Gh.ShowStashesView:return this.container.stashesView.show();case s.Gh.ShowTagsView:return this.container.tagsView.show();case s.Gh.ShowTimelineView:return this.container.timelineView.show();case s.Gh.ShowWorktreesView:return this.container.worktreesView.show()}return Promise.resolve(void 0)}};ch=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?lh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ah(t,i,r),r})([(0,ke.WD)()],ch);var hh=Object.defineProperty,uh=Object.getOwnPropertyDescriptor;let dh=class extends Command{constructor(e){super(s.Gh.StashApply),this.container=e}async preExecute(e,t){return Fe(e)?(null==e.node.commit.message&&await e.node.commit.ensureFullDetails(),t={...t,stashItem:e.node.commit}):Oe(e)&&(t={...t,repoPath:e.node.repo.path}),this.execute(t)}async execute(e){return e?.deleteAfter?(t=e?.repoPath??e?.stashItem?.repoPath,i=e?.stashItem,Pe({command:"stash",state:{subcommand:"pop",repo:t,reference:i}})):Nt(e?.repoPath??e?.stashItem?.repoPath,e?.stashItem);var t,i}};dh=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?uh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&hh(t,i,r),r})([(0,ke.WD)()],dh);var ph=Object.defineProperty,mh=Object.getOwnPropertyDescriptor;let gh=class extends Command{constructor(e){super([s.Gh.StashSave,s.Gh.StashSaveFiles]),this.container=e}async preExecute(e,t){if(function(e){if("viewItem"!==e.type)return!1;const t=e.node;return null!=t.file&&(null!=t.file.repoPath||null!=t.repoPath)}(e))(t={...t}).repoPath=e.node.file.repoPath??e.node.repoPath,t.uris=[_.YY.fromFile(e.node.file,t.repoPath)];else if(Oe(e))(t={...t}).repoPath=e.node.repo.path;else if(function(e){return"viewItem"===e.type&&"string"==typeof e.node.repoPath}(e))(t={...t}).repoPath=e.node.repoPath;else if("scm-states"===e.type){(t={...t}).uris=e.scmResourceStates.map((e=>e.resourceUri)),t.repoPath=(await this.container.git.getOrOpenRepository(t.uris[0]))?.path;(await this.container.git.getStatusForRepo(t.repoPath))?.computeWorkingTreeStatus().staged&&(e.scmResourceStates.some((e=>e.resourceGroupType===Wa.Index))||(t.keepStaged=!0))}else if("scm-groups"===e.type){(t={...t}).uris=e.scmResourceGroups.reduce(((e,t)=>e.concat(t.resourceStates.map((e=>e.resourceUri)))),[]),t.repoPath=(await this.container.git.getOrOpenRepository(t.uris[0]))?.path;(await this.container.git.getStatusForRepo(t.repoPath))?.computeWorkingTreeStatus().staged&&(e.scmResourceGroups.some((e=>"index"===e.id))||(t.keepStaged=!0))}return this.execute(t)}execute(e){return Lt(e?.repoPath,e?.uris,e?.message,e?.keepStaged)}};var fh;gh=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?mh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ph(t,i,r),r})([(0,ke.WD)()],gh),(fh||(fh={})).show=async function(){const e=r.DN.get("modes");if(null==e)return;const t=Object.keys(e);if(0===t.length)return;const i=r.DN.get("mode.active"),o=t.map((t=>{const n=e[t];return{label:`${i===t?"$(check)  ":"     "}${n.name} mode`,description:n.description?` ${s.NE.Dash}  ${n.description}`:"",key:t}}));return i&&null!=e[i]&&o.splice(0,0,{label:`Exit ${e[i].name} mode`,key:void 0}),await n.window.showQuickPick(o,{placeHolder:"select a GitLens mode to enter"})};var wh=Object.defineProperty,_h=Object.getOwnPropertyDescriptor,vh=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?_h(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&wh(t,i,r),r};let yh=class extends Command{constructor(e){super(s.Gh.SwitchMode),this.container=e}async execute(){const e=(0,G.UH)(),t=await fh.show();if(void 0===t)return;null!=e&&(e.exitDetails=` — mode=${t.key??""}`);const i=r.DN.get("mode.active");if(i!==t.key){if(null!=i&&0!==i.length){const e=r.DN.get("modes"),n=e?.[i].annotations;if(null!=n){n!==(null!=t.key?e?.[t.key].annotations:void 0)&&await this.container.fileAnnotations.clearAll()}}await r.DN.update("mode.active",t.key,n.ConfigurationTarget.Global)}}};vh([(0,H.cM)({args:!1,scoped:!0,singleLine:!0,timed:!1})],yh.prototype,"execute",1),yh=vh([(0,ke.WD)()],yh);let bh=class extends Command{constructor(e){super(s.Gh.ToggleReviewMode),this.container=e}async execute(){const e=r.DN.get("modes");if(null==e||!Object.keys(e).includes("review"))return;const t="review"===r.DN.get("mode.active")?void 0:"review";await r.DN.update("mode.active",t,n.ConfigurationTarget.Global)}};vh([(0,H.cM)({args:!1,singleLine:!0,timed:!1})],bh.prototype,"execute",1),bh=vh([(0,ke.WD)()],bh);let Ch=class extends Command{constructor(e){super(s.Gh.ToggleZenMode),this.container=e}async execute(){const e=r.DN.get("modes");if(null==e||!Object.keys(e).includes("zen"))return;const t="zen"===r.DN.get("mode.active")?void 0:"zen";await r.DN.update("mode.active",t,n.ConfigurationTarget.Global)}};vh([(0,H.cM)({args:!1,singleLine:!0,timed:!1})],Ch.prototype,"execute",1),Ch=vh([(0,ke.WD)()],Ch);var Sh=Object.defineProperty,kh=Object.getOwnPropertyDescriptor;let Ph=class extends Command{constructor(e){super(s.Gh.ToggleCodeLens),this.container=e}execute(){return this.container.codeLens.toggleCodeLens()}};Ph=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?kh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Sh(t,i,r),r})([(0,ke.WD)()],Ph);var Rh=Object.defineProperty,Dh=Object.getOwnPropertyDescriptor,$h=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Dh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Rh(t,i,r),r};let Th=class extends EditorCommand{constructor(e){super([s.Gh.ClearFileAnnotations,s.Gh.ComputingFileAnnotations]),this.container=e}async execute(e,t,i){if(null!=e&&!(0,J.PH)(e)&&null!=i&&!qe.n.equals(i,e.document.uri)){const t=n.window.visibleTextEditors.find((e=>qe.n.equals(i,e.document.uri)));null!=t&&(e=t)}try{await this.container.fileAnnotations.clear(e)}catch(e){B.Yd.error(e,"ClearFileAnnotationsCommand"),(0,Be.W8)("Unable to clear file annotations")}}};Th=$h([(0,ke.WD)()],Th);let Fh=class extends ActiveEditorCommand{constructor(e){super([s.Gh.ToggleFileBlame,s.Gh.ToggleFileBlameInDiffLeft,s.Gh.ToggleFileBlameInDiffRight]),this.container=e}execute(e,t,i){return Ah(this.container,e,t,{...i,type:r.VP.Blame})}};Fh=$h([(0,ke.WD)()],Fh);let xh=class extends ActiveEditorCommand{constructor(e){super(s.Gh.ToggleFileChanges),this.container=e}execute(e,t,i){return Ah(this.container,e,t,{...i,type:r.VP.Changes})}};xh=$h([(0,ke.WD)()],xh);let Oh=class extends ActiveEditorCommand{constructor(e){super([s.Gh.ToggleFileHeatmap,s.Gh.ToggleFileHeatmapInDiffLeft,s.Gh.ToggleFileHeatmapInDiffRight]),this.container=e}execute(e,t,i){return Ah(this.container,e,t,{...i,type:r.VP.Heatmap})}};async function Ah(e,t,i,o){if(null!=t&&!(0,J.PH)(t)&&null!=i&&!qe.n.equals(i,t.document.uri)){const e=n.window.visibleTextEditors.find((e=>qe.n.equals(i,e.document.uri)));null!=e&&(t=e)}try{o={type:r.VP.Blame,...o},await e.fileAnnotations.toggle(t,o.type,{selection:o.context?.selection??{line:t?.selection.active.line},...o.context},o.on)}catch(e){B.Yd.error(e,"ToggleFileAnnotationsCommand"),(0,Be.W8)(`Unable to toggle file ${o.type} annotations`)}}Oh=$h([(0,ke.WD)()],Oh);var Ih=Object.defineProperty,Eh=Object.getOwnPropertyDescriptor;let Nh=class extends ActiveEditorCommand{constructor(e){super(s.Gh.ToggleLineBlame),this.container=e}async execute(e,t){try{await this.container.lineAnnotations.toggle(e)}catch(e){B.Yd.error(e,"ToggleLineBlameCommand"),(0,Be.W8)("Unable to toggle line blame annotations")}}};Nh=((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Eh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ih(t,i,r),r})([(0,ke.WD)()],Nh);var Uh=Object.defineProperty,Lh=Object.getOwnPropertyDescriptor,Mh=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Lh(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Uh(t,i,r),r};let Wh=class extends Command{constructor(e){super(s.Gh.GetStarted),this.container=e}execute(e){const t=this.container.context.extension.id;e===t&&(e=void 0),(0,J.lN)(t,e??"gitlens.welcome")}};Wh=Mh([(0,ke.WD)()],Wh);let Bh=class extends Command{constructor(e){super(s.Gh.OpenWalkthrough),this.container=e}execute(e){const[t,i]=e?.split("|")??"gitlens.welcome";(0,J.lN)(this.container.context.extension.id,t,i)}};Bh=Mh([(0,ke.WD)()],Bh);class CommitFormatter extends Cn{reset(e,t){super.reset(e,t),null==this._options.outputFormat&&(this._options.outputFormat="plaintext")}get _authorDate(){return this._item.author.formatDate(this._options.dateFormat)}get _authorDateAgo(){return this._item.author.fromNow()}get _authorDateAgoShort(){return this._item.author.fromNow(!0)}get _committerDate(){return this._item.committer.formatDate(this._options.dateFormat)}get _committerDateAgo(){return this._item.committer.fromNow()}get _committerDateAgoShort(){return this._item.committer.fromNow(!0)}get _date(){return this._item.formatDate(this._options.dateFormat)}get _dateAgo(){return this._item.formatDateFromNow()}get _dateAgoShort(){return this._item.formatDateFromNow(!0)}get _pullRequestDate(){const{pullRequestOrRemote:e}=this._options;return null!=e&&rn.i7.is(e)?e.formatDate(this._options.dateFormat)??"":""}get _pullRequestDateAgo(){const{pullRequestOrRemote:e}=this._options;return null!=e&&rn.i7.is(e)?e.formatDateFromNow()??"":""}get _pullRequestDateOrAgo(){return(null!=this._options.dateStyle?this._options.dateStyle:r.DN.get("defaultDateStyle"))===r.Dn.Absolute?this._pullRequestDate:this._pullRequestDateAgo}get ago(){return this._padOrTruncate(this._dateAgo,this._options.tokenOptions.ago)}get agoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:r.DN.get("defaultDateStyle");return this._padOrTruncate(e===r.Dn.Absolute?this._date:this._dateAgo,this._options.tokenOptions.agoOrDate)}get agoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:r.DN.get("defaultDateStyle");return this._padOrTruncate(e===r.Dn.Absolute?this._date:this._dateAgoShort,this._options.tokenOptions.agoOrDateShort)}get author(){let{name:e,email:t}=this._item.author;const i=this._padOrTruncate(e,this._options.tokenOptions.author);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,k.se)(e),t=(0,k.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get authorAgo(){return this._padOrTruncate(this._authorDateAgo,this._options.tokenOptions.authorAgo)}get authorAgoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:r.DN.get("defaultDateStyle");return this._padOrTruncate(e===r.Dn.Absolute?this._authorDate:this._authorDateAgo,this._options.tokenOptions.authorAgoOrDate)}get authorAgoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:r.DN.get("defaultDateStyle");return this._padOrTruncate(e===r.Dn.Absolute?this._authorDate:this._authorDateAgoShort,this._options.tokenOptions.authorAgoOrDateShort)}get authorDate(){return this._padOrTruncate(this._authorDate,this._options.tokenOptions.authorDate)}get authorNotYou(){let{name:e,email:t}=this._item.author;if("You"===e)return this._padOrTruncate("",this._options.tokenOptions.authorNotYou);const i=this._padOrTruncate(e,this._options.tokenOptions.authorNotYou);switch(this._options.outputFormat){case"markdown":return`[${i}](${t?`mailto:${t} "Email ${e} (${t})"`:`# "${e}"`})`;case"html":return e=(0,k.se)(e),t=(0,k.se)(t),`<a ${t?`href="mailto:${t}" title="Email ${e} (${t})"`:`href="#" title="${e}"`})${this._options.htmlFormat?.classes?.author?` class="${this._options.htmlFormat.classes.author}"`:""}>${i}</a>`;default:return i}}get avatar(){const{outputFormat:e}=this._options;if("plaintext"===e||!r.DN.get("hovers.avatars"))return this._padOrTruncate("",this._options.tokenOptions.avatar);let{name:t}=this._item.author;const i=this._options.presence;if(null!=i){let n=`${t} ${"You"===t?"are":"is"} ${"dnd"===i.status?"in ":""}${i.statusText.toLocaleLowerCase()}`;"html"===e&&(n=(0,k.se)(n));return this._getAvatar(e,n,this._options.avatarSize).then((t=>this._padOrTruncate(`${t}${this._getPresence(e,i,n)}`,this._options.tokenOptions.avatar)))}return"html"===e&&(t=(0,k.se)(t)),this._getAvatar(e,t,this._options.avatarSize)}async _getAvatar(e,t,i){i=i??r.DN.get("hovers.avatarSize");const n=this._item.getAvatarUri({defaultStyle:r.DN.get("defaultGravatarsStyle"),size:i}),o=(await n).toString(!0);return this._padOrTruncate("html"===e?`<img src="${o}" alt="title)" title="${t}" width="${i}" height="${i}"${this._options.htmlFormat?.classes?.avatar?` class="${this._options.htmlFormat.classes.avatar}"`:""} />`:`![${t}](${o}|width=${i},height=${i} "${t}")`,this._options.tokenOptions.avatar)}_getPresence(e,t,i){return"html"===e?`<img src="${(0,b.TU)(t.status)}" alt="${i}" title="${i}"${this._options.htmlFormat?.classes?.avatarPresence?` class="${this._options.htmlFormat.classes.avatarPresence}"`:""}/>`:`![${i}](${(0,b.TU)(t.status)} "${i}")`}get changes(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats():"",this._options.tokenOptions.changes)}get changesDetail(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats({expand:!0,separator:", "}):"",this._options.tokenOptions.changesDetail)}get changesShort(){return this._padOrTruncate((0,y.f_)(this._item)?this._item.formatStats({compact:!0,separator:""}):"",this._options.tokenOptions.changesShort)}get commands(){if("plaintext"===this._options.outputFormat||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.commands);let e;if(this._item.isUncommitted){const{previousLineComparisonUris:t}=this._options;return null!=t?.previous?(e=`[\`${this._padOrTruncate(x.pk.shorten(x.pk.isUncommittedStaged(t.current.sha)?t.current.sha:x.pk.uncommitted),this._options.tokenOptions.commands)}\`](${Mc.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e+=` &nbsp;[$(chevron-left)$(compare-changes)](${ba.getMarkdownCommandArgs({lhs:{sha:t.previous.sha??"",uri:t.previous.documentUri()},rhs:{sha:t.current.sha??"",uri:t.current.documentUri()},repoPath:this._item.repoPath,line:this._options.editor?.line})} "Open Changes with Previous Revision")`,e+=` &nbsp;[$(versions)](${Ul.getMarkdownCommandArgs(lf.instance.git.getRevisionUri(t.previous),r.VP.Blame,this._options.editor?.line)} "Open Blame Prior to this Change")`):e=`[\`${this._padOrTruncate(x.pk.shorten(this._item.isUncommittedStaged?x.pk.uncommittedStaged:x.pk.uncommitted),this._options.tokenOptions.commands)}\`](${Mc.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e}const t=" &nbsp;&nbsp;|&nbsp;&nbsp; ";if(e=`---\n\n[\`$(git-commit) ${this.id}\`](${Mc.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`,e+=` &nbsp;[$(chevron-left)$(compare-changes)](${ba.getMarkdownCommandArgs(this._item,this._options.editor?.line)} "Open Changes with Previous Revision")`,null!=this._item.file&&null!=this._item.unresolvedPreviousSha){const t=lf.instance.git.getRevisionUri(this._item.unresolvedPreviousSha,this._item.file.originalPath??this._item.file?.path,this._item.repoPath);e+=` &nbsp;[$(versions)](${Ul.getMarkdownCommandArgs(t,r.VP.Blame,this._options.editor?.line)} "Open Blame Prior to this Change")`}if(e+=` &nbsp;[$(search)](${Command.getMarkdownCommandArgsCore(s.Gh.RevealCommitInView,{repoPath:this._item.repoPath,sha:this._item.sha,revealInView:!0})} "Reveal in Side Bar")`,Wr()&&(e+=` &nbsp;[$(gitlens-graph)](${Command.getMarkdownCommandArgsCore(s.Gh.ShowInCommitGraph,{ref:x.Wb.fromRevision(this._item)})} "Open in Commit Graph")`),null!=this._options.remotes&&0!==this._options.remotes.length){const t=O.ss.getHighlanderProviders(this._options.remotes);e+=` &nbsp;[$(globe)](${Pl.getMarkdownCommandArgs(this._item.sha)} "Open Commit on ${t?.length?t[0].name:"Remote"}")`}const{pullRequestOrRemote:i}=this._options;if(null!=i&&(rn.i7.is(i)?e+=`${t}[$(git-pull-request) PR #${i.id}](${Gh("openPullRequest",{repoPath:this._item.repoPath,provider:{id:i.provider.id,name:i.provider.name,domain:i.provider.domain},pullRequest:{id:i.id,url:i.url}})} "Open Pull Request \\#${i.id}${1==lf.instance.actionRunners.count("openPullRequest")?` on ${i.provider.name}`:"..."}\n${s.NE.Dash.repeat(2)}\n${(0,k.ry)(i.title).replace(/"/g,'\\"')}\n${i.state}, ${i.formatDateFromNow()}")`:i instanceof Y.PK?e+=`${t}[$(git-pull-request) PR $(loading~spin)](command:${s.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`:null!=i.provider&&r.DN.get("integrations.enabled")&&(e+=`${t}[$(plug) Connect to ${i.provider.name}${s.NE.Ellipsis}](${fc.getMarkdownCommandArgs(i)} "Connect to ${i.provider.name} to enable the display of the Pull Request (if any) that introduced this commit")`)),lf.instance.actionRunners.count("hover.commands")>0){const{name:i,email:n}=this._item.author;e+=`${t}[$(organization) Team${s.NE.SpaceThinnest}${s.NE.Ellipsis}](${Gh("hover.commands",{repoPath:this._item.repoPath,commit:{sha:this._item.sha,author:{name:i,email:n,presence:this._options.presence}},file:null!=this._options.editor?{uri:this._options.editor?.uri.toString(),line:this._options.editor?.line}:void 0})} "Show Team Actions")`}const n=this._item.getGitUri();return e+=`${t}[$(ellipsis)](${Jc.getMarkdownCommandArgs(null!=n?{revisionUri:lf.instance.git.getRevisionUri(n).toString(!0)}:{commit:this._item})} "Show More Actions")`,this._padOrTruncate(e,this._options.tokenOptions.commands)}get committerAgo(){return this._padOrTruncate(this._committerDateAgo,this._options.tokenOptions.committerAgo)}get committerAgoOrDate(){const e=null!=this._options.dateStyle?this._options.dateStyle:r.DN.get("defaultDateStyle");return this._padOrTruncate(e===r.Dn.Absolute?this._committerDate:this._committerDateAgo,this._options.tokenOptions.committerAgoOrDate)}get committerAgoOrDateShort(){const e=null!=this._options.dateStyle?this._options.dateStyle:r.DN.get("defaultDateStyle");return this._padOrTruncate(e===r.Dn.Absolute?this._committerDate:this._committerDateAgoShort,this._options.tokenOptions.committerAgoOrDateShort)}get committerDate(){return this._padOrTruncate(this._committerDate,this._options.tokenOptions.committerDate)}get date(){return this._padOrTruncate(this._date,this._options.tokenOptions.date)}get email(){const{email:e}=this._item.author;return this._padOrTruncate(e??"",this._options.tokenOptions.email)}get footnotes(){const{outputFormat:e}=this._options;return this._padOrTruncate(null==this._options.footnotes||0===this._options.footnotes.size?"":(0,q.v_)((0,q.UI)(this._options.footnotes,(([t,i])=>"plaintext"===e?`${(0,k.sC)(t)} ${i}`:i)),"html"===e?"<br \\>":"markdown"===e?"\\\n":"\n"),this._options.tokenOptions.footnotes)}get id(){const e=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);return"plaintext"!==this._options.outputFormat&&this._options.unpublished?`<span style="color:#35b15e;"${this._options.htmlFormat?.classes?.id?` class="${this._options.htmlFormat.classes.id}"`:""}>${e} (unpublished)</span>`:e}get link(){let e;switch(this._options.outputFormat){case"markdown":e=`[\`$(git-commit) ${this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id)}\`](${Mc.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)} "Open Details")`;break;case"html":{const t=this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.id);e=`<a href="${Mc.getMarkdownCommandArgs(this._item.sha,this._item.repoPath)}" title="Open Details"${this._options.htmlFormat?.classes?.link?` class="${this._options.htmlFormat.classes.link}"`:""}><span class="codicon codicon-git-commit"></span>${t}</a>`;break}default:return this.id}return this._padOrTruncate(e,this._options.tokenOptions.link)}get message(){const{outputFormat:e}=this._options;if(this._item.isUncommitted){const t=this._item.file?.hasConflicts??!1,i=this._item.isUncommittedStaged||(this._options.previousLineComparisonUris?.current?.isUncommittedStaged??!1);let n=(t?"Merge":i?"Staged":"Uncommitted")+" changes";switch(e){case"html":n=`<span ${this._options.htmlFormat?.classes?.message?`class="${this._options.htmlFormat.classes.message}"`:""}>${n}</span>`;break;case"markdown":n=`\n> ${n}`}return this._padOrTruncate(n,this._options.tokenOptions.message)}let t=(this._options.messageTruncateAtNewLine?this._item.summary:this._item.message??this._item.summary).trim().replace(/\r?\n/g,"\n");switch(t=h(t),t=this._padOrTruncate(t,this._options.tokenOptions.message),"plaintext"!==e&&(t=(0,k.se)(t)),"markdown"===e&&(t=(0,k.ry)(t,{quoted:!0})),this._options.messageAutolinks&&(t=lf.instance.autolinks.linkify(t,e,this._options.remotes,this._options.autolinkedIssuesOrPullRequests,this._options.footnotes)),null!=this._options.messageIndent&&"plaintext"===e&&(t=t.replace(/^/gm,s.NE.Space.repeat(this._options.messageIndent))),e){case"html":return`<span ${this._options.htmlFormat?.classes?.id?`class="${this._options.htmlFormat.classes.id}"`:""}>${t}</span>`;case"markdown":return`\n> ${t}`;default:return t}}get pullRequest(){const{pullRequestOrRemote:e}=this._options;if(null==e||"html"===this._options.outputFormat)return this._padOrTruncate("",this._options.tokenOptions.pullRequest);let t;if(rn.i7.is(e))if("markdown"===this._options.outputFormat){const i=(0,k.ry)(e.title).replace(/"/g,'\\"').trim();if(t=`PR [**#${e.id}**](${Gh("openPullRequest",{repoPath:this._item.repoPath,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain},pullRequest:{id:e.id,url:e.url}})} "Open Pull Request \\#${e.id}${1==lf.instance.actionRunners.count("openPullRequest")?` on ${e.provider.name}`:"..."}\n${s.NE.Dash.repeat(2)}\n${(0,k.ry)(e.title).replace(/"/g,'\\"')}\n${e.state}, ${e.formatDateFromNow()}")`,null!=this._options.footnotes){const t=this._options.footnotes.size+1;this._options.footnotes.set(t,`${rn.i7.getMarkdownIcon(e)} [**${i}**](${e.url} "Open Pull Request \\#${e.id} on ${e.provider.name}")\\\n${s.NE.Space.repeat(4)} #${e.id} ${e.state.toLocaleLowerCase()} ${e.formatDateFromNow()}`)}}else if(null!=this._options.footnotes){const i=this._options.footnotes.size+1;this._options.footnotes.set(i,`PR #${e.id}: ${e.title}  ${s.NE.Dot}  ${e.state}, ${e.formatDateFromNow()}`),t=`PR #${e.id}${(0,k.sC)(i)}`}else t=`PR #${e.id}`;else{if(!(e instanceof Y.PK))return this._padOrTruncate("",this._options.tokenOptions.pullRequest);t="markdown"===this._options.outputFormat?`[PR $(loading~spin)](command:${s.Gh.RefreshHover} "Searching for a Pull Request (if any) that introduced this commit...")`:this._options?.pullRequestPendingMessage??""}return this._padOrTruncate(t,this._options.tokenOptions.pullRequest)}get pullRequestAgo(){return this._padOrTruncate(this._pullRequestDateAgo,this._options.tokenOptions.pullRequestAgo)}get pullRequestAgoOrDate(){return this._padOrTruncate(this._pullRequestDateOrAgo,this._options.tokenOptions.pullRequestAgoOrDate)}get pullRequestDate(){return this._padOrTruncate(this._pullRequestDate,this._options.tokenOptions.pullRequestDate)}get pullRequestState(){const{pullRequestOrRemote:e}=this._options;return this._padOrTruncate(null!=e&&rn.i7.is(e)?e.state??"":"",this._options.tokenOptions.pullRequestState)}get sha(){return this._padOrTruncate(this._item.shortSha??"",this._options.tokenOptions.sha)}get stashName(){return this._padOrTruncate(this._item.stashName??"",this._options.tokenOptions.stashName)}get stashNumber(){return this._padOrTruncate(this._item.number??"",this._options.tokenOptions.stashNumber)}get stashOnRef(){return this._padOrTruncate(this._item.stashOnRef??"",this._options.tokenOptions.stashOnRef)}get tips(){let e=this._options.getBranchAndTagTips?.(this._item.sha,{icons:"markdown"===this._options.outputFormat});if(null!=e&&"plaintext"!==this._options.outputFormat){const t=e.split(", ");e=t.map((e=>`<span style="color:#ffffff;background-color:#1d76db;"${this._options.htmlFormat?.classes?.tips?` class="${this._options.htmlFormat.classes.tips}"`:""}>&nbsp;&nbsp;${e}&nbsp;&nbsp;</span>`)).join(s.NE.Space.repeat(3))}return this._padOrTruncate(e??"",this._options.tokenOptions.tips)}static fromTemplate(e,t,i){if(null!=i&&"string"!=typeof i||(i={dateFormat:i}),CommitFormatter.has(e,"footnotes")&&null==i.footnotes&&(i.footnotes=new Map),CommitFormatter.has(e,"avatar")&&i?.outputFormat)throw new Error("Invalid template token 'avatar' used in non-async call");return super.fromTemplateCore(this,e,t,i)}static fromTemplateAsync(e,t,i){return CommitFormatter.has(e,"footnotes")&&(null!=i&&"string"!=typeof i||(i={dateFormat:i}),null==i.footnotes&&(i.footnotes=new Map)),super.fromTemplateCoreAsync(this,e,t,i)}static has(e,...t){return super.has(e,...t)}}function Gh(e,t){return Command.getMarkdownCommandArgsCore(`${s.Gh.ActionPrefix}${e}`,{...t,type:e})}var Vh=i(6398);function Hh(e){const t=eu(e);return null==t?null:[t.rgba.r,t.rgba.g,t.rgba.b,t.rgba.a]}const qh=1e-7,jh=20;function Yh(e,t){const i=Math.pow(10,t);return Math.round(e*i)/i}class RGBA{constructor(e,t,i,n=1){this._rgbaBrand=void 0,this.r=0|Math.min(255,Math.max(0,e)),this.g=0|Math.min(255,Math.max(0,t)),this.b=0|Math.min(255,Math.max(0,i)),this.a=Yh(Math.max(Math.min(1,n),0),3)}static equals(e,t){return e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a}}class HSLA{constructor(e,t,i,n){this._hslaBrand=void 0,this.h=0|Math.max(Math.min(360,e),0),this.s=Yh(Math.max(Math.min(1,t),0),3),this.l=Yh(Math.max(Math.min(1,i),0),3),this.a=Yh(Math.max(Math.min(1,n),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.l===t.l&&e.a===t.a}static fromRGBA(e){const t=e.r/255,i=e.g/255,n=e.b/255,o=e.a,r=Math.max(t,i,n),s=Math.min(t,i,n);let a=0,l=0;const c=(s+r)/2,h=r-s;if(h>0){switch(l=Math.min(c<=.5?h/(2*c):h/(2-2*c),1),r){case t:a=(i-n)/h+(i<n?6:0);break;case i:a=(n-t)/h+2;break;case n:a=(t-i)/h+4}a*=60,a=Math.round(a)}return new HSLA(a,l,c,o)}static _hue2rgb(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e}static toRGBA(e){const t=e.h/360,{s:i,l:n,a:o}=e;let r,s,a;if(0===i)r=s=a=n;else{const e=n<.5?n*(1+i):n+i-n*i,o=2*n-e;r=HSLA._hue2rgb(o,e,t+1/3),s=HSLA._hue2rgb(o,e,t),a=HSLA._hue2rgb(o,e,t-1/3)}return new RGBA(Math.round(255*r),Math.round(255*s),Math.round(255*a),o)}}class HSVA{constructor(e,t,i,n){this._hsvaBrand=void 0,this.h=0|Math.max(Math.min(360,e),0),this.s=Yh(Math.max(Math.min(1,t),0),3),this.v=Yh(Math.max(Math.min(1,i),0),3),this.a=Yh(Math.max(Math.min(1,n),0),3)}static equals(e,t){return e.h===t.h&&e.s===t.s&&e.v===t.v&&e.a===t.a}static fromRGBA(e){const t=e.r/255,i=e.g/255,n=e.b/255,o=Math.max(t,i,n),r=o-Math.min(t,i,n),s=0===o?0:r/o;let a;return a=0===r?0:o===t?((i-n)/r%6+6)%6:o===i?(n-t)/r+2:(t-i)/r+4,new HSVA(Math.round(60*a),s,o,e.a)}static toRGBA(e){const{h:t,s:i,v:n,a:o}=e,r=n*i,s=r*(1-Math.abs(t/60%2-1)),a=n-r;let[l,c,h]=[0,0,0];return t<60?(l=r,c=s):t<120?(l=s,c=r):t<180?(c=r,h=s):t<240?(c=s,h=r):t<300?(l=s,h=r):t<=360&&(l=r,h=s),l=Math.round(255*(l+a)),c=Math.round(255*(c+a)),h=Math.round(255*(h+a)),new RGBA(l,c,h,o)}}const Qh=class{static from(e){return e instanceof Qh?e:eu(e)||Qh.red}static fromCssVariable(e,t){return eu(t.getPropertyValue(e).trim())||Qh.red}static fromHex(e){return tu(e)||Qh.red}static equals(e,t){return!e&&!t||!(!e||!t)&&e.equals(t)}get hsla(){return this._hsla?this._hsla:HSLA.fromRGBA(this.rgba)}get hsva(){return this._hsva?this._hsva:HSVA.fromRGBA(this.rgba)}constructor(e){if(!e)throw new Error("Color needs a value");if(e instanceof RGBA)this.rgba=e;else if(e instanceof HSLA)this._hsla=e,this.rgba=HSLA.toRGBA(e);else{if(!(e instanceof HSVA))throw new Error("Invalid color ctor argument");this._hsva=e,this.rgba=HSVA.toRGBA(e)}}equals(e){return null!=e&&(Boolean(e)&&RGBA.equals(this.rgba,e.rgba)&&HSLA.equals(this.hsla,e.hsla)&&HSVA.equals(this.hsva,e.hsva))}getRelativeLuminance(){return Yh(.2126*Qh._relativeLuminanceForComponent(this.rgba.r)+.7152*Qh._relativeLuminanceForComponent(this.rgba.g)+.0722*Qh._relativeLuminanceForComponent(this.rgba.b),4)}static _relativeLuminanceForComponent(e){const t=e/255;return t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)}luminance(e){return function(e,t){if(0===t)return new zh(new RGBA(0,0,0,e.rgba.a));if(1===t)return new zh(new RGBA(255,255,255,e.rgba.a));const i=e.getRelativeLuminance();let n=jh;const o=(e,i)=>{const r=e.mix(i,.5),s=r.getRelativeLuminance();return Math.abs(t-s)<qh||!n--?r:s>t?o(e,r):o(r,i)},r=(i>t?o(zh.black,e):o(e,zh.white)).rgba;return new zh(new RGBA(r.r,r.g,r.b,e.rgba.a))}(this,e)}getContrastRatio(e){const t=this.getRelativeLuminance(),i=e.getRelativeLuminance();return t>i?(t+.05)/(i+.05):(i+.05)/(t+.05)}isDarker(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3<128}isLighter(){return(299*this.rgba.r+587*this.rgba.g+114*this.rgba.b)/1e3>=128}isLighterThan(e){return this.getRelativeLuminance()>e.getRelativeLuminance()}isDarkerThan(e){return this.getRelativeLuminance()<e.getRelativeLuminance()}lighten(e){return new Qh(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l+this.hsla.l*e,this.hsla.a))}darken(e){return new Qh(new HSLA(this.hsla.h,this.hsla.s,this.hsla.l-this.hsla.l*e,this.hsla.a))}transparent(e){const{r:t,g:i,b:n,a:o}=this.rgba;return new Qh(new RGBA(t,i,n,o*e))}isTransparent(){return 0===this.rgba.a}isOpaque(){return 1===this.rgba.a}opposite(){return new Qh(new RGBA(255-this.rgba.r,255-this.rgba.g,255-this.rgba.b,this.rgba.a))}blend(e){const t=e.rgba,i=this.rgba.a,n=t.a,o=i+n*(1-i);if(o<1e-6)return Qh.transparent;const r=this.rgba.r*i/o+t.r*n*(1-i)/o,s=this.rgba.g*i/o+t.g*n*(1-i)/o,a=this.rgba.b*i/o+t.b*n*(1-i)/o;return new Qh(new RGBA(r,s,a,o))}mix(e,t){return function(e,t,i){const n=e.rgba,o=t.rgba;return new zh(new RGBA(n.r+i*(o.r-n.r),n.g+i*(o.g-n.g),n.b+i*(o.b-n.b),n.a+i*(o.a-n.a)))}(this,e,t)}makeOpaque(e){if(this.isOpaque()||1!==e.rgba.a)return this;const{r:t,g:i,b:n,a:o}=this.rgba;return new Qh(new RGBA(e.rgba.r-o*(e.rgba.r-t),e.rgba.g-o*(e.rgba.g-i),e.rgba.b-o*(e.rgba.b-n),1))}flatten(...e){const t=e.reduceRight(((e,t)=>Qh._flatten(t,e)));return Qh._flatten(this,t)}static _flatten(e,t){const i=1-e.rgba.a;return new Qh(new RGBA(i*t.rgba.r+e.rgba.a*e.rgba.r,i*t.rgba.g+e.rgba.a*e.rgba.g,i*t.rgba.b+e.rgba.a*e.rgba.b))}toString(){return this._toString||(this._toString=function(e){if(e.isOpaque())return Xh(e);return Kh(e)}(this)),this._toString}static getLighterColor(e,t,i){if(e.isLighterThan(t))return e;i=i||.5;const n=e.getRelativeLuminance(),o=t.getRelativeLuminance();return i=i*(o-n)/o,e.lighten(i)}static getDarkerColor(e,t,i){if(e.isDarkerThan(t))return e;i=i||.5;const n=e.getRelativeLuminance();return i=i*(n-t.getRelativeLuminance())/n,e.darken(i)}};let zh=Qh;function Kh(e){return`rgba(${e.rgba.r}, ${e.rgba.g}, ${e.rgba.b}, ${Number(e.rgba.a.toFixed(2))})`}function Jh(e){const t=e.toString(16);return 2!==t.length?`0${t}`:t}function Xh(e){return`#${Jh(e.rgba.r)}${Jh(e.rgba.g)}${Jh(e.rgba.b)}`}zh.white=new Qh(new RGBA(255,255,255,1)),zh.black=new Qh(new RGBA(0,0,0,1)),zh.red=new Qh(new RGBA(255,0,0,1)),zh.blue=new Qh(new RGBA(0,0,255,1)),zh.green=new Qh(new RGBA(0,255,0,1)),zh.cyan=new Qh(new RGBA(0,255,255,1)),zh.lightgrey=new Qh(new RGBA(211,211,211,1)),zh.transparent=new Qh(new RGBA(0,0,0,0));const Zh=/^((?:rgb|hsl)a?)\((-?\d+%?)[,\s]+(-?\d+%?)[,\s]+(-?\d+%?)[,\s]*(-?[\d.]+%?)?\)$/i;function eu(e){if(0===e.length)return null;if(e.charCodeAt(0)===s.mN.Hash)return tu(e);const t=Zh.exec(e);if(null==t)return null;const i=t[1];let n;switch(i){case"rgb":case"hsl":n=[parseInt(t[2],10),parseInt(t[3],10),parseInt(t[4],10),1];break;case"rgba":case"hsla":n=[parseInt(t[2],10),parseInt(t[3],10),parseInt(t[4],10),parseFloat(t[5])];break;default:return null}switch(i){case"rgb":case"rgba":return new zh(new RGBA(n[0],n[1],n[2],n[3]));case"hsl":case"hsla":return new zh(new HSLA(n[0],n[1],n[2],n[3]))}return zh.red}function tu(e){const t=(e=e.trim()).length;if(0===t)return null;if(e.charCodeAt(0)!==s.mN.Hash)return null;if(7===t){const t=16*iu(e.charCodeAt(1))+iu(e.charCodeAt(2)),i=16*iu(e.charCodeAt(3))+iu(e.charCodeAt(4)),n=16*iu(e.charCodeAt(5))+iu(e.charCodeAt(6));return new zh(new RGBA(t,i,n,1))}if(9===t){const t=16*iu(e.charCodeAt(1))+iu(e.charCodeAt(2)),i=16*iu(e.charCodeAt(3))+iu(e.charCodeAt(4)),n=16*iu(e.charCodeAt(5))+iu(e.charCodeAt(6)),o=16*iu(e.charCodeAt(7))+iu(e.charCodeAt(8));return new zh(new RGBA(t,i,n,o/255))}if(4===t){const t=iu(e.charCodeAt(1)),i=iu(e.charCodeAt(2)),n=iu(e.charCodeAt(3));return new zh(new RGBA(16*t+t,16*i+i,16*n+n))}if(5===t){const t=iu(e.charCodeAt(1)),i=iu(e.charCodeAt(2)),n=iu(e.charCodeAt(3)),o=iu(e.charCodeAt(4));return new zh(new RGBA(16*t+t,16*i+i,16*n+n,(16*o+o)/255))}return null}function iu(e){switch(e){case s.mN.Digit0:return 0;case s.mN.Digit1:return 1;case s.mN.Digit2:return 2;case s.mN.Digit3:return 3;case s.mN.Digit4:return 4;case s.mN.Digit5:return 5;case s.mN.Digit6:return 6;case s.mN.Digit7:return 7;case s.mN.Digit8:return 8;case s.mN.Digit9:return 9;case s.mN.a:case s.mN.A:return 10;case s.mN.b:case s.mN.B:return 11;case s.mN.c:case s.mN.C:return 12;case s.mN.d:case s.mN.D:return 13;case s.mN.e:case s.mN.E:return 14;case s.mN.f:case s.mN.F:return 15}return 0}const nu="#f66a0a",ou="#0a60f6",ru=["#f66a0a","#ef6939","#e96950","#e26862","#db6871","#d3677e","#cc678a","#c46696","#bb66a0","#b365a9","#a965b3","#a064bb","#9664c4","#8a63cc","#7e63d3","#7162db","#6262e2","#5061e9","#3961ef","#0a60f6"];let su;function au(){if(null==su){const{coldColor:e,hotColor:t}=r.DN.get("heatmap");let i;i=e===ou&&t===nu?ru:function(e,t,i){const n=[],o=zh.from(e),r=zh.from(t);n.push(o.toString());const s=i-1;for(let e=1;e<s;e++){const t=o.mix(r,e/s);n.push(t.toString())}return n.push(r.toString()),n}(t,e,20),su={hot:i.slice(0,10),cold:i.slice(10,20)};const n=r.DN.onDidChange((e=>{r.DN.changed(e,["heatmap.ageThreshold","heatmap.hotColor","heatmap.coldColor"])&&(n.dispose(),su=void 0)}))}return su}function lu(e,t,i){const[n,o,r,s]=du(t,i);e.renderOptions.before.borderColor=`rgba(${n},${o},${r},${s})`}function cu(e,t,i,o){const[s,a,l,c]=du(e,t),{fadeLines:h,locations:u}=r.DN.get("heatmap"),d=u.includes(Ye.o9.Gutter),p=u.includes(Ye.o9.Line),m=u.includes(Ye.o9.Scrollbar),g=`${s},${a},${l},${c}`;let f=o.get(g);return null==f?(f={decorationType:n.window.createTextEditorDecorationType({backgroundColor:p?`rgba(${s},${a},${l},${.15*c})`:void 0,opacity:h?`${t.computeOpacity(e).toFixed(2)} !important`:void 0,isWholeLine:!(!p&&!h)||void 0,gutterIconPath:d?n.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${s},${a},${l})' fill-opacity='${c}' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:d?"contain":void 0,overviewRulerLane:m?n.OverviewRulerLane.Center:void 0,overviewRulerColor:m?`rgba(${s},${a},${l},${.7*c})`:void 0}),rangesOrOptions:[i]},o.set(g,f)):f.rangesOrOptions.push(i),f.decorationType}function hu(e,t,i,n){const o={renderOptions:{before:{...n}}};e.isUncommitted&&(o.renderOptions.before.color=n.uncommittedColor);const r=CommitFormatter.fromTemplate(t,e,i);return o.renderOptions.before.contentText=(0,k.vk)(r.replace(/ /g,s.NE.Space),1,1),o}function uu(e,t,i,o=!0){const r=CommitFormatter.fromTemplate(t,e,{...i,messageTruncateAtNewLine:!0});return{renderOptions:{after:{backgroundColor:new n.ThemeColor(s.wL.TrailingLineBackgroundColor),color:new n.ThemeColor(s.wL.TrailingLineForegroundColor),contentText:(0,k.vk)(r.replace(/ /g,s.NE.Space),1,1),fontWeight:"normal",fontStyle:"normal",textDecoration:"none;"+(o?"":" position: absolute;")}}}}function du(e,t){const i=t.computeRelativeAge(e),n=Hh((e.getTime()<t.coldThresholdTimestamp?t.colors.cold:t.colors.hot)[i]);return[...n??[0,0,0],null==n?0:0===i?1:i<=5?.8:.6]}var pu=i(9376);async function mu(e,t,i,o){const a=t.sha;let l=null;const c=await async function(){if(null==e.file)return;let n;if(e.isUncommitted)x.pk.isUncommittedStaged(a)&&(n=a);else if(l=await e.getPreviousSha(),n=l,null==n)return`\`\`\`diff\n+ ${o.lineAt(i).text}\n\`\`\``;const s=i+1,c=e.lines.find((e=>e.line===s))??e.lines[0];let h=e.file.originalPath;null==h&&t.fsPath!==e.file.uri.fsPath&&(h=e.file.path),i=c.line-1;let u=await lf.instance.git.getDiffForLine(t,i,n,a);return null==u&&null==n&&a!==x.pk.uncommittedStaged&&(u=await lf.instance.git.getDiffForLine(t,i,void 0,x.pk.uncommittedStaged)),null!=u?function(e,t){if("hunk"===t||null==t&&"hunk"===r.DN.get("hovers.changesDiff"))return wu(e.hunk);return`\`\`\`diff${null==e.previous?"":`\n- ${e.previous.line.trim()}`}${null==e.current?"":`\n+ ${e.current.line.trim()}`}\n\`\`\``}(u):void 0}();if(null==c)return;let h,u,d;if(e.isUncommitted){const t=await e.getPreviousComparisonUrisForLine(i,a);if(null==t?.previous)return;h=`[$(compare-changes)](${ba.getMarkdownCommandArgs({lhs:{sha:t.previous.sha??"",uri:t.previous.documentUri()},rhs:{sha:t.current.sha??"",uri:t.current.documentUri()},repoPath:e.repoPath,line:i})} "Open Changes")`,u=null==t.previous.sha||t.previous.isUncommitted?`  &nbsp;_${x.pk.shorten(t.previous.sha,{strings:{working:"Working Tree"}})}_ &nbsp;${s.NE.ArrowLeftRightLong}&nbsp; `:`  &nbsp;[$(git-commit) ${x.pk.shorten(t.previous.sha||"")}](${Qc.getMarkdownCommandArgs(t.previous.sha||"")} "Show Commit") &nbsp;${s.NE.ArrowLeftRightLong}&nbsp; `,d=null==t.current.sha||t.current.isUncommitted?`_${x.pk.shorten(t.current.sha,{strings:{working:"Working Tree"}})}_`:`[$(git-commit) ${x.pk.shorten(t.current.sha||"")}](${Qc.getMarkdownCommandArgs(t.current.sha||"")} "Show Commit")`}else h=`[$(compare-changes)](${ba.getMarkdownCommandArgs(e,i)} "Open Changes")`,null===l&&(l=await e.getPreviousSha()),l&&(u=`  &nbsp;[$(git-commit) ${x.pk.shorten(l)}](${Qc.getMarkdownCommandArgs(l)} "Show Commit") &nbsp;${s.NE.ArrowLeftRightLong}&nbsp;`),d=`[$(git-commit) ${e.shortSha}](${Qc.getMarkdownCommandArgs(e.sha)} "Show Commit")`;h=`${c}\n---\n\nChanges${u??" added in "}${d} &nbsp;&nbsp;|&nbsp;&nbsp; ${h}`;const p=new n.MarkdownString(h,!0);return p.supportHtml=!0,p.isTrusted=!0,p}async function gu(e,t,i,o){const r=wu(o);let a,l,c;if(null==e)l="_Working Tree_",c="_Unsaved_";else{const n=await e.findFile(t);if(null==n)return;a=`[$(compare-changes)](${ba.getMarkdownCommandArgs({lhs:{sha:e.sha,uri:_.YY.fromFile(n,t.repoPath,void 0,!0).toFileUri()},rhs:{sha:"",uri:t.toFileUri()},repoPath:t.repoPath,line:i})} "Open Changes")`,l=`[$(git-commit) ${e.shortSha}](${Qc.getMarkdownCommandArgs(e.sha)} "Show Commit")`,c="_Working Tree_"}a=`${r}\n---\n\nLocal Changes  &nbsp;${l} &nbsp;${s.NE.ArrowLeftRightLong}&nbsp; ${c}${null==a?"":` &nbsp;&nbsp;|&nbsp;&nbsp; ${a}`}`;const h=new n.MarkdownString(a,!0);return h.supportHtml=!0,h.isTrusted=!0,h}async function fu(e,t,i,o,r,s){null===r&&(r="MMMM Do, YYYY h:mma");let a=e.message??e.summary;if(null==e.message&&!e.isUncommitted&&(await e.ensureFullDetails(),a=e.message??e.summary,s?.cancellationToken?.isCancellationRequested))return new n.MarkdownString;const l=await lf.instance.git.getRemotesWithProviders(e.repoPath,{sort:!0});if(s?.cancellationToken?.isCancellationRequested)return new n.MarkdownString;const[c,h,u,d]=await Promise.allSettled([e.isUncommitted?e.getPreviousComparisonUrisForLine(i,t.sha):void 0,_u(a,l),s?.pullRequests?.pr??vu(e.ref,l,{pullRequests:!1!==s?.pullRequests?.enabled&&CommitFormatter.has(o,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")}),lf.instance.vsls.maybeGetPresence(e.author.email)]);if(s?.cancellationToken?.isCancellationRequested)return new n.MarkdownString;const p=(0,Y.Sb)(c),m=(0,Y.Sb)(h),g=(0,Y.Sb)(u),f=(0,Y.Sb)(d);null==g||g instanceof Y.PK||m?.delete(g.id);const w=await CommitFormatter.fromTemplateAsync(o,e,{autolinkedIssuesOrPullRequests:m,dateFormat:r,editor:{line:i,uri:t},getBranchAndTagTips:s?.getBranchAndTagTips,messageAutolinks:s?.autolinks,pullRequestOrRemote:g,presence:f,previousLineComparisonUris:p,outputFormat:"markdown",remotes:l}),_=new n.MarkdownString(w,!0);return _.supportHtml=!0,_.isTrusted=!0,_}function wu(e){return`\`\`\`diff\n${e.diff.trim()}\n\`\`\``}async function _u(e,t){const i=(0,G.QR)("Hovers.getAutoLinkedIssuesOrPullRequests");B.Yd.debug(i,`${s.NE.Dash} message=<message>`);const n=(0,pu.a)(),o=r.DN.get("hovers");if(!o.autolinks.enabled||!o.autolinks.enhanced||!CommitFormatter.has(o.detailsMarkdownFormat,"message"))return void B.Yd.debug(i,`completed ${s.NE.Dot} ${(0,k.qk)(n)} ms`);const a=await lf.instance.git.getBestRemoteWithRichProvider(t);if(null==a?.provider)return void B.Yd.debug(i,`completed ${s.NE.Dot} ${(0,k.qk)(n)} ms`);try{const t=await lf.instance.autolinks.getLinkedIssuesAndPullRequests(e,a,{timeout:250});if(null!=t&&B.Yd.enabled(s.in.Debug)){const e=(0,q.QX)(t.values(),(e=>e instanceof Y.PK));if(0!==e)return B.Yd.debug(i,`timed out ${s.NE.Dash} ${e} issue/pull request queries took too long (over 250 ms) ${s.NE.Dot} ${(0,k.qk)(n)} ms`),t}return B.Yd.debug(i,`completed ${s.NE.Dot} ${(0,k.qk)(n)} ms`),t}catch(e){return void B.Yd.error(e,i,`failed ${s.NE.Dot} ${(0,k.qk)(n)} ms`)}}async function vu(e,t,i){const n=(0,G.QR)("Hovers.getPullRequestForCommit");B.Yd.debug(n,`${s.NE.Dash} ref=${e}`);const o=(0,pu.a)();if(!i?.pullRequests)return void B.Yd.debug(n,`completed ${s.NE.Dot} ${(0,k.qk)(o)} ms`);const r=await lf.instance.git.getBestRemoteWithRichProvider(t,{includeDisconnected:!0});if(null==r?.provider)return void B.Yd.debug(n,`completed ${s.NE.Dot} ${(0,k.qk)(o)} ms`);const{provider:a}=r;if(!(a.maybeConnected??await a.isConnected()))return B.Yd.debug(n,`completed ${s.NE.Dot} ${(0,k.qk)(o)} ms`),r;try{const t=await lf.instance.git.getPullRequestForCommit(e,a,{timeout:250});return B.Yd.debug(n,`completed ${s.NE.Dot} ${(0,k.qk)(o)} ms`),t}catch(e){return e instanceof Y.PK?(B.Yd.debug(n,`timed out ${s.NE.Dot} ${(0,k.qk)(o)} ms`),e):void B.Yd.error(e,n,`failed ${s.NE.Dot} ${(0,k.qk)(o)} ms`)}}var yu=Object.defineProperty,bu=Object.getOwnPropertyDescriptor;class BlameAnnotationProviderBase extends AnnotationProviderBase{constructor(e,t,i,n){super(e,t,i),this.container=n,this.blame=this.container.git.getBlame(this.trackedDocument.uri,t.document),t.document.isDirty&&i.setForceDirtyStateChangeOnNextDocumentChange()}clear(){null!=this.hoverProviderDisposable&&(this.hoverProviderDisposable.dispose(),this.hoverProviderDisposable=void 0),super.clear()}async validate(){const e=await this.blame;return null!=e&&0!==e.lines.length}async getBlame(){const e=await this.blame;if(null!=e&&0!==e.lines.length)return e}getComputedHeatmap(e){const t=[];let i,n;for(const o of e.lines)n!==o.sha&&(n=o.sha,i=e.commits.get(o.sha),null!=i&&t.push(i.date));t.sort(((e,t)=>e.getTime()-t.getTime()));const o=new Date;o.setDate(o.getDate()-(r.DN.get("heatmap.ageThreshold")||90));const s=o.getTime(),a=[],l=[];for(const e of t)e.getTime()<s?l.push(e):a.push(e);let c;c=a.length&&l.length?{hot:Cu(a),cold:Cu(l)}:Cu(t);const h=(e,t)=>Array.isArray(c)?c:t?c.hot.concat(c.cold):e.getTime()<s?c.cold:c.hot,u=(e,t)=>{const i=e.getTime();let n=0;for(let e=0;e<t.length&&(n=e,!(i>=t[e]));e++);return n};return{coldThresholdTimestamp:s,colors:au(),computeRelativeAge:e=>u(e,h(e)),computeOpacity:e=>{const t=h(e,!0),i=u(e,t);return Math.max(.2,Math.round(100*(1-i/t.length))/100)}}}registerHoverProviders(e){const t=r.DN.get("hovers");t.enabled&&t.annotations.enabled&&(e.details||e.changes)&&(this.hoverProviderDisposable=n.languages.registerHoverProvider({pattern:this.document.uri.fsPath},{provideHover:(t,i,n)=>this.provideHover(e,t,i,n)}))}async provideHover(e,t,i,o){if("line"!==r.DN.get("hovers.annotations.over")&&0!==i.character)return;if(this.document.uri.toString()!==t.uri.toString())return;const s=await this.getBlame();if(null==s)return;const a=s.lines[i.line],l=s.commits.get(a.sha);if(null==l)return;const c=(await Promise.all([e.details?this.getDetailsHoverMessage(l,t):void 0,e.changes?mu(l,await _.YY.fromUri(t.uri),i.line,t):void 0])).filter((e=>Boolean(e)));return new n.Hover(c,t.validateRange(new n.Range(i.line,0,i.line,1073741824)))}async getDetailsHoverMessage(e,t){let i=this.editor.selection.active.line;const n=i+1;i=(e.lines.find((e=>e.line===n))??e.lines[0]).originalLine-1;const o=r.DN.get("hovers");return fu(e,await _.YY.fromUri(t.uri),i,o.detailsMarkdownFormat,r.DN.get("defaultDateFormat"),{autolinks:o.autolinks.enabled,pullRequests:{enabled:o.pullRequests.enabled}})}}function Cu(e){const t=[],i=Math.floor(e.length/2),n=e.length%2?e[i].getTime():(e[i-1].getTime()+e[i].getTime())/2;let o=(e[e.length-1].getTime()-n)/5;for(let e=5;e>0;e--)t.push(n+o*e);t.push(n);o=(n-e[0].getTime())/4;for(let e=1;e<=4;e++)t.push(n-o*e);return t}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?bu(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&yu(t,i,r)})([(0,H.cM)({args:!1})],BlameAnnotationProviderBase.prototype,"getComputedHeatmap",1);var Su=Object.defineProperty,ku=Object.getOwnPropertyDescriptor,Pu=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ku(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Su(t,i,r),r};class GutterBlameAnnotationProvider extends BlameAnnotationProviderBase{constructor(e,t,i){super(r.VP.Blame,e,t,i)}clear(){if(super.clear(),null!=xu.gutterBlameHighlight)try{this.editor.setDecorations(xu.gutterBlameHighlight,[])}catch{}}async onProvideAnnotation(e,t){const i=(0,G.UH)();this.annotationContext=e;const o=await this.getBlame();if(null==o)return!1;const a=new Vh.u(i),l=r.DN.get("blame"),c=(0,k.Gg)(l.format).reduce(((e,t)=>(e[t.key]=t.options,e)),Object.create(null));let h;CommitFormatter.has(l.format,"tips")&&(h=await this.container.git.getBranchesAndTagsTipsFn(o.repoPath));const u={dateFormat:null===l.dateFormat?r.DN.get("defaultDateFormat"):l.dateFormat,getBranchAndTagTips:h,tokenOptions:c},d=l.avatars,p=r.DN.get("defaultGravatarsStyle"),m=l.separateLines,g=function(e,t,i,o,a){let l,c,h,u=0;for(const e of Object.values(a.tokenOptions))if(void 0!==e){if(null==e.truncateTo){u=-1;break}u+=e.truncateTo}if(u>=0&&(u+=(0,k.dz)((0,k.sX)(o,void 0)),u>0&&(u+=3)),t.enabled&&(l="solid",c="left"===t.location?"0 0 0 2px":"0 2px 0 0"),u>=0){const e=r.DN.getAny("editor.letterSpacing");h=null!=e&&0!==e?`calc(${u}ch + ${Math.round(u*e)+(i?13:-6)}px)`:`calc(${u}ch ${i?"+ 13px":"- 6px"})`}return{backgroundColor:new n.ThemeColor(s.wL.GutterBackgroundColor),borderStyle:l,borderWidth:c,color:new n.ThemeColor(s.wL.GutterForegroundColor),fontWeight:"normal",fontStyle:"normal",height:"100%",margin:"0 26px -1px 0",textDecoration:`${e?"overline solid rgba(0, 0, 0, .2)":"none"};box-sizing: border-box${i?";padding: 0 0 0 18px":""}`,width:h,uncommittedColor:new n.ThemeColor(s.wL.GutterUncommittedForegroundColor)}}(m,l.heatmap,l.avatars,l.format,u),f=[],w=new Map,_=d?new Map:void 0;let v,y,b,C,S=!1;l.heatmap.enabled&&(C=this.getComputedHeatmap(o));for(const e of o.lines){const t=e.line-1;if(b!==e.sha)S=!1,b=e.sha,v=o.commits.get(e.sha),null!=v&&(y=w.get(e.sha),null==y?(y=hu(v,l.format,u,g),null!=C&&lu(y,v.date,C),y.range=new n.Range(t,0,t,0),f.push(y),d&&null!=v.author.email&&await this.applyAvatarDecoration(v,y,p,_),w.set(e.sha,y)):(y={...y,range:new n.Range(t,0,t,0)},f.push(y)));else{if(null==y)continue;y={...y},l.compact&&!S&&(y.renderOptions={before:{...y.renderOptions.before,contentText:s.NE.Space.repeat((0,k.dz)(y.renderOptions.before.contentText))}},m&&(y.renderOptions.before.textDecoration="none;box-sizing: border-box"+(d?";padding: 0 0 0 18px":"")),S=!0),y.range=new n.Range(t,0,t,0),f.push(y)}}return a.restart({suffix:" to compute gutter blame annotations"}),f.length&&(this.setDecorations([{decorationType:xu.gutterBlameAnnotation,rangesOrOptions:f}]),a.stop({suffix:" to apply all gutter blame annotations"})),this.registerHoverProviders(r.DN.get("hovers.annotations")),!0}async selection(e,t){if(!1===e||null==xu.gutterBlameHighlight)return;if(null==t&&!(t=await this.blame)?.lines.length)return;let i;if(null!=e?.sha)i=e.sha;else if(null!=e?.line){if(e.line>=0){const n=t.lines[e.line];i=n?.sha}}else i=(0,q.Ps)(t.commits.values())?.sha;if(!i)return void this.editor.setDecorations(xu.gutterBlameHighlight,[]);const o=(0,Ht.DZ)(t.lines,(e=>e.sha===i?this.editor.document.validateRange(new n.Range(e.line-1,0,e.line-1,1073741824)):void 0));this.editor.setDecorations(xu.gutterBlameHighlight,o)}async applyAvatarDecoration(e,t,i,n){let o=n.get(e.author.email??"");if(null==o){const t=(await e.getAvatarUri({defaultStyle:i,size:16})).toString(!0);o={contentText:"",height:"16px",width:"16px",textDecoration:`none;position:absolute;top:1px;left:5px;background:url(${encodeURI(t)});background-size:16px 16px;margin-left: 0 !important`},n.set(e.author.email??"",o)}t.renderOptions.after=o}}Pu([(0,H.cM)()],GutterBlameAnnotationProvider.prototype,"onProvideAnnotation",1),Pu([(0,H.cM)({args:!1})],GutterBlameAnnotationProvider.prototype,"selection",1);var Ru=Object.defineProperty,Du=Object.getOwnPropertyDescriptor;const $u=2**30;class GutterChangesAnnotationProvider extends AnnotationProviderBase{constructor(e,t,i){super(r.VP.Changes,e,t),this.container=i}mustReopen(e){return this.annotationContext?.sha!==e?.sha||this.annotationContext?.only!==e?.only}clear(){this.state=void 0,null!=this.hoverProviderDisposable&&(this.hoverProviderDisposable.dispose(),this.hoverProviderDisposable=void 0),super.clear()}selection(e){return Promise.resolve()}validate(){return Promise.resolve(!0)}async onProvideAnnotation(e){const t=(0,G.UH)();this.mustReopen(e)&&this.clear(),this.annotationContext=e;let i,o=this.trackedDocument.uri.sha,r=null!=e?.sha&&e.sha!==o?`${e.sha}^`:void 0,s=null==o&&null==r;if(s){let e=await this.container.git.getOldestUnpushedRefForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri);if(null!=e)e=`${e}^`,i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:e}),null!=i?null!=r?r=e:(o=e,r=""):s=!1;else{const e=(await this.container.git.getStatusForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri))?.getPseudoCommits(this.container,await this.container.git.getCurrentUser(this.trackedDocument.uri.repoPath));e?.length?(i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri),o="HEAD"):this.trackedDocument.dirty?o="HEAD":s=!1}}if(!s){if(i=await this.container.git.getCommitForFile(this.trackedDocument.uri.repoPath,this.trackedDocument.uri,{ref:r??o}),null==i)return!1;null!=r||(o=`${i.ref}^`),r=i.ref}const a=(await Promise.all(null==r&&this.editor.document.isDirty?[this.container.git.getDiffForFileContents(this.trackedDocument.uri,o,this.editor.document.getText()),this.container.git.getDiffForFile(this.trackedDocument.uri,o,r)]:[this.container.git.getDiffForFile(this.trackedDocument.uri,o,r)])).filter((e=>Boolean(e)));if(!a?.length)return!1;const l=new Vh.u(t),c=new Map,h=null!=e?.sha&&e?.only?await this.container.git.getBlame(this.trackedDocument.uri,this.editor?.document):void 0;let u;for(const t of a)for(const i of t.hunks){if(null!=h){let t=!0;const n=e.sha;for(let e=i.current.position.start-1;e<i.current.position.end;e++)h.lines[e]?.sha===n&&(t=!1);if(t)continue}let t=Math.max(i.current.position.start-2,-1),o=-1;for(const e of i.lines){if(o++,t++,"unchanged"===e.current?.state)continue;const r=this.editor.document.validateRange(new n.Range(new n.Position(t,0),new n.Position(t,$u)));let s;if(null==u&&(u=new n.Selection(r.start,r.end)),null==e.current){const n=i.lines[o-1];if(null==e.previous||null!=n&&null==n.current){t--;continue}if(!(i.previous.count>i.current.count)){t--;continue}s="removed"}else if("added"===e.current?.state)s="removed"===e.previous?.state?"changed":"added";else if("removed"===e?.current.state){if(!(i.previous.count>i.current.count)){t--;continue}s="removed"}else s="changed";let a=c.get(s);null==a?(a={decorationType:"added"===s?xu.changesLineAddedAnnotation:"removed"===s?xu.changesLineDeletedAnnotation:xu.changesLineChangedAnnotation,rangesOrOptions:[{range:r}]},c.set(s,a)):a.rangesOrOptions.push({range:r})}}return l.restart({suffix:" to compute recent changes annotations"}),c.size&&(this.setDecorations([...c.values()]),l.stop({suffix:" to apply all recent changes annotations"}),null!=u&&!1!==e?.selection&&(this.editor.selection=u,this.editor.revealRange(u,n.TextEditorRevealType.InCenterIfOutsideViewport))),this.state={commit:i,diffs:a},this.registerHoverProvider(),!0}registerHoverProvider(){const e=r.DN.get("hovers");e.enabled&&e.annotations.enabled&&(this.hoverProviderDisposable=n.languages.registerHoverProvider({pattern:this.document.uri.fsPath},{provideHover:(e,t,i)=>this.provideHover(e,t,i)}))}async provideHover(e,t,i){if(null==this.state)return;if("line"!==r.DN.get("hovers.annotations.over")&&0!==t.character)return;const{commit:o,diffs:s}=this.state;for(const i of s)for(const r of i.hunks){const i="changed"===r.state&&r.previous.count>r.current.count;if(t.line>=r.current.position.start-1&&t.line<=r.current.position.end-(i?0:1)){const s=await gu(o,this.trackedDocument.uri,t.line,r);if(null==s)return;return new n.Hover(s,e.validateRange(new n.Range(r.current.position.start-1,0,r.current.position.end-(i?0:1),$u)))}}}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Du(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&Ru(t,i,r)})([(0,H.cM)()],GutterChangesAnnotationProvider.prototype,"onProvideAnnotation",1);var Tu=Object.defineProperty,Fu=Object.getOwnPropertyDescriptor;class GutterHeatmapBlameAnnotationProvider extends BlameAnnotationProviderBase{constructor(e,t,i){super(r.VP.Heatmap,e,t,i)}async onProvideAnnotation(e,t){const i=(0,G.UH)();this.annotationContext=e;const o=await this.getBlame();if(null==o)return!1;const r=new Vh.u(i),s=new Map,a=this.getComputedHeatmap(o);let l;for(const e of o.lines){const t=e.line-1;l=o.commits.get(e.sha),null!=l&&cu(l.date,a,new n.Range(t,0,t,0),s)}return r.restart({suffix:" to compute heatmap annotations"}),s.size&&(this.setDecorations([...s.values()]),r.stop({suffix:" to apply all heatmap annotations"})),!0}selection(e){return Promise.resolve()}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?Fu(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&Tu(t,i,r)})([(0,H.cM)()],GutterHeatmapBlameAnnotationProvider.prototype,"onProvideAnnotation",1);const xu={gutterBlameAnnotation:n.window.createTextEditorDecorationType({rangeBehavior:n.DecorationRangeBehavior.ClosedOpen,textDecoration:"none"}),gutterBlameHighlight:void 0,changesLineChangedAnnotation:void 0,changesLineAddedAnnotation:void 0,changesLineDeletedAnnotation:void 0};class FileAnnotationController{constructor(e){this.container=e,this._onDidToggleAnnotations=new n.EventEmitter,this._annotationProviders=new Map,this._keyboardScope=void 0,this._windowAnnotationType=void 0,this._disposable=n.Disposable.from((0,z.IH)(e.onReady)(this.onReady,this),r.DN.onDidChange(this.onConfigurationChanged,this),n.window.onDidChangeActiveColorTheme(this.onThemeChanged,this)),this._toggleModes=new Map}get onDidToggleAnnotations(){return this._onDidToggleAnnotations.event}dispose(){this.clearAll(),xu.gutterBlameAnnotation?.dispose(),xu.gutterBlameHighlight?.dispose(),xu.changesLineChangedAnnotation?.dispose(),xu.changesLineAddedAnnotation?.dispose(),xu.changesLineDeletedAnnotation?.dispose(),this._annotationsDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){const t=null==e;let i;if(r.DN.changed(e,["blame.highlight","changes.locations"])&&this.updateDecorations(!1),r.DN.changed(e,"blame.toggleMode")&&(i=r.DN.get("blame.toggleMode"),this._toggleModes.set(r.VP.Blame,i),t||i!==r.TF.File||this.clearAll()),r.DN.changed(e,"changes.toggleMode")&&(i=r.DN.get("changes.toggleMode"),this._toggleModes.set(r.VP.Changes,i),t||i!==r.TF.File||this.clearAll()),r.DN.changed(e,"heatmap.toggleMode")&&(i=r.DN.get("heatmap.toggleMode"),this._toggleModes.set(r.VP.Heatmap,i),t||i!==r.TF.File||this.clearAll()),!t&&r.DN.changed(e,["blame","changes","heatmap","hovers","defaultDateFormat","defaultDateSource","defaultDateStyle","defaultGravatarsStyle"]))for(const e of this._annotationProviders.values())null!=e&&this.show(e.editor,e.annotationType??r.VP.Blame)}onThemeChanged(e){this.updateDecorations(!0)}async onActiveTextEditorChanged(e){if(null!=e&&!(0,J.PH)(e))return;if(this._editor=e,this.isInWindowToggle())return void await this.show(e,this._windowAnnotationType);const t=this.getProvider(e);null==t?((0,a.v)(s.zf.AnnotationStatus,void 0),this.detachKeyboardHook()):((0,a.v)(s.zf.AnnotationStatus,t.status),this.attachKeyboardHook())}onBlameStateChanged(e){if(e.blameable)return;const t=n.window.activeTextEditor;null!=t&&this.clear(t,"BlameabilityChanged")}onDirtyStateChanged(e){for(const[t,i]of this._annotationProviders)e.document.is(i.document)&&this.clearCore(t,"DocumentChanged")}onTextDocumentClosed(e){if(this.container.git.isTrackable(e.uri))for(const[t,i]of this._annotationProviders)i.document===e&&this.clearCore(t,"DocumentClosed")}onTextEditorViewColumnChanged(e){const t=this.getProvider(e.textEditor);if(null!=t)t.restore(e.textEditor);else{const t=(0,q.sE)(this._annotationProviders.values(),(t=>t.editor.document===e.textEditor.document));if(null==t)return;this.clearCore(t.correlationKey,"ColumnChanged")}}onVisibleTextEditorsChanged(e){for(const t of e)this.getProvider(t)?.restore(t)}isInWindowToggle(){return this.getToggleMode(this._windowAnnotationType)===r.TF.Window}getToggleMode(e){return null==e?r.TF.File:this._toggleModes.get(e)??r.TF.File}clear(e,t="User"){return this.isInWindowToggle()?this.clearAll():this.clearCore(Se(e),t)}async clearAll(){this._windowAnnotationType=void 0;for(const[e]of this._annotationProviders)await this.clearCore(e,"Disposing")}async getAnnotationType(e){const t=this.getProvider(e);if(null==t)return;const i=await this.container.tracker.get(e.document);return null!=i&&i.isBlameable?t.annotationType:void 0}getProvider(e){if(null!=e&&null!=e.document)return this._annotationProviders.get(Se(e))}async show(e,t,i){if(this.getToggleMode(t)===r.TF.Window){let i=null==this._windowAnnotationType;const o=!i&&this._windowAnnotationType!==t;if(this._windowAnnotationType=t,o&&(await this.clearAll(),i=!0),i)for(const i of n.window.visibleTextEditors)i!==e&&this.show(i,t)}if(null==e)return!1;this._editor=e;if(!(await this.container.tracker.getOrAdd(e.document)).isBlameable)return!1;const o=this.getProvider(e);if(o?.annotationType===t)return await o.provideAnnotation(i),await o.selection(i?.selection),!0;return null!=await n.window.withProgress({location:n.ProgressLocation.Window},(async n=>{await(0,a.v)(s.zf.AnnotationStatus,Ce.Computing);const r=this.showAnnotationsCore(o,e,t,i,n),l=await r;return e===this._editor&&await(0,a.v)(s.zf.AnnotationStatus,l?.status),r}))}async toggle(e,t,i,n){if(null!=e&&this._toggleModes.get(t)===r.TF.File){const i=await this.container.tracker.getOrAdd(e.document);if(t===r.VP.Changes&&!i.isTracked||!i.isBlameable)return!1}const o=this.getProvider(e);if(null==o)return this.show(e,t,i);const s=o.annotationType!==t||o.mustReopen(i);return!0===n&&!s||(this.isInWindowToggle()?await this.clearAll():await this.clearCore(o.correlationKey,"User"),!!s&&this.show(e,t,i))}async attachKeyboardHook(){null==this._keyboardScope&&(this._keyboardScope=await this.container.keyboard.beginScope({escape:{onDidPressKey:async()=>{const e=this._editor;null!=e&&await this.clear(e,"User")}}}))}async clearCore(e,t){const i=this._annotationProviders.get(e);null!=i&&(B.Yd.log(`${t}:`,`Clear annotations for ${e}`),this._annotationProviders.delete(e),i.dispose(),0!==this._annotationProviders.size&&e!==Se(this._editor)||(await(0,a.v)(s.zf.AnnotationStatus,void 0),await this.detachKeyboardHook()),0===this._annotationProviders.size&&(B.Yd.log("Remove all listener registrations for annotations"),this._annotationsDisposable?.dispose(),this._annotationsDisposable=void 0),this._onDidToggleAnnotations.fire())}async detachKeyboardHook(){null!=this._keyboardScope&&(await this._keyboardScope.dispose(),this._keyboardScope=void 0)}async showAnnotationsCore(e,t,i,o,s){if(null!=s){let e="annotations";switch(i){case r.VP.Blame:e="blame annotations";break;case r.VP.Changes:e="changes annotations";break;case r.VP.Heatmap:e="heatmap annotations"}s.report({message:`Computing ${e} for ${(0,j.EZ)(t.document.fileName)}`})}await this.attachKeyboardHook();const a=await this.container.tracker.getOrAdd(t.document);let l;switch(i){case r.VP.Blame:l=new GutterBlameAnnotationProvider(t,a,this.container);break;case r.VP.Changes:l=new GutterChangesAnnotationProvider(t,a,this.container);break;case r.VP.Heatmap:l=new GutterHeatmapBlameAnnotationProvider(t,a,this.container)}if(null!=l&&await l.validate()){if(null!=e&&await this.clearCore(e.correlationKey,"User"),null==this._annotationsDisposable&&0===this._annotationProviders.size&&(B.Yd.log("Add listener registrations for annotations"),this._annotationsDisposable=n.Disposable.from(n.window.onDidChangeActiveTextEditor((0,K.Ds)(this.onActiveTextEditorChanged,50),this),n.window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged,this),n.window.onDidChangeVisibleTextEditors((0,K.Ds)(this.onVisibleTextEditorsChanged,50),this),n.workspace.onDidCloseTextDocument(this.onTextDocumentClosed,this),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this))),this._annotationProviders.set(l.correlationKey,l),await l.provideAnnotation(o))return this._onDidToggleAnnotations.fire(),l;await this.clearCore(l.correlationKey,"Disposing")}}updateDecorations(e){const t=e?Object.entries(xu):void 0;if(this.updateHighlightDecoration(),this.updateChangedDecorations(),!e)return;const i=new Map;for(const[e,n]of t){if(null==n)continue;n!==(xu[e]??null)&&i.set(n,xu[e]??null)}if(0!==i.size)for(const e of n.window.visibleTextEditors)this.getProvider(e)?.refresh(i)}updateChangedDecorations(){xu.changesLineAddedAnnotation?.dispose(),xu.changesLineChangedAnnotation?.dispose(),xu.changesLineDeletedAnnotation?.dispose();const e=r.DN.get("changes.locations");let t,i,o;switch(n.window.activeColorTheme.kind){case n.ColorThemeKind.Light:t=[72,152,93],i=[32,144,211],o=[229,20,0];break;case n.ColorThemeKind.HighContrast:default:t=[72,126,2],i=[27,129,168],o=[241,76,76]}xu.changesLineAddedAnnotation=n.window.createTextEditorDecorationType({backgroundColor:e.includes(r.hp.Line)?`rgba(${t.join(",")},0.4)`:void 0,isWholeLine:!!e.includes(r.hp.Line)||void 0,gutterIconPath:e.includes(r.hp.Gutter)?n.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${t.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:n.OverviewRulerLane.Left,overviewRulerColor:e.includes(r.hp.Scrollbar)?new n.ThemeColor("editorOverviewRuler.addedForeground"):void 0}),xu.changesLineChangedAnnotation=n.window.createTextEditorDecorationType({backgroundColor:e.includes(r.hp.Line)?`rgba(${i.join(",")},0.4)`:void 0,isWholeLine:!!e.includes(r.hp.Line)||void 0,gutterIconPath:e.includes(r.hp.Gutter)?n.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='rgb(${i.join(",")})' x='15' y='0' width='3' height='18'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:n.OverviewRulerLane.Left,overviewRulerColor:e.includes(r.hp.Scrollbar)?new n.ThemeColor("editorOverviewRuler.modifiedForeground"):void 0}),xu.changesLineDeletedAnnotation=n.window.createTextEditorDecorationType({gutterIconPath:e.includes(r.hp.Gutter)?n.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><polygon fill='rgb(${o.join(",")})' points='13,10 13,18 17,14'/></svg>`)}`):void 0,gutterIconSize:"contain",overviewRulerLane:n.OverviewRulerLane.Left,overviewRulerColor:e.includes(r.hp.Scrollbar)?new n.ThemeColor("editorOverviewRuler.deletedForeground"):void 0})}updateHighlightDecoration(){xu.gutterBlameHighlight?.dispose(),xu.gutterBlameHighlight=void 0;const e=r.DN.get("blame.highlight");if(e.enabled){const{locations:t}=e,i="#00bcf2",o=t.includes(r.y0.Gutter)?n.Uri.parse(`data:image/svg+xml,${encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'><rect fill='${i}' fill-opacity='0.6' x='7' y='0' width='3' height='18'/></svg>`)}`):void 0;xu.gutterBlameHighlight=n.window.createTextEditorDecorationType({gutterIconPath:o,gutterIconSize:"contain",isWholeLine:!0,overviewRulerLane:n.OverviewRulerLane.Right,backgroundColor:t.includes(r.y0.Line)?new n.ThemeColor(s.wL.LineHighlightBackgroundColor):void 0,overviewRulerColor:t.includes(r.y0.Scrollbar)?new n.ThemeColor(s.wL.LineHighlightOverviewRulerColor):void 0})}}}var Ou=i(418),Au=Object.defineProperty,Iu=Object.getOwnPropertyDescriptor,Eu=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Iu(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Au(t,i,r),r};const Nu=n.window.createTextEditorDecorationType({after:{margin:"0 0 0 3em",textDecoration:"none"},rangeBehavior:n.DecorationRangeBehavior.ClosedOpen}),Uu=2**30;class LineAnnotationController{constructor(e){this.container=e,this._enabled=!1,this._suspended=!1,this._disposable=n.Disposable.from((0,z.IH)(e.onReady)(this.onReady,this),r.DN.onDidChange(this.onConfigurationChanged,this),e.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled,this),Ou.j.onDidChangeConnectionState((()=>{this.refresh(n.window.activeTextEditor)})))}dispose(){this.clearAnnotations(this._editor),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){r.DN.changed(e,"currentLine")&&(r.DN.changed(e,"currentLine.enabled")&&(r.DN.get("currentLine.enabled")?(this._enabled=!0,this.resume()):(this._enabled=!1,this.setLineTracker(!1))),this.refresh(n.window.activeTextEditor))}get suspended(){return!this._enabled||this._suspended}resume(){return this.setLineTracker(!0),!!this._suspended&&(this._suspended=!1,!0)}suspend(){return this.setLineTracker(!1),!this._suspended&&(this._suspended=!0,!0)}onActiveLinesChanged(e){e.pending||void 0===e.selections?this.clear(e.editor):this.refresh(e.editor)}onFileAnnotationsToggled(){this.refresh(n.window.activeTextEditor)}clear(e){this._cancellation?.cancel(),this._editor!==e&&null!=this._editor&&this.clearAnnotations(this._editor),this.clearAnnotations(e)}async toggle(e){this._enabled=!(this._enabled&&!this.suspended),this._enabled?this.resume()&&await this.refresh(e):this.suspend()&&await this.refresh(e)}clearAnnotations(e){void 0!==e&&!0!==e._disposed&&e.setDecorations(Nu,[])}async getPullRequests(e,t,{timeout:i}={}){if(0===t.length)return;const n=await this.container.git.getBestRemoteWithRichProvider(e);if(null==n?.provider)return;const o=new Set;for(const[,e]of t)o.add(e.ref);if(0===o.size)return;const{provider:r}=n,s=await(0,Y.xu)(o.values(),(e=>this.container.git.getPullRequestForCommit(e,r)),i);return 0===s.size||(0,q.yW)(s.values(),(e=>null==e))?void 0:s}async refresh(e,t){if(null==e&&null==this._editor)return;const i=(0,G.UH)(),o=this.container.lineTracker.selections;if(null==e||null==o||!(0,J.PH)(e))return null!=i&&(i.exitDetails=` ${s.NE.Dot} Skipped because there is no valid editor or no valid selections`),void this.clear(this._editor);this._editor!==e&&(this.clear(this._editor),this._editor=e);const a=r.DN.get("currentLine");if(this.suspended)return null!=i&&(i.exitDetails=` ${s.NE.Dot} Skipped because the controller is suspended`),void this.clear(e);const l=await this.container.tracker.getOrAdd(e.document);if(!l.isBlameable&&this.suspended)return null!=i&&(i.exitDetails=` ${s.NE.Dot} Skipped because the ${this.suspended?"controller is suspended":`document(${l.uri.toString(!0)}) is not blameable`}`),void this.clear(e);if(null==e.document||!this.container.lineTracker.includes(o))return void(null!=i&&(i.exitDetails=` ${s.NE.Dot} Skipped because the ${null==e.document?"editor is gone":`selection(s)=${o.map((e=>`[${e.anchor}-${e.active}]`)).join()} are no longer current`}`));null!=i&&(i.exitDetails=` ${s.NE.Dot} selection(s)=${o.map((e=>`[${e.anchor}-${e.active}]`)).join()}`);const c=new Map;for(const e of o){const t=this.container.lineTracker.getState(e.active);null!=t?.commit?c.set(e.active,t.commit):B.Yd.debug(i,`Line ${e.active} returned no commit`)}const h=l.uri.repoPath,[u,d]=await Promise.all([CommitFormatter.has(a.format,"tips")?this.container.git.getBranchesAndTagsTipsFn(h):void 0,null!=h&&a.pullRequests.enabled&&CommitFormatter.has(a.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")?t?.prs??this.getPullRequests(h,[...(0,q.hX)(c,(([,e])=>!e.isUncommitted))],{timeout:100}):void 0]);null!=d&&(this._cancellation?.cancel(),this._cancellation=new n.CancellationTokenSource,this.waitForAnyPendingPullRequests(e,d,this._cancellation.token,100,i));const p=[];for(const[t,i]of c){if(i.isUncommitted&&""===a.uncommittedChangesFormat)continue;const o=uu(i,i.isUncommitted?a.uncommittedChangesFormat??a.format:a.format,{dateFormat:null===a.dateFormat?r.DN.get("defaultDateFormat"):a.dateFormat,getBranchAndTagTips:u,pullRequestOrRemote:d?.get(i.ref),pullRequestPendingMessage:`PR ${s.NE.Ellipsis}`},a.scrollable);o.range=e.document.validateRange(new n.Range(t,Uu,t,Uu)),p.push(o)}e.setDecorations(Nu,p)}setLineTracker(e){e?this.container.lineTracker.subscribed(this)||this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this)):this.container.lineTracker.unsubscribe(this)}async waitForAnyPendingPullRequests(e,t,i,n,o){const r=(0,q.QX)(t.values(),(e=>e instanceof Y.PK));if(i.isCancellationRequested||0===r)return;B.Yd.debug(o,`${s.NE.Dot} ${r} pull request queries took too long (over ${n} ms)`);const a=new Map;for(const[e,i]of t)a.set(e,i instanceof Y.PK?await i.promise:i);i.isCancellationRequested||e!==this._editor||(B.Yd.debug(o,`${s.NE.Dot} ${r} pull request queries completed; refreshing...`),this.refresh(e,{prs:a}))}}Eu([(0,H.cM)()],LineAnnotationController.prototype,"resume",1),Eu([(0,H.cM)()],LineAnnotationController.prototype,"suspend",1),Eu([(0,H.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineAnnotationController.prototype,"onActiveLinesChanged",1),Eu([(0,H.fF)({args:!1,singleLine:!0})],LineAnnotationController.prototype,"clear",1),Eu([(0,H.cM)({args:!1})],LineAnnotationController.prototype,"toggle",1),Eu([(0,H.fF)({args:!1})],LineAnnotationController.prototype,"refresh",1);var Lu=i(8294);class GitRecentChangeCodeLens extends n.CodeLens{constructor(e,t,i,n,o,r,s,a,l,c){super(a,c),this.languageId=e,this.symbol=t,this.uri=i,this.dateFormat=n,this.blame=o,this.blameRange=r,this.isFullRange=s,this.desiredCommand=l}getBlame(){return this.blame?.()}}class GitAuthorsCodeLens extends n.CodeLens{constructor(e,t,i,n,o,r,s,a){super(s),this.languageId=e,this.symbol=t,this.uri=i,this.blame=n,this.blameRange=o,this.isFullRange=r,this.desiredCommand=a}getBlame(){return this.blame()}}class GitCodeLensProvider{constructor(e){this.container=e,this._onDidChangeCodeLenses=new n.EventEmitter}get onDidChangeCodeLenses(){return this._onDidChangeCodeLenses.event}reset(e){this._onDidChangeCodeLenses.fire()}async provideCodeLenses(e,t){if(e.isDirty&&(0,J.pt)(e.uri))return[];const i=r.DN.get("codeLens",e);if(!i.enabled)return[];const o=await this.container.tracker.getOrAdd(e);if(!o.isBlameable)return[];let a=!1;if(e.isDirty)if(o.isDirtyIdle){const t=r.DN.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.lineCount>t&&(a=!0)}else a=!0;let l=i.scopesByLanguage?.find((t=>t.language?.toLowerCase()===e.languageId));null==l&&(l={language:e.languageId}),null==l.scopes&&(l.scopes=i.scopes),null==l.symbolScopes&&(l.symbolScopes=i.symbolScopes),l.symbolScopes=null!=l.symbolScopes?l.symbolScopes=l.symbolScopes.map((e=>e.toLowerCase())):[];const c=[],h=o.uri;let u,d;if(a){if(1!==l.scopes.length||!l.scopes.includes(r.Uy.Document)){let t;if([t,d]=await Promise.all([this.container.git.isTracked(h),(0,ke.dO)(s.nA.ExecuteDocumentSymbolProvider,e.uri)]),!t)return c}}else{if(t.isCancellationRequested)return c;if(1===l.scopes.length&&l.scopes.includes(r.Uy.Document)?u=await this.container.git.getBlame(h,e):[u,d]=await Promise.all([this.container.git.getBlame(h,e),(0,ke.dO)(s.nA.ExecuteDocumentSymbolProvider,e.uri)]),null==u||0===u?.lines.length)return c}if(t.isCancellationRequested)return c;const p=(0,K.IH)((()=>e.validateRange(new n.Range(0,0,1e6,1e6)))),m=a?{command:void 0,title:this.getDirtyTitle(i)}:void 0;if(void 0!==d){B.Yd.log("GitCodeLensProvider.provideCodeLenses:",`${d.length} symbol(s) found`);for(const t of d)this.provideCodeLens(c,e,t,l,p,u,h,i,a,m)}if((l.scopes.includes(r.Uy.Document)||l.symbolScopes.includes("file"))&&!l.symbolScopes.includes("!file")&&null==c.find((e=>0===e.range.start.line&&0===e.range.end.line))){const t=p();let o;if(a||i.recentChange.enabled){a||(o=(0,K.IH)((()=>this.container.git.getBlameRange(u,h,t))));const r=new n.SymbolInformation(h.fileName,n.SymbolKind.File,"",new n.Location(h.documentUri(),new n.Range(0,0,0,t.start.character)));c.push(new GitRecentChangeCodeLens(e.languageId,r,h,i.dateFormat,o,t,!0,Mu(r),i.recentChange.command,m))}if(!a&&i.authors.enabled){void 0===o&&(o=(0,K.IH)((()=>this.container.git.getBlameRange(u,h,t))));const r=new n.SymbolInformation(h.fileName,n.SymbolKind.File,"",new n.Location(h.documentUri(),new n.Range(0,1,0,t.start.character)));c.push(new GitAuthorsCodeLens(e.languageId,r,h,o,t,!0,Mu(r),i.authors.command))}}return c}getValidateSymbolRange(e,t,i,o){let s,a=!1;const l=n.SymbolKind[e.kind].toLowerCase();switch(e.kind){case n.SymbolKind.File:(t.scopes.includes(r.Uy.Containers)||t.symbolScopes.includes(l))&&(a=!t.symbolScopes.includes(`!${l}`)),a&&(s=i());break;case n.SymbolKind.Package:(t.scopes.includes(r.Uy.Containers)||t.symbolScopes.includes(l))&&(a=!t.symbolScopes.includes(`!${l}`)),a&&(s=Mu(e),0===s.start.line&&0===s.end.line&&(s=i()));break;case n.SymbolKind.Class:case n.SymbolKind.Interface:case n.SymbolKind.Module:case n.SymbolKind.Namespace:case n.SymbolKind.Struct:(t.scopes.includes(r.Uy.Containers)||t.symbolScopes.includes(l))&&(s=Mu(e),a=!t.symbolScopes.includes(`!${l}`)&&(o||!s.isSingleLine));break;case n.SymbolKind.Constructor:case n.SymbolKind.Enum:case n.SymbolKind.Function:case n.SymbolKind.Method:case n.SymbolKind.Property:(t.scopes.includes(r.Uy.Blocks)||t.symbolScopes.includes(l))&&(s=Mu(e),a=!t.symbolScopes.includes(`!${l}`)&&(o||!s.isSingleLine));break;case n.SymbolKind.String:(t.symbolScopes.includes(l)||"markdown"===t.language&&t.scopes.includes(r.Uy.Containers))&&(s=Mu(e),a=!t.symbolScopes.includes(`!${l}`)&&(o||!s.isSingleLine));break;default:t.symbolScopes.includes(l)&&(s=Mu(e),a=!t.symbolScopes.includes(`!${l}`)&&(o||!s.isSingleLine))}return a?s??Mu(e):void 0}provideCodeLens(e,t,i,o,r,s,a,l,c,h){try{const u=this.getValidateSymbolRange(i,o,r,l.includeSingleLineSymbols);if(void 0===u)return;const d=t.lineAt(Mu(i).start);if(e.length&&e[e.length-1].range.start.line===d.lineNumber)return;let p,m=0;if((c||l.recentChange.enabled)&&(c||(p=(0,K.IH)((()=>this.container.git.getBlameRange(s,a,u)))),e.push(new GitRecentChangeCodeLens(t.languageId,i,a,l.dateFormat,p,u,!1,d.range.with(new n.Position(d.range.start.line,m)),l.recentChange.command,h)),m++),l.authors.enabled){let o=!u.isSingleLine;if(!o&&"csharp"===t.languageId)switch(i.kind){case n.SymbolKind.File:break;case n.SymbolKind.Package:case n.SymbolKind.Module:case n.SymbolKind.Namespace:case n.SymbolKind.Class:case n.SymbolKind.Interface:case n.SymbolKind.Constructor:case n.SymbolKind.Method:case n.SymbolKind.Function:case n.SymbolKind.Enum:o=!0}o&&!c&&(void 0===p&&(p=(0,K.IH)((()=>this.container.git.getBlameRange(s,a,u)))),e.push(new GitAuthorsCodeLens(t.languageId,i,a,p,u,!1,d.range.with(new n.Position(d.range.start.line,m)),l.authors.command)))}}finally{if(Wu(i))for(const n of i.children)this.provideCodeLens(e,t,n,o,r,s,a,l,c,h)}}resolveCodeLens(e,t){return e instanceof GitRecentChangeCodeLens?this.resolveGitRecentChangeCodeLens(e,t):e instanceof GitAuthorsCodeLens?this.resolveGitAuthorsCodeLens(e,t):Promise.reject(void 0)}resolveGitRecentChangeCodeLens(e,t){const i=e.getBlame();if(null==i)return e;const o=(0,q.Ps)(i.commits.values());if(null==o)return e;let s=`${o.author.name}, ${null==e.dateFormat?o.formattedDate:o.formatDate(e.dateFormat)}`;if(r.DN.get("debug")&&(s+=` [${e.languageId}: ${n.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Commit (${o.shortSha})]`),!1===e.desiredCommand)return this.applyCommandWithNoClickAction(s,e);switch(e.desiredCommand){case r.N4.CopyRemoteCommitUrl:return this.applyCopyOrOpenCommitOnRemoteCommand(s,e,o,!0);case r.N4.CopyRemoteFileUrl:return this.applyCopyOrOpenFileOnRemoteCommand(s,e,o,!0);case r.N4.DiffWithPrevious:return this.applyDiffWithPreviousCommand(s,e,o);case r.N4.OpenCommitOnRemote:return this.applyCopyOrOpenCommitOnRemoteCommand(s,e,o);case r.N4.OpenFileOnRemote:return this.applyCopyOrOpenFileOnRemoteCommand(s,e,o);case r.N4.RevealCommitInView:return this.applyRevealCommitInViewCommand(s,e,o);case r.N4.ShowCommitsInView:return this.applyShowCommitsInViewCommand(s,e,i,o);case r.N4.ShowQuickCommitDetails:return this.applyShowQuickCommitDetailsCommand(s,e,o);case r.N4.ShowQuickCommitFileDetails:return this.applyShowQuickCommitFileDetailsCommand(s,e,o);case r.N4.ShowQuickCurrentBranchHistory:return this.applyShowQuickCurrentBranchHistoryCommand(s,e);case r.N4.ShowQuickFileHistory:return this.applyShowQuickFileHistoryCommand(s,e);case r.N4.ToggleFileBlame:return this.applyToggleFileBlameCommand(s,e);case r.N4.ToggleFileChanges:return this.applyToggleFileChangesCommand(s,e,o);case r.N4.ToggleFileChangesOnly:return this.applyToggleFileChangesCommand(s,e,o,!0);case r.N4.ToggleFileHeatmap:return this.applyToggleFileHeatmapCommand(s,e);default:return e}}resolveGitAuthorsCodeLens(e,t){const i=e.getBlame();if(null==i)return e;const o=i.authors.size,s=(0,q.Ps)(i.authors.values())?.name??"Unknown";let a=`${o} ${o>1?"authors":"author"} (${s}${o>1?" and others":""})`;if(r.DN.get("debug")&&(a+=` [${e.languageId}: ${n.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Authors (${(0,q.v_)((0,q.UI)(i.authors.values(),(e=>e.name)),", ")})]`),!1===e.desiredCommand)return this.applyCommandWithNoClickAction(a,e);const l=(0,q.sE)(i.commits.values(),(e=>e.author.name===s))??(0,q.Ps)(i.commits.values());if(null==l)return e;switch(e.desiredCommand){case r.N4.CopyRemoteCommitUrl:return this.applyCopyOrOpenCommitOnRemoteCommand(a,e,l,!0);case r.N4.CopyRemoteFileUrl:return this.applyCopyOrOpenFileOnRemoteCommand(a,e,l,!0);case r.N4.DiffWithPrevious:return this.applyDiffWithPreviousCommand(a,e,l);case r.N4.OpenCommitOnRemote:return this.applyCopyOrOpenCommitOnRemoteCommand(a,e,l);case r.N4.OpenFileOnRemote:return this.applyCopyOrOpenFileOnRemoteCommand(a,e,l);case r.N4.RevealCommitInView:return this.applyRevealCommitInViewCommand(a,e,l);case r.N4.ShowCommitsInView:return this.applyShowCommitsInViewCommand(a,e,i);case r.N4.ShowQuickCommitDetails:return this.applyShowQuickCommitDetailsCommand(a,e,l);case r.N4.ShowQuickCommitFileDetails:return this.applyShowQuickCommitFileDetailsCommand(a,e,l);case r.N4.ShowQuickCurrentBranchHistory:return this.applyShowQuickCurrentBranchHistoryCommand(a,e);case r.N4.ShowQuickFileHistory:return this.applyShowQuickFileHistoryCommand(a,e);case r.N4.ToggleFileBlame:return this.applyToggleFileBlameCommand(a,e);case r.N4.ToggleFileChanges:return this.applyToggleFileChangesCommand(a,e,l);case r.N4.ToggleFileChangesOnly:return this.applyToggleFileChangesCommand(a,e,l,!0);case r.N4.ToggleFileHeatmap:return this.applyToggleFileHeatmapCommand(a,e);default:return e}}applyDiffWithPreviousCommand(e,t,i){return t.command=(0,ke._N)({title:e,command:s.Gh.DiffWithPrevious,arguments:[void 0,{commit:i,uri:t.uri.toFileUri()}]}),t}applyCopyOrOpenCommitOnRemoteCommand(e,t,i,n=!1){return t.command=(0,ke._N)({title:e,command:s.Gh.OpenOnRemote,arguments:[{resource:{type:Jt.J.Commit,sha:i.sha},repoPath:i.repoPath,clipboard:n}]}),t}applyCopyOrOpenFileOnRemoteCommand(e,t,i,n=!1){return t.command=(0,ke._N)({title:e,command:s.Gh.OpenOnRemote,arguments:[{resource:{type:Jt.J.Revision,fileName:i.file?.path??"",sha:i.sha},repoPath:i.repoPath,clipboard:n}]}),t}applyRevealCommitInViewCommand(e,t,i){return t.command=(0,ke._N)({title:e,command:i?.isUncommitted?"":r.N4.RevealCommitInView,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}applyShowCommitsInViewCommand(e,t,i,n){let o;return o=void 0===n?[...(0,q.DZ)(i.commits.values(),(e=>e.isUncommitted?void 0:e.ref))]:[n.ref],t.command=(0,ke._N)({title:e,command:0===o.length?"":s.Gh.ShowCommitsInView,arguments:[{repoPath:i.repoPath,refs:o}]}),t}applyShowQuickCommitDetailsCommand(e,t,i){return t.command=(0,ke._N)({title:e,command:i?.isUncommitted?"":r.N4.ShowQuickCommitDetails,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}applyShowQuickCommitFileDetailsCommand(e,t,i){return t.command=(0,ke._N)({title:e,command:i?.isUncommitted?"":r.N4.ShowQuickCommitFileDetails,arguments:[t.uri.toFileUri(),{commit:i,sha:void 0===i?void 0:i.sha}]}),t}applyShowQuickCurrentBranchHistoryCommand(e,t){return t.command=(0,ke._N)({title:e,command:r.N4.ShowQuickCurrentBranchHistory,arguments:[t.uri.toFileUri()]}),t}applyShowQuickFileHistoryCommand(e,t){return t.command=(0,ke._N)({title:e,command:r.N4.ShowQuickFileHistory,arguments:[t.uri.toFileUri(),{range:t.isFullRange?void 0:t.blameRange}]}),t}applyToggleFileBlameCommand(e,t){return t.command=(0,ke._N)({title:e,command:s.Gh.ToggleFileBlame,arguments:[t.uri.toFileUri()]}),t}applyToggleFileChangesCommand(e,t,i,n){return t.command=(0,ke._N)({title:e,command:s.Gh.ToggleFileChanges,arguments:[t.uri.toFileUri(),{type:r.VP.Changes,context:{sha:i.sha,only:n,selection:!1}}]}),t}applyToggleFileHeatmapCommand(e,t){return t.command=(0,ke._N)({title:e,command:s.Gh.ToggleFileHeatmap,arguments:[t.uri.toFileUri()]}),t}applyCommandWithNoClickAction(e,t){return t.command={title:e,command:""},t}getDirtyTitle(e){return e.recentChange.enabled&&e.authors.enabled?r.DN.get("strings.codeLens.unsavedChanges.recentChangeAndAuthors"):e.recentChange.enabled?r.DN.get("strings.codeLens.unsavedChanges.recentChangeOnly"):r.DN.get("strings.codeLens.unsavedChanges.authorsOnly")}}function Mu(e){return Wu(e)?e.range:e.location.range}function Wu(e){return(0,K.is)(e,"children")}GitCodeLensProvider.selector=[{scheme:s.sN.File},{scheme:s.sN.Git},{scheme:s.sN.GitLens},{scheme:s.sN.PRs},{scheme:s.sN.Vsls},{scheme:s.sN.VslsScc},{scheme:s.sN.Virtual},{scheme:s.sN.GitHub}];class GitCodeLensController{constructor(e){this.container=e,this._canToggle=!1,this._disposable=n.Disposable.from((0,z.IH)(e.onReady)(this.onReady,this),r.DN.onDidChange(this.onConfigurationChanged,this))}dispose(){this._providerDisposable?.dispose(),this._disposable?.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(r.DN.changed(e,["codeLens","defaultDateFormat","defaultDateSource","defaultDateStyle"])){null!=e&&B.Yd.log("CodeLens config changed; resetting CodeLens provider");const t=r.DN.get("codeLens");t.enabled&&(t.recentChange.enabled||t.authors.enabled)?this.ensureProvider():(this._providerDisposable?.dispose(),this._provider=void 0),this._canToggle=t.recentChange.enabled||t.authors.enabled,(0,a.v)(s.zf.DisabledToggleCodeLens,!this._canToggle)}}onBlameStateChanged(e){null!=this._provider&&e.blameable&&(B.Yd.log("Blame state changed; resetting CodeLens provider"),this._provider.reset("saved"))}onDirtyIdleTriggered(e){if(null==this._provider||!e.document.isBlameable)return;const t=r.DN.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||(B.Yd.log("Dirty idle triggered; resetting CodeLens provider"),this._provider.reset("idle"))}toggleCodeLens(){if(this._canToggle){if(B.Yd.log("toggleCodeLens()"),null!=this._provider)return this._providerDisposable?.dispose(),void(this._provider=void 0);this.ensureProvider()}}ensureProvider(){null==this._provider?(this._providerDisposable?.dispose(),this._provider=new GitCodeLensProvider(this.container),this._providerDisposable=n.Disposable.from(n.languages.registerCodeLensProvider(GitCodeLensProvider.selector,this._provider),this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))):this._provider.reset()}}class EventBus{constructor(){this._emitter=new n.EventEmitter}get event(){return this._emitter.event}dispose(){this._emitter.dispose()}fire(e,t,i){this._emitter.fire({name:e,data:t,source:i?.source})}fireAsync(e,t,i){queueMicrotask((()=>this.fire(e,t,i)))}on(e,t,i,n){return this.event((function(n){e===n.name&&t.call(i,n)}),i,n)}}var Bu=i(429);const Gu={done:!0,value:void 0};class StringIterator{constructor(){this._value="",this._pos=0}reset(e){return this._value=e,this._pos=0,this}next(){return this._pos+=1,this}hasNext(){return this._pos<this._value.length-1}cmp(e){return e.charCodeAt(0)-this._value.charCodeAt(this._pos)}value(){return this._value[this._pos]}}class PathIterator{constructor(e=!0,t=!0){this._splitOnBackslash=e,this._caseSensitive=t}reset(e){return this._value=e.replace(/\\$|\/$/,""),this._from=0,this._to=0,this.next()}hasNext(){return this._to<this._value.length}next(){this._from=this._to;let e=!0;for(;this._to<this._value.length;this._to++){const t=this._value.charCodeAt(this._to);if(t===s.mN.Slash||this._splitOnBackslash&&t===s.mN.Backslash){if(!e)break;this._from++}else e=!1}return this}cmp(e){return this._caseSensitive?(0,k.TT)(e,this._value,0,e.length,this._from,this._to):(0,k.j_)(e,this._value,0,e.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class TernarySearchTreeNode{isEmpty(){return!(this.left||this.mid||this.right||this.value)}}class TernarySearchTree{static forPaths(){return new TernarySearchTree(new PathIterator)}static forStrings(){return new TernarySearchTree(new StringIterator)}constructor(e){this._iter=e}clear(){this._root=void 0}set(e,t){const i=this._iter.reset(e);let n;for(this._root||(this._root=new TernarySearchTreeNode,this._root.segment=i.value()),n=this._root;;){const e=i.cmp(n.segment);if(e>0)n.left||(n.left=new TernarySearchTreeNode,n.left.segment=i.value()),n=n.left;else if(e<0)n.right||(n.right=new TernarySearchTreeNode,n.right.segment=i.value()),n=n.right;else{if(!i.hasNext())break;i.next(),n.mid||(n.mid=new TernarySearchTreeNode,n.mid.segment=i.value()),n=n.mid}}const o=n.value;return n.value=t,n.key=e,o}get(e){return this._getNode(e)?.value}_getNode(e){const t=this._iter.reset(e);let i=this._root;for(;i;){const e=t.cmp(i.segment);if(e>0)i=i.left;else if(e<0)i=i.right;else{if(!t.hasNext())break;t.next(),i=i.mid}}return i}has(e){const t=this._getNode(e);return!(void 0===t?.value&&void 0===t?.mid)}delete(e){return this._delete(e,!1)}deleteSuperstr(e){return this._delete(e,!0)}_delete(e,t){const i=this._iter.reset(e),n=[];let o=this._root;for(;o;){const e=i.cmp(o.segment);if(e>0)n.push([1,o]),o=o.left;else if(e<0)n.push([-1,o]),o=o.right;else{if(!i.hasNext()){for(t?(o.left=void 0,o.mid=void 0,o.right=void 0):o.value=void 0;n.length>0&&o.isEmpty();){const[e,t]=n.pop();switch(e){case 1:t.left=void 0;break;case 0:t.mid=void 0;break;case-1:t.right=void 0}o=t}break}i.next(),n.push([0,o]),o=o.mid}}}findSubstr(e){const t=this._iter.reset(e);let i,n=this._root;for(;n;){const e=t.cmp(n.segment);if(e>0)n=n.left;else if(e<0)n=n.right;else{if(!t.hasNext())break;t.next(),i=n.value||i,n=n.mid}}return n?.value||i}findSuperstr(e,t=!1){const i=this._iter.reset(e);let n=this._root;for(;n;){const e=i.cmp(n.segment);if(e>0)n=n.left;else if(e<0)n=n.right;else{if(!i.hasNext()){if(!n.mid)return;return n=n.mid,{[Symbol.iterator]:()=>this._nodeIterator(n,t)}}i.next(),n=n.mid}}}_nodeIterator(e,t=!1){let i,n,o;return{next:()=>(o||(o=[],n=0,this._forEach(e,(e=>o.push(e)),t)),n>=o.length?Gu:(i?i.value=o[n++]:i={done:!1,value:o[n++]},i))}}forEach(e){this._forEach(this._root,e)}_forEach(e,t,i=!1){void 0!==e&&(this._forEach(e.left,t,i),e.value&&t(e.value,e.key),i||this._forEach(e.mid,t,i),this._forEach(e.right,t,i))}any(){return void 0!==this._root&&!this._root.isEmpty()}count(e){return void 0===this._root||this._root.isEmpty()?0:(0,q.QX)(this.entries(),void 0===e?void 0:([,t])=>e(t))}entries(){return this._iterator(this._root)}values(){return(0,q.UI)(this.entries(),(([,e])=>e))}highlander(){if(void 0===this._root||this._root.isEmpty())return;const e=this.entries();let t,i,n=0;for(;t=e.next(),!t.done;)if(i=t.value,n++,n>1)return;return i}some(e){return void 0!==this._root&&!this._root.isEmpty()&&(0,q.G)(this.entries(),(([,t])=>e(t)))}*[Symbol.iterator](){yield*this._iterator(this._root)}*_iterator(e){e&&(yield*this._iterator(e.left),e.value&&(yield[e.key,e.value]),yield*this._iterator(e.mid),yield*this._iterator(e.right))}}var Vu=Object.defineProperty,Hu=Object.getOwnPropertyDescriptor,qu=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Hu(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Vu(t,i,r),r};const ju=new Uint8Array(0);function Yu(e){const t=(0,_.uy)(e)?e:_.YY.fromRevisionUri(e);return{path:t.relativePath,ref:t.sha,repoPath:t.repoPath}}class GitFileSystemProvider{constructor(e){this.container=e,this._searchTreeMap=new Map,this._onDidChangeFile=new n.EventEmitter,this._disposable=n.Disposable.from(n.workspace.registerFileSystemProvider(s.sN.GitLens,this,{isCaseSensitive:Bu.IJ,isReadonly:!0}))}dispose(){this._disposable.dispose()}get onDidChangeFile(){return this._onDidChangeFile.event}copy(e,t,i){throw n.FileSystemError.NoPermissions(e)}createDirectory(e){throw n.FileSystemError.NoPermissions(e)}delete(e,t){throw n.FileSystemError.NoPermissions(e)}async readDirectory(e){const{path:t,ref:i,repoPath:o}=Yu(e),r=await this.getTree(t,i,o);if(void 0===r)throw n.FileSystemError.FileNotFound(e);return[...(0,q.UI)(r,(e=>[null!=t&&0!==t.length?(0,j.AH)((0,j.Gf)(t,e.path)):e.path,Qu(e.type)]))]}async readFile(e){const{path:t,ref:i,repoPath:n}=Yu(e);if(i===x.pk.deletedOrMissing)return ju;const o=await this.container.git.getRevisionContent(n,t,i);return null!=o?o:ju}rename(e,t,i){throw n.FileSystemError.NoPermissions(e)}async stat(e){const{path:t,ref:i,repoPath:o}=Yu(e);if(i===x.pk.deletedOrMissing)return{type:n.FileType.File,size:0,ctime:0,mtime:0};let r;const s=this._searchTreeMap.get(i);if(void 0!==s)r=(await s).get(`/~/${t}`);else{if(null==t||0===t.length){if(void 0===await this.getTree(t,i,o))throw n.FileSystemError.FileNotFound(e);return{type:n.FileType.Directory,size:0,ctime:0,mtime:0}}r=await this.container.git.getTreeEntryForRevision(o,t,i)}if(void 0===r)throw n.FileSystemError.FileNotFound(e);return{type:Qu(r.type),size:r.size,ctime:0,mtime:0}}watch(){return{dispose:()=>{}}}writeFile(e){throw n.FileSystemError.NoPermissions(e)}async createSearchTree(e,t){const i=TernarySearchTree.forPaths(),n=await this.container.git.getTreeForRevision(t,e);i.set("~",{commitSha:"",path:"~",size:0,type:"tree"});for(const e of n)i.set(`~/${e.path}`,e);return i}getOrCreateSearchTree(e,t){let i=this._searchTreeMap.get(e);return void 0===i&&(i=this.createSearchTree(e,t),this._searchTreeMap.set(e,i)),i}async getTree(e,t,i){return(await this.getOrCreateSearchTree(t,i)).findSuperstr(`/~/${e}`,!0)}}function Qu(e){switch(e){case"blob":return n.FileType.File;case"tree":return n.FileType.Directory;default:return n.FileType.Unknown}}qu([(0,H.fF)()],GitFileSystemProvider.prototype,"readDirectory",1),qu([(0,H.fF)()],GitFileSystemProvider.prototype,"readFile",1),qu([(0,H.fF)()],GitFileSystemProvider.prototype,"stat",1);var zu=i(2133),Ku=i(1526),Ju=Object.defineProperty,Xu=Object.getOwnPropertyDescriptor,Zu=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Xu(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ju(t,i,r),r};const ed=Object.freeze([]),td=new Map([["master",100],["main",15],["default",10],["develop",5],["development",1]]);class GitProviderService{constructor(e){this.container=e,this._onDidChangeProviders=new n.EventEmitter,this._onDidChangeRepositories=new n.EventEmitter,this._onDidChangeRepository=new n.EventEmitter,this.supportedSchemes=new Set,this._pendingRepositories=new Map,this._providers=new Map,this._repositories=new zu.x8,this._bestRemotesCache=new Map,this._visitedPaths=new Ku.u$,this._etag=0,this._initializing=!0,this._discoveredWorkspaceFolders=new Map,this._accessCache=new Map,this._visibilityCache=new Map,this._context={enabled:!1,disabled:!1},this._disposable=n.Disposable.from(e.subscription.onDidChange(this.onSubscriptionChanged,this),n.window.onDidChangeWindowState(this.onWindowStateChanged,this),n.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this),r.DN.onDidChange(this.onConfigurationChanged,this),Ou.j.onDidChangeConnectionState((e=>{"connected"===e.reason&&(0,b.E3)("failed"),this.resetCaches("providers"),this.updateContext()}))),this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.CommitShaFormatting.reset(),this.container.PullRequestDateFormatting.reset(),this.updateContext()}get onDidChangeProviders(){return this._onDidChangeProviders.event}fireProvidersChanged(e,t){this.container.telemetry.setGlobalAttributes({"providers.count":this._providers.size,"providers.ids":(0,q.v_)(this._providers.keys(),",")}),this.container.telemetry.sendEvent("providers/changed",{"providers.added":e?.length??0,"providers.removed":t?.length??0}),this._etag=Date.now(),this._onDidChangeProviders.fire({added:e??[],removed:t??[],etag:this._etag})}get onDidChangeRepositories(){return this._onDidChangeRepositories.event}fireRepositoriesChanged(e,t){const i=this.openRepositories.map((e=>e.uri.scheme));this.container.telemetry.setGlobalAttributes({"repositories.count":i.length,"repositories.schemes":(0,Ht.h8)(i,",")}),this.container.telemetry.sendEvent("repositories/changed",{"repositories.added":e?.length??0,"repositories.removed":t?.length??0}),this._etag=Date.now(),this._accessCache.clear(),this._visibilityCache.delete(void 0),t?.length&&this._visibilityCache.clear(),this._onDidChangeRepositories.fire({added:e??[],removed:t??[],etag:this._etag}),e?.length&&queueMicrotask((()=>{for(const t of e)this.container.telemetry.sendEvent("repository/opened",{"repository.id":t.idHash,"repository.scheme":t.uri.scheme,"repository.closed":t.closed,"repository.folder.scheme":t.folder?.uri.scheme,"repository.provider.id":t.provider.id})}))}get onDidChangeRepository(){return this._onDidChangeRepository.event}dispose(){this._disposable.dispose(),this._providers.clear(),this._repositories.forEach((e=>e.dispose())),this._repositories.clear()}get etag(){return this._etag}onConfigurationChanged(e){(r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle"))&&(this.container.BranchDateFormatting.reset(),this.container.CommitDateFormatting.reset(),this.container.PullRequestDateFormatting.reset()),r.DN.changed(e,"advanced.abbreviatedShaLength")&&this.container.CommitShaFormatting.reset(),r.DN.changed(e,"views.contributors.showAllBranches")&&this.resetCaches("contributors"),null!=e&&r.DN.changed(e,"integrations.enabled")&&this.updateContext()}onSubscriptionChanged(e){this._accessCache.clear(),this._subscription=e.current}onWindowStateChanged(e){e.focused?this._repositories.forEach((e=>e.resume())):this._repositories.forEach((e=>e.suspend()))}onWorkspaceFoldersChanged(e){const t=n.workspace.workspaceFolders?.map((e=>e.uri.scheme));if(this.container.telemetry.setGlobalAttributes({"folders.count":t?.length??0,"folders.schemes":null!=t?(0,Ht.h8)(t,", "):""}),e.added.length&&this.discoverRepositories(e.added),e.removed.length){const t=[];for(const i of e.removed){const e=this._repositories.getClosest(i.uri);null!=e&&(this._repositories.remove(e.uri,!1),t.push(e))}t.length&&(this.updateContext(),queueMicrotask((()=>{this.fireRepositoriesChanged([],t),t.forEach((e=>e.dispose()))})))}}get hasProviders(){return 0!==this._providers.size}get registeredProviders(){return[...(0,q.UI)(this._providers.values(),(e=>({...e.descriptor})))]}get openRepositories(){if(0===this.repositoryCount)return ed;const e=[...(0,q.hX)(this.repositories,(e=>!e.closed))];return 0===e.length?e:A._j.sort(e)}get openRepositoryCount(){return 0===this.repositoryCount?0:(0,q.QX)(this.repositories,(e=>!e.closed))}get repositories(){return this._repositories.values()}get repositoryCount(){return this._repositories.count}get highlander(){return 1===this.repositoryCount?(0,q.Ps)(this._repositories.values()):void 0}register(e,t){if(e!==t.descriptor.id)throw new Error(`Id '${e}' must match provider id '${t.descriptor.id}'`);if(this._providers.has(e))throw new Error(`Provider '${e}' has already been registered`);this._providers.set(e,t);for(const e of t.supportedSchemes)this.supportedSchemes.add(e);const i=[],o=t.openRepositoryInitWatcher?.();null!=o&&i.push(o,o.onDidCreate((e=>{const t=n.workspace.getWorkspaceFolder(e);null!=t&&this.discoverRepositories([t],{force:!0})})));const r=n.Disposable.from(t,...i,t.onDidChangeRepository((e=>{e.changed(A.I6.Remotes,A.I6.RemoteProviders,A.du.Any)&&this._bestRemotesCache.clear(),e.changed(A.I6.Closed,A.du.Any)&&(this.updateContext(),queueMicrotask((()=>this.fireRepositoriesChanged([],[e.repository])))),this._visibilityCache.delete(e.repository.path),this._onDidChangeRepository.fire(e)})),t.onDidCloseRepository((e=>{const t=this._repositories.get(e.uri);null!=t&&(t.closed=!0)})),t.onDidOpenRepository((e=>{const t=this._repositories.get(e.uri);null!=t?t.closed=!1:this.getOrOpenRepository(e.uri)})));return this.fireProvidersChanged([t]),this._initializing||this.onWorkspaceFoldersChanged({added:n.workspace.workspaceFolders??[],removed:[]}),{dispose:()=>{r.dispose(),this._providers.delete(e);const i=[];for(const t of[...this._repositories.values()])t?.provider.id===e&&(this._repositories.remove(t.uri,!1),i.push(t));this.updateContext(),i.length&&queueMicrotask((()=>{this.fireRepositoriesChanged([],i),i.forEach((e=>e.dispose()))})),this.fireProvidersChanged([],[t])}}}registrationComplete(){const e=(0,G.UH)();this._initializing=!1;const{workspaceFolders:t}=n.workspace;t?.length?this.discoverRepositories(t):this.updateContext();const i=r.DN.getAny(s.eq.AutoRepositoryDetection);queueMicrotask((()=>this.container.telemetry.sendEvent("providers/registrationComplete",{"config.git.autoRepositoryDetection":i}))),null!=e&&(e.exitDetails=` ${s.NE.Dot} workspaceFolders=${t?.length}, git.autoRepositoryDetection=${i}`)}getOpenProviders(){return[...this.getOpenRepositoriesByProvider().keys()].map((e=>this._providers.get(e)))}getOpenRepositories(e){return(0,q.hX)(this.repositories,(t=>!t.closed&&(null==e||e===t.provider.id)))}getOpenRepositoriesByProvider(){const e=[...(0,q.hX)(this.repositories,(e=>!e.closed))];return 0===e.length?new Map:(0,Ht.XI)(e,(e=>e.provider.id))}hasOpenRepositories(e){return(0,q.G)(this.repositories,(t=>!t.closed&&(null==e||e===t.provider.id)))}async discoverRepositories(e,t){const i=[];for(const n of e){if(!t?.force&&this._discoveredWorkspaceFolders.has(n))continue;const e=this.discoverRepositoriesCore(n);i.push(e),this._discoveredWorkspaceFolders.set(n,e)}if(0===i.length)return;const n=await Promise.allSettled(i),o=(0,q.VS)((0,q.hX)(n,(e=>"fulfilled"===e.status)),(e=>e.value)),r=[];for(const e of o)this._repositories.add(e)&&r.push(e);this.updateContext(),0!==r.length&&queueMicrotask((()=>this.fireRepositoriesChanged(r)))}async discoverRepositoriesCore(e){const{provider:t}=this.getProvider(e.uri);try{return await t.discoverRepositories(e.uri)}catch(i){return this._discoveredWorkspaceFolders.delete(e),B.Yd.error(i,`${t.descriptor.name} Provider(${t.descriptor.id}) failed discovering repositories in ${e.uri.toString(!0)}`),[]}}async getSubscription(){return this._subscription??(this._subscription=await this.container.subscription.getSubscription())}async access(e,t){if(null==t){let i=this._accessCache.get(void 0);return null==i&&(i=this.accessCore(e,t),this._accessCache.set(void 0,i)),i}const{path:i}=this.getProvider(t),n=i;let o=this._accessCache.get(n);return null==o&&(o=this.accessCore(e,t),this._accessCache.set(n,o)),o}async accessCore(e,t){const i=await this.getSubscription();this.container.telemetry.enabled&&queueMicrotask((()=>{this.visibility()}));const n=i.plan.effective.id;if((0,Xt.aG)(n))return{allowed:!1!==i.account?.verified,subscription:{current:i}};function o(e,t=!1){const{path:n}=this.getProvider(e);let o=t?void 0:this._accessCache.get(n);return null==o&&(o=this.visibility(e).then((e=>e===w.q4.Private?{allowed:!1,subscription:{current:i,required:Xt.Cx.Pro},visibility:e}:{allowed:!0,subscription:{current:i},visibility:e}),(()=>({allowed:!0,subscription:{current:i}}))),this._accessCache.set(n,o)),o}if(null==t){const e=this.openRepositories;if(0===e.length)return{allowed:!1,subscription:{current:i}};if(1===e.length)return o.call(this,e[0].path);switch(await this.visibility()){case"private":return{allowed:!1,subscription:{current:i,required:Xt.Cx.Pro},visibility:w.q4.Private};case"mixed":return{allowed:"mixed",subscription:{current:i,required:Xt.Cx.Pro}};default:return{allowed:!0,subscription:{current:i},visibility:w.q4.Public}}}return o.call(this,t,!0)}async ensureAccess(e,t){const{allowed:i,subscription:n}=await this.access(e,t);if(!1===i)throw new u.$y(n.current,n.required)}supports(e,t){const{provider:i}=this.getProvider(e);return i.supports(t)}async visibility(e){if(null==e){let e=this._visibilityCache.get(void 0);return null==e&&(e=this.visibilityCore(),e.then((e=>{this.container.telemetry.setGlobalAttribute("repositories.visibility",e),this.container.telemetry.sendEvent("repositories/visibility")})),this._visibilityCache.set(void 0,e)),e}const{path:t}=this.getProvider(e);let i=this._visibilityCache.get(t);return null==i&&(i=this.visibilityCore(e),i.then((t=>queueMicrotask((()=>{const i=this.getRepository(e);this.container.telemetry.sendEvent("repository/visibility",{"repository.visibility":t,"repository.id":i?.idHash,"repository.scheme":i?.uri.scheme,"repository.closed":i?.closed,"repository.folder.scheme":i?.folder?.uri.scheme,"repository.provider.id":i?.provider.id})})))),this._visibilityCache.set(t,i)),i}async visibilityCore(e){function t(e){const{provider:t,path:i}=this.getProvider(e);let n=this._visibilityCache.get(i);return null==n&&(n=t.visibility(i),this._visibilityCache.set(i,n)),n}if(null==e){const e=this.openRepositories;if(0===e.length)return"private";if(1===e.length)return t.call(this,e[0].path);let i=!1,n=!1,o=!1;for await(const r of(0,Y.Wx)(e.map((e=>t.call(this,e.path)))))if("fulfilled"===r.status)if(r.value===w.q4.Public){if(o||n)return"mixed";i=!0}else if(r.value===w.q4.Local){if(i||n)return"mixed";o=!0}else if(r.value===w.q4.Private){if(i||o)return"mixed";n=!0}return i?"public":o?"local":"private"}return t.call(this,e)}async setEnabledContext(e){let t=!e;if(!e&&this._initializing&&(t=!(this.container.storage.getWorkspace("assumeRepositoriesOnStartup")??1)),this.container.telemetry.setGlobalAttribute("enabled",e),this._context.enabled===e&&this._context.disabled===t)return;const i=[];this._context.enabled!==e&&(this._context.enabled=e,i.push((0,a.v)(s.zf.Enabled,e))),this._context.disabled!==t&&(this._context.disabled=t,i.push((0,a.v)(s.zf.Disabled,t))),await Promise.allSettled(i),this._initializing||this.container.storage.storeWorkspace("assumeRepositoriesOnStartup",e)}updateContext(){const e=this.openRepositoryCount,t=0!==e;this.setEnabledContext(t),this._initializing||(this.container.telemetry.setGlobalAttributes({enabled:t,"repositories.count":e}),t&&(async function(){const e=r.DN.get("integrations.enabled");let i=!1,n=!1,o=!1;if(t)for(const t of this._repositories.values())if(!o&&e&&(o=await t.hasRichRemote(!0),o&&(n=!0,i=!0)),!n&&e&&(n=await t.hasRichRemote(),n&&(i=!0)),i||(i=await t.hasRemotes()),i&&(n&&o||!e))break;this.container.telemetry.setGlobalAttributes({"repositories.hasRemotes":i,"repositories.hasRichRemotes":n,"repositories.hasConnectedRemotes":o}),queueMicrotask((()=>this.container.telemetry.sendEvent("providers/context"))),await Promise.allSettled([(0,a.v)(s.zf.HasRemotes,i),(0,a.v)(s.zf.HasRichRemotes,n),(0,a.v)(s.zf.HasConnectedRemotes,o)])}.call(this),this._providers.forEach((e=>e.updateContext?.()))))}getProvider(e){if(null==e||"string"!=typeof e&&!this.supportedSchemes.has(e.scheme))throw new u.MO(e);let t;"string"==typeof e?t=(0,j.UG)(e)??s.sN.File:({scheme:t}=e);const i=new Set;for(const n of this._providers.values()){const o=n.canHandlePathOrUri(t,e);null!=o&&i.add({provider:n,path:o})}if(0===i.size)throw new u.MO(e);if(i.size>1)for(const e of i)if(this.hasOpenRepositories(e.provider.descriptor.id))return e;return(0,q.Ps)(i)}getAbsoluteUri(e,t){if(null==t)return"string"==typeof e?(0,j.tE)(e)?n.Uri.parse(e,!0):n.Uri.file(e):e;if("string"!=typeof t&&"string"==typeof e){const i=(0,j.AH)(e);if(!(0,j.YP)(i))return n.Uri.joinPath(t,i)}const{provider:i}=this.getProvider(t);return i.getAbsoluteUri(e,t)}async getBestRevisionUri(e,t,i){if(null==e||i===x.pk.deletedOrMissing)return;const{provider:n,path:o}=this.getProvider(e);return n.getBestRevisionUri(o,n.getRelativePath(t,o),i)}getRelativePath(e,t){const{provider:i}=this.getProvider(e instanceof n.Uri?e:t);return i.getRelativePath(e,t)}getRevisionUri(e,t,i){let n,o;"string"==typeof e?(o=e,n="string"==typeof t?t:t?.originalPath??t?.path??""):(o=e.sha,i=e.repoPath,n=(0,j.M)(e));const{provider:r,path:s}=this.getProvider(i);return r.getRevisionUri(s,r.getRelativePath(n,s),o)}getWorkingUri(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getWorkingUri(n,t)}addRemote(e,t,i,n){const{provider:o,path:r}=this.getProvider(e);return o.addRemote(r,t,i,n)}pruneRemote(e,t){const{provider:i,path:n}=this.getProvider(e);return i.pruneRemote(n,t)}removeRemote(e,t){const{provider:i,path:n}=this.getProvider(e);return i.removeRemote(n,t)}applyChangesToWorkingFile(e,t,i){const{provider:n}=this.getProvider(e);return n.applyChangesToWorkingFile(e,t,i)}checkout(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.checkout(o,t,i)}resetCaches(...e){(0===e.length||e.includes("providers"))&&this._bestRemotesCache.clear(),this.container.events.fire("git:cache:reset",{caches:e})}excludeIgnoredUris(e,t){const{provider:i,path:n}=this.getProvider(e);return i.excludeIgnoredUris(n,t)}fetch(e,t){const{provider:i,path:n}=this.getProvider(e);return i.fetch(n,t)}async fetchAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await n.window.withProgress({location:n.ProgressLocation.Notification,title:`Fetching ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.fetch({progress:!1,...t})))))):await e[0].fetch(t))}async pullAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await n.window.withProgress({location:n.ProgressLocation.Notification,title:`Pulling ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.pull({progress:!1,...t})))))):await e[0].pull(t))}async pushAll(e,t){null==e&&(e=this.openRepositories),0!==e.length&&(1!==e.length?await n.window.withProgress({location:n.ProgressLocation.Notification,title:`Pushing ${e.length} repositories`},(()=>Promise.all(e.map((e=>e.push({progress:!1,...t})))))):await e[0].push(t))}getAheadBehindCommitCount(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getAheadBehindCommitCount(n,t)}async getBlame(e,t){const{provider:i}=this.getProvider(e);return i.getBlame(e,t)}async getBlameContents(e,t){const{provider:i}=this.getProvider(e);return i.getBlameContents(e,t)}async getBlameForLine(e,t,i,n){const{provider:o}=this.getProvider(e);return o.getBlameForLine(e,t,i,n)}async getBlameForLineContents(e,t,i,n){const{provider:o}=this.getProvider(e);return o.getBlameForLineContents(e,t,i,n)}async getBlameForRange(e,t){const{provider:i}=this.getProvider(e);return i.getBlameForRange(e,t)}async getBlameForRangeContents(e,t,i){const{provider:n}=this.getProvider(e);return n.getBlameForRangeContents(e,t,i)}getBlameRange(e,t,i){const{provider:n}=this.getProvider(t);return n.getBlameRange(e,t,i)}async getBranch(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getBranch(i)}async getBranchAheadRange(e){if(e.state.ahead>0)return x.pk.createRange(e.upstream?.name,e.ref);if(null==e.upstream){const{values:t}=await this.getBranches(e.repoPath,{filter:e=>td.has(e.name)});if(t.length>0){let i;for(const e of t){const t=td.get(e.name);if((null==i||i.weight<t)&&(i={weight:t,branch:e}),100===i.weight)break}const n=i.branch.upstream?.name??i.branch.ref;if(n!==e.ref)return x.pk.createRange(n,e.ref)}}}async getBranches(e,t){if(null==e)return{values:[]};const{provider:i,path:n}=this.getProvider(e);return i.getBranches(n,t)}async getBranchesAndTagsTipsFn(e,t){const[i,n]=await Promise.allSettled([this.getBranches(e),this.getTags(e)]),o=(0,Y.Sb)(i)?.values??[],r=(0,Y.Sb)(n)?.values??[],a=(0,Ht.Qy)(o.concat(r),(e=>e.sha),(e=>{if(t){if(e.name===t)return;if("branch"===e.refType&&e.getNameWithoutRemote()===t)return{name:e.name,compactName:e.getRemoteName(),type:e.refType}}return{name:e.name,compactName:void 0,type:e.refType}}));return(e,t)=>{const i=a.get(e);if(null!=i&&0!==i.length){if(!t?.compact)return i.map((e=>`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.name}`)).join(", ");if(i.length>1){const[e]=i;return`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.compactName??e.name}, ${s.NE.Ellipsis}`}return i.map((e=>`${t?.icons?("tag"===e.type?"$(tag)":"$(git-branch)")+" ":""}${e.compactName??e.name}`)).join(", ")}}}getChangedFilesCount(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getChangedFilesCount(n,t)}async getCommit(e,t){const{provider:i,path:n}=this.getProvider(e);if(t===x.pk.uncommitted||t===x.pk.uncommittedStaged){const i=new Date,o=await this.getCurrentUser(e);return new y.aM(this.container,n,t,new y._j("You",o?.email??void 0,i),new y._j("You",o?.email??void 0,i),"Uncommitted changes",[],"Uncommitted changes",void 0,void 0,[])}return i.getCommit(n,t)}getCommitBranches(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.getCommitBranches(o,t,i)}getCommitCount(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getCommitCount(n,t)}async getCommitForFile(e,t,i){if(null==e)return;const{provider:n,path:o}=this.getProvider(e);return n.getCommitForFile(o,t,i)}getCommitsForGraph(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.getCommitsForGraph(o,t,i)}async getConfig(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getConfig?.(n,t)}async setConfig(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.setConfig?.(o,t,i)}async getContributors(e,t){if(null==e)return[];const{provider:i,path:n}=this.getProvider(e);return i.getContributors(n,t)}async getCurrentUser(e){const{provider:t,path:i}=this.getProvider(e);return t.getCurrentUser(i)}async getDefaultBranchName(e,t){if(null==e)return;const{provider:i,path:n}=this.getProvider(e);return i.getDefaultBranchName(n,t)}async getDiffForFile(e,t,i){const{provider:n}=this.getProvider(e);return n.getDiffForFile(e,t,i)}async getDiffForFileContents(e,t,i){const{provider:n}=this.getProvider(e);return n.getDiffForFileContents(e,t,i)}async getDiffForLine(e,t,i,n){const{provider:o}=this.getProvider(e);return o.getDiffForLine(e,t,i,n)}async getDiffStatus(e,t,i,n){const{provider:o,path:r}=this.getProvider(e);return o.getDiffStatus(r,t,i,n)}async getFileStatusForCommit(e,t,i){if(i===x.pk.deletedOrMissing||x.pk.isUncommitted(i))return;const{provider:n,path:o}=this.getProvider(e);return n.getFileStatusForCommit(o,t,i)}getGitDir(e){const{provider:t,path:i}=this.getProvider(e);return Promise.resolve(t.getGitDir?.(i))}getLastFetchedTimestamp(e){const{provider:t,path:i}=this.getProvider(e);return t.getLastFetchedTimestamp(i)}async getLog(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getLog(n,t)}async getLogRefsOnly(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getLogRefsOnly(n,t)}async getLogForFile(e,t,i){if(null==e)return;const{provider:n,path:o}=this.getProvider(e);return n.getLogForFile(o,t,i)}async getMergeBase(e,t,i,n){const{provider:o,path:r}=this.getProvider(e);return o.getMergeBase(r,t,i,n)}async getMergeStatus(e){const{provider:t,path:i}=this.getProvider(e);return t.getMergeStatus(i)}async getRebaseStatus(e){const{provider:t,path:i}=this.getProvider(e);return t.getRebaseStatus(i)}getNextComparisonUris(e,t,i,n=0){if(!i)return Promise.resolve(void 0);const{provider:o,path:r}=this.getProvider(e);return o.getNextComparisonUris(r,t,i,n)}async getOldestUnpushedRefForFile(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getOldestUnpushedRefForFile(n,t)}getPreviousComparisonUris(e,t,i,n=0,o=!1){if(i===x.pk.deletedOrMissing)return Promise.resolve(void 0);const{provider:r,path:s}=this.getProvider(e);return r.getPreviousComparisonUris(s,t,i,n,o)}getPreviousComparisonUrisForLine(e,t,i,n,o=0){if(n===x.pk.deletedOrMissing)return Promise.resolve(void 0);const{provider:r,path:s}=this.getProvider(e);return r.getPreviousComparisonUrisForLine(s,t,i,n,o)}async getPullRequestForBranch(e,t,i){let n,o;if(O.ss.is(t)){if(({provider:n}=t),!n?.hasRichIntegration())return}else n=t;null!=i&&({timeout:o,...i}=i);let r=n.getPullRequestForBranch(e,i);if(null==r||!(0,Y.tI)(r))return r;null!=o&&o>0&&(r=(0,Y.HO)(r,o));try{return await r}catch(e){if(e instanceof Y.PK)throw e;return}}async getPullRequestForCommit(e,t,i){if(x.pk.isUncommitted(e))return;let n;if(O.ss.is(t)){if(({provider:n}=t),!n?.hasRichIntegration())return}else n=t;let o=n.getPullRequestForCommit(e);if(null==o||!(0,Y.tI)(o))return o;null!=i?.timeout&&i.timeout>0&&(o=(0,Y.HO)(o,i.timeout));try{return await o}catch(e){if(e instanceof Y.PK)throw e;return}}async getMyPullRequests(e,t){let i,n;if(O.ss.is(e)){if(({provider:i}=e),!i?.hasRichIntegration())return}else i=e;null!=t&&({timeout:n,...t}=t);let o=i.searchMyPullRequests();if(null==o||!(0,Y.tI)(o))return o;null!=n&&n>0&&(o=(0,Y.HO)(o,n));try{return await o}catch(e){if(e instanceof Y.PK)throw e;return}}async getMyIssues(e,t){let i,n;if(O.ss.is(e)){if(({provider:i}=e),!i?.hasRichIntegration())return}else i=e;null!=t&&({timeout:n,...t}=t);let o=i.searchMyIssues();if(null==o||!(0,Y.tI)(o))return o;null!=n&&n>0&&(o=(0,Y.HO)(o,n));try{return await o}catch(e){if(e instanceof Y.PK)throw e;return}}async getIncomingActivity(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getIncomingActivity(n,t)}async getBestRemoteWithProvider(e){if(null==e)return;let t,i;if(Array.isArray(e)){if(0===e.length)return;t=e,i=e[0].repoPath}else i=e;"string"==typeof i&&(i=this.getAbsoluteUri(i));const n=(0,zu.YW)(i);let o=this._bestRemotesCache.get(n);if(void 0!==o)return o??void 0;if(t=(t??await this.getRemotesWithProviders(i)).filter((e=>null!=e.provider)),0!==t.length){if(1===t.length)o=t[0];else{const e=new Map([["upstream",15],["origin",10]]),i=(await this.getBranch(t[0].repoPath))?.getRemoteName();let n;null!=i&&e.set(i,100);let r=0;for(const i of t){if(i.default){n=i;break}const t=e.get(i.name)??-1;t>r&&(n=i,r=t)}o=n??null}return this._bestRemotesCache.set(n,o),o??void 0}}async getBestRemoteWithRichProvider(e,t){if(null==e)return;let i,n;if(Array.isArray(e)){if(0===e.length)return;i=e,n=e[0].repoPath}else n=e;"string"==typeof n&&(n=this.getAbsoluteUri(n));const o=(0,zu.YW)(n);let r=this._bestRemotesCache.get(`rich+connected|${o}`);if(null!=r)return r;if(null===r&&!t?.includeDisconnected)return;if(t?.includeDisconnected&&(r=this._bestRemotesCache.get(`rich|${o}`),void 0!==r))return r??void 0;const s=await(null!=i?this.getBestRemoteWithProvider(i):this.getBestRemoteWithProvider(n));if(!s?.hasRichProvider())return this._bestRemotesCache.set(`rich|${o}`,null),void this._bestRemotesCache.set(`rich+connected|${o}`,null);const{provider:a}=s;if(a.maybeConnected??await a.isConnected())this._bestRemotesCache.set(`rich|${o}`,s),this._bestRemotesCache.set(`rich+connected|${o}`,s);else if(this._bestRemotesCache.set(`rich|${o}`,s),this._bestRemotesCache.set(`rich+connected|${o}`,null),!t?.includeDisconnected)return;return s}async getRemotes(e,t){if(null==e)return[];const{provider:i,path:n}=this.getProvider(e);return i.getRemotes(n,t)}async getRemotesWithProviders(e,t){if(null==e)return[];const i=this.container.git.getRepository(e);return(await(null!=i?i.getRemotes(t):this.getRemotes(e,t))).filter((e=>null!=e.provider))}getBestRepository(e,t){const i=this.repositoryCount;if(0!==i){if(1===i)return this.highlander;if(null!=e&&e instanceof n.Uri){const t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??n.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??this.highlander}}getBestRepositoryOrFirst(e,t){const i=this.repositoryCount;if(0!==i){if(1===i)return(0,q.Ps)(this._repositories.values());if(null!=e&&e instanceof n.Uri){const t=this.getRepository(e);if(null!=t)return t;e=void 0}return(null!=(t=e??t??n.window.activeTextEditor)?this.getRepository(t.document.uri):void 0)??(0,q.Ps)(this._repositories.values())}}async getOrOpenRepository(e,t){const i=(0,G.UH)(),o=(0,j.M)(e);let a,l;a=this.getRepository(e);if(t?.detectNested??r.DN.get("detectNestedRepositories",e)){if(this._visitedPaths.has(o))return a;if(((await n.workspace.fs.stat(e)).type&n.FileType.Directory)!==n.FileType.Directory&&(e=n.Uri.joinPath(e,".."),this._visitedPaths.has((0,j.M)(e))))return a;l=!0}else if(null!=a)return a;const c=(0,zu.YW)(e);let h=this._pendingRepositories.get(c);if(null==h){async function u(){const{provider:n}=this.getProvider(e),h=await n.findRepositoryUri(e,l);if(this._visitedPaths.set(o),null==h)return;let u;if(0!==this._repositories.count){if(a=this._repositories.get(h),null!=a)return a;u=this._repositories.getClosest(n.getAbsoluteUri(e,h))}const d=r.DN.getAny(s.eq.AutoRepositoryDetection)??!0,p=t?.closeOnOpen??(!0!==d&&"openEditors"!==d);B.Yd.log(i,`Repository found in '${h.toString(!0)}'`);const m=n.openRepository(u?.folder,h,!1,void 0,p);for(const e of m)this._repositories.add(e);return this._pendingRepositories.delete(c),this.updateContext(),queueMicrotask((()=>this.fireRepositoriesChanged(m))),a=1===m.length?m[0]:this.getRepository(e),a}h=u.call(this),this._pendingRepositories.set(c,h)}return h}async getOrOpenRepositoryForEditor(e){return null==(e=e??n.window.activeTextEditor)?this.highlander:this.getOrOpenRepository(e.document.uri)}getRepository(e){if(0!==this.repositoryCount&&null!=e){if("string"==typeof e){if(!e)return;return this._repositories.getClosest(this.getAbsoluteUri(e))}return this._repositories.getClosest(e)}}async getLocalInfoFromRemoteUri(e,t){for(const i of this.openRepositories)for(const n of await i.getRemotes()){const o=await(n?.provider?.getLocalInfoFromRemoteUri(i,e,t));if(null!=o)return o}}async getStash(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getStash(i)}async getStatusForFile(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getStatusForFile(n,t)}async getStatusForFiles(e,t){const{provider:i,path:n}=this.getProvider(e);return i.getStatusForFiles(n,t)}async getStatusForRepo(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getStatusForRepo(i)}async getTags(e,t){if(null==e)return{values:[]};const{provider:i,path:n}=this.getProvider(e);return i.getTags(n,t)}async getTreeEntryForRevision(e,t,i){if(null==e||!t)return;const{provider:n,path:o}=this.getProvider(e);return n.getTreeEntryForRevision(o,n.getRelativePath(t,o),i)}async getTreeForRevision(e,t){if(null==e)return[];const{provider:i,path:n}=this.getProvider(e);return i.getTreeForRevision(n,t)}getRevisionContent(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.getRevisionContent(o,t,i)}async getUniqueRepositoryId(e){const{provider:t,path:i}=this.getProvider(e),n=await t.getUniqueRepositoryId(i);return null!=n?n:"0"}async hasBranchOrTag(e,t){if(null==e)return!1;const{provider:i,path:n}=this.getProvider(e);return i.hasBranchOrTag(n,t)}async hasCommitBeenPushed(e,t){if(null==e)return!1;const{provider:i,path:n}=this.getProvider(e);return i.hasCommitBeenPushed(n,t)}async hasRemotes(e){if(null==e)return!1;const t=this.getRepository(e);return null!=t&&t.hasRemotes()}async hasTrackingBranch(e){if(null==e)return!1;const t=this.getRepository(e);return null!=t&&t.hasUpstreamBranch()}isRepositoryForEditor(e,t){return null!=(t=t??n.window.activeTextEditor)&&e===this.getRepository(t.document.uri)}isTrackable(e){if(!this.supportedSchemes.has(e.scheme))return!1;const{provider:t}=this.getProvider(e);return t.isTrackable(e)}async isTracked(e){if(!this.supportedSchemes.has(e.scheme))return!1;const{provider:t}=this.getProvider(e);return t.isTracked(e)}async getDiffTool(e){if(null==e)return;const{provider:t,path:i}=this.getProvider(e);return t.getDiffTool(i)}async openDiffTool(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.openDiffTool(o,t,i)}async openDirectoryCompare(e,t,i,n){const{provider:o,path:r}=this.getProvider(e);return o.openDirectoryCompare(r,t,i,n)}async resolveReference(e,t,i,n){if(null!=i&&x.pk.isUncommittedParent(t)&&(t="HEAD"),!t||t===x.pk.deletedOrMissing||null==i&&x.pk.isSha(t)||null!=i&&x.pk.isUncommitted(t))return t;const{provider:o,path:r}=this.getProvider(e);return o.resolveReference(r,t,i,n)}async richSearchCommits(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.richSearchCommits(o,t,i)}searchCommits(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.searchCommits(o,t,i)}validateBranchOrTagName(e,t){const{provider:i,path:n}=this.getProvider(e);return i.validateBranchOrTagName(n,t)}async validateReference(e,t){if(null==t||0===t.length)return!1;if(t===x.pk.deletedOrMissing||x.pk.isUncommitted(t))return!0;const{provider:i,path:n}=this.getProvider(e);return i.validateReference(n,t)}stageFile(e,t){const{provider:i,path:n}=this.getProvider(e);return i.stageFile(n,t)}stageDirectory(e,t){const{provider:i,path:n}=this.getProvider(e);return i.stageDirectory(n,t)}unStageFile(e,t){const{provider:i,path:n}=this.getProvider(e);return i.unStageFile(n,t)}unStageDirectory(e,t){const{provider:i,path:n}=this.getProvider(e);return i.unStageDirectory(n,t)}stashApply(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.stashApply(o,t,i)}stashDelete(e,t,i){const{provider:n,path:o}=this.getProvider(e);return n.stashDelete(o,t,i)}stashSave(e,t,i,n){const{provider:o,path:r}=this.getProvider(e);return o.stashSave(r,t,i,n)}createWorktree(e,t,i){const{provider:n,path:o}=this.getProvider(e);return Promise.resolve(n.createWorktree?.(o,t,i))}async getWorktree(e,t){const{provider:i,path:n}=this.getProvider(e);return(await(i.getWorktrees?.(n))??[]).find(t)}async getWorktrees(e){const{provider:t,path:i}=this.getProvider(e);return await(t.getWorktrees?.(i))??[]}async getWorktreesDefaultUri(e){const{provider:t,path:i}=this.getProvider(e);let o=await(t.getWorktreesDefaultUri?.(i));return null!=o||(o=this.getRepository(i)?.uri,null!=o&&(o=n.Uri.joinPath(o,".."))),o}deleteWorktree(e,t,i){const{provider:n,path:o}=this.getProvider(e);return Promise.resolve(n.deleteWorktree?.(o,t,i))}async getOpenScmRepositories(){const e=await Promise.allSettled([...this._providers.values()].map((e=>e.getOpenScmRepositories())));return[...(0,q.VS)((0,q.hX)(e,(e=>"fulfilled"===e.status)),(e=>e.value))]}getScmRepository(e){const{provider:t,path:i}=this.getProvider(e);return t.getScmRepository(i)}getOrOpenScmRepository(e){const{provider:t,path:i}=this.getProvider(e);return t.getOrOpenScmRepository(i)}}Zu([(0,H.fF)()],GitProviderService.prototype,"onSubscriptionChanged",1),Zu([(0,H.fF)({args:{0:e=>`focused=${e.focused}`}})],GitProviderService.prototype,"onWindowStateChanged",1),Zu([(0,H.fF)({args:{0:e=>`added=${e.added.length}, removed=${e.removed.length}`},singleLine:!0})],GitProviderService.prototype,"onWorkspaceFoldersChanged",1),Zu([(0,H.cM)({args:{1:!1},singleLine:!0})],GitProviderService.prototype,"register",1),Zu([(0,H.cM)({singleLine:!0})],GitProviderService.prototype,"registrationComplete",1),Zu([(0,H.cM)({args:{0:e=>e.length}})],GitProviderService.prototype,"discoverRepositories",1),Zu([(0,H.fF)()],GitProviderService.prototype,"accessCore",1),Zu([(0,H.fF)()],GitProviderService.prototype,"visibilityCore",1),Zu([(0,H.fF)()],GitProviderService.prototype,"setEnabledContext",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getBestRevisionUri",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getRevisionUri",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getWorkingUri",1),Zu([(0,H.cM)()],GitProviderService.prototype,"addRemote",1),Zu([(0,H.cM)()],GitProviderService.prototype,"pruneRemote",1),Zu([(0,H.cM)()],GitProviderService.prototype,"removeRemote",1),Zu([(0,H.cM)()],GitProviderService.prototype,"applyChangesToWorkingFile",1),Zu([(0,H.cM)()],GitProviderService.prototype,"checkout",1),Zu([(0,H.cM)({singleLine:!0})],GitProviderService.prototype,"resetCaches",1),Zu([(0,H.cM)({args:{1:e=>e.length}})],GitProviderService.prototype,"excludeIgnoredUris",1),Zu([(0,V.H)(),(0,H.cM)()],GitProviderService.prototype,"fetch",1),Zu([(0,V.H)(((e,t)=>`${null==e?"":e.map((e=>e.id)).join(",")}|${JSON.stringify(t)}`)),(0,H.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"fetchAll",1),Zu([(0,V.H)(((e,t)=>`${null==e?"":e.map((e=>e.id)).join(",")}|${JSON.stringify(t)}`)),(0,H.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"pullAll",1),Zu([(0,V.H)((e=>`${null==e?"":e.map((e=>e.id)).join(",")}`)),(0,H.cM)({args:{0:e=>e?.map((e=>e.name)).join(", ")}})],GitProviderService.prototype,"pushAll",1),Zu([(0,H.cM)({args:{1:e=>e.join(",")}})],GitProviderService.prototype,"getAheadBehindCommitCount",1),Zu([(0,H.cM)({args:{1:e=>e?.isDirty}})],GitProviderService.prototype,"getBlame",1),Zu([(0,H.cM)({args:{1:"<contents>"}})],GitProviderService.prototype,"getBlameContents",1),Zu([(0,H.cM)({args:{2:e=>e?.isDirty}})],GitProviderService.prototype,"getBlameForLine",1),Zu([(0,H.cM)({args:{2:"<contents>"}})],GitProviderService.prototype,"getBlameForLineContents",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getBlameForRange",1),Zu([(0,H.cM)({args:{2:"<contents>"}})],GitProviderService.prototype,"getBlameForRangeContents",1),Zu([(0,H.cM)({args:{0:"<blame>"}})],GitProviderService.prototype,"getBlameRange",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getBranch",1),Zu([(0,H.cM)({args:{0:e=>e.name}})],GitProviderService.prototype,"getBranchAheadRange",1),Zu([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"getBranches",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getBranchesAndTagsTipsFn",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getChangedFilesCount",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getCommit",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getCommitBranches",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getCommitCount",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getCommitForFile",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getCommitsForGraph",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getConfig",1),Zu([(0,H.cM)()],GitProviderService.prototype,"setConfig",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getContributors",1),Zu([(0,V.H)(),(0,H.cM)()],GitProviderService.prototype,"getCurrentUser",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getDefaultBranchName",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getDiffForFile",1),Zu([(0,H.cM)({args:{1:"<contents>"}})],GitProviderService.prototype,"getDiffForFileContents",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getDiffForLine",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getDiffStatus",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getFileStatusForCommit",1),Zu([(0,H.fF)()],GitProviderService.prototype,"getGitDir",1),Zu([(0,H.fF)()],GitProviderService.prototype,"getLastFetchedTimestamp",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getLog",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getLogRefsOnly",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getLogForFile",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getMergeBase",1),Zu([(0,V.H)(),(0,H.cM)()],GitProviderService.prototype,"getMergeStatus",1),Zu([(0,V.H)(),(0,H.cM)()],GitProviderService.prototype,"getRebaseStatus",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getNextComparisonUris",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getOldestUnpushedRefForFile",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getPreviousComparisonUris",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getPreviousComparisonUrisForLine",1),Zu([(0,V.H)(((e,t,i)=>{const n=O.ss.is(t)?t.provider:t;return`${e}${null!=n?`|${n.id}:${n.domain}/${n.path}`:""}|${JSON.stringify(i)}`})),(0,H.fF)({args:{1:e=>e.name}})],GitProviderService.prototype,"getPullRequestForBranch",1),Zu([(0,V.H)(((e,t,i)=>{const n=O.ss.is(t)?t.provider:t;return`${e}${null!=n?`|${n.id}:${n.domain}/${n.path}`:""}|${i?.timeout}`})),(0,H.fF)({args:{1:e=>e.name}})],GitProviderService.prototype,"getPullRequestForCommit",1),Zu([(0,H.fF)({args:{0:e=>e.name}})],GitProviderService.prototype,"getMyPullRequests",1),Zu([(0,H.fF)({args:{0:e=>e.name}})],GitProviderService.prototype,"getMyIssues",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getIncomingActivity",1),Zu([(0,V.H)((e=>`${null==e||"string"==typeof e?e:e instanceof n.Uri?e.toString():`${e.length}:${e[0]?.repoPath??""}`}`)),(0,H.cM)({args:{0:e=>Array.isArray(e)?e.map((e=>e.name)).join(","):e}})],GitProviderService.prototype,"getBestRemoteWithProvider",1),Zu([(0,V.H)(((e,t)=>`${null==e||"string"==typeof e?e:e instanceof n.Uri?e.toString():`${e.length}:${e[0]?.repoPath??""}`}|${t?.includeDisconnected??!1}`)),(0,H.cM)({args:{0:e=>Array.isArray(e)?e.map((e=>e.name)).join(","):e}})],GitProviderService.prototype,"getBestRemoteWithRichProvider",1),Zu([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"getRemotes",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getRemotesWithProviders",1),Zu([(0,H.cM)({exit:e=>`returned ${e?.path}`})],GitProviderService.prototype,"getBestRepository",1),Zu([(0,H.cM)({exit:e=>`returned ${e?.path}`})],GitProviderService.prototype,"getBestRepositoryOrFirst",1),Zu([(0,H.cM)({exit:e=>`returned ${e?.path}`})],GitProviderService.prototype,"getOrOpenRepository",1),Zu([(0,H.cM)({args:{0:e=>null!=e?`TextEditor(${B.Yd.toLoggable(e.document.uri)})`:void 0}})],GitProviderService.prototype,"getOrOpenRepositoryForEditor",1),Zu([(0,H.cM)({exit:e=>`returned ${e?.path}`})],GitProviderService.prototype,"getRepository",1),Zu([(0,V.H)(),(0,H.cM)()],GitProviderService.prototype,"getStash",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getStatusForFile",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getStatusForFiles",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getStatusForRepo",1),Zu([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"getTags",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getTreeEntryForRevision",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getTreeForRevision",1),Zu([(0,V.H)(),(0,H.cM)()],GitProviderService.prototype,"getRevisionContent",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getUniqueRepositoryId",1),Zu([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"hasBranchOrTag",1),Zu([(0,H.cM)({args:{1:!1}})],GitProviderService.prototype,"hasCommitBeenPushed",1),Zu([(0,H.cM)()],GitProviderService.prototype,"hasRemotes",1),Zu([(0,H.cM)()],GitProviderService.prototype,"hasTrackingBranch",1),Zu([(0,H.cM)({args:{0:e=>e.uri.toString(!0),1:e=>null!=e?`TextEditor(${B.Yd.toLoggable(e.document.uri)})`:void 0}})],GitProviderService.prototype,"isRepositoryForEditor",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getDiffTool",1),Zu([(0,H.cM)()],GitProviderService.prototype,"openDiffTool",1),Zu([(0,H.cM)()],GitProviderService.prototype,"openDirectoryCompare",1),Zu([(0,V.H)(),(0,H.cM)()],GitProviderService.prototype,"resolveReference",1),Zu([(0,H.cM)({args:{1:e=>`[${e.matchAll?"A":""}${e.matchCase?"C":""}${e.matchRegex?"R":""}]: ${e.query.length>500?`${e.query.substring(0,500)}...`:e.query}`}})],GitProviderService.prototype,"richSearchCommits",1),Zu([(0,H.cM)()],GitProviderService.prototype,"searchCommits",1),Zu([(0,H.cM)()],GitProviderService.prototype,"validateBranchOrTagName",1),Zu([(0,H.cM)()],GitProviderService.prototype,"validateReference",1),Zu([(0,H.cM)()],GitProviderService.prototype,"stageFile",1),Zu([(0,H.cM)()],GitProviderService.prototype,"stageDirectory",1),Zu([(0,H.cM)()],GitProviderService.prototype,"unStageFile",1),Zu([(0,H.cM)()],GitProviderService.prototype,"unStageDirectory",1),Zu([(0,H.cM)()],GitProviderService.prototype,"stashApply",1),Zu([(0,H.cM)()],GitProviderService.prototype,"stashDelete",1),Zu([(0,H.cM)({args:{2:e=>e?.length}})],GitProviderService.prototype,"stashSave",1),Zu([(0,H.cM)()],GitProviderService.prototype,"createWorktree",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getWorktree",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getWorktrees",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getWorktreesDefaultUri",1),Zu([(0,H.cM)()],GitProviderService.prototype,"deleteWorktree",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getOpenScmRepositories",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getScmRepository",1),Zu([(0,H.cM)()],GitProviderService.prototype,"getOrOpenScmRepository",1);var id=i(2075),nd=i(5542),od=Object.defineProperty,rd=Object.getOwnPropertyDescriptor,sd=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?rd(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&od(t,i,r),r};const ad=2**30;class LineHoverController{constructor(e){this.container=e,this._disposable=n.Disposable.from((0,z.IH)(e.onReady)(this.onReady,this),r.DN.onDidChange(this.onConfigurationChanged,this))}dispose(){this.unregister(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(!r.DN.changed(e,"hovers.enabled")&&!r.DN.changed(e,"hovers.currentLine.enabled"))return;const t=r.DN.get("hovers");t.enabled&&t.currentLine.enabled?(this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this)),this.register(n.window.activeTextEditor)):(this.container.lineTracker.unsubscribe(this),this.unregister())}onActiveLinesChanged(e){e.pending||(null!=e.editor&&null!=e.selections?this.isRegistered(e.editor?.document.uri)||this.register(e.editor):this.unregister())}async provideDetailsHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;const o=this.container.lineTracker.getState(t.line)?.commit;if(null==o)return;const s=r.DN.get("hovers");if(s.annotations.details){if(await this.container.fileAnnotations.getAnnotationType(n.window.activeTextEditor)===r.VP.Blame)return}const a="line"===s.currentLine.over;if(!a&&this.container.lineAnnotations.suspended)return;const l=e.validateRange(new n.Range(t.line,a?t.character:ad,t.line,ad));if(!a&&l.start.character!==t.character)return;let c=t.line;const h=c+1;c=(o.lines.find((e=>e.line===h))??o.lines[0]).originalLine-1;const u=await this.container.tracker.get(e);if(null==u)return;const d=await fu(o,u.uri,c,s.detailsMarkdownFormat,r.DN.get("defaultDateFormat"),{autolinks:s.autolinks.enabled,pullRequests:{enabled:s.pullRequests.enabled}});return new n.Hover(d,l)}async provideChangesHover(e,t,i){if(!this.container.lineTracker.includes(t.line))return;const o=this.container.lineTracker.getState(t.line)?.commit;if(null==o)return;const s=r.DN.get("hovers");if(s.annotations.changes){if(await this.container.fileAnnotations.getAnnotationType(n.window.activeTextEditor)===r.VP.Blame)return}const a="line"===s.currentLine.over;if(!a&&this.container.lineAnnotations.suspended)return;const l=e.validateRange(new n.Range(t.line,a?t.character:ad,t.line,ad));if(!a&&l.start.character!==t.character)return;const c=await this.container.tracker.get(e);if(null==c)return;const h=await mu(o,c.uri,t.line,c.document);return null!=h?new n.Hover(h,l):void 0}isRegistered(e){return null!=this._hoverProviderDisposable&&qe.n.equals(this._uri,e)}register(e){if(this.unregister(),null==e)return;const t=r.DN.get("hovers");if(!t.enabled||!t.currentLine.enabled||!t.currentLine.details&&!t.currentLine.changes)return;this._uri=e.document.uri;const i=[];t.currentLine.changes&&i.push(n.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideChangesHover.bind(this)})),t.currentLine.details&&i.push(n.languages.registerHoverProvider({pattern:this._uri.fsPath},{provideHover:this.provideDetailsHover.bind(this)})),this._hoverProviderDisposable=n.Disposable.from(...i)}unregister(){this._uri=void 0,null!=this._hoverProviderDisposable&&(this._hoverProviderDisposable.dispose(),this._hoverProviderDisposable=void 0)}}sd([(0,H.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],LineHoverController.prototype,"onActiveLinesChanged",1),sd([(0,H.fF)({args:{0:e=>B.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],LineHoverController.prototype,"provideDetailsHover",1),sd([(0,H.fF)({args:{0:e=>B.Yd.toLoggable(e.uri),1:e=>`${e.line}:${e.character}`,2:!1}})],LineHoverController.prototype,"provideChangesHover",1);var ld=Object.defineProperty,cd=Object.getOwnPropertyDescriptor,hd=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?cd(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&ld(t,i,r),r};const ud=Object.create(null),dd=["left","alt+left","ctrl+left","right","alt+right","ctrl+right","alt+,","alt+.","escape"],pd=[];class KeyboardScope{constructor(e){this._paused=!0,this._mapping=e;for(const e in this._mapping)this._mapping[e]=this._mapping[e]??ud;pd.push(this._mapping)}async dispose(){const e=pd.indexOf(this._mapping),t=(0,G.UH)();null!=t&&(t.exitDetails=` • index=${e}`),e===pd.length-1?(pd.pop(),await this.updateKeyCommandsContext(pd[pd.length-1])):pd.splice(e,1)}get paused(){return this._paused}async clearKeyCommand(e){const t=(0,G.UH)(),i=pd[pd.length-1];i===this._mapping&&null!=i[e]?(i[e]=void 0,await(0,a.v)(`${s.zf.KeyPrefix}${e}`,!1)):null!=t&&(t.exitDetails=" • skipped")}async pause(e){if(this._paused)return;this._paused=!0;const t=Object.keys(this._mapping).reduce(((t,i)=>(t[i]=null==e||e.includes(i)?void 0:this._mapping[i],t)),Object.create(null));await this.updateKeyCommandsContext(t)}async resume(){this._paused&&(this._paused=!1,await this.updateKeyCommandsContext(this._mapping))}async start(){await this.resume()}async setKeyCommand(e,t){const i=(0,G.UH)(),n=pd[pd.length-1];if(n!==this._mapping)return void(null!=i&&(i.exitDetails=" • skipped"));const o=Boolean(n[e]);n[e]=t,o||await(0,a.v)(`${s.zf.KeyPrefix}${e}`,!0)}async updateKeyCommandsContext(e){await Promise.all(dd.map((t=>(0,a.v)(`${s.zf.KeyPrefix}${t}`,Boolean(e?.[t])))))}}hd([(0,H.cM)({args:!1,prefix:e=>`${e.prefix}[${pd.length}]`})],KeyboardScope.prototype,"dispose",1),hd([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${pd.length}](${t})`})],KeyboardScope.prototype,"clearKeyCommand",1),hd([(0,H.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],KeyboardScope.prototype,"pause",1),hd([(0,H.cM)({args:!1,prefix:e=>`${e.prefix}(paused=${e.instance._paused})`})],KeyboardScope.prototype,"resume",1),hd([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${pd.length}](${t})`})],KeyboardScope.prototype,"setKeyCommand",1);class Keyboard{constructor(){const e=dd.map((e=>(0,ke.xR)(`gitlens.key.${e}`,(()=>this.execute(e)),this)));this._disposable=n.Disposable.from(...e)}dispose(){this._disposable.dispose()}createScope(e){return new KeyboardScope({...e})}async beginScope(e){const t=this.createScope(e);return await t.start(),t}async execute(e){const t=(0,G.UH)();if(pd.length)try{let i=pd[pd.length-1][e];if("function"==typeof i&&(i=await i()),"function"!=typeof i?.onDidPressKey)return void(null!=t&&(t.exitDetails=" • skipped, no callback"));await i.onDidPressKey(e)}catch(e){B.Yd.error(e,t)}else null!=t&&(t.exitDetails=" • skipped, no mappings")}}hd([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${pd.length}](${void 0===t?"":Object.keys(t).join(",")})`})],Keyboard.prototype,"createScope",1),hd([(0,H.cM)({args:!1,prefix:(e,t)=>`${e.prefix}[${pd.length}](${void 0===t?"":Object.keys(t).join(",")})`})],Keyboard.prototype,"beginScope",1),hd([(0,H.cM)()],Keyboard.prototype,"execute",1);var md=Object.defineProperty,gd=Object.getOwnPropertyDescriptor,fd=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?gd(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&md(t,i,r),r};class IntegrationAuthenticationService{constructor(e){this.container=e,this.providers=new Map}dispose(){this.providers.clear()}registerProvider(e,t){if(this.providers.has(e))throw new Error(`Provider with id ${e} already registered`);return this.providers.set(e,t),{dispose:()=>this.providers.delete(e)}}hasProvider(e){return this.providers.has(e)}async createSession(e,t){const i=this.providers.get(e);if(null==i)throw new Error(`Provider with id ${e} not registered`);const n=await(i?.createSession(t));if(null==n)return;const o=this.getSecretKey(e,i.getSessionId(t));return await this.container.storage.storeSecret(o,JSON.stringify(n)),n}async getSession(e,t,i){const n=this.providers.get(e);if(null==n)throw new Error(`Provider with id ${e} not registered`);const o=this.getSecretKey(e,n.getSessionId(t));let r;i?.forceNewSession&&await this.container.storage.deleteSecret(o);try{const e=await this.container.storage.getSecret(o);e&&(r=JSON.parse(e))}catch(e){try{await this.container.storage.deleteSecret(o)}catch{}if(!i?.createIfNeeded)throw e}return i?.createIfNeeded&&null==r?this.createSession(e,t):r}async deleteSession(e,t){const i=this.providers.get(e);if(null==i)throw new Error(`Provider with id ${e} not registered`);const n=this.getSecretKey(e,i.getSessionId(t));await this.container.storage.deleteSecret(n)}getSecretKey(e,t){return`gitlens.integration.auth:${e}|${t}`}}fd([(0,H.fF)()],IntegrationAuthenticationService.prototype,"createSession",1),fd([(0,H.fF)()],IntegrationAuthenticationService.prototype,"getSession",1),fd([(0,H.fF)()],IntegrationAuthenticationService.prototype,"deleteSession",1);var wd=Object.defineProperty,_d=Object.getOwnPropertyDescriptor,vd=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?_d(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&wd(t,i,r),r};class SubscriptionAuthenticationProvider{constructor(e,t){this.container=e,this.server=t,this._onDidChangeSessions=new n.EventEmitter,this._sessionsPromise=this.getSessionsFromStorage(),this._disposable=n.Disposable.from(n.authentication.registerAuthenticationProvider("gitlens+","GitLens+",this,{supportsMultipleAccounts:!1}),this.container.storage.onDidChangeSecrets((()=>this.checkForUpdates())))}get onDidChangeSessions(){return this._onDidChangeSessions.event}dispose(){this._disposable.dispose()}get secretStorageKey(){return`gitlens.plus.auth:${this.container.env}`}abort(){return this.server.abort()}async createSession(e){const t=(0,G.UH)(),i=yd(e=e.sort());try{const t=await this.server.login(e,i),n=await this.createSessionForToken(t,e),o=await this._sessionsPromise,r=o.findIndex((e=>e.id===n.id||yd(e.scopes)===i));return r>-1?o.splice(r,1,n):o.push(n),await this.storeSessions(o),this._onDidChangeSessions.fire({added:[n],removed:[],changed:[]}),n}catch(e){if("Cancelled"===e)throw e;throw B.Yd.error(e,t),n.window.showErrorMessage(`Unable to sign in to GitLens+: ${e}`),e}}async getSessions(e){const t=(0,G.UH)();e=e?.sort();const i=yd(e),n=await this._sessionsPromise,o=null!=e?n.filter((e=>yd(e.scopes)===i)):n;return null!=t&&(t.exitDetails=` • Found ${o.length} sessions`),o}async removeSession(e){const t=(0,G.UH)();try{const t=await this._sessionsPromise,i=t.findIndex((t=>t.id===e));if(-1===i)return void B.Yd.log(`Unable to remove session ${e}; Not found`);const n=t[i];t.splice(i,1),await this.storeSessions(t),this._onDidChangeSessions.fire({added:[],removed:[n],changed:[]})}catch(e){throw B.Yd.error(e,t),n.window.showErrorMessage(`Unable to sign out of GitLens+: ${e}`),e}}async removeSessionsByScopes(e){const t=(0,G.UH)();try{e=e?.sort();const t=yd(e),i=[];let n=0;const o=await this._sessionsPromise;for(const e of o)yd(e.scopes)===t?(o.splice(n,1),i.push(e)):n++;if(0===i.length)return;await this.storeSessions(o),this._onDidChangeSessions.fire({added:[],removed:i,changed:[]})}catch(e){throw B.Yd.error(e,t),n.window.showErrorMessage(`Unable to sign out of GitLens+: ${e}`),e}}async tryMigrateSession(){if(null==this._migrated&&(this._migrated=this.container.storage.get("plus:migratedAuthentication",!1)),this._migrated)return;let e;try{if(null==n.extensions.getExtension("gitkraken.gitkraken-authentication"))return;if(e=await n.authentication.getSession("gitkraken",["gitlens"],{createIfNone:!1}),null==e)return;e={id:(0,on.Vj)(),accessToken:e.accessToken,account:{...e.account},scopes:e.scopes};const t=await this._sessionsPromise,i=yd(e.scopes),o=t.findIndex((t=>t.id===e.id||yd(t.scopes)===i));o>-1?t.splice(o,1,e):t.push(e),await this.storeSessions(t),this._onDidChangeSessions.fire({added:[e],removed:[],changed:[]})}catch(e){B.Yd.error(e,"Unable to migrate authentication")}finally{this._migrated=!0,this.container.storage.store("plus:migratedAuthentication",!0)}return e}async checkForUpdates(){const e=await this._sessionsPromise;this._sessionsPromise=this.getSessionsFromStorage();const t=await this._sessionsPromise,i=[],n=[];for(const n of t)e.some((e=>e.id===n.id))||i.push(n);for(const i of e)t.some((e=>e.id===i.id))||n.push(i);(i.length||n.length)&&(B.Yd.debug(`Firing sessions changed event; added=${i.length}, removed=${n.length}`),this._onDidChangeSessions.fire({added:i,removed:n,changed:[]}))}async createSessionForToken(e,t){const i=await this.server.getAccountInfo(e);return{id:(0,on.Vj)(),accessToken:e,account:{label:i.accountName,id:i.id},scopes:t}}async getSessionsFromStorage(){let e;try{const t=await this.container.storage.getSecret(this.secretStorageKey);if(!t||"[]"===t)return[];try{e=JSON.parse(t)}catch(e){try{await this.container.storage.deleteSecret(this.secretStorageKey)}catch{}throw e}}catch(e){return B.Yd.error(e,"Unable to read sessions from storage"),[]}const t=e.map((async e=>{const t=yd(e.scopes);let i;if(B.Yd.debug(`Read session from storage with scopes=${t}`),null==e.account)try{i=await this.server.getAccountInfo(e.accessToken),B.Yd.debug(`Verified session with scopes=${t}`)}catch(e){if("Unauthorized"===e.message)return}return{id:e.id,account:{label:null!=e.account?e.account.label??e.account.displayName??"<unknown>":i?.accountName??"<unknown>",id:e.account?.id??i?.id??"<unknown>"},scopes:e.scopes,accessToken:e.accessToken}})),i=(await Promise.allSettled(t)).filter((e=>"fulfilled"===e.status)).map((e=>e.value)).filter((e=>Boolean(e)));return B.Yd.debug(`Found ${i.length} verified sessions`),i.length!==e.length&&await this.storeSessions(i),i}async storeSessions(e){try{this._sessionsPromise=Promise.resolve(e),await this.container.storage.storeSecret(this.secretStorageKey,JSON.stringify(e))}catch(t){B.Yd.error(t,`Unable to store ${e.length} sessions`)}}}function yd(e){return e?.join("|")}vd([(0,H.fF)()],SubscriptionAuthenticationProvider.prototype,"createSession",1),vd([(0,H.fF)()],SubscriptionAuthenticationProvider.prototype,"getSessions",1),vd([(0,H.fF)()],SubscriptionAuthenticationProvider.prototype,"removeSession",1),vd([(0,H.fF)()],SubscriptionAuthenticationProvider.prototype,"removeSessionsByScopes",1);var bd=i(9827),Cd=Object.defineProperty,Sd=Object.getOwnPropertyDescriptor,kd=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Sd(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Cd(t,i,r),r};const Pd="did-authenticate",Rd="Visual-Studio-Code-GitLens";class ServerConnection{constructor(e){this.container=e,this._deferredCodeExchanges=new Map,this._pendingStates=new Map}dispose(){}get baseApiUri(){return"staging"===this.container.env?n.Uri.parse("https://stagingapi.gitkraken.com"):"dev"===this.container.env?n.Uri.parse("https://devapi.gitkraken.com"):n.Uri.parse("https://api.gitkraken.com")}get baseAccountUri(){return"staging"===this.container.env?n.Uri.parse("https://stagingapp.gitkraken.com"):"dev"===this.container.env?n.Uri.parse("https://devapp.gitkraken.com"):n.Uri.parse("https://app.gitkraken.com")}abort(){return null==this._cancellationSource?Promise.resolve():(this._cancellationSource.cancel(),new Promise((e=>setTimeout(e,50))))}async getAccountInfo(e){const t=(0,G.UH)();let i;try{i=await(0,bd.he)(n.Uri.joinPath(this.baseApiUri,"user").toString(),{agent:(0,bd.Nx)(),headers:{Authorization:`Bearer ${e}`,"User-Agent":Rd}})}catch(e){throw B.Yd.error(e,t),e}if(!i.ok)throw B.Yd.error(void 0,`Getting account info failed: (${i.status}) ${i.statusText}`),new Error(i.statusText);const o=await i.json();return{id:o.id,accountName:o.username}}async login(e,t){this.updateStatusBarItem(!0);const i=(0,on.Vj)(),o=this._pendingStates.get(t)??[];this._pendingStates.set(t,[...o,i]);const r=await n.env.asExternalUri(n.Uri.parse(`${n.env.uriScheme}://${this.container.context.extension.id}/${Pd}?gkstate=${i}`)),s=n.Uri.joinPath(this.baseAccountUri,"register").with({query:`${e.includes("gitlens")?"referrer=gitlens&":""}pass-token=true&return-url=${encodeURIComponent(r.toString())}`});await n.env.openExternal(s);let a=this._deferredCodeExchanges.get(t);return null==a&&(a=(0,z.ue)(this.container.uri.onDidReceiveAuthenticationUri,this.getUriHandlerDeferredExecutor(t)),this._deferredCodeExchanges.set(t,a)),null!=this._cancellationSource&&(this._cancellationSource.cancel(),this._cancellationSource.dispose(),this._cancellationSource=void 0),this._cancellationSource=new n.CancellationTokenSource,this.openCompletionInputFallback(this._cancellationSource.token),Promise.race([a.promise,new Promise(((e,t)=>this._cancellationSource?.token.onCancellationRequested((()=>t("Cancelled"))))),new Promise(((e,t)=>setTimeout(t,12e4,"Cancelled")))]).finally((()=>{this._cancellationSource?.cancel(),this._cancellationSource?.dispose(),this._cancellationSource=void 0,this._pendingStates.delete(t),a?.cancel(),this._deferredCodeExchanges.delete(t),this.updateStatusBarItem(!1)}))}async openCompletionInputFallback(e){const t=n.window.createInputBox();t.ignoreFocusOut=!0;const i=[];try{if(e.isCancellationRequested)return;const o=await new Promise((o=>{i.push(e.onCancellationRequested((()=>t.hide())),t.onDidHide((()=>o(void 0))),t.onDidChangeValue((e=>{if(e){try{const i=n.Uri.parse(e.trim());if(i.scheme&&"file"!==i.scheme)return void(t.validationMessage=void 0)}catch{}t.validationMessage="Please enter a valid authorization URL"}else t.validationMessage=void 0})),t.onDidAccept((()=>o(n.Uri.parse(t.value.trim()))))),t.title="GitLens+ Sign In",t.placeholder="Please enter the provided authorization URL",t.prompt="If the auto-redirect fails, paste the authorization URL",t.show()}));null!=o&&this.container.uri.handleUri(o)}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}}getUriHandlerDeferredExecutor(e){return(t,i,n)=>{const o=new URLSearchParams(t.query),r=this._pendingStates.get(e),s=o.get("gkstate");if(null==r||!s||!r.includes(s))return void B.Yd.log("State not found in accepted state. Skipping this execution...");const a=o.get("access-token"),l=o.get("code"),c=a??l;null==c?n("Token not returned"):i(c)}}updateStatusBarItem(e){e&&null==this._statusBarItem&&(this._statusBarItem=n.window.createStatusBarItem("gitlens.plus.signIn",n.StatusBarAlignment.Left),this._statusBarItem.name="GitLens+ Sign in",this._statusBarItem.text="Signing in to GitLens+...",this._statusBarItem.show()),e||null==this._statusBarItem||(this._statusBarItem.dispose(),this._statusBarItem=void 0)}async fetchGraphql(e,t,i){return this.fetchCore(n.Uri.joinPath(this.baseAccountUri,"api/projects/graphql").toString(),t,{method:"POST",body:JSON.stringify(e),...i})}async fetchCore(e,t,i){const n=(0,G.UH)();try{const n={agent:(0,bd.Nx)(),...i,headers:{Authorization:`Bearer ${t}`,"User-Agent":Rd,"Content-Type":"application/json",...i?.headers}};return await(0,bd.he)(e,n)}catch(e){throw B.Yd.error(e,n),e}}}kd([(0,S.H)()],ServerConnection.prototype,"baseApiUri",1),kd([(0,S.H)()],ServerConnection.prototype,"baseAccountUri",1),kd([(0,H.fF)({args:!1})],ServerConnection.prototype,"getAccountInfo",1),kd([(0,H.fF)()],ServerConnection.prototype,"login",1);var Dd=i(9967),$d=i(4550),Td=Object.defineProperty,Fd=Object.getOwnPropertyDescriptor,xd=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Fd(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Td(t,i,r),r};const Od="Visual-Studio-Code-GitLens",Ad=class{constructor(e,t){this.container=e,this._onDidChange=new n.EventEmitter,this._etag=0,this._disposable=n.Disposable.from((0,K.IH)(e.onReady)(this.onReady,this),this.container.subscriptionAuthentication.onDidChangeSessions((e=>setTimeout((()=>this.onAuthenticationChanged(e)),0)),this),r.DN.onDidChange((e=>{r.DN.changed(e,"plusFeatures")&&this.updateContext()})));const i=this.getStoredSubscription();null!=i&&(0,$d.L5)(t,"< 13.0")&&(i.previewTrial=void 0),this.changeSubscription(i,!0),setTimeout((()=>{this.ensureSession(!1)}),1e4)}get onDidChange(){return this._onDidChange.event}dispose(){this._statusBarSubscription?.dispose(),this._disposable.dispose()}async onAuthenticationChanged(e){let t=this._session;if(null==t&&null!=this._sessionPromise&&(t=await this._sessionPromise),null!=t&&e.removed?.some((e=>e.id===t.id)))return this._session=void 0,this._sessionPromise=void 0,void this.logout();const i=e.added?.[0]??e.changed?.[0];null!=i&&(i.id===t?.id&&i.accessToken===t?.accessToken||(this._session=t,this.validate()))}get baseApiUri(){const{env:e}=this.container;return"staging"===e?n.Uri.parse("https://stagingapi.gitkraken.com"):"dev"===e?n.Uri.parse("https://devapi.gitkraken.com"):n.Uri.parse("https://api.gitkraken.com")}get baseAccountUri(){const{env:e}=this.container;return"staging"===e?n.Uri.parse("https://stagingapp.gitkraken.com"):"dev"===e?n.Uri.parse("https://devapp.gitkraken.com"):n.Uri.parse("https://app.gitkraken.com")}get baseSiteUri(){const{env:e}=this.container;return"staging"===e?n.Uri.parse("https://staging.gitkraken.com"):"dev"===e?n.Uri.parse("https://dev.gitkraken.com"):n.Uri.parse("https://gitkraken.com")}get etag(){return this._etag}onReady(){this._disposable=n.Disposable.from(this._disposable,this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),...this.registerCommands()),this.updateContext()}onRepositoriesChanged(e){this.updateContext()}registerCommands(){return this.container.viewCommands,[(0,ke.xR)(s.Gh.PlusLearn,(e=>this.learn(e))),(0,ke.xR)(s.Gh.PlusLoginOrSignUp,(()=>this.loginOrSignUp())),(0,ke.xR)(s.Gh.PlusLogout,(()=>this.logout())),(0,ke.xR)(s.Gh.PlusStartPreviewTrial,(()=>this.startPreviewTrial())),(0,ke.xR)(s.Gh.PlusManage,(()=>this.manage())),(0,ke.xR)(s.Gh.PlusPurchase,(()=>this.purchase())),(0,ke.xR)(s.Gh.PlusResendVerification,(()=>this.resendVerification())),(0,ke.xR)(s.Gh.PlusValidate,(()=>this.validate())),(0,ke.xR)(s.Gh.PlusShowPlans,(()=>this.showPlans())),(0,ke.xR)(s.Gh.PlusHide,(()=>r.DN.updateEffective("plusFeatures.enabled",!1))),(0,ke.xR)(s.Gh.PlusRestore,(()=>r.DN.updateEffective("plusFeatures.enabled",!0))),(0,ke.xR)("gitlens.plus.reset",(()=>this.logout(!0)))]}async getSubscription(e=!1){const t=this.ensureSession(!1);return e||await t,this._subscription}learn(e=!0){(0,J.lN)(this.container.context.extension.id,"gitlens.plus",void 0,e)}async loginOrSignUp(){if(!await Br())return!1;await this.container.subscriptionAuthentication.abort(),this.showHomeView();const e=await this.ensureSession(!0),t=Boolean(e);if(t){const{account:e,plan:{actual:t,effective:i}}=this._subscription;if(!1===e?.verified){const e={title:"Resend Verification",isCloseAffordance:!0},t={title:"Cancel"};await n.window.showInformationMessage(`Before you can access ${i.name}, you must verify your email address.`,e,t)===e&&this.resendVerification()}else if((0,Xt.dz)(this._subscription)){const e=(0,Xt.PY)(this._subscription,"days"),t={title:"OK",isCloseAffordance:!0},o={title:"Learn More"};await n.window.showInformationMessage(`Welcome to ${i.name} (Trial). You now have additional access to GitLens+ features on private repos for ${(0,k._6)("more day",e??0)}.`,{modal:!0},t,o)===o&&this.learn()}else(0,Xt.ww)(this._subscription)?n.window.showInformationMessage(`Welcome to ${t.name}. You now have additional access to GitLens+ features on private repos.`,"OK"):n.window.showInformationMessage(`Welcome to ${t.name}. You have access to GitLens+ features on local & public repos.`,"OK")}return t}async logout(e=!1){return this.logoutCore(e)}async logoutCore(e=!1){null!=this._validationTimer&&(clearInterval(this._validationTimer),this._validationTimer=void 0),await this.container.subscriptionAuthentication.abort(),this._sessionPromise=void 0,null!=this._session?(this.container.subscriptionAuthentication.removeSession(this._session.id),this._session=void 0):this.container.subscriptionAuthentication.removeSessionsByScopes(Ad.authenticationScopes),e&&this.container.debugging?this.changeSubscription(void 0):this.changeSubscription({...this._subscription,plan:{actual:(0,Xt.fV)(Xt.Cx.Free,!1,void 0,null!=this._subscription.plan?.actual?.startedOn?new Date(this._subscription.plan.actual.startedOn):void 0),effective:(0,Xt.fV)(Xt.Cx.Free,!1,void 0,null!=this._subscription.plan?.effective?.startedOn?new Date(this._subscription.plan.actual.startedOn):void 0)},account:void 0})}manage(){n.env.openExternal(this.baseAccountUri)}async purchase(){await Br()&&(null==this._subscription.account?this.showPlans():n.env.openExternal(n.Uri.joinPath(this.baseAccountUri,"purchase-license").with({query:"product=gitlens&license=PRO"})),await this.showHomeView())}async resendVerification(){if(this._subscription.account?.verified)return!0;const e=(0,G.UH)();this.showHomeView(!0);const t=await this.ensureSession(!1);if(null==t)return!1;try{const i=await(0,bd.he)(n.Uri.joinPath(this.baseApiUri,"resend-email").toString(),{method:"POST",agent:(0,bd.Nx)(),headers:{Authorization:`Bearer ${t.accessToken}`,"User-Agent":Od,"Content-Type":"application/json"},body:JSON.stringify({id:t.account.id})});if(!i.ok)return B.Yd.error("",e,`Unable to resend verification email; status=(${i.status}): ${i.statusText}`),n.window.showErrorMessage(`Unable to resend verification email; Status: ${i.statusText}`,"OK"),!1;const o={title:"Recheck"},r={title:"Cancel"};if(await n.window.showInformationMessage("Once you have verified your email address, click 'Recheck'.",o,r)===o)return await this.validate(),!0}catch(t){B.Yd.error(t,e),n.window.showErrorMessage("Unable to resend verification email","OK")}return!1}async showHomeView(e=!1){e&&!r.DN.get("plusFeatures.enabled",void 0,!0)||this.container.homeView.visible||await(0,ke.P0)(s.Gh.ShowHomeView)}showPlans(){n.env.openExternal(n.Uri.joinPath(this.baseSiteUri,"gitlens/pricing"))}async startPreviewTrial(e){if(!await Br())return;let{plan:t,previewTrial:i}=this._subscription;if(null!=i){if(this.showHomeView(),!e&&t.effective.id===Xt.Cx.Free){const e={title:"Extend Your Trial",isCloseAffordance:!0},t={title:"Cancel"};await n.window.showInformationMessage("Your 3-day trial has ended.\nExtend your GitLens Pro trial to continue to use GitLens+ features on private repos, free for an additional 7-days.",{modal:!0},e,t)===e&&this.loginOrSignUp()}return}const o=new Date;let r,s=new Date(o);if(this.container.debugging?(s=(0,C.IH)(s,{minutes:1}),r=0):(s.setHours(23,59,59,999),s=(0,C.IH)(s,{days:3}),r=3),i={startedOn:o.toISOString(),expiresOn:s.toISOString()},this.changeSubscription({...this._subscription,plan:{...this._subscription.plan,effective:(0,Xt.fV)(Xt.Cx.Pro,!1,void 0,o,s)},previewTrial:i}),!e){const e={title:"OK",isCloseAffordance:!0},t={title:"Learn More"};await n.window.showInformationMessage(`You have started a ${r}-day GitLens Pro trial of GitLens+ features on private repos.`,{modal:!0},e,t)===t&&this.learn()}}async validate(){const e=(0,G.UH)(),t=await this.ensureSession(!1);if(null!=t)try{await this.checkInAndValidate(t)}catch(t){B.Yd.error(t,e)}else this.changeSubscription(this._subscription)}async checkInAndValidate(e,t=!1){if(!t)return this.checkInAndValidateCore(e);const i=this.checkInAndValidateCore(e);await Promise.race([i,new Promise((e=>setTimeout(e,3e3,!0)))])&&await n.window.withProgress({location:n.ProgressLocation.Notification,title:"Validating your GitLens+ account..."},(()=>i))}async checkInAndValidateCore(e){const t=(0,G.UH)();try{const t={id:e.account.id,platform:(0,Bu.Xf)(),gitlensVersion:this.container.version,machineId:n.env.machineId,sessionId:n.env.sessionId,vscodeEdition:n.env.appName,vscodeHost:n.env.appHost,vscodeVersion:n.version,previewStartedOn:this._subscription.previewTrial?.startedOn,previewExpiresOn:this._subscription.previewTrial?.expiresOn},i=await(0,bd.he)(n.Uri.joinPath(this.baseApiUri,"gitlens/checkin").toString(),{method:"POST",agent:(0,bd.Nx)(),headers:{Authorization:`Bearer ${e.accessToken}`,"User-Agent":Od,"Content-Type":"application/json"},body:JSON.stringify(t)});if(!i.ok)throw new u.dt("Unable to validate account",void 0,i.status,i.statusText);const o=await i.json();this.validateSubscription(o),this._lastCheckInDate=new Date}catch(e){if(B.Yd.error(e,t),e instanceof u.dt)throw e;throw new u.dt("Unable to validate account",e)}finally{this.startDailyValidationTimer()}}startDailyValidationTimer(){null!=this._validationTimer&&clearInterval(this._validationTimer),this._validationTimer=setInterval((()=>{null!=this._lastCheckInDate&&this._lastCheckInDate.getDate()===(new Date).getDate()||this.ensureSession(!1,!0)}),216e5)}validateSubscription(e){const t={id:e.user.id,name:e.user.name,email:e.user.email,verified:"activated"===e.user.status,createdOn:e.user.createdDate,organizationIds:e.orgIds??[]},i=Object.entries(e.licenses.effectiveLicenses),n=Object.entries(e.licenses.paidLicenses);let o,r;if(n.length>0){n.length>1&&n.sort(((e,t)=>(0,Xt.kU)(Nd(t[0]))+Ld(t[1].latestStatus)-((0,Xt.kU)(Nd(e[0]))+Ld(e[1].latestStatus))));const[e,t]=n[0];o=(0,Xt.fV)(Nd(e),Ud(e),t.organizationId,new Date(t.latestStartDate),new Date(t.latestEndDate))}if(null==o&&(o=(0,Xt.fV)(Xt.Cx.FreePlus,!1,void 0,null!=e.user.firstGitLensCheckIn?new Date(e.user.firstGitLensCheckIn):void 0)),i.length>0){i.length>1&&i.sort(((e,t)=>(0,Xt.kU)(Nd(t[0]))+Ld(t[1].latestStatus)-((0,Xt.kU)(Nd(e[0]))+Ld(e[1].latestStatus))));const[e,t]=i[0];r=(0,Xt.fV)(Nd(e),Ud(e),t.organizationId,new Date(t.latestStartDate),new Date(t.latestEndDate))}(null==r||(0,Xt.kU)(o.id)>=(0,Xt.kU)(r.id))&&(r={...o}),this.changeSubscription({...this._subscription,plan:{actual:o,effective:r},account:t})}async ensureSession(e,t){if(null!=this._sessionPromise&&void 0===this._session&&await this._sessionPromise,!t&&null!=this._session)return this._session;if(null===this._session&&!e)return;void 0===this._sessionPromise&&(this._sessionPromise=this.getOrCreateSession(e).then((e=>(this._session=e,this._sessionPromise=void 0,this._session)),(()=>(this._session=null,this._sessionPromise=void 0,this._session))));return await this._sessionPromise??void 0}async getOrCreateSession(e){const t=(0,G.UH)();let i;try{i=await n.authentication.getSession(Ad.authenticationProviderId,Ad.authenticationScopes,{createIfNone:e,silent:!e})}catch(e){if(i=null,e instanceof Error&&e.message.includes("User did not consent"))return B.Yd.debug(t,"User declined authentication"),await this.logoutCore(),null;B.Yd.error(e,t)}if(void 0===i&&(i=await this.container.subscriptionAuthentication.tryMigrateSession()),null==i)return B.Yd.debug(t,"No valid session was found"),await this.logoutCore(),i??null;try{await this.checkInAndValidate(i,e)}catch(o){if(B.Yd.error(o,t),this.container.telemetry.sendEvent("account/validation/failed",{"account.id":i.account.id,exception:String(o),code:o.original?.code,statusCode:o.statusCode}),B.Yd.debug(t,`Account validation failed (${o.statusCode??o.original?.code})`),o instanceof u.dt){const t=i.account.label;if("ENOTFOUND"!==o.original?.code&&null!=o.statusCode&&o.statusCode<500&&o.statusCode>=400){if(i=null,await this.logoutCore(),e){const e=401===o.statusCode;queueMicrotask((async()=>{const i={title:"Retry Sign In"};await n.window.showErrorMessage(`Unable to sign in to your (${t}) GitLens+ account. Please try again. If this issue persists, please contact support.${e?"":` Error=${o.message}`}`,i)===i&&this.loginOrSignUp()}))}}else i=i??null}}return i}changeSubscription(e,t=!1){null==e&&(e={plan:{actual:(0,Xt.fV)(Xt.Cx.Free,!1,void 0),effective:(0,Xt.fV)(Xt.Cx.Free,!1,void 0)},account:void 0,state:Xt.jc.Free}),null!=e.previewTrial&&((0,Xt.EE)(e.previewTrial.expiresOn)??0)>0&&(e={...e,plan:{...e.plan,effective:(0,Xt.fV)(Xt.Cx.Pro,!1,void 0,new Date(e.previewTrial.startedOn),new Date(e.previewTrial.expiresOn))}}),(0,Xt.Z1)(e)&&(e={...e,plan:{...e.plan,effective:e.plan.actual}}),e.state=(0,Xt.RE)(e);const i=this._subscription,n=null!=i&&JSON.stringify(i)===JSON.stringify(e);n||(queueMicrotask((()=>{let t=Ed(e);this.container.telemetry.setGlobalAttributes(t),t={...t,...n?{}:Ed(i,"previous")},this.container.telemetry.sendEvent(null==i?"subscription":"subscription/changed",t)})),this.storeSubscription(e),this._subscription=e,this._etag=Date.now(),setTimeout((()=>{null!=e?.account&&e.plan.actual.id===Xt.Cx.Pro&&!e.plan.actual.bundle&&new Date(e.plan.actual.startedOn)>=new Date("2022-02-28T00:00:00.000Z")&&new Date(e.plan.actual.startedOn)<=new Date("2022-04-31T00:00:00.000Z")&&function(e){if(e.storage.get("plus:renewalDiscountNotificationShown",!1))return;e.storage.store("plus:renewalDiscountNotificationShown",!0),(0,Be.PV)("info","60% off your GitLens Pro renewal — as a thank you for being an early adopter of GitLens+. So there will be no change to your price for an additional year!",void 0,void 0)}(this.container)}),5e3),t||(this.updateContext(),null!=i&&this._onDidChange.fire({current:e,previous:i,etag:this._etag})))}getStoredSubscription(){const e=this.container.storage.get("premium:subscription")?.data;return null!=e&&(e.plan.actual.name=(0,Xt.tL)(e.plan.actual.id),e.plan.effective.name=(0,Xt.tL)(e.plan.effective.id)),e}async storeSubscription(e){return this.container.storage.store("premium:subscription",{v:1,data:e})}updateContext(){this._updateAccessContextDebounced?.cancel(),null==this._updateAccessContextDebounced&&(this._updateAccessContextDebounced=(0,K.Ds)(this.updateAccessContext.bind(this),500)),null!=this._cancellationSource&&(this._cancellationSource.cancel(),this._cancellationSource.dispose()),this._cancellationSource=new n.CancellationTokenSource,this._updateAccessContextDebounced(this._cancellationSource.token),this.updateStatusBar();const{plan:{actual:e},state:t}=this._subscription;(0,a.v)(s.zf.Plus,e.id!=Xt.Cx.Free?e.id:void 0),(0,a.v)(s.zf.PlusState,t)}async updateAccessContext(e){let t=!1;if(0!==this.container.git.repositoryCount&&(({allowed:t}=await this.container.git.access()),e.isCancellationRequested))return;const i=r.DN.get("plusFeatures.enabled")??!0;let n;if(!i&&"mixed"===t){n=[];for(const t of this.container.git.repositories){if(t.closed)continue;const i=await this.container.git.access(void 0,t.uri);if(e.isCancellationRequested)return;i.allowed||n.push(t.uri.toString())}}(0,a.v)(s.zf.PlusEnabled,Boolean(t)||i),(0,a.v)(s.zf.PlusRequired,!1===t),(0,a.v)(s.zf.PlusDisallowedRepos,n)}updateStatusBar(){const{account:e,plan:{effective:t}}=this._subscription;if(t.id===Xt.Cx.Free)return this._statusBarSubscription?.dispose(),void(this._statusBarSubscription=void 0);const i=(0,Xt.dz)(this._subscription);if(!i&&!1!==e?.verified)return this._statusBarSubscription?.dispose(),void(this._statusBarSubscription=void 0);if(null==this._statusBarSubscription&&(this._statusBarSubscription=n.window.createStatusBarItem("gitlens.plus.subscription",n.StatusBarAlignment.Left,1)),this._statusBarSubscription.name="GitLens+ Subscription",this._statusBarSubscription.command=s.Gh.ShowHomeView,!1===e?.verified)this._statusBarSubscription.text=`$(warning) ${t.name} (Unverified)`,this._statusBarSubscription.backgroundColor=new n.ThemeColor("statusBarItem.warningBackground"),this._statusBarSubscription.tooltip=new n.MarkdownString(i?`**Please verify your email**\n\nBefore you can start your **${t.name}** trial, please verify your email address.\n\nClick for details`:"**Please verify your email**\n\nBefore you can also use GitLens+ features on private repos, please verify your email address.\n\nClick for details",!0);else{const e=(0,Xt.PY)(this._subscription,"days");this._statusBarSubscription.text=`${t.name} (Trial)`,this._statusBarSubscription.tooltip=new n.MarkdownString(`You have ${(0,k._6)("day",e??0)} left in your **${t.name}** trial, which gives you additional access to GitLens+ features on private repos.\n\nClick for details`,!0)}this._statusBarSubscription.show()}};let Id=Ad;function Ed(e,t){return null==e?{}:{...(0,Dd.xH)(e.account,{arrays:"join",prefix:(t?`${t}.`:"")+"account",skipPaths:["name","email"],skipNulls:!0,stringify:!0}),...(0,Dd.xH)(e.plan,{prefix:(t?`${t}.`:"")+"subscription",skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),...(0,Dd.xH)(e.previewTrial,{prefix:(t?`${t}.`:"")+"subscription.previewTrial",skipPaths:["actual.name","effective.name"],skipNulls:!0,stringify:!0}),"subscription.state":e.state}}function Nd(e){switch(e){case"gitlens-pro":case"bundle-pro":return Xt.Cx.Pro;case"gitlens-teams":case"bundle-teams":return Xt.Cx.Teams;case"gitlens-hosted-enterprise":case"gitlens-self-hosted-enterprise":case"gitlens-standalone-enterprise":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":return Xt.Cx.Enterprise;default:return Xt.Cx.FreePlus}}function Ud(e){switch(e){case"bundle-pro":case"bundle-teams":case"bundle-hosted-enterprise":case"bundle-self-hosted-enterprise":case"bundle-standalone-enterprise":return!0;default:return!1}}function Ld(e){switch(e){case"active":return 100;case"expired":case"cancelled":return-100;case"in_trial":case"trial":return 1;case"canceled":case"non_renewing":return 0}}function Md(){return(e,t,i)=>{let n;if("function"==typeof i.value?n=i.value:"function"==typeof i.get&&(n=i.get),void 0===n)throw new Error("Not supported");const o=`$serialize$${t}`;i.value=function(...e){Object.prototype.hasOwnProperty.call(this,o)||Object.defineProperty(this,o,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let t=this[o];const i=async()=>await n.apply(this,e);return t=null==t?i():t.then(i,i),this[o]=t,t}}}Id.authenticationProviderId="gitlens+",Id.authenticationScopes=["gitlens"],xd([(0,S.H)()],Id.prototype,"baseApiUri",1),xd([(0,S.H)()],Id.prototype,"baseAccountUri",1),xd([(0,S.H)()],Id.prototype,"baseSiteUri",1),xd([(0,H.fF)()],Id.prototype,"learn",1),xd([(0,H.cM)()],Id.prototype,"loginOrSignUp",1),xd([(0,H.cM)()],Id.prototype,"logout",1),xd([(0,H.cM)()],Id.prototype,"manage",1),xd([(0,H.cM)()],Id.prototype,"purchase",1),xd([(0,V.H)(),(0,H.cM)()],Id.prototype,"resendVerification",1),xd([(0,H.cM)()],Id.prototype,"showHomeView",1),xd([(0,V.H)(),(0,H.cM)()],Id.prototype,"startPreviewTrial",1),xd([(0,V.H)(),(0,H.cM)()],Id.prototype,"validate",1),xd([(0,V.H)((e=>e.account.id))],Id.prototype,"checkInAndValidate",1),xd([(0,H.fF)({args:{0:e=>e?.account.label}})],Id.prototype,"checkInAndValidateCore",1),xd([(0,H.fF)()],Id.prototype,"validateSubscription",1),xd([(0,V.H)(),(0,H.fF)()],Id.prototype,"ensureSession",1),xd([(0,H.fF)()],Id.prototype,"getOrCreateSession",1),xd([(0,H.fF)()],Id.prototype,"changeSubscription",1);class IpcMessageType{constructor(e,t=!1){this.method=e,this.overwriteable=t}}class IpcCommandType extends IpcMessageType{}class IpcNotificationType extends IpcMessageType{}function Wd(e,t,i){e.method===t.method&&i(t.params,e)}const Bd=new IpcCommandType("webview/ready"),Gd=new IpcCommandType("webview/focus"),Vd=new IpcCommandType("command/execute"),Hd=new IpcCommandType("configuration/preview"),qd=new IpcCommandType("configuration/update"),jd=new IpcNotificationType("configuration/didChange"),Yd=new IpcNotificationType("configuration/didPreview"),Qd=new IpcNotificationType("webview/didOpenAnchor");var zd=Object.defineProperty,Kd=Object.getOwnPropertyDescriptor,Jd=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Kd(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&zd(t,i,r),r};const Xd=2**30;let Zd=0;let ep=class{constructor(e,t,i,n,o,r,s,a){this.container=e,this.id=t,this.fileName=i,this.iconPath=n,this.contextKeyPrefix=r,this.trackingFeature=s,this.disposables=[],this.isReady=!1,this._cspNonce=(0,on.Vu)(),this._originalTitle=this._title=o,this.disposables.push((0,ke.xR)(a,this.onShowCommand,this))}dispose(){this.disposables.forEach((e=>{e.dispose()})),this._disposablePanel?.dispose()}get options(){return{retainContextWhenHidden:!0,enableFindWidget:!0,enableCommandUris:!0,enableScripts:!0}}get originalTitle(){return this._originalTitle}get title(){return this._panel?.title??this._title}set title(e){this._title=e,null!=this._panel&&(this._panel.title=e)}get visible(){return this._panel?.visible??!1}hide(){this._panel?.dispose()}async show(e,...t){this.container.usage.track(`${this.trackingFeature}:shown`);let i=e?.column??n.ViewColumn.Beside;i===n.ViewColumn.Beside&&null==n.window.tabGroups.activeTabGroup.activeTab&&(i=n.ViewColumn.Active),null==this._panel?(this._panel=n.window.createWebviewPanel(this.id,this._title,{viewColumn:i,preserveFocus:e?.preserveFocus??!1},this.options),this._panel.iconPath=n.Uri.file(this.container.context.asAbsolutePath(this.iconPath)),this._disposablePanel=n.Disposable.from(this._panel,this._panel.onDidDispose(this.onPanelDisposed,this),this._panel.onDidChangeViewState(this.onViewStateChanged,this),this._panel.webview.onDidReceiveMessage(this.onMessageReceivedCore,this),...this.onInitializing?.()??[],...this.registerCommands?.()??[],n.window.onDidChangeWindowState(this.onWindowStateChanged,this)),this._panel.webview.html=await this.getHtml(this._panel.webview)):(await this.refresh(!0),this._panel.reveal(this._panel.viewColumn??n.ViewColumn.Active,e?.preserveFocus??!1))}get cspNonce(){return this._cspNonce}onWindowStateChanged(e){this.visible&&this.onWindowFocusChanged?.(e.focused)}async refresh(e){if(null==this._panel)return;this.isReady=!1;const t=await this.getHtml(this._panel.webview);e&&(this._panel.webview.html=""),this._panel.webview.html!==t?this._panel.webview.html=t:this.isReady=!0}resetContextKeys(){(0,a.v)(`${this.contextKeyPrefix}:inputFocus`,!1),(0,a.v)(`${this.contextKeyPrefix}:focus`,!1),(0,a.v)(`${this.contextKeyPrefix}:active`,!1)}setContextKeys(e,t,i){null!=e&&((0,a.v)(`${this.contextKeyPrefix}:active`,e),e||(t=!1,i=!1)),null!=t&&(0,a.v)(`${this.contextKeyPrefix}:focus`,t),null!=i&&(0,a.v)(`${this.contextKeyPrefix}:inputFocus`,i)}onPanelDisposed(){this.resetContextKeys(),this.onActiveChanged?.(!1),this.onFocusChanged?.(!1),this.onVisibilityChanged?.(!1),this.isReady=!1,this._disposablePanel?.dispose(),this._disposablePanel=void 0,this._panel=void 0}onShowCommand(...e){this.show(void 0,...e)}onViewFocusChanged(e){this.setContextKeys(void 0,e.focused,e.inputFocused),this.onFocusChanged?.(e.focused)}onViewStateChanged(e){const{active:t,visible:i}=e.webviewPanel;i?(this.setContextKeys(t),this.onActiveChanged?.(t),t||this.onFocusChanged?.(!1)):(this.resetContextKeys(),this.onActiveChanged?.(!1),this.onFocusChanged?.(!1)),this.onVisibilityChanged?.(i)}onMessageReceivedCore(e){if(null!=e)switch(e.method){case Bd.method:Wd(Bd,e,(()=>{this.isReady=!0,this.onReady?.()}));break;case Gd.method:Wd(Gd,e,(e=>{this.onViewFocusChanged(e)}));break;case Vd.method:Wd(Vd,e,(e=>{null!=e.args?(0,ke.P0)(e.command,...e.args):(0,ke.P0)(e.command)}));break;default:this.onMessageReceived?.(e)}}async getHtml(e){const t=n.Uri.joinPath(this.container.context.extensionUri,"dist","webviews"),i=n.Uri.joinPath(t,this.fileName),o=new TextDecoder("utf8").decode(await n.workspace.fs.readFile(i)),[r,s,a,l]=await Promise.all([this.includeBootstrap?.(),this.includeHead?.(),this.includeBody?.(),this.includeEndOfBody?.()]),c=e.cspSource,h=e.asWebviewUri(this.container.context.extensionUri).toString(),u=e.asWebviewUri(t).toString();return o.replace(/#{(head|body|endOfBody|placement|cspSource|cspNonce|root|webroot)}/g,((e,t)=>{switch(t){case"head":return s??"";case"body":return a??"";case"endOfBody":return`${null!=r?`<script type="text/javascript" nonce="${this.cspNonce}">window.bootstrap=${JSON.stringify(r)};<\/script>`:""}${l??""}`;case"placement":return"editor";case"cspSource":return c;case"cspNonce":return this.cspNonce;case"root":return h;case"webroot":return u;default:return""}}))}nextIpcId(){return Zd===Xd?Zd=1:Zd++,`host:${Zd}`}notify(e,t,i){return this.postMessage({id:this.nextIpcId(),method:e.method,params:t,completionId:i})}postMessage(e){return null!=this._panel&&this.isReady&&this.visible?Promise.race([this._panel.webview.postMessage(e),new Promise((e=>setTimeout(e,5e3,!1)))]):Promise.resolve(!1)}};Jd([(0,H.cM)()],ep.prototype,"hide",1),Jd([(0,H.cM)({args:!1})],ep.prototype,"show",1),Jd([(0,H.fF)()],ep.prototype,"refresh",1),Jd([(0,H.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],ep.prototype,"onViewFocusChanged",1),Jd([(0,H.fF)({args:{0:e=>`active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`}})],ep.prototype,"onViewStateChanged",1),Jd([(0,H.fF)({args:{0:e=>null!=e?`${e.id}: method=${e.method}`:"<undefined>"}})],ep.prototype,"onMessageReceivedCore",1),Jd([Md(),(0,H.fF)({args:{0:e=>`{"id":${e.id},"method":${e.method}${e.completionId?`,"completionId":${e.completionId}`:""}}`}})],ep.prototype,"postMessage",1),ep=Jd([(0,H.hJ)(((e,t)=>`${t}(${e.id})`))],ep);const tp=new IpcNotificationType("focus/state/didChange",!0),ip=new IpcNotificationType("graph/subscription/didChange",!0);class FocusWebview extends ep{constructor(e){super(e,"gitlens.focus","focus.html","images/gitlens-icon.png","Focus View",`${s.zf.WebviewPrefix}focus`,"focusWebview",s.Gh.ShowFocusPage),this._bootstrapping=!0,this._pullRequests=[],this._issues=[],this.disposables.push(this.container.subscription.onDidChange(this.onSubscriptionChanged,this)),this.disposables.push(this.container.git.onDidChangeRepositories((()=>{this.refresh(!0)})))}registerCommands(){return[(0,ke.xR)(s.Gh.RefreshFocus,(()=>this.refresh(!0)))]}onFocusChanged(e){e?setTimeout((()=>{(0,a.v)(s.zf.FocusFocused,e)}),0):(0,a.v)(s.zf.FocusFocused,e)}async onSubscriptionChanged(e){if(e.etag===this._etagSubscription)return;this._etagSubscription=e.etag;const t=await this.container.git.access(p.Focus),{subscription:i,isPlus:n}=await this.getSubscription(t.subscription.current);return n&&this.notifyDidChangeState(),this.notify(ip,{subscription:i,isPlus:n})}async getSubscription(e){const t=e??await this.container.subscription.getSubscription(!0);return{subscription:t,isPlus:![Xt.jc.Free,Xt.jc.FreePreviewTrialExpired,Xt.jc.FreePlusTrialExpired,Xt.jc.VerificationRequired].includes(t.state)}}async getState(e=!1){const{subscription:t,isPlus:i}=await this.getSubscription();if(!i)return{isPlus:i,subscription:t};const n=await this.getRichRepos(),o=n.filter((e=>e.isGitHub));const r=function(e){return e.filter((e=>e.isConnected&&e.isGitHub))}(o),s=r.length>0;if(e||!s)return{isPlus:i,subscription:t,repos:(s?r:o).map((e=>np(e)))};return{isPlus:i,subscription:t,pullRequests:(await this.getMyPullRequests(r)).map((e=>({pullRequest:(0,rn.l1)(e.pullRequest),reasons:e.reasons}))),issues:(await this.getMyIssues(r)).map((e=>({issue:(0,ue.y$)(e.issue),reasons:e.reasons}))),repos:r.map((e=>np(e)))}}async includeBootstrap(){if(this._bootstrapping){const e=await this.getState(!0);return e.isPlus&&this.notifyDidChangeState(),e}return this.getState()}async getRichRepos(e){if(null==this._repos||!0===e){const e=[],t=[];for(const i of this.container.git.openRepositories){const n=await i.getRichRemote();null==n||e.findIndex((e=>e.remote===n))>-1||(t.push(i.onDidChange(this.onRepositoryChanged,this)),e.push({repo:i,remote:n,isConnected:await n.provider.isConnected(),isGitHub:"GitHub"===n.provider.name}))}this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0),this._repositoryEventsDisposable=n.Disposable.from(...t),this._repos=e}return this._repos}async onRepositoryChanged(e){e.changed(A.I6.RemoteProviders,A.du.Any)&&(await this.getRichRepos(!0),this.notifyDidChangeState())}async getMyPullRequests(e){const t=[];for(const{remote:i}of e){const e=await this.container.git.getMyPullRequests(i);null!=e&&t.push(...e.filter((e=>e.reasons.length>0)))}function i(e){let t=0;return e.reasons.includes("authored")?t+=1e3:e.reasons.includes("assigned")?t+=900:e.reasons.includes("review-requested")?t+=800:e.reasons.includes("mentioned")&&(t+=700),e.pullRequest.reviewDecision===rn.pD.Approved?e.pullRequest.mergeableState===rn.Cz.Mergeable?t+=100:e.pullRequest.mergeableState===rn.Cz.Conflicting?t+=90:t+=80:e.pullRequest.reviewDecision===rn.pD.ChangesRequested&&(t+=70),t}return this._pullRequests=t.sort(((e,t)=>{const n=i(e),o=i(t);return n===o?e.pullRequest.date.getTime()-t.pullRequest.date.getTime():(o??0)-(n??0)})),this._pullRequests}async getMyIssues(e){const t=[];for(const{remote:i}of e){const e=await this.container.git.getMyIssues(i);null!=e&&t.push(...e.filter((e=>e.reasons.length>0)))}return this._issues=t.sort(((e,t)=>t.issue.updatedDate.getTime()-e.issue.updatedDate.getTime())),this._issues}async show(e){if(await Br())return super.show(e)}async notifyDidChangeState(){if(!this.visible)return;const e=await this.getState();this._bootstrapping=!1,this.notify(tp,{state:e})}}function np(e){return{repo:e.repo.path,isGitHub:e.isGitHub,isConnected:e.isConnected}}var op=(e=>(e.Upstream="upstream",e.PullRequest="pullRequest",e))(op||{}),rp=(e=>(e.Selection="selection",e.Head="head",e.Highlights="highlights",e.LocalBranches="localBranches",e.RemoteBranches="remoteBranches",e.Stashes="stashes",e.Tags="tags",e.Upstream="upstream",e))(rp||{}),sp=(e=>(e.Selection="selection",e.Head="head",e.Highlights="highlights",e.LocalBranches="localBranches",e.RemoteBranches="remoteBranches",e.Stashes="stashes",e.Tags="tags",e.Upstream="upstream",e))(sp||{});const ap=Object.values(op);const lp=new IpcCommandType("graph/chooseRepository"),cp=new IpcCommandType("graph/dimMergeCommits"),hp=new IpcCommandType("graph/dismissBanner"),up=new IpcCommandType("graph/dblclick"),dp=new IpcCommandType("graph/rows/ensure"),pp=new IpcCommandType("graph/avatars/get"),mp=new IpcCommandType("graph/refs/metadata/get"),gp=new IpcCommandType("graph/rows/get"),fp=new IpcCommandType("graph/search"),wp=new IpcCommandType("graph/search/openInView"),_p=new IpcCommandType("graph/columns/update"),vp=new IpcCommandType("graph/refs/update/visibility"),yp=new IpcCommandType("graph/fitlers/update/excludeType"),bp=new IpcCommandType("graph/configuration/update"),Cp=new IpcCommandType("graph/fitlers/update/includeOnlyRefs"),Sp=new IpcCommandType("graph/selection/update"),kp=new IpcNotificationType("graph/didChange",!0),Pp=new IpcNotificationType("graph/configuration/didChange",!0),Rp=new IpcNotificationType("graph/subscription/didChange",!0),Dp=new IpcNotificationType("graph/avatars/didChange",!0),$p=new IpcNotificationType("graph/refs/didChangeMetadata",!0),Tp=new IpcNotificationType("graph/columns/didChange",!0),Fp=new IpcNotificationType("graph/window/focus/didChange",!0),xp=new IpcNotificationType("graph/refs/didChangeVisibility",!0),Op=new IpcNotificationType("graph/rows/didChange"),Ap=new IpcNotificationType("graph/selection/didChange",!0),Ip=new IpcNotificationType("graph/workingTree/didChange",!0),Ep=new IpcNotificationType("graph/rows/didEnsure"),Np=new IpcNotificationType("graph/didSearch",!0),Up=new IpcNotificationType("graph/didFetch",!0);var Lp=Object.defineProperty,Mp=Object.getOwnPropertyDescriptor,Wp=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Mp(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Lp(t,i,r),r};const Bp={ref:{width:150,isHidden:!1},graph:{width:150,isHidden:!1},message:{width:300,isHidden:!1},author:{width:130,isHidden:!1},datetime:{width:130,isHidden:!1},sha:{width:130,isHidden:!1},changes:{width:130,isHidden:!0}};class GraphWebview extends ep{constructor(e){super(e,"gitlens.graph","graph.html","images/gitlens-icon.png","Commit Graph",`${s.zf.WebviewPrefix}graph`,"graphWebview",s.Gh.ShowGraphPage),this._onDidChangeSelection=new n.EventEmitter,this._firstSelection=!0,this._pendingIpcNotifications=new Map,this.isWindowFocused=!0,this._showActiveSelectionDetailsDebounced=void 0,this._fireSelectionChangedDebounced=void 0,this._notifyDidChangeStateDebounced=void 0,this._notifyDidChangeAvatarsDebounced=void 0,this._notifyDidChangeRefsMetadataDebounced=void 0,this._ipcNotificationMap=new Map([[Tp,this.notifyDidChangeColumns],[Pp,this.notifyDidChangeConfiguration],[kp,this.notifyDidChangeState],[xp,this.notifyDidChangeRefsVisibility],[Ap,this.notifyDidChangeSelection],[Rp,this.notifyDidChangeSubscription],[Ip,this.notifyDidChangeWorkingTree],[Fp,this.notifyDidChangeWindowFocus],[Up,this.notifyDidFetch]]),this._showDetailsView=r.DN.get("graph.showDetailsView"),this.disposables.push(r.DN.onDidChange(this.onConfigurationChanged,this),(0,K.IH)(e.onReady)((()=>queueMicrotask((()=>this.updateStatusBar())))),(0,a.ve)((e=>{e!==s.zf.Enabled&&e!==s.zf.PlusEnabled||this.updateStatusBar()})),{dispose:()=>this._statusBarItem?.dispose()},(0,ke.xR)(s.Gh.ShowInCommitGraph,(async e=>{let t;e instanceof A._j?this.repository=e:(this.repository=this.container.git.getRepository(e.ref.repoPath),t=e.ref.ref,x.pk.isSha(t)||(t=await this.container.git.resolveReference(e.ref.repoPath,t,void 0,{force:!0})),this.setSelectedRows(t));const i="preserveFocus"in e&&(e.preserveFocus??!1);if(null==this._panel)this.show({preserveFocus:i});else if(t){if(this._panel.reveal(this._panel.viewColumn??n.ViewColumn.Active,i??!1),this._graph?.ids.has(t))return void this.notifyDidChangeSelection();this.setSelectedRows(t),this.onGetMoreRows({id:t},!0)}})))}get onDidChangeSelection(){return this._onDidChangeSelection.event}get repository(){return this._repository}set repository(e){this._repository!==e?(this._repository=e,this.resetRepositoryState(),this.ensureRepositorySubscriptions(!0),this.isReady&&this.updateState()):this.ensureRepositorySubscriptions()}get selection(){return this._selection}get activeSelection(){return this._selection?.[0]}onWindowFocusChanged(e){this.isWindowFocused=e,this.notifyDidChangeWindowFocus()}get options(){return{retainContextWhenHidden:!0,enableFindWidget:!1,enableCommandUris:!0,enableScripts:!0}}async show(e,...t){if(this._firstSelection=!0,await Br()){if(this.container.git.repositoryCount>1){const[e]=Ne(s.Gh.ShowGraphPage,void 0,...t),i=Array.isArray(e)?e[0]:e;"scm"===i.type&&null!=i.scm.rootUri?this.repository=this.container.git.getRepository(i.scm.rootUri):"viewItem"===i.type&&i.node instanceof De.vb&&(this.repository=i.node.repo),null!=this.repository&&this.isReady&&this.updateState()}return super.show({column:n.ViewColumn.Active,...e},...t)}}refresh(e){return this.resetRepositoryState(),e&&this._pendingIpcNotifications.clear(),super.refresh(e)}async includeBootstrap(){return this.getState(!0)}registerCommands(){return[(0,ke.xR)(s.Gh.RefreshGraph,(()=>this.refresh(!0))),(0,ke.xR)("gitlens.graph.push",this.push,this),(0,ke.xR)("gitlens.graph.pull",this.pull,this),(0,ke.xR)("gitlens.graph.fetch",this.fetch,this),(0,ke.xR)("gitlens.graph.switchToAnotherBranch",this.switchToAnother,this),(0,ke.xR)("gitlens.graph.createBranch",this.createBranch,this),(0,ke.xR)("gitlens.graph.deleteBranch",this.deleteBranch,this),(0,ke.xR)("gitlens.graph.copyRemoteBranchUrl",(e=>this.openBranchOnRemote(e,!0)),this),(0,ke.xR)("gitlens.graph.openBranchOnRemote",this.openBranchOnRemote,this),(0,ke.xR)("gitlens.graph.mergeBranchInto",this.mergeBranchInto,this),(0,ke.xR)("gitlens.graph.rebaseOntoBranch",this.rebase,this),(0,ke.xR)("gitlens.graph.rebaseOntoUpstream",this.rebaseToRemote,this),(0,ke.xR)("gitlens.graph.renameBranch",this.renameBranch,this),(0,ke.xR)("gitlens.graph.switchToBranch",this.switchTo,this),(0,ke.xR)("gitlens.graph.hideLocalBranch",this.hideRef,this),(0,ke.xR)("gitlens.graph.hideRemoteBranch",this.hideRef,this),(0,ke.xR)("gitlens.graph.hideRemote",(e=>this.hideRef(e,{remote:!0})),this),(0,ke.xR)("gitlens.graph.hideRefGroup",(e=>this.hideRef(e,{group:!0})),this),(0,ke.xR)("gitlens.graph.hideTag",this.hideRef,this),(0,ke.xR)("gitlens.graph.cherryPick",this.cherryPick,this),(0,ke.xR)("gitlens.graph.copyRemoteCommitUrl",(e=>this.openCommitOnRemote(e,!0)),this),(0,ke.xR)("gitlens.graph.showInDetailsView",this.openInDetailsView,this),(0,ke.xR)("gitlens.graph.openCommitOnRemote",this.openCommitOnRemote,this),(0,ke.xR)("gitlens.graph.openSCM",this.openSCM,this),(0,ke.xR)("gitlens.graph.rebaseOntoCommit",this.rebase,this),(0,ke.xR)("gitlens.graph.resetCommit",this.resetCommit,this),(0,ke.xR)("gitlens.graph.resetToCommit",this.resetToCommit,this),(0,ke.xR)("gitlens.graph.revert",this.revertCommit,this),(0,ke.xR)("gitlens.graph.switchToCommit",this.switchTo,this),(0,ke.xR)("gitlens.graph.undoCommit",this.undoCommit,this),(0,ke.xR)("gitlens.graph.saveStash",this.saveStash,this),(0,ke.xR)("gitlens.graph.applyStash",this.applyStash,this),(0,ke.xR)("gitlens.graph.deleteStash",this.deleteStash,this),(0,ke.xR)("gitlens.graph.createTag",this.createTag,this),(0,ke.xR)("gitlens.graph.deleteTag",this.deleteTag,this),(0,ke.xR)("gitlens.graph.switchToTag",this.switchTo,this),(0,ke.xR)("gitlens.graph.createWorktree",this.createWorktree,this),(0,ke.xR)("gitlens.graph.createPullRequest",this.createPullRequest,this),(0,ke.xR)("gitlens.graph.openPullRequestOnRemote",this.openPullRequestOnRemote,this),(0,ke.xR)("gitlens.graph.compareWithUpstream",this.compareWithUpstream,this),(0,ke.xR)("gitlens.graph.compareWithHead",this.compareHeadWith,this),(0,ke.xR)("gitlens.graph.compareWithWorking",this.compareWorkingWith,this),(0,ke.xR)("gitlens.graph.compareAncestryWithWorking",this.compareAncestryWithWorking,this),(0,ke.xR)("gitlens.graph.copy",this.copy,this),(0,ke.xR)("gitlens.graph.copyMessage",this.copyMessage,this),(0,ke.xR)("gitlens.graph.copySha",this.copySha,this),(0,ke.xR)("gitlens.graph.addAuthor",this.addAuthor,this),(0,ke.xR)("gitlens.graph.columnAuthorOn",(()=>this.toggleColumn("author",!0))),(0,ke.xR)("gitlens.graph.columnAuthorOff",(()=>this.toggleColumn("author",!1))),(0,ke.xR)("gitlens.graph.columnDateTimeOn",(()=>this.toggleColumn("datetime",!0))),(0,ke.xR)("gitlens.graph.columnDateTimeOff",(()=>this.toggleColumn("datetime",!1))),(0,ke.xR)("gitlens.graph.columnShaOn",(()=>this.toggleColumn("sha",!0))),(0,ke.xR)("gitlens.graph.columnShaOff",(()=>this.toggleColumn("sha",!1))),(0,ke.xR)("gitlens.graph.columnChangesOn",(()=>this.toggleColumn("changes",!0))),(0,ke.xR)("gitlens.graph.columnChangesOff",(()=>this.toggleColumn("changes",!1))),(0,ke.xR)("gitlens.graph.copyDeepLinkToBranch",this.copyDeepLinkToBranch,this),(0,ke.xR)("gitlens.graph.copyDeepLinkToCommit",this.copyDeepLinkToCommit,this),(0,ke.xR)("gitlens.graph.copyDeepLinkToRepo",this.copyDeepLinkToRepo,this),(0,ke.xR)("gitlens.graph.copyDeepLinkToTag",this.copyDeepLinkToTag,this)]}onInitializing(){return this._theme=n.window.activeColorTheme,this.ensureRepositorySubscriptions(),[this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepositories((()=>{this.refresh(!0)})),n.window.onDidChangeActiveColorTheme(this.onThemeChanged,this),{dispose:()=>{null!=this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0)}}]}onReady(){this.sendPendingIpcNotifications()}onMessageReceived(e){switch(e.method){case lp.method:Wd(lp,e,(()=>this.onChooseRepository()));break;case cp.method:Wd(cp,e,(e=>this.dimMergeCommits(e)));break;case hp.method:Wd(hp,e,(e=>this.dismissBanner(e)));break;case up.method:Wd(up,e,(e=>this.onDoubleClick(e)));break;case dp.method:Wd(dp,e,(t=>this.onEnsureRow(t,e.completionId)));break;case pp.method:Wd(pp,e,(e=>this.onGetMissingAvatars(e)));break;case mp.method:Wd(mp,e,(e=>this.onGetMissingRefMetadata(e)));break;case gp.method:Wd(gp,e,(e=>this.onGetMoreRows(e)));break;case fp.method:Wd(fp,e,(t=>this.onSearch(t,e.completionId)));break;case wp.method:Wd(wp,e,(e=>this.onSearchOpenInView(e)));break;case _p.method:Wd(_p,e,(e=>this.onColumnsChanged(e)));break;case bp.method:Wd(bp,e,(e=>this.updateGraphConfig(e)));break;case vp.method:Wd(vp,e,(e=>this.onRefsVisibilityChanged(e)));break;case Sp.method:Wd(Sp,e,this.onSelectionChanged.bind(this));break;case yp.method:Wd(yp,e,(e=>this.updateExcludedType(this._graph,e)));break;case Cp.method:Wd(Cp,e,(e=>this.updateIncludeOnlyRefs(this._graph,e.refs)))}}updateGraphConfig(e){const t=this.getComponentConfig();let i;for(i in e.changes)if(t[i]!==e.changes[i]&&"minimap"===i)r.DN.updateEffective("graph.experimental.minimap.enabled",e.changes[i])}onFocusChanged(e){e&&null!=this.activeSelection&&this.container.commitDetailsView.visible?this.showActiveSelectionDetails():this._showActiveSelectionDetailsDebounced?.cancel()}showActiveSelectionDetails(){null==this._showActiveSelectionDetailsDebounced&&(this._showActiveSelectionDetailsDebounced=(0,K.Ds)(this.showActiveSelectionDetailsCore.bind(this),250)),this._showActiveSelectionDetailsDebounced()}showActiveSelectionDetailsCore(){const{activeSelection:e}=this;null!=e&&this.container.events.fire("commit:selected",{commit:e,pin:!1,preserveFocus:!0,preserveVisibility:!1===this._showDetailsView},{source:this.id})}onVisibilityChanged(e){if(e||this._showActiveSelectionDetailsDebounced?.cancel(),e&&null!=this.repository&&this.repository.etag!==this._etagRepository)this.updateState(!0);else if(e){this.isReady&&this.sendPendingIpcNotifications();const{activeSelection:e}=this;if(null==e)return;this.showActiveSelectionDetails()}}onConfigurationChanged(e){r.DN.changed(e,"graph.showDetailsView")&&(this._showDetailsView=r.DN.get("graph.showDetailsView")),(r.DN.changed(e,"graph.statusBar.enabled")||r.DN.changed(e,"plusFeatures.enabled"))&&this.updateStatusBar(),null!=this._panel&&(r.DN.changed(e,"graph.commitOrdering")?this.updateState():(r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"advanced.abbreviatedShaLength")||r.DN.changed(e,"graph.avatars")||r.DN.changed(e,"graph.dateFormat")||r.DN.changed(e,"graph.dateStyle")||r.DN.changed(e,"graph.dimMergeCommits")||r.DN.changed(e,"graph.highlightRowsOnRefHover")||r.DN.changed(e,"graph.scrollRowPadding")||r.DN.changed(e,"graph.scrollMarkers.enabled")||r.DN.changed(e,"graph.scrollMarkers.additionalTypes")||r.DN.changed(e,"graph.showGhostRefsOnRowHover")||r.DN.changed(e,"graph.pullRequests.enabled")||r.DN.changed(e,"graph.showRemoteNames")||r.DN.changed(e,"graph.showUpstreamStatus")||r.DN.changed(e,"graph.experimental.minimap.enabled")||r.DN.changed(e,"graph.experimental.minimap.additionalTypes"))&&(this.notifyDidChangeConfiguration(),r.DN.changed(e,"graph.experimental.minimap.enabled")&&r.DN.get("graph.experimental.minimap.enabled")&&!this._graph?.includes?.stats&&this.updateState()))}onRepositoryChanged(e){e.changed(A.I6.Config,A.I6.Head,A.I6.Heads,A.I6.Remotes,A.I6.Stash,A.I6.Status,A.I6.Tags,A.I6.Unknown,A.du.Any)?(e.changed(A.I6.Head,A.du.Any)&&this.setSelectedRows(void 0),this.updateState(!e.changed(A.I6.Unknown,A.du.Exclusive))):this._etagRepository=e.repository.etag}onRepositoryFileSystemChanged(e){e.repository?.path===this.repository?.path&&this.notifyDidChangeWorkingTree()}onSubscriptionChanged(e){e.etag!==this._etagSubscription&&(this._etagSubscription=e.etag,this.notifyDidChangeSubscription(),this.updateStatusBar())}onThemeChanged(e){null!=this._theme&&((0,J.$o)(e)&&(0,J.$o)(this._theme)||(0,J.GC)(e)&&(0,J.GC)(this._theme))||(this._theme=e,this.updateState())}dimMergeCommits(e){r.DN.updateEffective("graph.dimMergeCommits",e.dim)}dismissBanner(e){"trial"===e.key&&(this.trialBanner=!1);let t=this.container.storage.getWorkspace("graph:banners:dismissed");t=(0,Dd.iC)(t,e.key,!0),this.container.storage.storeWorkspace("graph:banners:dismissed",t)}onColumnsChanged(e){this.updateColumns(e.config)}onRefsVisibilityChanged(e){this.updateExcludedRefs(this._graph,e.refs,e.visible)}onDoubleClick(e){if("ref"===e.type&&e.ref.context){let t=this.getGraphItemContext(e.ref.context);if(qp(t)){if(null!=e.metadata){if(t=this.getGraphItemContext(e.metadata.data.context),"upstream"===e.metadata.type&&Hp(t,"upstreamStatus")){const{ahead:e,behind:i,ref:n}=t.webviewItemValue;if(i>0)return void Tt(n.repoPath,n);if(e>0)return void Ft(n.repoPath,!1,n)}else if("pullRequest"===e.metadata.type&&Hp(t,"pullrequest"))return void this.openPullRequestOnRemote(t);return}const{ref:i}=t.webviewItemValue;return"head"===e.ref.refType&&e.ref.isCurrentHead?It(i.repoPath):It(i.repoPath,i,!!r.DN.isUnset("gitCommands.skipConfirmations")||void 0)}}else if("row"===e.type&&e.row){const t=this.getRevisionReference(this.repository?.path,e.row.id,e.row.type);null!=t&&this.container.events.fire("commit:selected",{commit:t,preserveFocus:e.preserveFocus,preserveVisibility:!1},{source:this.id})}return Promise.resolve()}async onEnsureRow(e,t){if(null==this._graph)return;let i;this._graph.skippedIds?.has(e.id)||(this._graph.ids.has(e.id)?i=e.id:(await this.updateGraphWithMoreRows(this._graph,e.id,this._search),this.notifyDidChangeRows(),this._graph.ids.has(e.id)&&(i=e.id))),this.notify(Ep,{id:i},t)}async onGetMissingAvatars(e){if(null==this._graph)return;const t=this._graph.repoPath;async function i(e,i){const n=await(0,b.oP)(e,{ref:i,repoPath:t});this._graph.avatars.set(e,n.toString(!0))}const n=[];for(const[t,o]of Object.entries(e.emails))this._graph.avatars.has(t)||n.push(i.call(this,t,o));n.length&&(await Promise.allSettled(n),this.updateAvatars())}async onGetMissingRefMetadata(e){if(null==this._graph||null===this._refsMetadata||!(0,a.fw)(s.zf.HasConnectedRemotes))return;const t=this._graph.repoPath;async function i(e,i){null==this._refsMetadata&&(this._refsMetadata=new Map);const n=(await this.container.git.getBranches(t,{filter:t=>t.id===e}))?.values?.[0],o={...this._refsMetadata.get(e)};if(null!=n)for(const t of i)if(ap.includes(t))if(t!==op.PullRequest){if(t===op.Upstream){const t=n?.upstream;if(null==t||null==t||t.missing){o.upstream=null,this._refsMetadata.set(e,o);continue}const i={name:(0,v.S3)(t.name),owner:(0,v.Lo)(t.name),ahead:n.state.ahead,behind:n.state.behind,context:Q({webviewItem:"gitlens:upstreamStatus",webviewItemValue:{type:"upstreamStatus",ref:x.Wb.fromBranch(n),ahead:n.state.ahead,behind:n.state.behind}})};o.upstream=i,this._refsMetadata.set(e,o)}}else{const t=await(n?.getAssociatedPullRequest());if(null==t){void 0!==o.pullRequest&&0!==o.pullRequest?.length||(o.pullRequest=null),this._refsMetadata.set(e,o);continue}const i={hostingServiceType:t.provider.id,id:Number.parseInt(t.id)||0,title:t.title,author:t.author.name,date:(t.mergedDate??t.closedDate??t.date)?.getTime(),state:t.state,url:t.url,context:Q({webviewItem:"gitlens:pullrequest",webviewItemValue:{type:"pullrequest",id:t.id,url:t.url}})};o.pullRequest=[i],this._refsMetadata.set(e,o)}else o[t]=null,this._refsMetadata.set(e,o);else for(const t of i)o[t]=null,this._refsMetadata.set(e,o)}const n=[];for(const t of Object.keys(e.metadata))n.push(i.call(this,t,e.metadata[t]));n.length&&await Promise.allSettled(n),this.updateRefsMetadata()}async onGetMoreRows(e,t=!1){null!=this._graph?.paging&&(null!=this._graph?.more&&this.repository?.etag===this._etagRepository?(await this.updateGraphWithMoreRows(this._graph,e.id,this._search),this.notifyDidChangeRows(t)):this.updateState(!0))}async onSearch(e,t){if(null==e.search)return void this.resetSearchState();let i=this._search;if(e.more&&null!=i?.more&&i.comparisonKey===U(e.search))return i=await i.more(e.limit??r.DN.get("graph.searchItemLimit")??100),void(null!=i&&(this._search=i,await this.ensureSearchStartsInRange(this._graph,i),this.notify(Np,{results:i.results.size>0?{ids:Object.fromEntries(i.results),count:i.results.size,paging:{hasMore:i.paging?.hasMore??!1}}:void 0},t)));if(null==i||i.comparisonKey!==U(e.search)){if(null==this.repository)return;this.repository.etag!==this._etagRepository&&this.updateState(!0),null!=this._searchCancellation&&(this._searchCancellation.cancel(),this._searchCancellation.dispose());const o=new n.CancellationTokenSource;this._searchCancellation=o;try{i=await this.repository.searchCommits(e.search,{limit:r.DN.get("graph.searchItemLimit")??100,ordering:r.DN.get("graph.commitOrdering"),cancellation:o.token})}catch(e){return this._search=void 0,void this.notify(Np,{results:{error:e instanceof GitSearchError?"Invalid search pattern":"Unexpected error"}},t)}if(o.token.isCancellationRequested)return void(null!=t&&this.notify(Np,{results:void 0},t));this._search=i}else i=this._search;const o=await this.ensureSearchStartsInRange(this._graph,i);let s=!1;null!=o&&(s=!0,this.setSelectedRows(o)),this.notify(Np,{results:0===i.results.size?{count:0}:{ids:Object.fromEntries(i.results),count:i.results.size,paging:{hasMore:i.paging?.hasMore??!1}},selectedRows:s?this._selectedRows:void 0},t)}onSearchOpenInView(e){null!=this.repository&&this.container.searchAndCompareView.search(this.repository.path,e.search,{label:{label:`for ${e.search.query}`},reveal:{select:!0,focus:!1,expand:!0}})}async onChooseRepository(){const e=this.container.git.openRepositories.sort(((e,t)=>(e===this.repository?1:-1)-(t===this.repository?1:-1)||(e.starred?-1:1)-(t.starred?-1:1)||e.index-t.index)),t=await Rs.show(`Switch Repository ${s.NE.Dot} ${this.repository?.name}`,"Choose a repository to switch to",e);null!=t&&(this.repository=t.item)}onSelectionChanged(e){const t=e.selection[0];this.setSelectedRows(t?.id),null==this._fireSelectionChangedDebounced&&(this._fireSelectionChangedDebounced=(0,K.Ds)(this.fireSelectionChanged.bind(this),250)),this._fireSelectionChangedDebounced(t?.id,t?.type)}fireSelectionChanged(e,t){if(null==this.repository)return;const i=this.getRevisionReference(this.repository.path,e,t),n=null!=i?[i]:void 0;this._selection=n,this._onDidChangeSelection.fire({selection:n??[]}),null!=n&&(this.container.events.fire("commit:selected",{commit:n[0],pin:!1,preserveFocus:!0,preserveVisibility:this._firstSelection?!1===this._showDetailsView:"selection"!==this._showDetailsView},{source:this.id}),this._firstSelection=!1)}getRevisionReference(e,t,i){if(null!=e&&null!=t)switch(i){case F.Stash:return x.Wb.create(t,e,{refType:"stash",name:t,number:void 0});case F.Working:return x.Wb.create(x.pk.uncommitted,e,{refType:"revision"});default:return x.Wb.create(t,e,{refType:"revision"})}}updateState(e=!1){this._pendingIpcNotifications.clear(),e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,K.Ds)(this.notifyDidChangeState.bind(this),250)),this._notifyDidChangeStateDebounced())}async notifyDidChangeWindowFocus(){return this.isReady&&this.visible?this.notify(Fp,{focused:this.isWindowFocused}):(this.addPendingIpcNotification(Fp),!1)}updateAvatars(e=!1){e?this.notifyDidChangeAvatars():(null==this._notifyDidChangeAvatarsDebounced&&(this._notifyDidChangeAvatarsDebounced=(0,K.Ds)(this.notifyDidChangeAvatars.bind(this),100)),this._notifyDidChangeAvatarsDebounced())}async notifyDidChangeAvatars(){if(null==this._graph)return;const e=this._graph;return this.notify(Dp,{avatars:Object.fromEntries(e.avatars)})}updateRefsMetadata(e=!1){e?this.notifyDidChangeRefsMetadata():(null==this._notifyDidChangeRefsMetadataDebounced&&(this._notifyDidChangeRefsMetadataDebounced=(0,K.Ds)(this.notifyDidChangeRefsMetadata.bind(this),100)),this._notifyDidChangeRefsMetadataDebounced())}async notifyDidChangeRefsMetadata(){return this.notify($p,{metadata:null!=this._refsMetadata?Object.fromEntries(this._refsMetadata):this._refsMetadata})}async notifyDidChangeColumns(){if(!this.isReady||!this.visible)return this.addPendingIpcNotification(Tp),!1;const e=this.getColumns(),t=this.getColumnSettings(e);return this.notify(Tp,{columns:t,context:this.getColumnHeaderContext(t)})}async notifyDidChangeRefsVisibility(){return this.isReady&&this.visible?this.notify(xp,{excludeRefs:this.getExcludedRefs(this._graph),excludeTypes:this.getExcludedTypes(this._graph),includeOnlyRefs:this.getIncludeOnlyRefs(this._graph)}):(this.addPendingIpcNotification(xp),!1)}async notifyDidChangeConfiguration(){return this.isReady&&this.visible?this.notify(Pp,{config:this.getComponentConfig()}):(this.addPendingIpcNotification(Pp),!1)}async notifyDidFetch(){if(!this.isReady||!this.visible)return this.addPendingIpcNotification(Up),!1;const e=await this.repository.getLastFetched();return this.notify(Up,{lastFetched:new Date(e)})}async notifyDidChangeRows(e=!1,t){if(null==this._graph)return;const i=this._graph;return this.notify(Op,{rows:i.rows,avatars:Object.fromEntries(i.avatars),refsMetadata:null!=this._refsMetadata?Object.fromEntries(this._refsMetadata):this._refsMetadata,selectedRows:e?this._selectedRows:void 0,paging:{startingCursor:i.paging?.startingCursor,hasMore:i.paging?.hasMore??!1}},t)}async notifyDidChangeWorkingTree(){return this.isReady&&this.visible?this.notify(Ip,{stats:await this.getWorkingTreeStats()??{added:0,deleted:0,modified:0}}):(this.addPendingIpcNotification(Ip),!1)}async notifyDidChangeSelection(){return this.isReady&&this.visible?this.notify(Ap,{selection:this._selectedRows??{}}):(this.addPendingIpcNotification(Ap),!1)}async notifyDidChangeSubscription(){if(!this.isReady||!this.visible)return this.addPendingIpcNotification(Rp),!1;const[e]=await this.getGraphAccess();return this.notify(Rp,{subscription:e.subscription.current,allowed:!1!==e.allowed})}async notifyDidChangeState(){return this.isReady&&this.visible?this.notify(kp,{state:await this.getState()}):(this.addPendingIpcNotification(kp),!1)}async notify(e,t,i){const n={id:this.nextIpcId(),method:e.method,params:t,completionId:i},o=await this.postMessage(n);return o?this._pendingIpcNotifications.clear():this.addPendingIpcNotification(e,n),o}addPendingIpcNotification(e,t){let i;if(e===kp?this._pendingIpcNotifications.clear():e.overwriteable&&this._pendingIpcNotifications.delete(e),null==t){if(i=this._ipcNotificationMap.get(e)?.bind(this),null==i)return}else i=t;this._pendingIpcNotifications.set(e,i)}sendPendingIpcNotifications(){if(0===this._pendingIpcNotifications.size)return;const e=new Map(this._pendingIpcNotifications);this._pendingIpcNotifications.clear();for(const t of e.values())"function"==typeof t?t():this.postMessage(t)}ensureRepositorySubscriptions(e){if(this.ensureLastFetchedSubscription(e),!e&&null!=this._repositoryEventsDisposable)return;null!=this._repositoryEventsDisposable&&(this._repositoryEventsDisposable.dispose(),this._repositoryEventsDisposable=void 0);const t=this.repository;null!=t&&(this._repositoryEventsDisposable=n.Disposable.from(t.onDidChange(this.onRepositoryChanged,this),t.startWatchingFileSystem(),t.onDidChangeFileSystem(this.onRepositoryFileSystemChanged,this),(0,a.ve)((e=>{e===s.zf.HasConnectedRemotes&&(this.resetRefsMetadata(),this.updateRefsMetadata())}))))}async ensureLastFetchedSubscription(e){if(!e&&null!=this._lastFetchedDisposable)return;null!=this._lastFetchedDisposable&&(this._lastFetchedDisposable.dispose(),this._lastFetchedDisposable=void 0);const t=this.repository;if(null==t)return;const i=await t.getLastFetched()??0;let n=A._j.getLastFetchedUpdateInterval(i);0!==i&&n>0&&(this._lastFetchedDisposable=(0,K.DH)((()=>{const e=A._j.getLastFetchedUpdateInterval(i);n!==A._j.getLastFetchedUpdateInterval(i)&&(n=e),this.notifyDidFetch()}),n))}async ensureSearchStartsInRange(e,t){if(0===t.results.size)return;let i;for(const n of t.results.keys()){if(e.ids.has(n))return n;if(!e.skippedIds?.has(n)){i=n;break}}return null!=i?(await this.updateGraphWithMoreRows(e,i),this.notifyDidChangeRows(),e.ids.has(i)?i:void 0):void 0}getColumns(){return this.container.storage.getWorkspace("graph:columns")}getExcludedTypes(e){if(null!=e)return this.getFiltersByRepo(e)?.excludeTypes}getExcludedRefs(e){if(null==e)return;let t;const i=this.container.storage.getWorkspace("graph:hiddenRefs");if(null!=i&&0!==Object.keys(i).length){t=this.container.storage.getWorkspace("graph:filtersByRepo")??{};for(const e in i){const n=jp(e);t[n]=t[n]??{},t[n].excludeRefs=(0,Dd.iC)(t[n].excludeRefs,e,i[e])}this.container.storage.storeWorkspace("graph:filtersByRepo",t),this.container.storage.deleteWorkspace("graph:hiddenRefs")}const n=(t?.[e.repoPath]??this.getFiltersByRepo(e))?.excludeRefs;if(null==n||0===Object.keys(n).length)return;const o=r.DN.get("graph.avatars",void 0,!0),s={};for(const t in n){const i={...n[t]};if("remote"===i.type&&i.owner){const t=e.remotes.get(i.owner);null!=t&&(i.avatarUrl=((o?t.provider?.avatarUri:void 0)??(0,O.dM)(this.container,t,this._panel.webview.asWebviewUri.bind(this)))?.toString(!0))}s[t]=i}return s}getIncludeOnlyRefs(e){if(null==e)return;const t=this.getFiltersByRepo(e),i=t?.includeOnlyRefs;if(null==i||0===Object.keys(i).length)return;const n=!t?.excludeTypes?.remotes,o={};for(const[t,r]of Object.entries(i)){let i;if("HEAD"===r.id){if(i=(0,q.sE)(e.branches.values(),(e=>e.current)),null==i)continue;o[i.id]={...r,id:i.id,name:i.name}}else o[t]=r;if(n&&"head"===r.type&&(i=i??e.branches.get(r.name),null!=i?.upstream&&!i.upstream.missing)){const t=(0,v.Vx)(e.repoPath,!0,i.upstream.name);o[t]={id:t,type:"remote",name:(0,v.S3)(i.upstream.name),owner:(0,v.Lo)(i.upstream.name)}}}return o}getFiltersByRepo(e){if(null==e)return;return this.container.storage.getWorkspace("graph:filtersByRepo")?.[e.repoPath]}getColumnSettings(e){const t={...Bp};if(null!=e)for(const[i,n]of Object.entries(e))t[i]={...Bp[i],...n};return t}getColumnHeaderContext(e){const t=[];for(const[i,n]of Object.entries(e))n.isHidden&&t.push(i);return Q({webviewItem:"gitlens:graph:columns",webviewItemValue:t.join(",")})}getComponentConfig(){return{avatars:r.DN.get("graph.avatars"),dateFormat:r.DN.get("graph.dateFormat")??r.DN.get("defaultDateFormat")??"short+short",dateStyle:r.DN.get("graph.dateStyle")??r.DN.get("defaultDateStyle"),enabledRefMetadataTypes:this.getEnabledRefMetadataTypes(),dimMergeCommits:r.DN.get("graph.dimMergeCommits"),enableMultiSelection:!1,highlightRowsOnRefHover:r.DN.get("graph.highlightRowsOnRefHover"),minimap:r.DN.get("graph.experimental.minimap.enabled"),enabledMinimapMarkerTypes:this.getEnabledGraphMinimapMarkers(),scrollRowPadding:r.DN.get("graph.scrollRowPadding"),enabledScrollMarkerTypes:this.getEnabledGraphScrollMarkers(),showGhostRefsOnRowHover:r.DN.get("graph.showGhostRefsOnRowHover"),showRemoteNamesOnRefs:r.DN.get("graph.showRemoteNames"),idLength:r.DN.get("advanced.abbreviatedShaLength")}}getEnabledGraphScrollMarkers(){if(!r.DN.get("graph.scrollMarkers.enabled"))return[];return[rp.Selection,rp.Highlights,rp.Head,rp.Upstream,...r.DN.get("graph.scrollMarkers.additionalTypes")]}getEnabledGraphMinimapMarkers(){if(!r.DN.get("graph.experimental.minimap.enabled"))return[];return[sp.Selection,sp.Highlights,sp.Head,sp.Upstream,...r.DN.get("graph.experimental.minimap.additionalTypes")]}getEnabledRefMetadataTypes(){const e=[];return r.DN.get("graph.pullRequests.enabled")&&e.push(op.PullRequest),r.DN.get("graph.showUpstreamStatus")&&e.push(op.Upstream),e}async getGraphAccess(){let e=await this.container.git.access(p.Graph,this.repository?.path);this._etagSubscription=this.container.subscription.etag,!1===e.allowed&&null==e.subscription.current.previewTrial&&(await this.container.subscription.startPreviewTrial(!0),e=await this.container.git.access(p.Graph,this.repository?.path));let t=e?.visibility;return null==t&&null!=this.repository&&(t=await this.container.git.visibility(this.repository?.path)),[e,t]}getGraphItemContext(e){const t="string"==typeof e?JSON.parse(e):e;return null==t||"webview"in t||(t.webview=this.id),t}async getWorkingTreeStats(){if(null==this.repository||0===this.container.git.repositoryCount)return;const e=(await this.container.git.getStatusForRepo(this.repository.path))?.getDiffStatus();return{added:e?.added??0,deleted:e?.deleted??0,modified:e?.changed??0,context:Q({webviewItem:"gitlens:wip",webviewItemValue:{type:"commit",ref:this.getRevisionReference(this.repository.path,x.pk.uncommitted,F.Working)}})}}async getState(e){if(0===this.container.git.repositoryCount)return{debugging:this.container.debugging,allowed:!0,repositories:[]};if(null==this.trialBanner){const e=this.container.storage.getWorkspace("graph:banners:dismissed");null==this.trialBanner&&(this.trialBanner=!e?.trial)}if(null==this.repository&&(this.repository=this.container.git.getBestRepositoryOrFirst(),null==this.repository))return{debugging:this.container.debugging,allowed:!0,repositories:[]};this._etagRepository=this.repository?.etag,this.title=`${this.originalTitle}: ${this.repository.formattedName}`;const{defaultItemLimit:t}=r.DN.get("graph"),i=Math.max(t,this._graph?.ids.size??t),n=null==this._selectedId||this._selectedId===x.pk.uncommitted?"HEAD":this._selectedId,o=this.getColumns(),s=this.getColumnSettings(o),a=this.container.git.getCommitsForGraph(this.repository.path,this._panel.webview.asWebviewUri.bind(this._panel.webview),{include:{stats:r.DN.get("graph.experimental.minimap.enabled")||!s.changes.isHidden},limit:i,ref:n}),[l,c]=await Promise.allSettled([this.getGraphAccess(),this.getWorkingTreeStats()]),[h,u]=(0,Y.Sb)(l)??[];let d;e?queueMicrotask((async()=>{const e=await a;this.setGraph(e),this.setSelectedRows(e.id),this.notifyDidChangeRefsVisibility(),this.notifyDidChangeRows(!0)})):(d=await a,this.setGraph(d),this.setSelectedRows(d.id));const p=await this.repository.getLastFetched(),m=await this.repository.getBranch();return{windowFocused:this.isWindowFocused,trialBanner:this.trialBanner,repositories:Gp(this.container.git.openRepositories),selectedRepository:this.repository.path,selectedRepositoryVisibility:u,branchName:m?.name,lastFetched:new Date(p),selectedRows:this._selectedRows,subscription:h?.subscription.current,allowed:!1!==(h?.allowed??!1),avatars:null!=d?Object.fromEntries(d.avatars):void 0,refsMetadata:null===this.resetRefsMetadata()?null:{},loading:e,rows:d?.rows,paging:null!=d?{startingCursor:d.paging?.startingCursor,hasMore:d.paging?.hasMore??!1}:void 0,columns:s,config:this.getComponentConfig(),context:{header:this.getColumnHeaderContext(s)},excludeRefs:null!=d?this.getExcludedRefs(d)??{}:{},excludeTypes:this.getExcludedTypes(d)??{},includeOnlyRefs:null!=d?this.getIncludeOnlyRefs(d)??{}:{},nonce:this.cspNonce,workingTreeStats:(0,Y.Sb)(c)??{added:0,deleted:0,modified:0},debugging:this.container.debugging}}updateColumns(e){let t=this.container.storage.getWorkspace("graph:columns");for(const[i,n]of Object.entries(e))t=(0,Dd.iC)(t,i,n);this.container.storage.storeWorkspace("graph:columns",t),this.notifyDidChangeColumns()}updateExcludedRefs(e,t,i){if(null==t||0===t.length)return;let n=this.getFiltersByRepo(e)?.excludeRefs??{};for(const e of t)n=(0,Dd.iC)(n,e.id,i?void 0:{id:e.id,type:e.type,name:e.name,owner:e.owner});this.updateFiltersByRepo(e,{excludeRefs:n}),this.notifyDidChangeRefsVisibility()}updateFiltersByRepo(e,t){if(null==e)throw new Error("Cannot save repository filters since Graph is undefined");const i=this.container.storage.getWorkspace("graph:filtersByRepo");return this.container.storage.storeWorkspace("graph:filtersByRepo",(0,Dd.iC)(i,e.repoPath,{...i?.[e.repoPath],...t}))}updateIncludeOnlyRefs(e,t){let i;if(null==t||0===t.length){if(null==this.getFiltersByRepo(e)?.includeOnlyRefs)return;i=void 0}else{i={};for(const e of t)i[e.id]={id:e.id,type:e.type,name:e.name,owner:e.owner}}this.updateFiltersByRepo(e,{includeOnlyRefs:i}),this.notifyDidChangeRefsVisibility()}updateExcludedType(e,{key:t,value:i}){let n=this.getFiltersByRepo(e)?.excludeTypes;(null!=n&&0!==Object.keys(n).length||!1!==i)&&(n=(0,Dd.iC)(n,t,i),this.updateFiltersByRepo(e,{excludeTypes:n}),this.notifyDidChangeRefsVisibility())}resetRefsMetadata(){return this._refsMetadata=(0,a.fw)(s.zf.HasConnectedRemotes)?void 0:null,this._refsMetadata}resetRepositoryState(){this.setGraph(void 0),this.setSelectedRows(void 0)}resetSearchState(){this._search=void 0,this._searchCancellation?.dispose(),this._searchCancellation=void 0}setSelectedRows(e){this._selectedId!==e&&(this._selectedId=e,e===x.pk.uncommitted&&(e=F.Working),this._selectedRows=null!=e?{[e]:!0}:void 0)}setGraph(e){this._graph=e,null==e&&(this.resetRefsMetadata(),this.resetSearchState())}async updateGraphWithMoreRows(e,t,i){const{defaultItemLimit:n,pageItemLimit:o}=r.DN.get("graph"),s=await(e.more?.(o??n,t));if(null!=s&&(this.setGraph(s),i?.paging?.hasMore)){const e=(0,q.Z$)(i.results)?.[0];null!=e&&(s.ids.has(e)||s.skippedIds?.has(e))&&queueMicrotask((()=>{this.onSearch({search:i.query,more:!0})}))}}updateStatusBar(){r.DN.get("graph.statusBar.enabled")&&(0,a.fw)(s.zf.Enabled)&&Wr()?(null==this._statusBarItem&&(this._statusBarItem=n.window.createStatusBarItem("gitlens.graph",n.StatusBarAlignment.Left,9997),this._statusBarItem.name="GitLens Commit Graph",this._statusBarItem.command=s.Gh.ShowGraphPage,this._statusBarItem.text="$(gitlens-graph)",this._statusBarItem.tooltip=new n.MarkdownString("Visualize commits on the Commit Graph ✨"),this._statusBarItem.accessibilityInformation={label:"Show the GitLens Commit Graph"}),this._statusBarItem.show()):(this._statusBarItem?.dispose(),this._statusBarItem=void 0)}fetch(e){const t=this.getGraphItemRef(e,"branch");Dt(this.repository,t)}pull(e){const t=this.getGraphItemRef(e,"branch");Tt(this.repository,t)}push(e){const t=this.getGraphItemRef(e);Ft(this.repository,void 0,t)}createBranch(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():it(t.repoPath,t)}deleteBranch(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue;return nt(t.repoPath,t)}return Promise.resolve()}mergeBranchInto(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue;return $t(t.repoPath,t)}return Promise.resolve()}openBranchOnRemote(e,t){if(qp(e,"branch")){const{ref:i}=e.webviewItemValue;return(0,ke.P0)(s.Gh.OpenOnRemote,{repoPath:i.repoPath,resource:{type:Jt.J.Branch,branch:i.name},remote:i.upstream?.name,clipboard:t})}return Promise.resolve()}rebase(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():xt(t.repoPath,t)}rebaseToRemote(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue;if(null!=t.upstream)return xt(t.repoPath,x.Wb.create(t.upstream.name,t.repoPath,{refType:"branch",name:t.upstream.name,remote:!0}))}return Promise.resolve()}renameBranch(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue;return ot(t.repoPath,t)}return Promise.resolve()}cherryPick(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():Rt(t.repoPath,t)}async copy(e){const t=this.getGraphItemRef(e);if(null!=t)await n.env.clipboard.writeText("revision"===t.refType&&t.message?`${t.name}: ${t.message}`:t.name);else if(Hp(e,"contributor")){const{name:t,email:i}=e.webviewItemValue;await n.env.clipboard.writeText(`${t}${i?` <${i}>`:""}`)}else if(Hp(e,"pullrequest")){const{url:t}=e.webviewItemValue;await n.env.clipboard.writeText(t)}return Promise.resolve()}copyMessage(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():(0,ke.P0)(s.Gh.CopyMessageToClipboard,{repoPath:t.repoPath,sha:t.ref,message:"message"in t?t.message:void 0})}async copySha(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();let i=t.ref;return x.pk.isSha(i)||(i=await this.container.git.resolveReference(t.repoPath,i,void 0,{force:!0})),(0,ke.P0)(s.Gh.CopyShaToClipboard,{sha:i})}openInDetailsView(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():(0,ke.P0)(s.Gh.ShowInDetailsView,{repoPath:t.repoPath,refs:[t.ref]})}openSCM(e){return null==this.getGraphItemRef(e,"revision")?Promise.resolve():(0,ke.dO)(s.nA.ShowSCM)}openCommitOnRemote(e,t){const i=this.getGraphItemRef(e,"revision");return null==i?Promise.resolve():(0,ke.P0)(s.Gh.OpenOnRemote,{repoPath:i.repoPath,resource:{type:Jt.J.Commit,sha:i.ref},clipboard:t})}copyDeepLinkToBranch(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue;return(0,ke.P0)(s.Gh.CopyDeepLinkToBranch,{refOrRepoPath:t})}return Promise.resolve()}copyDeepLinkToCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():(0,ke.P0)(s.Gh.CopyDeepLinkToCommit,{refOrRepoPath:t})}copyDeepLinkToRepo(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue;return t.remote?(0,ke.P0)(s.Gh.CopyDeepLinkToRepo,{refOrRepoPath:t.repoPath,remote:(0,v.Lo)(t.name)}):Promise.resolve()}return Promise.resolve()}copyDeepLinkToTag(e){if(qp(e,"tag")){const{ref:t}=e.webviewItemValue;return(0,ke.P0)(s.Gh.CopyDeepLinkToTag,{refOrRepoPath:t})}return Promise.resolve()}resetCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():Ot(t.repoPath,x.Wb.create(`${t.ref}^`,t.repoPath,{refType:"revision",name:`${t.name}^`,message:t.message}))}resetToCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():Ot(t.repoPath,t)}revertCommit(e){const t=this.getGraphItemRef(e,"revision");return null==t?Promise.resolve():At(t.repoPath,t)}switchTo(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():It(t.repoPath,t)}hideRef(e,t){let i;if(t?.group&&function(e){return null!=e&&(function(e){return null!=e&&(function(e){return null!=e&&"webview"in e&&"webviewItemGroup"in e}(e)&&"gitlens.graph"===e.webview)}(e)&&"object"==typeof e.webviewItemGroupValue&&"refGroup"===e.webviewItemGroupValue.type)}(e))({refs:i}=e.webviewItemGroupValue);else if(!t?.group&&qp(e)){const{ref:t}=e.webviewItemValue;null!=t.id&&(i=[t])}return null!=i&&this.updateExcludedRefs(this._graph,i.map((e=>{const i="branch"===e.refType&&e.remote;return{id:e.id,name:i?t?.remote?"*":(0,v.S3)(e.name):e.name,owner:i?(0,v.Lo)(e.name):void 0,type:"branch"===e.refType?e.remote?"remote":"head":"tag"}})),!1),Promise.resolve()}switchToAnother(e){const t=this.getGraphItemRef(e);return It(null==t?this.repository?.path:t.repoPath)}async undoCommit(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();const i=await this.container.git.getOrOpenScmRepository(t.repoPath);(await(i?.getCommit("HEAD")))?.hash===t.ref?(0,ke.Zv)(s.S8.UndoCommit,t.repoPath):n.window.showWarningMessage(`Commit ${x.Wb.toString(t,{capitalize:!0,icon:!1})} cannot be undone, because it is no longer the most recent commit.`)}saveStash(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():Lt(t.repoPath)}applyStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():Nt(t.repoPath,t)}deleteStash(e){const t=this.getGraphItemRef(e,"stash");return null==t?Promise.resolve():Ut(t.repoPath,t)}async createTag(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():Bt(t.repoPath,t)}deleteTag(e){if(qp(e,"tag")){const{ref:t}=e.webviewItemValue;return Gt(t.repoPath,t)}return Promise.resolve()}async createWorktree(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():qt(t.repoPath,void 0,t)}async createPullRequest(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue,i=this.container.git.getRepository(t.repoPath),n=await(i?.getBranch(t.name)),o=await(n?.getRemote());return(0,ke.SI)("createPullRequest",{repoPath:t.repoPath,remote:null!=o?{name:o.name,provider:null!=o.provider?{id:o.provider.id,name:o.provider.name,domain:o.provider.domain}:void 0,url:o.url}:void 0,branch:{name:t.name,upstream:t.upstream?.name,isRemote:t.remote}})}return Promise.resolve()}openPullRequestOnRemote(e,t){if(Vp(e)&&"object"==typeof e.webviewItemValue&&"pullrequest"===e.webviewItemValue.type){const{url:i}=e.webviewItemValue;return(0,ke.P0)(s.Gh.OpenPullRequestOnRemote,{pr:{url:i},clipboard:t})}return Promise.resolve()}async compareAncestryWithWorking(e){const t=this.getGraphItemRef(e);if(null==t)return Promise.resolve();const i=await this.container.git.getBranch(t.repoPath);if(null==i)return;const n=await this.container.git.getMergeBase(t.repoPath,i.ref,t.ref);return null!=n?this.container.searchAndCompareView.compare(t.repoPath,{ref:n,label:`ancestry with ${t.ref} (${x.pk.shorten(n)})`},""):void 0}compareHeadWith(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():this.container.searchAndCompareView.compare(t.repoPath,"HEAD",t.ref)}compareWithUpstream(e){if(qp(e,"branch")){const{ref:t}=e.webviewItemValue;if(null!=t.upstream)return this.container.searchAndCompareView.compare(t.repoPath,t.ref,t.upstream.name)}return Promise.resolve()}compareWorkingWith(e){const t=this.getGraphItemRef(e);return null==t?Promise.resolve():this.container.searchAndCompareView.compare(t.repoPath,"",t.ref)}addAuthor(e){if(Hp(e,"contributor")){const{repoPath:t,name:i,email:n,current:o}=e.webviewItemValue;return Ct(t,new $(t,i,n,0,void 0,o))}return Promise.resolve()}async toggleColumn(e,t){let i=this.container.storage.getWorkspace("graph:columns"),n=i?.[e];null!=n?n.isHidden=!t:n={isHidden:!t},i=(0,Dd.iC)(i,e,n),await this.container.storage.storeWorkspace("graph:columns",i),this.notifyDidChangeColumns(),"changes"!==e||n.isHidden||this._graph?.includes?.stats||this.updateState()}getGraphItemRef(e,t){if(null==e){const e=this.activeSelection;return null==e||null!=t&&t!==e.refType?void 0:e}switch(t){case"branch":return qp(e,"branch")||Hp(e,"upstreamStatus")?e.webviewItemValue.ref:void 0;case"revision":return qp(e,"revision")?e.webviewItemValue.ref:void 0;case"stash":return qp(e,"stash")?e.webviewItemValue.ref:void 0;case"tag":return qp(e,"tag")?e.webviewItemValue.ref:void 0;default:return qp(e)?e.webviewItemValue.ref:void 0}}}function Gp(e){return 0===e.length?[]:e.map((e=>({formattedName:e.formattedName,id:e.id,name:e.name,path:e.path,isVirtual:e.provider.virtual})))}function Vp(e){return null!=e&&(function(e){return null!=e&&"webview"in e&&"webviewItem"in e}(e)&&"gitlens.graph"===e.webview)}function Hp(e,t){return null!=e&&(Vp(e)&&"object"==typeof e.webviewItemValue&&e.webviewItemValue.type===t)}function qp(e,t){return null!=e&&(Vp(e)&&"object"==typeof e.webviewItemValue&&"ref"in e.webviewItemValue&&(null==t||e.webviewItemValue.ref.refType===t))}function jp(e){return e.split("|",1)[0]}Wp([(0,H.fF)({args:{0:e=>e.toString()}})],GraphWebview.prototype,"onRepositoryChanged",1),Wp([(0,H.fF)({args:!1})],GraphWebview.prototype,"onRepositoryFileSystemChanged",1),Wp([(0,H.fF)({args:!1})],GraphWebview.prototype,"onSubscriptionChanged",1),Wp([(0,H.fF)()],GraphWebview.prototype,"onEnsureRow",1),Wp([(0,V.H)(),(0,H.fF)()],GraphWebview.prototype,"onGetMoreRows",1),Wp([(0,H.fF)()],GraphWebview.prototype,"onSearch",1),Wp([(0,H.fF)()],GraphWebview.prototype,"updateState",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeWindowFocus",1),Wp([(0,H.fF)()],GraphWebview.prototype,"updateAvatars",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeAvatars",1),Wp([(0,H.fF)()],GraphWebview.prototype,"updateRefsMetadata",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeRefsMetadata",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeColumns",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeRefsVisibility",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeConfiguration",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidFetch",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeRows",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeWorkingTree",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeSelection",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeSubscription",1),Wp([(0,H.fF)()],GraphWebview.prototype,"notifyDidChangeState",1),Wp([(0,H.fF)()],GraphWebview.prototype,"fetch",1),Wp([(0,H.fF)()],GraphWebview.prototype,"pull",1),Wp([(0,H.fF)()],GraphWebview.prototype,"push",1),Wp([(0,H.fF)()],GraphWebview.prototype,"createBranch",1),Wp([(0,H.fF)()],GraphWebview.prototype,"deleteBranch",1),Wp([(0,H.fF)()],GraphWebview.prototype,"mergeBranchInto",1),Wp([(0,H.fF)()],GraphWebview.prototype,"openBranchOnRemote",1),Wp([(0,H.fF)()],GraphWebview.prototype,"rebase",1),Wp([(0,H.fF)()],GraphWebview.prototype,"rebaseToRemote",1),Wp([(0,H.fF)()],GraphWebview.prototype,"renameBranch",1),Wp([(0,H.fF)()],GraphWebview.prototype,"cherryPick",1),Wp([(0,H.fF)()],GraphWebview.prototype,"copy",1),Wp([(0,H.fF)()],GraphWebview.prototype,"copyMessage",1),Wp([(0,H.fF)()],GraphWebview.prototype,"copySha",1),Wp([(0,H.fF)()],GraphWebview.prototype,"openInDetailsView",1),Wp([(0,H.fF)()],GraphWebview.prototype,"openSCM",1),Wp([(0,H.fF)()],GraphWebview.prototype,"openCommitOnRemote",1),Wp([(0,H.fF)()],GraphWebview.prototype,"copyDeepLinkToBranch",1),Wp([(0,H.fF)()],GraphWebview.prototype,"copyDeepLinkToCommit",1),Wp([(0,H.fF)()],GraphWebview.prototype,"copyDeepLinkToRepo",1),Wp([(0,H.fF)()],GraphWebview.prototype,"copyDeepLinkToTag",1),Wp([(0,H.fF)()],GraphWebview.prototype,"resetCommit",1),Wp([(0,H.fF)()],GraphWebview.prototype,"resetToCommit",1),Wp([(0,H.fF)()],GraphWebview.prototype,"revertCommit",1),Wp([(0,H.fF)()],GraphWebview.prototype,"switchTo",1),Wp([(0,H.fF)()],GraphWebview.prototype,"hideRef",1),Wp([(0,H.fF)()],GraphWebview.prototype,"switchToAnother",1),Wp([(0,H.fF)()],GraphWebview.prototype,"undoCommit",1),Wp([(0,H.fF)()],GraphWebview.prototype,"saveStash",1),Wp([(0,H.fF)()],GraphWebview.prototype,"applyStash",1),Wp([(0,H.fF)()],GraphWebview.prototype,"deleteStash",1),Wp([(0,H.fF)()],GraphWebview.prototype,"createTag",1),Wp([(0,H.fF)()],GraphWebview.prototype,"deleteTag",1),Wp([(0,H.fF)()],GraphWebview.prototype,"createWorktree",1),Wp([(0,H.fF)()],GraphWebview.prototype,"createPullRequest",1),Wp([(0,H.fF)()],GraphWebview.prototype,"openPullRequestOnRemote",1),Wp([(0,H.fF)()],GraphWebview.prototype,"compareAncestryWithWorking",1),Wp([(0,H.fF)()],GraphWebview.prototype,"compareHeadWith",1),Wp([(0,H.fF)()],GraphWebview.prototype,"compareWithUpstream",1),Wp([(0,H.fF)()],GraphWebview.prototype,"compareWorkingWith",1),Wp([(0,H.fF)()],GraphWebview.prototype,"addAuthor",1),Wp([(0,H.fF)()],GraphWebview.prototype,"toggleColumn",1);const Yp=new IpcNotificationType("timeline/didChange"),Qp=new IpcCommandType("timeline/point/open"),zp=new IpcCommandType("timeline/period/update");var Kp=Object.defineProperty,Jp=Object.getOwnPropertyDescriptor,Xp=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Jp(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Kp(t,i,r),r};const Zp=2**30;let em=0;let tm=class{constructor(e,t,i,o,r,s){this.container=e,this.id=t,this.fileName=i,this.contextKeyPrefix=r,this.trackingFeature=s,this.disposables=[],this.isReady=!1,this._cspNonce=(0,on.Vu)(),this._title=o,this.disposables.push(n.window.registerWebviewViewProvider(t,this))}dispose(){this.disposables.forEach((e=>{e.dispose()})),this._disposableView?.dispose()}get description(){return this._view?.description}set description(e){null!=this._view&&(this._view.description=e)}get title(){return this._view?.title??this._title}set title(e){this._title=e,null!=this._view&&(this._view.title=e)}get visible(){return this._view?.visible??!1}async show(e){const t=(0,G.UH)();try{await(0,ke.P0)(`${this.id}.focus`,e)}catch(e){B.Yd.error(e,t)}}get cspNonce(){return this._cspNonce}async resolveWebviewView(e,t,i){this._view=e,e.webview.options={enableCommandUris:!0,enableScripts:!0},e.title=this._title,this._disposableView=n.Disposable.from(this._view.onDidDispose(this.onViewDisposed,this),this._view.onDidChangeVisibility((()=>this.onViewVisibilityChanged(this.visible)),this),this._view.webview.onDidReceiveMessage(this.onMessageReceivedCore,this),n.window.onDidChangeWindowState(this.onWindowStateChanged,this),...this.onInitializing?.()??[],...this.registerCommands?.()??[]),await this.refresh(),this.onVisibilityChanged?.(!0)}async refresh(e){if(null==this._view)return;this.isReady=!1;const t=await this.getHtml(this._view.webview);e&&(this._view.webview.html=""),this._view.webview.html!==t?this._view.webview.html=t:this.isReady=!0}resetContextKeys(){(0,a.v)(`${this.contextKeyPrefix}:inputFocus`,!1),(0,a.v)(`${this.contextKeyPrefix}:focus`,!1)}setContextKeys(e,t){(0,a.v)(`${this.contextKeyPrefix}:focus`,e),(0,a.v)(`${this.contextKeyPrefix}:inputFocus`,t)}onViewDisposed(){this.resetContextKeys(),this.onFocusChanged?.(!1),this.onVisibilityChanged?.(!1),this.isReady=!1,this._disposableView?.dispose(),this._disposableView=void 0,this._view=void 0}onViewFocusChanged(e){this.setContextKeys(e.focused,e.inputFocused),this.onFocusChanged?.(e.focused)}async onViewVisibilityChanged(e){e?(this.container.usage.track(`${this.trackingFeature}:shown`),await this.refresh()):(this.resetContextKeys(),this.onFocusChanged?.(!1)),this.onVisibilityChanged?.(e)}onWindowStateChanged(e){this.visible&&this.onWindowFocusChanged?.(e.focused)}onMessageReceivedCore(e){if(null!=e)switch(e.method){case Bd.method:Wd(Bd,e,(()=>{this.isReady=!0,this.onReady?.()}));break;case Gd.method:Wd(Gd,e,(e=>{this.onViewFocusChanged(e)}));break;case Vd.method:Wd(Vd,e,(e=>{null!=e.args?(0,ke.P0)(e.command,...e.args):(0,ke.P0)(e.command)}));break;default:this.onMessageReceived?.(e)}}getWebRoot(){if(null==this._view)return;const e=n.Uri.joinPath(this.container.context.extensionUri,"dist","webviews");return this._view.webview.asWebviewUri(e).toString()}async getHtml(e){const t=n.Uri.joinPath(this.container.context.extensionUri,"dist","webviews"),i=n.Uri.joinPath(t,this.fileName),o=new TextDecoder("utf8").decode(await n.workspace.fs.readFile(i)),[r,s,a,l]=await Promise.all([this.includeBootstrap?.(),this.includeHead?.(),this.includeBody?.(),this.includeEndOfBody?.()]),c=e.cspSource,h=e.asWebviewUri(this.container.context.extensionUri).toString(),u=e.asWebviewUri(t).toString();return o.replace(/#{(head|body|endOfBody|placement|cspSource|cspNonce|root|webroot)}/g,((e,t)=>{switch(t){case"head":return s??"";case"body":return a??"";case"endOfBody":return`${null!=r?`<script type="text/javascript" nonce="${this.cspNonce}">window.bootstrap=${JSON.stringify(r)};<\/script>`:""}${l??""}`;case"placement":return"view";case"cspSource":return c;case"cspNonce":return this.cspNonce;case"root":return h;case"webroot":return u;default:return""}}))}nextIpcId(){return em===Zp?em=1:em++,`host:${em}`}notify(e,t,i){return this.postMessage({id:this.nextIpcId(),method:e.method,params:t,completionId:i})}postMessage(e){return null!=this._view&&this.isReady?Promise.race([this._view.webview.postMessage(e),new Promise((e=>setTimeout(e,5e3,!1)))]):Promise.resolve(!1)}};Xp([(0,H.cM)()],tm.prototype,"show",1),Xp([(0,H.fF)({args:!1})],tm.prototype,"resolveWebviewView",1),Xp([(0,H.fF)()],tm.prototype,"refresh",1),Xp([(0,H.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],tm.prototype,"onViewFocusChanged",1),Xp([(0,H.fF)()],tm.prototype,"onViewVisibilityChanged",1),Xp([(0,H.fF)({args:{0:e=>null!=e?`${e.id}: method=${e.method}`:"<undefined>"}})],tm.prototype,"onMessageReceivedCore",1),Xp([Md(),(0,H.fF)({args:{0:e=>`{"id":${e.id},"method":${e.method}${e.completionId?`,"completionId":${e.completionId}`:""}}`}})],tm.prototype,"postMessage",1),tm=Xp([(0,H.hJ)(((e,t)=>`${t}(${e.id})`))],tm);var im=Object.defineProperty,nm=Object.getOwnPropertyDescriptor,om=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?nm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&im(t,i,r),r};const rm="3|M";class TimelineWebviewView extends tm{constructor(e){super(e,"gitlens.views.timeline","timeline.html","Visual File History",`${s.zf.WebviewViewPrefix}timeline`,"timelineView"),this._bootstraping=!0,this._notifyDidChangeStateDebounced=void 0,this._context={uri:void 0,period:rm,etagRepositories:0,etagRepository:0,etagSubscription:0}}async show(e){if(await Br())return super.show(e)}onInitializing(){return this._context={uri:void 0,period:rm,etagRepositories:this.container.git.etag,etagRepository:0,etagSubscription:this.container.subscription.etag},this.updatePendingEditor(n.window.activeTextEditor),this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,[this.container.subscription.onDidChange(this.onSubscriptionChanged,this),n.window.onDidChangeActiveTextEditor((0,K.Ds)(this.onActiveEditorChanged,250),this),this.container.events.on("file:selected",(0,K.Ds)(this.onFileSelected,250),this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this)]}async includeBootstrap(){return this._bootstraping=!0,this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.getState(this._context)}registerCommands(){return[(0,ke.xR)(`${this.id}.refresh`,(()=>this.refresh()),this),(0,ke.xR)(`${this.id}.openInTab`,(()=>this.openInTab()),this)]}onVisibilityChanged(e){e&&(this._bootstraping&&(this._bootstraping=!1,null==this._pendingContext||!("uri"in this._pendingContext))||this.updateState())}onMessageReceived(e){switch(e.method){case Qp.method:Wd(Qp,e,(async e=>{if(null==e.data||!e.data.selected||null==this._context.uri)return;const t=this.container.git.getRepository(this._context.uri);if(null==t)return;const i=await t.getCommit(e.data.id);null!=i&&this.container.events.fire("commit:selected",{commit:i,pin:!1,preserveFocus:!1,preserveVisibility:!1},{source:this.id})}));break;case zp.method:Wd(zp,e,(e=>{this.updatePendingContext({period:e.period})&&this.updateState(!0)}))}}onActiveEditorChanged(e){if(null!=e){if(!(0,J.PH)(e))return;this.container.git.isTrackable(e.document.uri)||(e=void 0)}this.updatePendingEditor(e)&&this.updateState()}onFileSelected(e){if(null==e.data)return;let t=e.data.uri;null!=t&&(this.container.git.isTrackable(t)||(t=void 0)),this.updatePendingUri(t)&&this.updateState()}onRepositoriesChanged(e){const t=this.updatePendingUri(this._context.uri);(this.updatePendingContext({etagRepositories:e.etag})||t)&&this.updateState()}onRepositoryChanged(e){e.changed(A.I6.Heads,A.I6.Index,A.du.Any)&&this.updatePendingContext({etagRepository:e.repository.etag})&&this.updateState()}onSubscriptionChanged(e){this.updatePendingContext({etagSubscription:e.etag})&&this.updateState()}async getState(e){const t=r.DN.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",i=r.DN.get("defaultDateShortFormat")??"short",o=e.period??rm;if(null==e.uri){return{emptyMessage:"There are no editors open that can provide file history information",period:o,title:"",dateFormat:t,shortDateFormat:i,access:await this.container.git.access(p.Timeline)}}const s=await _.YY.fromUri(e.uri),a=s.repoPath,l=await this.container.git.access(p.Timeline,a);if(!1===l.allowed){return{dataset:sm().sort(((e,t)=>t.sort-e.sort)),period:o,title:"src/app/index.ts",uri:n.Uri.file("src/app/index.ts").toString(),dateFormat:t,shortDateFormat:i,access:l}}const c=s.relativePath;this.description=s.fileName;const[h,u]=await Promise.all([this.container.git.getCurrentUser(a),this.container.git.getLogForFile(a,s.fsPath,{limit:0,ref:s.sha,since:this.getPeriodDate(o).toISOString()})]);if(null==u)return{dataset:[],emptyMessage:"No commits found for the specified time period",period:o,title:c,sha:s.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:l};let d=[...(0,q.hX)(u.commits.values(),(e=>null==e.file?.stats&&1!==(0,y.By)(e.stats?.changedFiles)))];if(0!==d.length){const t=r.DN.get("visualHistory.queryLimit")??20,i=this.container.git.getRepository(e.uri)?.provider.name;d.length>t&&(n.window.showWarningMessage(`Unable able to show more than the first ${t} commits for the specified time period because of ${i?`${i} `:""}rate limits.`),d=d.slice(0,20)),await Promise.allSettled(d.map((e=>e.ensureFullDetails())))}const m=h?.name?`${h.name} (you)`:"You",g=[];for(const e of u.commits.values()){const t=e.file?.stats??(1===(0,y.By)(e.stats?.changedFiles)?e.stats:void 0);g.push({author:"You"===e.author.name?m:e.author.name,additions:t?.additions,deletions:t?.deletions,commit:e.sha,date:e.date.toISOString(),message:e.message??e.summary,sort:e.date.getTime()})}return g.sort(((e,t)=>t.sort-e.sort)),{dataset:g,period:o,title:c,sha:s.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:l}}getPeriodDate(e){const[t,i]=e.split("|");switch(i){case"D":return(0,C.IH)(new Date,{days:-parseInt(t,10)});case"M":return(0,C.IH)(new Date,{months:-parseInt(t,10)});case"Y":return(0,C.IH)(new Date,{years:-parseInt(t,10)});default:return(0,C.IH)(new Date,{months:-3})}}openInTab(){const e=this._context.uri;null!=e&&n.commands.executeCommand(s.Gh.ShowTimelinePage,e)}updatePendingContext(e){let t=!1;for(const[i,o]of Object.entries(e)){const e=this._context[i];e===o||(e instanceof n.Uri||o instanceof n.Uri)&&e?.toString()===o?.toString()||(null==this._pendingContext&&(this._pendingContext={}),this._pendingContext[i]=o,t=!0)}return t}updatePendingEditor(e){return(null!=e||!(0,J.JM)())&&(!(null!=e&&!(0,J.PH)(e))&&this.updatePendingUri(e?.document.uri))}updatePendingUri(e){let t;if(null!=e){t=this.container.git.getRepository(e)?.etag??0}else t=0;return this.updatePendingContext({uri:e,etagRepository:t})}updateState(e=!1){this.isReady&&this.visible&&(null==this._pendingContext&&this.updatePendingEditor(n.window.activeTextEditor),e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,K.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced()))}async notifyDidChangeState(){if(!this.isReady||!this.visible)return!1;if(this._notifyDidChangeStateDebounced?.cancel(),null==this._pendingContext)return!1;const e={...this._context,...this._pendingContext};return n.window.withProgress({location:{viewId:this.id}},(async()=>{await this.notify(Yp,{state:await this.getState(e)})&&(this._context=e,this._pendingContext=void 0)}))}}function sm(){const e=[],t=["Eric Amodio","Justin Roberts","Ada Lovelace","Grace Hopper"];for(let i=0;i<10;i++){const n=new Date((new Date).getTime()-Math.floor(7776e6*Math.random()));e.push({commit:String(i),author:t[Math.floor(Math.random()*t.length)],date:n.toISOString(),message:"",additions:0===i?2:9===i?50:Math.floor(20*Math.random())+1,deletions:0===i?1:9===i?25:Math.floor(20*Math.random())+1,sort:n.getTime()})}return e}om([(0,H.fF)({args:!1})],TimelineWebviewView.prototype,"onActiveEditorChanged",1),om([(0,H.fF)({args:!1})],TimelineWebviewView.prototype,"onFileSelected",1),om([(0,H.fF)({args:!1})],TimelineWebviewView.prototype,"onRepositoriesChanged",1),om([(0,H.fF)({args:!1})],TimelineWebviewView.prototype,"onRepositoryChanged",1),om([(0,H.fF)({args:!1})],TimelineWebviewView.prototype,"onSubscriptionChanged",1),om([(0,H.fF)({args:!1})],TimelineWebviewView.prototype,"getState",1),om([(0,H.fF)()],TimelineWebviewView.prototype,"updateState",1),om([(0,H.fF)()],TimelineWebviewView.prototype,"notifyDidChangeState",1);var am=Object.defineProperty,lm=Object.getOwnPropertyDescriptor,cm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?lm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&am(t,i,r),r};const hm="3|M";class TimelineWebview extends ep{constructor(e){super(e,"gitlens.timeline","timeline.html","images/gitlens-icon.png","Visual File History",`${s.zf.WebviewPrefix}timeline`,"timelineWebview",s.Gh.ShowTimelinePage),this._bootstraping=!0,this._notifyDidChangeStateDebounced=void 0,this._context={uri:void 0,period:hm,etagRepository:0,etagSubscription:0}}async show(e,...t){if(await Br())return super.show(e,...t)}onInitializing(){return this._context={uri:void 0,period:hm,etagRepository:0,etagSubscription:this.container.subscription.etag},this.updatePendingEditor(n.window.activeTextEditor),this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,[this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepository(this.onRepositoryChanged,this)]}onShowCommand(e){null!=e?this.updatePendingUri(e):this.updatePendingEditor(n.window.activeTextEditor),this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,super.onShowCommand()}async includeBootstrap(){return this._bootstraping=!0,this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.getState(this._context)}registerCommands(){return[(0,ke.xR)(s.Gh.RefreshTimelinePage,(()=>this.refresh(!0)))]}onVisibilityChanged(e){e&&(this._bootstraping&&(this._bootstraping=!1,null==this._pendingContext||!("uri"in this._pendingContext))||this.updateState())}onMessageReceived(e){switch(e.method){case Qp.method:Wd(Qp,e,(async e=>{if(null==e.data||!e.data.selected||null==this._context.uri)return;const t=this.container.git.getRepository(this._context.uri);if(null==t)return;const i=await t.getCommit(e.data.id);null!=i&&bt(i,{pin:!1,preserveFocus:!0})}));break;case zp.method:Wd(zp,e,(e=>{this.updatePendingContext({period:e.period})&&this.updateState(!0)}))}}onRepositoryChanged(e){e.changed(A.I6.Heads,A.I6.Index,A.du.Any)&&this.updatePendingContext({etagRepository:e.repository.etag})&&this.updateState()}onSubscriptionChanged(e){this.updatePendingContext({etagSubscription:e.etag})&&this.updateState()}async getState(e){const t=r.DN.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",i=r.DN.get("defaultDateShortFormat")??"short",o=e.period??hm;if(null==e.uri){return{emptyMessage:"There are no editors open that can provide file history information",period:o,title:"",dateFormat:t,shortDateFormat:i,access:await this.container.git.access(p.Timeline)}}const s=await _.YY.fromUri(e.uri),a=s.repoPath,l=await this.container.git.access(p.Timeline,a);if(!1===l.allowed){return{dataset:sm().sort(((e,t)=>t.sort-e.sort)),period:o,title:"src/app/index.ts",uri:n.Uri.file("src/app/index.ts").toString(),dateFormat:t,shortDateFormat:i,access:l}}const c=s.relativePath;this.title=`${this.originalTitle}: ${s.fileName}`;const[h,u]=await Promise.all([this.container.git.getCurrentUser(a),this.container.git.getLogForFile(a,s.fsPath,{limit:0,ref:s.sha,since:this.getPeriodDate(o).toISOString()})]);if(null==u)return{dataset:[],emptyMessage:"No commits found for the specified time period",period:o,title:c,sha:s.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:l};let d=[...(0,q.hX)(u.commits.values(),(e=>null==e.file?.stats&&1!==(0,y.By)(e.stats?.changedFiles)))];if(0!==d.length){const t=r.DN.get("visualHistory.queryLimit")??20,i=this.container.git.getRepository(e.uri)?.provider.name;d.length>t&&(n.window.showWarningMessage(`Unable able to show more than the first ${t} commits for the specified time period because of ${i?`${i} `:""}rate limits.`),d=d.slice(0,20)),await Promise.allSettled(d.map((e=>e.ensureFullDetails())))}const m=h?.name?`${h.name} (you)`:"You",g=[];for(const e of u.commits.values()){const t=e.file?.stats??(1===(0,y.By)(e.stats?.changedFiles)?e.stats:void 0);g.push({author:"You"===e.author.name?m:e.author.name,additions:t?.additions,deletions:t?.deletions,commit:e.sha,date:e.date.toISOString(),message:e.message??e.summary,sort:e.date.getTime()})}return g.sort(((e,t)=>t.sort-e.sort)),{dataset:g,period:o,title:c,sha:s.shortSha,uri:e.uri.toString(),dateFormat:t,shortDateFormat:i,access:l}}getPeriodDate(e){const[t,i]=e.split("|");switch(i){case"D":return(0,C.IH)(new Date,{days:-parseInt(t,10)});case"M":return(0,C.IH)(new Date,{months:-parseInt(t,10)});case"Y":return(0,C.IH)(new Date,{years:-parseInt(t,10)});default:return(0,C.IH)(new Date,{months:-3})}}updatePendingContext(e){let t=!1;for(const[i,o]of Object.entries(e)){const e=this._context[i];e===o||(e instanceof n.Uri||o instanceof n.Uri)&&e?.toString()===o?.toString()||(null==this._pendingContext&&(this._pendingContext={}),this._pendingContext[i]=o,t=!0)}return t}updatePendingEditor(e){return(null!=e||!(0,J.JM)())&&(!(null!=e&&!(0,J.PH)(e))&&this.updatePendingUri(e?.document.uri))}updatePendingUri(e){let t;if(null!=e){t=this.container.git.getRepository(e)?.etag??0}else t=0;return this.updatePendingContext({uri:e,etagRepository:t})}updateState(e=!1){this.isReady&&this.visible&&(e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,K.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced()))}async notifyDidChangeState(){if(!this.isReady||!this.visible)return!1;if(this._notifyDidChangeStateDebounced?.cancel(),null==this._pendingContext)return!1;const e={...this._context,...this._pendingContext};return n.window.withProgress({location:{viewId:this.id}},(async()=>{await this.notify(Yp,{state:await this.getState(e)})&&(this._context=e,this._pendingContext=void 0)}))}}cm([(0,H.fF)({args:!1})],TimelineWebview.prototype,"onRepositoryChanged",1),cm([(0,H.fF)({args:!1})],TimelineWebview.prototype,"onSubscriptionChanged",1),cm([(0,H.fF)({args:!1})],TimelineWebview.prototype,"getState",1),cm([(0,H.fF)()],TimelineWebview.prototype,"updateState",1),cm([(0,H.fF)()],TimelineWebview.prototype,"notifyDidChangeState",1);var um=Object.defineProperty,dm=Object.getOwnPropertyDescriptor,pm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?dm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&um(t,i,r),r};class StatusBarController{constructor(e){this.container=e,this._disposable=n.Disposable.from((0,z.IH)(e.onReady)(this.onReady,this),r.DN.onDidChange(this.onConfigurationChanged,this))}dispose(){this.clearBlame(),this._statusBarBlame?.dispose(),this._statusBarMode?.dispose(),this.container.lineTracker.unsubscribe(this),this._disposable.dispose()}onReady(){this.onConfigurationChanged()}onConfigurationChanged(e){if(r.DN.changed(e,"mode")){const t=r.DN.get("mode.statusBar.enabled")?this.container.mode:void 0;if(t?.statusBarItemName){const i="left"!==r.DN.get("mode.statusBar.alignment")?n.StatusBarAlignment.Right:n.StatusBarAlignment.Left;r.DN.changed(e,"mode.statusBar.alignment")&&this._statusBarMode?.alignment!==i&&(this._statusBarMode?.dispose(),this._statusBarMode=void 0),this._statusBarMode=this._statusBarMode??n.window.createStatusBarItem("gitlens.mode",i,i===n.StatusBarAlignment.Right?999:1),this._statusBarMode.name="GitLens Modes",this._statusBarMode.command=s.Gh.SwitchMode,this._statusBarMode.text=t.statusBarItemName,this._statusBarMode.tooltip=new n.MarkdownString(`**${t.statusBarItemName}** ${s.NE.Dash} ${t.description}\n\n---\n\nClick to Switch GitLens Modes`,!0),this._statusBarMode.accessibilityInformation={label:`GitLens Mode: ${t.statusBarItemName}\nClick to Switch GitLens Modes`},this._statusBarMode.show()}else this._statusBarMode?.dispose(),this._statusBarMode=void 0}if(r.DN.changed(e,"statusBar"))if(r.DN.get("statusBar.enabled")){const t="left"!==r.DN.get("statusBar.alignment")?n.StatusBarAlignment.Right:n.StatusBarAlignment.Left;r.DN.changed(e,"statusBar.alignment")&&this._statusBarBlame?.alignment!==t&&(this._statusBarBlame?.dispose(),this._statusBarBlame=void 0),this._statusBarBlame=this._statusBarBlame??n.window.createStatusBarItem("gitlens.blame",t,t===n.StatusBarAlignment.Right?1e3:0),this._statusBarBlame.name="GitLens Current Line Blame",this._statusBarBlame.command=r.DN.get("statusBar.command"),r.DN.changed(e,"statusBar.enabled")&&this.container.lineTracker.subscribe(this,this.container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged,this))}else r.DN.changed(e,"statusBar.enabled")&&(this.container.lineTracker.unsubscribe(this),this._statusBarBlame?.dispose(),this._statusBarBlame=void 0)}onActiveLinesChanged(e){let t=!(r.DN.get("statusBar.reduceFlicker")&&"selection"===e.reason&&(e.pending||null!=e.selections));if(!e.pending&&null!=e.selections){const i=this.container.lineTracker.getState(e.selections[0].active);if(null!=i?.commit)return void this.updateBlame(e.editor,i.commit);t=!0}t?this.clearBlame():null!=this._statusBarBlame&&(this._statusBarBlame.text=this._statusBarBlame.text.replace("$(git-commit)","$(watch)"))}clearBlame(){this._pullRequestCancellation?.cancel(),this._tooltipCancellation?.cancel(),this._statusBarBlame?.hide()}async updateBlame(e,t,i){const o=r.DN.get("statusBar");if(!o.enabled||null==this._statusBarBlame||!(0,J.PH)(e))return;const a=(0,G.UH)(),l=o.pullRequests.enabled&&(CommitFormatter.has(o.format,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")||CommitFormatter.has(o.tooltipFormat,"pullRequest","pullRequestAgo","pullRequestAgoOrDate","pullRequestDate","pullRequestState")),[c,h]=await Promise.all([CommitFormatter.has(o.format,"tips")||CommitFormatter.has(o.tooltipFormat,"tips")?this.container.git.getBranchesAndTagsTipsFn(t.repoPath):void 0,l&&void 0===i?.pr?this.getPullRequest(t,{timeout:100}):i?.pr??void 0]);let u;switch(null!=h&&(this._pullRequestCancellation?.cancel(),this._pullRequestCancellation=new n.CancellationTokenSource,this.waitForPendingPullRequest(e,t,h,this._pullRequestCancellation.token,100,a)),this._statusBarBlame.text=`$(git-commit) ${CommitFormatter.fromTemplate(o.format,t,{dateFormat:null===o.dateFormat?r.DN.get("defaultDateFormat"):o.dateFormat,getBranchAndTagTips:c,messageTruncateAtNewLine:!0,pullRequestOrRemote:h,pullRequestPendingMessage:"PR $(watch)"})}`,o.command){case r.ef.CopyRemoteCommitUrl:u="Click to Copy Remote Commit URL";break;case r.ef.CopyRemoteFileUrl:this._statusBarBlame.command=s.Gh.CopyRemoteFileUrl,u="Click to Copy Remote File Revision URL";break;case r.ef.DiffWithPrevious:this._statusBarBlame.command=s.Gh.DiffLineWithPrevious,u="Click to Open Line Changes with Previous Revision";break;case r.ef.DiffWithWorking:this._statusBarBlame.command=s.Gh.DiffLineWithWorking,u="Click to Open Line Changes with Working File";break;case r.ef.OpenCommitOnRemote:u="Click to Open Commit on Remote";break;case r.ef.OpenFileOnRemote:u="Click to Open Revision on Remote";break;case r.ef.RevealCommitInView:u="Click to Reveal Commit in the Side Bar";break;case r.ef.ShowCommitsInView:u="Click to Search for Commit";break;case r.ef.ShowQuickCommitDetails:u="Click to Show Commit";break;case r.ef.ShowQuickCommitFileDetails:u="Click to Show Commit (file)";break;case r.ef.ShowQuickCurrentBranchHistory:u="Click to Show Branch History";break;case r.ef.ShowQuickFileHistory:u="Click to Show File History";break;case r.ef.ToggleCodeLens:u="Click to Toggle Git CodeLens";break;case r.ef.ToggleFileBlame:u="Click to Toggle File Blame";break;case r.ef.ToggleFileChanges:null!=t.file&&(this._statusBarBlame.command=(0,ke._N)({title:"Toggle File Changes",command:s.Gh.ToggleFileChanges,arguments:[t.file.uri,{type:r.VP.Changes,context:{sha:t.sha,only:!1,selection:!1}}]})),u="Click to Toggle File Changes";break;case r.ef.ToggleFileChangesOnly:null!=t.file&&(this._statusBarBlame.command=(0,ke._N)({title:"Toggle File Changes",command:s.Gh.ToggleFileChanges,arguments:[t.file.uri,{type:r.VP.Changes,context:{sha:t.sha,only:!0,selection:!1}}]})),u="Click to Toggle File Changes";break;case r.ef.ToggleFileHeatmap:u="Click to Toggle File Heatmap"}this._statusBarBlame.tooltip=u,this._statusBarBlame.accessibilityInformation={label:`${this._statusBarBlame.text}\n${u}`},null!=this._tooltipDelayTimer&&clearTimeout(this._tooltipDelayTimer),this._tooltipCancellation?.cancel(),this._tooltipDelayTimer=setTimeout((()=>{this._tooltipDelayTimer=void 0,this._tooltipCancellation=new n.CancellationTokenSource,this.updateCommitTooltip(this._statusBarBlame,t,u,c,{enabled:l||null!=h,pr:h},this._tooltipCancellation.token)}),500),this._statusBarBlame.show()}async getPullRequest(e,{timeout:t}={}){const i=await this.container.git.getBestRemoteWithRichProvider(e.repoPath);if(null==i?.provider)return;const{provider:n}=i;try{return await this.container.git.getPullRequestForCommit(e.ref,n,{timeout:t})}catch(e){return e instanceof Y.PK?e:void 0}}async updateCommitTooltip(e,t,i,n,o,s){if(s.isCancellationRequested)return;const a=await fu(t,t.getGitUri(),t.lines[0].line,r.DN.get("statusBar.tooltipFormat"),r.DN.get("defaultDateFormat"),{autolinks:!0,cancellationToken:s,getBranchAndTagTips:n,pullRequests:o});s.isCancellationRequested||(a.appendMarkdown(`\n\n---\n\n${i}`),e.tooltip=a,e.accessibilityInformation={label:`${e.text}\n${i}`})}async waitForPendingPullRequest(e,t,i,n,o,r){!n.isCancellationRequested&&i instanceof Y.PK&&(B.Yd.debug(r,`${s.NE.Dot} pull request query took too long (over ${o} ms)`),i=await i.promise,n.isCancellationRequested||(B.Yd.debug(r,`${s.NE.Dot} pull request query completed; refreshing...`),this.updateBlame(e,t,{pr:i??null})))}}pm([(0,H.fF)({args:{0:e=>`editor=${e.editor?.document.uri.toString(!0)}, selections=${e.selections?.map((e=>`[${e.anchor}-${e.active}]`)).join(",")}, pending=${Boolean(e.pending)}, reason=${e.reason}`}})],StatusBarController.prototype,"onActiveLinesChanged",1),pm([(0,H.fF)({args:!1})],StatusBarController.prototype,"updateBlame",1);class TelemetryService{constructor(e){this.container=e,this._enabled=!1,this.globalAttributes=new Map,this.eventQueue=[],e.context.subscriptions.push(r.DN.onDidChange((t=>{t.affectsConfiguration("telemetry.enabled")&&this.ensureTelemetry(e)})),n.env.onDidChangeTelemetryEnabled((()=>this.ensureTelemetry(e)))),this.ensureTelemetry(e)}get enabled(){return this._enabled}dispose(){this.provider?.dispose(),this.provider=void 0}ensureTelemetry(e){if(this._enabled=n.env.isTelemetryEnabled&&r.DN.get("telemetry.enabled",void 0,!0),!this._enabled)return null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.eventQueue.length=0,this.provider?.dispose(),void(this.provider=void 0);null==this._initializationTimer&&(this._initializationTimer=setTimeout((()=>this.initializeTelemetry(e)),7500))}async initializeTelemetry(e){if(null!=this._initializationTimer&&(clearTimeout(this._initializationTimer),this._initializationTimer=void 0),this.provider=new((await Promise.resolve().then(i.bind(i,2020))).OpenTelemetryProvider)({env:e.env,extensionId:e.id,extensionVersion:e.version,machineId:n.env.machineId,sessionId:n.env.sessionId,language:n.env.language,platform:(0,Bu.Xf)(),vscodeEdition:n.env.appName,vscodeHost:n.env.appHost,vscodeRemoteName:n.env.remoteName??"",vscodeShell:n.env.shell,vscodeUIKind:String(n.env.uiKind),vscodeVersion:n.version},(0,bd.Nx)(),e.debugging),this.eventQueue.length){const e=[...this.eventQueue];this.eventQueue.length=0;for(const{type:t,name:i,data:n,global:o}of e)"sendEvent"===t&&(this.provider.setGlobalAttributes(o),this.provider.sendEvent(i,mm(n)))}this.provider.setGlobalAttributes(this.globalAttributes)}sendEvent(e,t,i,n){this._enabled&&(null!=this.provider?this.provider.sendEvent(e,mm(t),i,n):this.eventQueue.push({type:"sendEvent",name:e,data:t,global:new Map([...this.globalAttributes]),startTime:i??Date.now(),endTime:n??Date.now()}))}startEvent(e,t,i){if(this._enabled){if(null!=this.provider){const n=this.provider.startEvent(e,mm(t),i);return{dispose:()=>n?.end()}}return i=i??Date.now(),{dispose:()=>this.sendEvent(e,t,i,Date.now())}}}setGlobalAttribute(e,t){null==t?this.globalAttributes.delete(e):this.globalAttributes.set(e,t),this.provider?.setGlobalAttributes(this.globalAttributes)}setGlobalAttributes(e){for(const[t,i]of Object.entries(e))null==i?this.globalAttributes.delete(t):this.globalAttributes.set(t,i);this.provider?.setGlobalAttributes(this.globalAttributes)}deleteGlobalAttribute(e){this.globalAttributes.delete(e),this.provider?.setGlobalAttributes(this.globalAttributes)}}function mm(e){if(null==e)return;const t=Object.create(null);for(const[i,n]of Object.entries(e))null!=n&&(t[i]=n);return t}const gm=/\b(g(?:it)?\b\s*)\b(branch|checkout|cherry-pick|fetch|grep|log|merge|pull|push|rebase|reset|revert|show|stash|status|tag)\b/gi,fm=/\b((?!.*\/\.)(?!.*\.\.)(?!.*\/\/)(?!.*@\{)[^\000-\037\177 ,~^:?*[\\]+[^ ./])\b/gi,wm=/^[0-9a-f]{7,40}\.\.\.?[0-9a-f]{7,40}$/,_m=/^[0-9a-f]{7,40}$/;class GitTerminalLinkProvider{constructor(e){this.container=e,this.disposable=n.window.registerTerminalLinkProvider(this)}dispose(){this.disposable.dispose()}async provideTerminalLinks(e){if(0===e.line.trim().length)return[];const t=this.container.git.highlander?.path;if(!t)return[];const i=r.DN.get("terminalLinks.showDetailsView"),n=[];let o,a;const l=new RegExp(fm,fm.flags),c=new RegExp(gm,gm.flags);let h;for(;;){if(h=c.exec(e.line),null!=h){const[e,t,i]=h,o={startIndex:h.index+t.length,length:i.length,tooltip:"Open in Git Command Palette",command:{command:s.Gh.GitCommands,args:{command:i}}};n.push(o)}if(h=l.exec(e.line),null==h)break;const[r,u]=h;if("HEAD"===u.toUpperCase()){const e={startIndex:h.index,length:u.length,tooltip:"Show HEAD",command:{command:s.Gh.ShowQuickBranchHistory,args:{branch:"HEAD",repoPath:t}}};n.push(e);continue}void 0===o&&(o=await this.container.git.getBranches(t));let d=o.values.find((e=>e.name===u));if(null==d&&(d=o.values.find((e=>(0,v.S3)(e.name)===u))),null!=d){const e={startIndex:h.index,length:u.length,tooltip:"Show Branch",command:{command:s.Gh.ShowQuickBranchHistory,args:{repoPath:t,branch:d.name}}};n.push(e);continue}void 0===a&&(a=await this.container.git.getTags(t));const p=a.values.find((e=>e.name===u));if(null==p){if(_m.test(u)){if(await this.container.git.validateReference(t,u)){const e={startIndex:h.index,length:u.length,tooltip:"Show Commit",command:i?{command:s.Gh.ShowInDetailsView,args:{repoPath:t,refs:[u]}}:{command:s.Gh.ShowQuickCommit,args:{repoPath:t,sha:u}}};n.push(e)}}else if(wm.test(u)){const e={startIndex:h.index,length:u.length,tooltip:"Show Commits",command:{command:s.Gh.GitCommands,args:{command:"log",state:{repo:t,reference:x.Wb.create(u,t,{refType:"revision"})}}}};n.push(e)}}else{const e={startIndex:h.index,length:u.length,tooltip:"Show Tag",command:{command:s.Gh.ShowQuickBranchHistory,args:{repoPath:t,tag:p.name}}};n.push(e)}}return n}handleTerminalLink(e){n.commands.executeCommand(e.command.command,e.command.args)}}var vm=Object.defineProperty,ym=Object.getOwnPropertyDescriptor,bm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ym(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&vm(t,i,r),r};const Cm=class{constructor(){this._onDidChangeActiveLines=new n.EventEmitter,this._state=new Map,this._subscriptions=new Map,this._suspended=!1}get onDidChangeActiveLines(){return this._onDidChangeActiveLines.event}dispose(){for(const e of this._subscriptions.keys())this.unsubscribe(e)}onActiveTextEditorChanged(e){e!==this._editor&&(null==e||(0,J.PH)(e))&&(this.reset(),this._editor=e,this._selections=Cm.toLineSelections(e?.selections),this.trigger("editor"))}onTextEditorSelectionChanged(e){if(this._editor!==e.textEditor&&!(0,J.PH)(e.textEditor))return;const t=Cm.toLineSelections(e.selections);this._editor===e.textEditor&&this.includes(t)||(this.reset(),this._editor=e.textEditor,this._selections=t,this.trigger(this._editor===e.textEditor?"selection":"editor"))}getState(e){return this._state.get(e)}setState(e,t){this._state.set(e,t)}get selections(){return this._selections}includes(e,t){if("number"!=typeof e)return Cm.includes(e,this._selections);if(null==this._selections||0===this._selections.length)return!1;const i=e,n=t?.activeOnly??!0;for(const e of this._selections)if(i===e.active||!n&&(e.anchor>=i&&i>=e.active||e.active>=i&&i>=e.anchor))return!0;return!1}refresh(){this.trigger("editor")}reset(){this._state.clear()}subscribed(e){return this._subscriptions.has(e)}subscribe(e,t){const i=(0,G.UH)(),o={dispose:()=>this.unsubscribe(e)},r=0===this._subscriptions.size;let s=this._subscriptions.get(e);return null==s?(s=[t],this._subscriptions.set(e,s)):s.push(t),r&&(B.Yd.debug(i,"Starting line tracker..."),this._disposable=n.Disposable.from(n.window.onDidChangeActiveTextEditor((0,K.Ds)(this.onActiveTextEditorChanged,0),this),n.window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged,this),this.onStart?.()??{dispose:()=>{}}),queueMicrotask((()=>this.onActiveTextEditorChanged(n.window.activeTextEditor)))),o}unsubscribe(e){const t=this._subscriptions.get(e);if(null!=t){this._subscriptions.delete(e);for(const e of t)e.dispose();0===this._subscriptions.size&&(null!=this._linesChangedDebounced&&this._linesChangedDebounced.cancel(),this._disposable?.dispose(),this._disposable=void 0)}}get suspended(){return this._suspended}resume(e){(e?.force||this._suspended)&&(this._suspended=!1,this.onResume?.(),this.trigger("editor"))}suspend(e){!e?.force&&this._suspended||(this._suspended=!0,this.onSuspend?.(),this.trigger("editor"))}fireLinesChanged(e){this._onDidChangeActiveLines.fire(e)}trigger(e){this.onLinesChanged({editor:this._editor,selections:this.selections,reason:e})}onLinesChanged(e){null!=e.selections?(null==this._linesChangedDebounced&&(this._linesChangedDebounced=(0,K.Ds)((e=>{e.editor===n.window.activeTextEditor&&Cm.includes(e.selections,Cm.toLineSelections(e.editor?.selections))&&this.fireLinesChanged(e)}),250,{track:!0})),this._linesChangedDebounced.pending?.()||this.fireLinesChanged({...e,pending:!0}),this._linesChangedDebounced(e)):queueMicrotask((()=>{e.editor===n.window.activeTextEditor&&(null!=this._linesChangedDebounced&&this._linesChangedDebounced.cancel(),this.fireLinesChanged(e))}))}static includes(e,t){if(null==e&&null==t)return!0;if(null==e||null==t||e.length!==t.length)return!1;let i;return e.every(((e,n)=>(i=t[n],e.active===i.active&&e.anchor===i.anchor)))}static toLineSelections(e){return e?.map((e=>({active:e.active.line,anchor:e.anchor.line})))}};let Sm=Cm;bm([(0,H.fF)({args:!1})],Sm.prototype,"subscribe",1),bm([(0,H.fF)({args:!1})],Sm.prototype,"unsubscribe",1),bm([(0,H.fF)()],Sm.prototype,"resume",1),bm([(0,H.fF)()],Sm.prototype,"suspend",1);var km=Object.defineProperty,Pm=Object.getOwnPropertyDescriptor,Rm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Pm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&km(t,i,r),r};class GitLineState{constructor(e){this.commit=e,null!=e&&e.file}}class GitLineTracker extends Sm{constructor(e){super(),this.container=e}async fireLinesChanged(e){this.reset();let t=!1;return this.suspended||e.pending||null==e.selections||null==e.editor||(t=await this.updateState(e.selections,e.editor)),super.fireLinesChanged(t?e:{...e,selections:void 0})}onStart(){return this.onResume(),n.Disposable.from({dispose:()=>this.onSuspend()},this.container.tracker.onDidChangeBlameState(this.onBlameStateChanged,this),this.container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged,this),this.container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered,this))}onResume(){null==this._subscriptionOnlyWhenActive&&(this._subscriptionOnlyWhenActive=this.container.tracker.onDidChangeContent(this.onContentChanged,this))}onSuspend(){this._subscriptionOnlyWhenActive?.dispose(),this._subscriptionOnlyWhenActive=void 0}onBlameStateChanged(e){this.trigger("editor")}onContentChanged(e){e.contentChanges.some((e=>this.selections?.some((t=>e.range.end.line>=t.active&&t.active>=e.range.start.line||e.range.start.line>=t.active&&t.active>=e.range.end.line))))&&this.trigger("editor")}onDirtyIdleTriggered(e){const t=r.DN.get("advanced.blame.sizeThresholdAfterEdit");t>0&&e.document.lineCount>t||this.resume()}onDirtyStateChanged(e){e.dirty?this.suspend():this.resume({force:!0})}async updateState(e,t){const i=(0,G.UH)();if(!this.includes(e))return null!=i&&(i.exitDetails=` ${s.NE.Dot} lines no longer match`),!1;const n=await this.container.tracker.getOrAdd(t.document);if(!n.isBlameable)return null!=i&&(i.exitDetails=` ${s.NE.Dot} document is not blameable`),!1;if(1===e.length){const o=await this.container.git.getBlameForLine(n.uri,e[0].active,t?.document);if(null==o)return null!=i&&(i.exitDetails=` ${s.NE.Dot} blame failed`),!1;this.setState(o.line.line-1,new GitLineState(o.commit))}else{const o=await this.container.git.getBlame(n.uri,t.document);if(null==o)return null!=i&&(i.exitDetails=` ${s.NE.Dot} blame failed`),!1;for(const t of e){const e=o.lines[t.active];this.setState(t.active,new GitLineState(o.commits.get(e.sha)))}}return this.includes(e)?n.isBlameable?(t.document.isDirty&&n.setForceDirtyStateChangeOnNextDocumentChange(),!0):(null!=i&&(i.exitDetails=` ${s.NE.Dot} document is not blameable`),!1):(null!=i&&(i.exitDetails=` ${s.NE.Dot} lines no longer match`),!1)}}Rm([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}, blameable=${e.blameable}`}})],GitLineTracker.prototype,"onBlameStateChanged",1),Rm([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}`}})],GitLineTracker.prototype,"onContentChanged",1),Rm([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}`}})],GitLineTracker.prototype,"onDirtyIdleTriggered",1),Rm([(0,H.fF)({args:{0:e=>`editor=${e.editor.document.uri.toString(!0)}, doc=${e.document.uri.toString(!0)}, dirty=${e.dirty}`}})],GitLineTracker.prototype,"onDirtyStateChanged",1),Rm([(0,H.fF)({args:{0:e=>e?.map((e=>e.active)).join(","),1:e=>e.document.uri.toString(!0)},exit:e=>`returned ${e}`})],GitLineTracker.prototype,"updateState",1);class DeepLinkService{constructor(e){this.container=e,this._disposables=[],this._context={state:Gs.Idle},this._disposables.push(e.uri.onDidReceiveUri((async e=>{const t=Bs(e);if(null!=t&&this._context.state===Gs.Idle){if(!t.repoId||!t.type||!t.remoteUrl)return n.window.showErrorMessage("Unable to resolve link"),void B.Yd.warn(`Unable to resolve link - missing basic properties: ${e.toString()}`);if(!Object.values(Ms).includes(t.type))return n.window.showErrorMessage("Unable to resolve link"),void B.Yd.warn(`Unable to resolve link - unknown link type: ${e.toString()}`);if(t.type!==Ms.Repository&&!t.targetId)return n.window.showErrorMessage("Unable to resolve link"),void B.Yd.warn(`Unable to resolve link - no target id provided: ${e.toString()}`);this.setContextFromDeepLink(t,e.toString()),await this.processDeepLink()}})));const t=this.container.storage.get("deepLinks:pending");null!=t&&(this.container.storage.delete("deepLinks:pending"),this.processPendingDeepLink(t))}dispose(){n.Disposable.from(...this._disposables).dispose()}resetContext(){this._context={state:Gs.Idle,url:void 0,repoId:void 0,repo:void 0,remoteUrl:void 0,remote:void 0,targetId:void 0,targetType:void 0,targetSha:void 0}}setContextFromDeepLink(e,t){this._context={...this._context,repoId:e.repoId,targetType:e.type,url:t,remoteUrl:e.remoteUrl,targetId:e.targetId}}async processPendingDeepLink(e){if(null==e.url)return;const t=Bs(n.Uri.parse(e.url));if(null==t)return;this._context={state:Gs.CloneOrAddRepo},this.setContextFromDeepLink(t,e.url);let i=Vs.OpenRepo;if(null!=e.repoPath){const t=n.Uri.parse(e.repoPath);try{const e=await this.container.git.getOrOpenRepository(t,{detectNested:!1});null!=e&&(this._context.repo=e,i=Vs.RepoOpened)}catch{}}queueMicrotask((()=>{this.processDeepLink(i)}))}async getShaForTarget(){const{repo:e,remote:t,targetType:i,targetId:n}=this._context;if(e&&t&&i!==Ms.Repository&&n){if(i===Ms.Branch){const i=`${t.name}/${n}`;let o=await e.getBranch(i);return o?o.sha:(o=await e.getBranch(n),o?o.sha:void 0)}if(i===Ms.Tag){const t=await e.getTag(n);return t?t.sha:void 0}return i===Ms.Commit&&await this.container.git.validateReference(e.path,n)?n:void 0}}async showOpenTypePrompt(){return(await n.window.showInformationMessage("No matching repository found. Please choose an option.",{modal:!0},{title:"Open Folder",action:Hs.Folder},{title:"Open Workspace",action:Hs.Workspace},{title:"Cancel",isCloseAffordance:!0}))?.action}async showOpenLocationPrompt(e){const t=[{title:"Open",action:J.Tc.CurrentWindow},{title:"Open in New Window",action:J.Tc.NewWindow}];e===Hs.Folder&&t.push({title:"Add to Workspace",action:J.Tc.AddToWorkspace}),t.push({title:"Cancel",isCloseAffordance:!0});return(await n.window.showInformationMessage(`Please choose an option to open the repository ${e}.`,{modal:!0},...t))?.action}async processDeepLink(e=Vs.DeepLinkEventFired){let t,i,o,r="",a=e,l=[],c="",h="";for(;;){this._context.state=qs[this._context.state][a];const{state:e,repoId:u,repo:d,url:p,remoteUrl:m,remote:g,targetSha:f,targetType:w}=this._context;switch(e){case Gs.Idle:return a===Vs.DeepLinkErrored&&(n.window.showErrorMessage("Unable to resolve link"),B.Yd.warn(`Unable to resolve link - ${r}: ${p}`)),void this.resetContext();case Gs.RepoMatch:case Gs.AddedRepoMatch:if(!u||!m){a=Vs.DeepLinkErrored,r="No repository id or remote url was provided.";break}[,c,h]=(0,Ha.S)(m);for(const e of this.container.git.repositories){if(l=await e.getRemotes({filter:e=>e.matches(c,h)}),l.length>0){this._context.repo=e,this._context.remote=l[0],a=Vs.RepoMatchedWithRemoteUrl;break}if(await this.container.git.validateReference(e.path,u)){this._context.repo=e,a=Vs.RepoMatchedWithId;break}}this._context.repo||(e===Gs.RepoMatch?a=Vs.RepoMatchFailed:(a=Vs.DeepLinkErrored,r="No matching repository found."));break;case Gs.CloneOrAddRepo:if(!u||!m){a=Vs.DeepLinkErrored,r="Missing repository id or remote url.";break}if(t=await this.showOpenTypePrompt(),!t){a=Vs.DeepLinkCancelled;break}if(i=await this.showOpenLocationPrompt(t),!i){a=Vs.DeepLinkCancelled;break}if(o=(await n.window.showOpenDialog({title:`Open ${t} for link`,canSelectFiles:t===Hs.Workspace,canSelectFolders:t===Hs.Folder,canSelectMany:!1,...t===Hs.Workspace&&{filters:{Workspaces:["code-workspace"]}}}))?.[0],!o){a=Vs.DeepLinkCancelled;break}i===J.Tc.AddToWorkspace&&(n.workspace.workspaceFolders?.length||0)>1?a=Vs.OpenRepo:(await this.container.storage.store("deepLinks:pending",{url:this._context.url,repoPath:o.toString()}),a=Vs.DeepLinkStored),(0,J.ic)(o,{location:i});break;case Gs.OpeningRepo:return void queueMicrotask((()=>{n.window.withProgress({cancellable:!0,location:n.ProgressLocation.Notification,title:`Opening repository for link: ${p}`},((e,t)=>new Promise((e=>{t.onCancellationRequested((()=>{queueMicrotask((()=>this.processDeepLink(Vs.DeepLinkCancelled))),e()})),this._disposables.push((0,z.IH)(this.container.git.onDidChangeRepositories)((()=>{queueMicrotask((()=>this.processDeepLink(Vs.RepoAdded))),e()})))}))))}));case Gs.RemoteMatch:if(!d||!m){a=Vs.DeepLinkErrored,r="Missing repository or remote url.";break}if(l=await d.getRemotes({filter:e=>e.url===m}),l.length>0){this._context.remote=l[0],a=Vs.RemoteMatched;break}this._context.remote||(a=Vs.RemoteMatchFailed);break;case Gs.AddRemote:if(!d||!m){a=Vs.DeepLinkErrored,r="Missing repository or remote url.";break}a=Vs.DeepLinkErrored,r="No matching remote found.";break;case Gs.TargetMatch:case Gs.FetchedTargetMatch:if(!d||!g||!w){a=Vs.DeepLinkErrored,r="Missing repository, remote, or target type.";break}if(w===Ms.Repository){a=Vs.TargetMatched;break}if(this._context.targetSha=await this.getShaForTarget(),!this._context.targetSha){e===Gs.TargetMatch?a=Vs.TargetMatchFailed:(a=Vs.DeepLinkErrored,r="No matching target found.");break}a=Vs.TargetMatched;break;case Gs.Fetch:if(!d||!g){a=Vs.DeepLinkErrored,r="Missing repository or remote.";break}a=Vs.DeepLinkErrored,r="No matching target found.";break;case Gs.OpenGraph:if(!d||!w){a=Vs.DeepLinkErrored,r="Missing repository or target type.";break}if(w===Ms.Repository){await(0,ke.P0)(s.Gh.ShowInCommitGraph,d),a=Vs.DeepLinkResolved;break}if(!f){a=Vs.DeepLinkErrored,r=`Cannot find target ${w} in repo.`;break}await(0,ke.P0)(s.Gh.ShowInCommitGraph,{ref:x.Wb.create(f,d.path)}),a=Vs.DeepLinkResolved;break;default:a=Vs.DeepLinkErrored,r="Unknown state."}}}async copyDeepLinkUrl(e,t,i,o){const r=await("string"!=typeof e?this.generateDeepLinkUrl(e,t):this.generateDeepLinkUrl(e,t,i,o));await n.env.clipboard.writeText(r.toString())}async generateDeepLinkUrl(e,t,i,o){const s="string"!=typeof e?e.repoPath:e,a=await this.container.git.getUniqueRepositoryId(s)??"0";if("string"!=typeof e)switch(e.refType){case"branch":i=Ms.Branch,o=e.remote?(0,v.S3)(e.name):e.name;break;case"revision":i=Ms.Commit,o=e.ref;break;case"tag":i=Ms.Tag,o=e.name}const l=r.DN.get("deepLinks.schemeOverride"),c=l?!0===l?n.env.uriScheme:l:"vscode",h=null!=i&&i!==Ms.Repository?`/${i}/${o}`:"",u=new URL(`${c}://${this.container.context.extension.id}/${Ls.DeepLink}/${Ms.Repository}/${a}${h}`);u.searchParams.set("url",t);return(new URLSearchParams).set("url",t),u}}var Dm=Object.defineProperty,$m=Object.getOwnPropertyDescriptor;class UriService{constructor(e){this.container=e,this._onDidReceiveAuthenticationUri=new n.EventEmitter,this._onDidReceiveUri=new n.EventEmitter,this._disposable=n.window.registerUriHandler(this)}get onDidReceiveAuthenticationUri(){return this._onDidReceiveAuthenticationUri.event}get onDidReceiveUri(){return this._onDidReceiveUri.event}dispose(){this._disposable.dispose()}handleUri(e){const[,t]=e.path.split("/");t!==Pd?this._onDidReceiveUri.fire(e):this._onDidReceiveAuthenticationUri.fire(e)}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?$m(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&Dm(t,i,r)})([(0,H.cM)({args:{0:e=>e.with({query:""}).toString(!0)}})],UriService.prototype,"handleUri",1);class UsageTracker{constructor(e,t){this.container=e,this.storage=t,this._onDidChange=new n.EventEmitter}get onDidChange(){return this._onDidChange.event}dispose(){}get(e){return this.storage.get("usages")?.[e]}async reset(e){let t=this.storage.get("usages");if(null!=t){if(null==e)return await this.storage.delete("usages"),void this._onDidChange.fire(void 0);t=(0,Dd.iC)(t,e,void 0),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:void 0})}}async track(e){let t=this.storage.get("usages");null==t&&(t=Object.create(null));const i=Date.now();let n=t[e];null==n?(n={count:0,firstUsedAt:i,lastUsedAt:i},t[e]=n):(n.count!==Number.MAX_SAFE_INTEGER&&n.count++,n.lastUsedAt=i),this.container.telemetry.sendEvent("usage/track",{"usage.key":e,"usage.count":n.count}),await this.storage.store("usages",t),this._onDidChange.fire({key:e,usage:n})}}var Tm=Object.defineProperty,Fm=Object.getOwnPropertyDescriptor,xm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Fm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Tm(t,i,r),r};class BranchesRepositoryNode extends De.vb{async getChildren(){return null==this.child&&(this.child=new Mr(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(A.I6.Config,A.I6.Heads,A.I6.Index,A.I6.Remotes,A.I6.RemoteProviders,A.I6.Status,A.I6.Unknown,A.du.Any)}}class BranchesViewNode extends De.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No branches could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new BranchesRepositoryNode(_.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getBranches({filter:e=>!e.remote});return 0===t.values.length?(this.view.message="No branches could be found.",this.view.title="Branches",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Branches (${t.values.length})`,e.getChildren())}return this.view.title="Branches",this.children}getTreeItem(){return new n.TreeItem("Branches",n.TreeItemCollapsibleState.Expanded)}}class BranchesView extends ViewBase{constructor(e){super(e,"gitlens.views.branches","Branches","branchesView"),this.configKey="branches"}get canReveal(){return this.config.reveal||!r.DN.get("views.repositories.showBranches")}getRoot(){return new BranchesViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches"),this.refresh(!0))),this),Xo(this.getQualifiedCommand("setLayoutToList"),(()=>this.setLayout(r.CZ.List)),this),Xo(this.getQualifiedCommand("setLayoutToTree"),(()=>this.setLayout(r.CZ.Tree)),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat")||r.DN.changed(e,"sortBranchesBy"))}findBranch(e,t){if(e.remote)return;const i=Jr.getId(e.repoPath);return this.findNode((t=>t.branch?.ref===e.ref),{allowPaging:!0,maxDepth:4,canTraverse:e=>e instanceof BranchesViewNode||(e instanceof BranchesRepositoryNode||e instanceof BranchOrTagFolderNode)&&e.id.startsWith(i),token:t})}async findCommit(e,t){const i=Jr.getId(e.repoPath),n=await this.container.git.getCommitBranches(e.repoPath,e.ref,(0,y.f_)(e)?{commitDate:e.committer.date}:void 0);if(0!==n.length)return this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:5,canTraverse:async t=>t instanceof BranchesViewNode||(t instanceof BranchesRepositoryNode||t instanceof BranchOrTagFolderNode?t.id.startsWith(i):!!(t instanceof hr&&n.includes(t.branch.name))&&(await t.loadMore({until:e.ref}),!0)),token:t})}revealBranch(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findBranch(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealCommit(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findCommit(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof BranchesViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}setLayout(e){return r.DN.updateEffective(`views.${this.configKey}.branches.layout`,e)}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return r.DN.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&r.DH.Branch)}async setShowBranchPullRequest(e){await r.DN.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await r.DN.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}xm([(0,V.H)((()=>""))],BranchesView.prototype,"revealBranch",1),xm([(0,V.H)((()=>""))],BranchesView.prototype,"revealCommit",1),xm([(0,V.H)((()=>""))],BranchesView.prototype,"revealRepository",1);var Om=Object.defineProperty,Am=Object.getOwnPropertyDescriptor,Im=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Am(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Om(t,i,r),r};class CommitsRepositoryNode extends De.vb{async getChildren(){if(null==this.child){const e=await this.repo.getBranch();if(null==e)return this.view.message="No commits could be found.",[];let t;if(this.view.message=void 0,this.view.state.myCommitsOnly){const e=await this.view.container.git.getCurrentUser(this.repo.path);null!=e&&(t=[{name:e.name,email:e.email,username:e.username,id:e.id}])}this.child=new hr(this.uri,this.view,this,e,!0,{expanded:!0,limitCommits:!this.splatted,showComparison:this.view.config.showBranchComparison,showCurrent:!1,showTracking:!0,authors:t})}return this.child.getChildren()}async refresh(e=!1){e?this.child=void 0:this.parent?.triggerChange(!1),await this.ensureSubscription()}async subscribe(){const e=await(this.repo?.getLastFetched())??0,t=A._j.getLastFetchedUpdateInterval(e);return 0!==e&&t>0?n.Disposable.from(await super.subscribe(),(0,K.DH)((()=>{t!==A._j.getLastFetchedUpdateInterval(e)&&this.resetSubscription(),this.splatted?this.view.triggerNodeChange(this.parent??this):this.view.triggerNodeChange(this)}),t)):super.subscribe()}changed(e){return e.changed(A.I6.Config,A.I6.Heads,A.I6.Index,A.I6.Remotes,A.I6.RemoteProviders,A.I6.Status,A.I6.Unknown,A.du.Any)}}Im([(0,V.H)(),(0,H.fF)()],CommitsRepositoryNode.prototype,"refresh",1),Im([(0,H.fF)()],CommitsRepositoryNode.prototype,"subscribe",1);class CommitsViewNode extends De.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No commits could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new CommitsRepositoryNode(_.YY.fromRepoPath(e.path),this.view,this,e,t,{showBranchAndLastFetched:!0})))}const e=r.DN.get("plusFeatures.enabled")&&null==this.view.container.usage.get("graphWebview:shown")?new CommandMessageNode(this.view,this,{command:s.Gh.ShowGraphPage,title:"Show Commit Graph"},"Visualize commits on the Commit Graph","✨ GitLens+ feature","Visualize commits on the Commit Graph ✨",new n.ThemeIcon("gitlens-graph")):void 0;if(1===this.children.length){const[t]=this.children,i=await t.repo.getBranch();if(null!=i){const e=await t.repo.getLastFetched()??0,n=i.getTrackingStatus();this.view.description=`${n?`${n} ${s.NE.Dot} `:""}${i.name}${i.rebasing?" (Rebasing)":""}${e?` ${s.NE.Dot} Last fetched ${A._j.formatLastFetched(e)}`:""}`}return null==e?t.getChildren():[e,...await t.getChildren()]}return null==e?this.children:[e,...this.children]}getTreeItem(){return new n.TreeItem("Commits",n.TreeItemCollapsibleState.Expanded)}}class CommitsView extends ViewBase{constructor(e){super(e,"gitlens.views.commits","Commits","commitsView"),this.configKey="commits",this._state={},this.disposables.push(e.usage.onDidChange(this.onUsageChanged,this))}onUsageChanged(e){null!=e&&"graphWebview:shown"!==e.key||this.refresh()}get canReveal(){return this.config.reveal||!r.DN.get("views.repositories.showCommits")}get state(){return this._state}getRoot(){return new CommitsViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("branches","status","tags"),this.refresh(!0))),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setMyCommitsOnlyOn"),(()=>this.setMyCommitsOnly(!0)),this),Xo(this.getQualifiedCommand("setMyCommitsOnlyOff"),(()=>this.setMyCommitsOnly(!1)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOn"),(()=>this.setShowBranchComparison(!0)),this),Xo(this.getQualifiedCommand("setShowBranchComparisonOff"),(()=>this.setShowBranchComparison(!1)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOn"),(()=>this.setShowBranchPullRequest(!0)),this),Xo(this.getQualifiedCommand("setShowBranchPullRequestOff"),(()=>this.setShowBranchPullRequest(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat")||r.DN.changed(e,"plusFeatures.enabled"))}onSelectionChanged(e){super.onSelectionChanged(e),this.notifySelections()}onVisibilityChanged(e){super.onVisibilityChanged(e),e.visible&&this.notifySelections()}notifySelections(){const e=this.selection?.[0];null!=e&&((e instanceof uo||e instanceof FileRevisionAsCommitNode||e instanceof ro)&&this.container.events.fire("commit:selected",{commit:e.commit,pin:!1,preserveFocus:!0,preserveVisibility:!0},{source:this.id}),(e instanceof FileRevisionAsCommitNode||e instanceof ro)&&this.container.events.fire("file:selected",{uri:e.uri,preserveFocus:!0,preserveVisibility:!0},{source:this.id}))}async findCommit(e,t){const i=Jr.getId(e.repoPath),n=await this.container.git.getBranch(e.repoPath);if(null==n)return;return(await this.container.git.getCommitBranches(e.repoPath,e.ref,{branch:n.name,commitDate:(0,y.f_)(e)?e.committer.date:void 0})).length?this.findNode((t=>t.commit?.ref===e.ref),{allowPaging:!0,maxDepth:2,canTraverse:async t=>{if(t instanceof CommitsViewNode){let i=await(t.getSplattedChild?.());return i instanceof CommitsRepositoryNode&&(i=await(i.getSplattedChild?.()),i instanceof hr&&await i.loadMore({until:e.ref})),!0}if(t instanceof CommitsRepositoryNode&&t.id.startsWith(i)){const i=await(t.getSplattedChild?.());if(i instanceof hr)return await i.loadMore({until:e.ref}),!0}return t instanceof wo&&t.id.startsWith(i)},token:t}):void 0}async revealCommit(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findCommit(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof CommitsViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setMyCommitsOnly(e){(0,a.v)(s.zf.ViewsCommitsMyCommitsOnly,e),this.state.myCommitsOnly=e,this.refresh(!0)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}setShowBranchComparison(e){return r.DN.updateEffective(`views.${this.configKey}.showBranchComparison`,!!e&&r.DH.Working)}async setShowBranchPullRequest(e){await r.DN.updateEffective(`views.${this.configKey}.pullRequests.showForBranches`,e),await r.DN.updateEffective(`views.${this.configKey}.pullRequests.enabled`,e)}}Im([(0,V.H)((()=>""))],CommitsView.prototype,"revealCommit",1),Im([(0,V.H)((()=>""))],CommitsView.prototype,"revealRepository",1);var Em=Object.defineProperty,Nm=Object.getOwnPropertyDescriptor,Um=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Nm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Em(t,i,r),r};class ContributorsRepositoryNode extends De.vb{async getChildren(){return null==this.child&&(this.child=new fr(this.uri,this.view,this,this.repo)),this.child.getChildren()}async subscribe(){return n.Disposable.from(await super.subscribe(),b.OV.onDidFetch((e=>this.child?.updateAvatar(e.email))))}changed(e){return e.changed(A.I6.Config,A.I6.Heads,A.I6.Remotes,A.I6.Unknown,A.du.Any)}}Um([(0,H.fF)()],ContributorsRepositoryNode.prototype,"subscribe",1);class ContributorsViewNode extends De.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No contributors could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new ContributorsRepositoryNode(_.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.getChildren();return 0===t.length?(this.view.message="No contributors could be found.",this.view.title="Contributors",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Contributors (${t.length})`,t)}return this.view.title="Contributors",this.children}getTreeItem(){return new n.TreeItem("Contributors",n.TreeItemCollapsibleState.Expanded)}}class ContributorsView extends ViewBase{constructor(e){super(e,"gitlens.views.contributors","Contributors","contributorsView"),this.configKey="contributors"}get canReveal(){return this.config.reveal||!r.DN.get("views.repositories.showContributors")}getRoot(){return new ContributorsViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("contributors"),this.refresh(!0))),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setShowAllBranchesOn"),(()=>this.setShowAllBranches(!0)),this),Xo(this.getQualifiedCommand("setShowAllBranchesOff"),(()=>this.setShowAllBranches(!1)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Xo(this.getQualifiedCommand("setShowStatisticsOn"),(()=>this.setShowStatistics(!0)),this),Xo(this.getQualifiedCommand("setShowStatisticsOff"),(()=>this.setShowStatistics(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat")||r.DN.changed(e,"sortContributorsBy"))}findContributor(e,t){const i=Jr.getId(e.repoPath);return this.findNode(Eo.getId(e.repoPath,e.name,e.email,e.username),{maxDepth:2,canTraverse:e=>e instanceof ContributorsViewNode||e instanceof ContributorsRepositoryNode&&e.id.startsWith(i),token:t})}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof ContributorsViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}async revealContributor(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing contributor '${e.name}' in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findContributor(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setShowAllBranches(e){return r.DN.updateEffective(`views.${this.configKey}.showAllBranches`,e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}setShowStatistics(e){return r.DN.updateEffective(`views.${this.configKey}.showStatistics`,e)}}Um([(0,V.H)((()=>""))],ContributorsView.prototype,"revealRepository",1),Um([(0,V.H)((()=>""))],ContributorsView.prototype,"revealContributor",1);const Lm=" (pinned)";class LineHistoryView extends ViewBase{constructor(e){super(e,"gitlens.views.lineHistory","Line History","lineHistoryView"),this.configKey="lineHistory",(0,a.v)(s.zf.ViewsLineHistoryEditorFollowing,!0)}get showCollapseAll(){return!1}getRoot(){return new LineHistoryTrackerNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),Xo(this.getQualifiedCommand("changeBase"),(()=>this.changeBase()),this),Xo(this.getQualifiedCommand("setEditorFollowingOn"),(()=>this.setEditorFollowing(!0)),this),Xo(this.getQualifiedCommand("setEditorFollowingOff"),(()=>this.setEditorFollowing(!1)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat"))}changeBase(){this.root?.changeBase()}setEditorFollowing(e){const t=this.ensureRoot();t.hasUri&&((0,a.v)(s.zf.ViewsLineHistoryEditorFollowing,e),this.root?.setEditorFollowing(e),this.description?.endsWith(Lm)?e&&(this.description=this.description.substr(0,this.description.length-Lm.length)):e||null==this.description||(this.description+=Lm),e&&(t.ensureSubscription(),this.refresh(!0)))}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}}class ComparePickerNode extends De.Re{constructor(e,t,i){super(_.Wj,e,t),this.selectedRef=i,this.order=Date.now(),this.pinned=!1}get canDismiss(){return!0}getChildren(){return[]}getTreeItem(){const e=this.selectedRef,t=e?.repoPath;let i,o;if(void 0!==t&&this.view.container.git.repositoryCount>1){i=this.view.container.git.getRepository(t)?.formattedName??t}return null==e?(o=new n.TreeItem("Compare <branch, tag, or ref> with <branch, tag, or ref>",n.TreeItemCollapsibleState.None),o.contextValue=De.Td.ComparePicker,o.description=i,o.tooltip=`Click to select or enter a reference for compare${s.NE.Ellipsis}`,o.command={title:`Compare${s.NE.Ellipsis}`,command:this.view.getQualifiedCommand("selectForCompare")}):(o=new n.TreeItem(`Compare ${e.label} with <branch, tag, or ref>`,n.TreeItemCollapsibleState.None),o.contextValue=De.Td.ComparePickerWithRef,o.description=i,o.tooltip=`Click to compare ${e.label} with${s.NE.Ellipsis}`,o.command={title:`Compare ${e.label} with${s.NE.Ellipsis}`,command:this.view.getQualifiedCommand("compareWithSelected")}),o}}var Mm=Object.defineProperty,Wm=Object.getOwnPropertyDescriptor,Bm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Wm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Mm(t,i,r),r};class SearchAndCompareViewNode extends De.Re{constructor(e){super(_.Wj,e),this.splatted=!0}get children(){if(null==this._children){this._children=[];const e=this.view.getPinned();0!==e.length&&this._children.push(...e)}return this._children}getChildren(){return 0===this.children.length?[]:(this.view.message=void 0,this.children.sort(((e,t)=>(e.pinned?-1:1)-(t.pinned?-1:1)||t.order-e.order)))}getTreeItem(){this.splatted=!1;const e=new n.TreeItem("SearchAndCompare",n.TreeItemCollapsibleState.Expanded);return e.contextValue=De.Td.SearchAndCompare,e}addOrReplace(e,t){this.children.includes(e)||(t&&this.clear(),this.children.push(e),this.view.triggerNodeChange())}clear(e=!1){if(0===this.children.length)return;this.removeComparePicker(!0);const t=this._children.findIndex((e=>!e.pinned));-1!==t&&this._children.splice(t,this._children.length),e||this.view.triggerNodeChange()}dismiss(e){if(e===this.comparePicker)return void this.removeComparePicker();if(0===this.children.length)return;const t=this.children.indexOf(e);-1!==t&&(this.children.splice(t,1),this.view.triggerNodeChange())}async refresh(){if(0===this.children.length)return;const e=[...(0,Ht.DZ)(this.children,(e=>{const t=void 0!==e.refresh&&e.refresh();return(0,Y.tI)(t)?t:void 0}))];await Promise.all(e)}async compareWithSelected(e,t){const i=this.comparePicker?.selectedRef;if(null!=i){if(null==e)e=i.repoPath;else if(e!==i.repoPath)return void this.selectForCompare(e,t);if(null==t){const n=await Pn.show(e,`Compare ${this.getRefName(i.ref)} with`,"Choose a reference to compare with",{allowEnteringRefs:!0,picked:"string"==typeof i.ref?i.ref:i.ref.ref,include:Rn.BranchesAndTags|Rn.HEAD,sort:{branches:{current:!0}}});if(null==n)return void(null!=this.comparePicker&&(await this.view.show(),await this.view.reveal(this.comparePicker,{focus:!0,select:!0})));t=n.ref}this.removeComparePicker(),await this.view.compare(e,i.ref,t)}}async selectForCompare(e,t,i){if(null==e&&(e=(await Rs.getRepositoryOrShow("Compare"))?.path),null==e)return;this.removeComparePicker(!0);let n,o=i?.prompt??!1;if(null==t){const i=await Pn.show(e,"Compare","Choose a reference to compare",{allowEnteringRefs:{ranges:!0},include:Rn.BranchesAndTags|Rn.HEAD|Rn.WorkingTree,sort:{branches:{current:!0},tags:{}}});if(null==i)return void await this.triggerChange();if(t=i.ref,x.pk.isRange(t)){const e=x.pk.splitRange(t);null!=e&&(t=e.ref1||"HEAD",n=e.ref2||"HEAD")}o=!0}this.comparePicker=new ComparePickerNode(this.view,this,{label:this.getRefName(t),repoPath:e,ref:t}),this.children.splice(0,0,this.comparePicker),(0,a.v)(s.zf.ViewsCanCompare,!0),await this.triggerChange(),await this.view.reveal(this.comparePicker,{focus:!1,select:!0}),o&&await this.compareWithSelected(e,n)}getRefName(e){return"string"==typeof e?x.pk.shorten(e,{strings:{working:"Working Tree"}}):e.label??x.pk.shorten(e.ref)}removeComparePicker(e=!1){if((0,a.v)(s.zf.ViewsCanCompare,!1),null!=this.comparePicker){const t=this.children.indexOf(this.comparePicker);-1!==t&&(this.children.splice(t,1),e||this.triggerChange()),this.comparePicker=void 0}}}Bm([(0,H.cM)()],SearchAndCompareViewNode.prototype,"clear",1),Bm([(0,H.cM)({args:{0:e=>e.toString()}})],SearchAndCompareViewNode.prototype,"dismiss",1),Bm([(0,V.H)(),(0,H.fF)()],SearchAndCompareViewNode.prototype,"refresh",1);class SearchAndCompareView extends ViewBase{constructor(e){super(e,"gitlens.views.searchAndCompare","Search & Compare","searchAndCompareView"),this.configKey="searchAndCompare",(0,a.v)(s.zf.ViewsSearchAndCompareKeepResults,this.keepResults)}getRoot(){return new SearchAndCompareViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("clear"),(()=>this.clear()),this),Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>this.refresh(!0)),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this),Xo(this.getQualifiedCommand("setKeepResultsToOn"),(()=>this.setKeepResults(!0)),this),Xo(this.getQualifiedCommand("setKeepResultsToOff"),(()=>this.setKeepResults(!1)),this),Xo(this.getQualifiedCommand("setShowAvatarsOn"),(()=>this.setShowAvatars(!0)),this),Xo(this.getQualifiedCommand("setShowAvatarsOff"),(()=>this.setShowAvatars(!1)),this),Xo(this.getQualifiedCommand("pin"),this.pin,this),Xo(this.getQualifiedCommand("unpin"),this.unpin,this),Xo(this.getQualifiedCommand("swapComparison"),this.swapComparison,this),Xo(this.getQualifiedCommand("selectForCompare"),(()=>this.selectForCompare())),Xo(this.getQualifiedCommand("compareWithSelected"),this.compareWithSelected,this),Xo(this.getQualifiedCommand("setFilesFilterOnLeft"),(e=>this.setFilesFilter(e,So.Left)),this),Xo(this.getQualifiedCommand("setFilesFilterOnRight"),(e=>this.setFilesFilter(e,So.Right)),this),Xo(this.getQualifiedCommand("setFilesFilterOff"),(e=>this.setFilesFilter(e,void 0)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat"))}get keepResults(){return this.container.storage.getWorkspace("views:searchAndCompare:keepResults",!0)}clear(){this.root?.clear()}dismissNode(e){null!=this.root&&(e instanceof ComparePickerNode||e instanceof ca||e instanceof ns)&&e.canDismiss&&this.root.dismiss(e)}compare(e,t,i){return this.addResults(new ca(this,this.ensureRoot(),e,"string"==typeof t?{ref:t}:t,"string"==typeof i?{ref:i}:i))}compareWithSelected(e,t){this.ensureRoot().compareWithSelected(e,t)}selectForCompare(e,t,i){this.ensureRoot().selectForCompare(e,t,i)}async search(e,t,{label:i,reveal:n},o,r){this.visible||await this.show();const s={label:`Results ${"string"==typeof i?i:i.label}`,queryLabel:i};null==r?await this.addResults(new ns(this,this.root,e,t,s,o),n):await r.edit({pattern:t,labels:s,log:o})}getPinned(){let e=this.container.storage.getWorkspace("views:searchAndCompare:pinned");if(null==e){const t=this.container.storage.getWorkspace("pinned:comparisons");if(null==t)return[];e=Object.create(null);for(const i of Object.values(t))e[ca.getPinnableId(i.path,i.ref1.ref,i.ref2.ref)]={type:"comparison",timestamp:Date.now(),path:i.path,ref1:i.ref1,ref2:i.ref2};this.container.storage.storeWorkspace("views:searchAndCompare:pinned",e),this.container.storage.deleteWorkspace("pinned:comparisons")}const t=Object.create(null);let i=!1;const n=this.ensureRoot(),o=Object.entries(e).sort((([,e],[,t])=>(t.timestamp??0)-(e.timestamp??0))).map((([e,o])=>{if("comparison"===o.type){const r=ca.getPinnableId(o.path,o.ref1.ref,o.ref2.ref);return e!==r?(i=!0,t[r]=o):t[e]=o,new ca(this,n,o.path,{label:o.ref1.label,ref:o.ref1.ref??o.ref1.name??o.ref1.sha},{label:o.ref2.label,ref:o.ref2.ref??o.ref2.name??o.ref2.sha},o.timestamp)}const r=ns.getPinnableId(o.path,o.search);return e!==r?(i=!0,t[r]=o):t[e]=o,new ns(this,n,o.path,{query:(s=o.search).pattern,matchAll:s.matchAll,matchCase:s.matchCase,matchRegex:s.matchRegex},o.labels,void 0,o.timestamp);var s}));return i&&this.container.storage.storeWorkspace("views:searchAndCompare:pinned",t),o}async updatePinned(e,t){let i=this.container.storage.getWorkspace("views:searchAndCompare:pinned");i=(0,Dd.iC)(i,e,t),await this.container.storage.storeWorkspace("views:searchAndCompare:pinned",i),this.triggerNodeChange(this.ensureRoot())}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof SearchAndCompareViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}async addResults(e,t={expand:!0,focus:!0,select:!0}){this.visible||await this.show();this.ensureRoot().addOrReplace(e,!this.keepResults),queueMicrotask((()=>this.reveal(e,t)))}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}setKeepResults(e){this.container.storage.storeWorkspace("views:searchAndCompare:keepResults",e),(0,a.v)(s.zf.ViewsSearchAndCompareKeepResults,e)}setShowAvatars(e){return r.DN.updateEffective(`views.${this.configKey}.avatars`,e)}pin(e){if(e instanceof ca||e instanceof ns)return e.pin()}setFilesFilter(e,t){e instanceof ResultsFilesNode&&(e.filter=t)}swapComparison(e){if(e instanceof ca)return e.swap()}unpin(e){if(e instanceof ca||e instanceof ns)return e.unpin()}}Bm([(0,V.H)((()=>""))],SearchAndCompareView.prototype,"revealRepository",1);var Gm=Object.defineProperty,Vm=Object.getOwnPropertyDescriptor,Hm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Vm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Gm(t,i,r),r};class StashesRepositoryNode extends De.vb{async getChildren(){return null==this.child&&(this.child=new Or(this.uri,this.view,this,this.repo)),this.child.getChildren()}changed(e){return e.changed(A.I6.Stash,A.I6.Unknown,A.du.Any)}}class StashesViewNode extends De.FZ{async getChildren(){if(null==this.children){const e=this.view.container.git.openRepositories;if(0===e.length)return this.view.message="No stashes could be found.",[];this.view.message=void 0;const t=1===e.length;this.children=e.map((e=>new StashesRepositoryNode(_.YY.fromRepoPath(e.path),this.view,this,e,t)))}if(1===this.children.length){const[e]=this.children,t=await e.repo.getStash();return null==t||0===t.commits.size?(this.view.message="No stashes could be found.",this.view.title="Stashes",e.ensureSubscription(),[]):(this.view.message=void 0,this.view.title=`Stashes (${t.commits.size})`,e.getChildren())}return this.view.title="Stashes",this.children}getTreeItem(){return new n.TreeItem("Stashes",n.TreeItemCollapsibleState.Expanded)}}class StashesView extends ViewBase{constructor(e){super(e,"gitlens.views.stashes","Stashes","stashesView"),this.configKey="stashes"}get canReveal(){return this.config.reveal||!r.DN.get("views.repositories.showStashes")}getRoot(){return new StashesViewNode(this)}registerCommands(){return this.container.viewCommands,[Xo(this.getQualifiedCommand("copy"),(()=>(0,ke.P0)(s.Gh.ViewsCopy,this.activeSelection,this.selection)),this),Xo(this.getQualifiedCommand("refresh"),(()=>(this.container.git.resetCaches("stashes"),this.refresh(!0))),this),Xo(this.getQualifiedCommand("setFilesLayoutToAuto"),(()=>this.setFilesLayout(r.Vc.Auto)),this),Xo(this.getQualifiedCommand("setFilesLayoutToList"),(()=>this.setFilesLayout(r.Vc.List)),this),Xo(this.getQualifiedCommand("setFilesLayoutToTree"),(()=>this.setFilesLayout(r.Vc.Tree)),this)]}filterConfigurationChanged(e){return!!(super.filterConfigurationChanged(e)||r.DN.changed(e,"defaultDateFormat")||r.DN.changed(e,"defaultDateLocale")||r.DN.changed(e,"defaultDateShortFormat")||r.DN.changed(e,"defaultDateSource")||r.DN.changed(e,"defaultDateStyle")||r.DN.changed(e,"defaultGravatarsStyle")||r.DN.changed(e,"defaultTimeFormat"))}onSelectionChanged(e){super.onSelectionChanged(e),this.notifySelections()}onVisibilityChanged(e){super.onVisibilityChanged(e),e.visible&&this.notifySelections()}notifySelections(){const e=this.selection?.[0];null!=e&&((e instanceof Uo||e instanceof StashFileNode)&&this.container.events.fire("commit:selected",{commit:e.commit,pin:!1,preserveFocus:!0,preserveVisibility:!0},{source:this.id}),e instanceof StashFileNode&&this.container.events.fire("file:selected",{uri:e.uri,preserveFocus:!0,preserveVisibility:!0},{source:this.id}))}findStash(e,t){const i=Jr.getId(e.repoPath);return this.findNode(Uo.getId(e.repoPath,e.ref),{maxDepth:2,canTraverse:e=>e instanceof StashesViewNode||e instanceof StashesRepositoryNode&&e.id.startsWith(i),token:t})}async revealRepository(e,t){const i=await this.findNode(De.vb.getId(e),{maxDepth:1,canTraverse:e=>e instanceof StashesViewNode||e instanceof De.vb});return void 0!==i&&await this.reveal(i,t),i}async revealStash(e,t){return n.window.withProgress({location:n.ProgressLocation.Notification,title:`Revealing ${x.Wb.toString(e,{icon:!1,quoted:!0})} in the side bar...`,cancellable:!0},(async(i,n)=>{const o=await this.findStash(e,n);if(null!=o)return await this.ensureRevealNode(o,t),o}))}setFilesLayout(e){return r.DN.updateEffective(`views.${this.configKey}.files.layout`,e)}}Hm([(0,V.H)((()=>""))],StashesView.prototype,"revealRepository",1),Hm([(0,V.H)((()=>""))],StashesView.prototype,"revealStash",1);class ViewFileDecorationProvider{constructor(){this._onDidChange=new n.EventEmitter,this.disposable=n.Disposable.from(n.window.registerFileDecorationProvider({provideFileDecoration:(e,t)=>{if("gitlens-view"===e.scheme)return"branch"===e.authority?this.provideBranchCurrentDecoration(e,t):"remote"===e.authority?this.provideRemoteDefaultDecoration(e,t):void 0}}),n.window.registerFileDecorationProvider(this))}get onDidChange(){return this._onDidChange.event}dispose(){this.disposable.dispose()}provideFileDecoration(e,t){if("gitlens-view"===e.scheme)switch(e.authority){case"branch":return this.provideBranchStatusDecoration(e,t);case"commit-file":return this.provideCommitFileStatusDecoration(e,t)}}provideCommitFileStatusDecoration(e,t){const[,,i]=e.path.split("/");switch(i){case"!":return{badge:"I",color:new n.ThemeColor("gitlens.decorations.ignoredForegroundColor"),tooltip:"Ignored"};case"?":return{badge:"U",color:new n.ThemeColor("gitlens.decorations.untrackedForegroundColor"),tooltip:"Untracked"};case"A":return{badge:"A",color:new n.ThemeColor("gitlens.decorations.addedForegroundColor"),tooltip:"Added"};case"C":return{badge:"C",color:new n.ThemeColor("gitlens.decorations.copiedForegroundColor"),tooltip:"Copied"};case"D":return{badge:"D",color:new n.ThemeColor("gitlens.decorations.deletedForegroundColor"),tooltip:"Deleted"};case"M":return{badge:"M",tooltip:"Modified"};case"R":return{badge:"R",color:new n.ThemeColor("gitlens.decorations.renamedForegroundColor"),tooltip:"Renamed"};default:return}}provideBranchStatusDecoration(e,t){const[,,i]=e.path.split("/");switch(i){case v.Yu.Ahead:return{badge:"▲",color:new n.ThemeColor("gitlens.decorations.branchAheadForegroundColor"),tooltip:"Ahead"};case v.Yu.Behind:return{badge:"▼",color:new n.ThemeColor("gitlens.decorations.branchBehindForegroundColor"),tooltip:"Behind"};case v.Yu.Diverged:return{badge:"▼▲",color:new n.ThemeColor("gitlens.decorations.branchDivergedForegroundColor"),tooltip:"Diverged"};case v.Yu.MissingUpstream:return{badge:"!",color:new n.ThemeColor("gitlens.decorations.branchMissingUpstreamForegroundColor"),tooltip:"Missing Upstream"};case v.Yu.UpToDate:return{badge:"",color:new n.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor"),tooltip:"Up to Date"};case v.Yu.Unpublished:return{badge:"▲+",color:new n.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor"),tooltip:"Unpublished"};default:return}}provideBranchCurrentDecoration(e,t){const[,,i,o]=e.path.split("/");if(!o)return;let r;switch(i){case v.Yu.Ahead:r=new n.ThemeColor("gitlens.decorations.branchAheadForegroundColor");break;case v.Yu.Behind:r=new n.ThemeColor("gitlens.decorations.branchBehindForegroundColor");break;case v.Yu.Diverged:r=new n.ThemeColor("gitlens.decorations.branchDivergedForegroundColor");break;case v.Yu.UpToDate:r=new n.ThemeColor("gitlens.decorations.branchUpToDateForegroundColor");break;case v.Yu.Unpublished:r=new n.ThemeColor("gitlens.decorations.branchUnpublishedForegroundColor")}return{badge:s.NE.Check,color:r,tooltip:"Current Branch"}}provideRemoteDefaultDecoration(e,t){const[,i]=e.path.split("/");if(i)return{badge:s.NE.Check,tooltip:"Default Remote"}}}class RequestType{constructor(e){this.name=e}}const qm=new RequestType("git"),jm=new RequestType("repositories/inFolder");var Ym=Object.defineProperty,Qm=Object.getOwnPropertyDescriptor,zm=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Qm(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Ym(t,i,r),r};const Km=()=>!0,Jm=new Map([["blame",Km],["branch",e=>"--contains"===e[1]],["cat-file",Km],["check-mailmap",Km],["check-ref-format",Km],["config",e=>"--get"===e[1]||"--get-regex"===e[1]],["diff",Km],["difftool",Km],["for-each-ref",Km],["log",Km],["ls-files",Km],["ls-tree",Km],["merge-base",Km],["remote",e=>"-v"===e[1]||"get-url"===e[1]],["rev-list",Km],["rev-parse",Km],["show",Km],["show-ref",Km],["stash",e=>"list"===e[1]],["status",Km],["symbolic-ref",Km],["tag",e=>"-l"===e[1]]]),Xm=/^[/|\\]/,Zm=class{constructor(e,t,i){this._api=e,this._service=t,this.container=i,this._localToSharedPaths=new Map,this._sharedToLocalPaths=new Map,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this._disposable=n.Disposable.from(n.workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged,this)),this.onRequest(qm,this.onGitCommandRequest.bind(this)),this.onRequest(jm,this.onGetRepositoriesForUriRequest.bind(this)),this.onWorkspaceFoldersChanged()}static async share(e,t){const i=await e.shareService(this.ServiceId);if(null==i)throw new Error("Failed to share host service");return new Zm(e,i,t)}dispose(){this._disposable.dispose(),this._api.unshareService(Zm.ServiceId)}onRequest(e,t){this._service.onRequest(e.name,((e,i)=>t(e[0],i)))}onAvailabilityChanged(e){}onWorkspaceFoldersChanged(e){if(null==n.workspace.workspaceFolders||0===n.workspace.workspaceFolders.length)return;const t=(0,G.UH)();let i,o;this._localToSharedPaths.clear(),this._sharedToLocalPaths.clear();for(const e of n.workspace.workspaceFolders)i=(0,j.AH)(e.uri.fsPath),o=(0,j.AH)(this.convertLocalUriToShared(e.uri).toString()),B.Yd.debug(t,`shared='${o}' ↔ local='${i}'`),this._localToSharedPaths.set(i,o),this._sharedToLocalPaths.set(o,i);let r=(0,q.v_)(this._sharedToLocalPaths.values(),"|");r=r.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._localPathsRegex=new RegExp(`(${r})`,"gi");let s=(0,q.v_)(this._localToSharedPaths.values(),"|");s=s.replace(/(\/|\\)/g,"[\\\\/|\\\\]"),this._sharedPathsRegex=new RegExp(`^(${s})`,"i")}async onGitCommandRequest(e,t){const{options:i,args:n}=e,o=Jm.get(e.args[0]);if(null==o||!o(e.args))throw new Error(`Git ${e.args[0]} command is not allowed`);let r=!1;if(null!=i.cwd&&i.cwd.length>0&&null!=this._sharedToLocalPaths)if(this._sharedPathsRegex?.test(i.cwd))i.cwd=(0,j.AH)(i.cwd).replace(this._sharedPathsRegex,((e,t)=>{r||(r="/~0"===t);const i=this._sharedToLocalPaths.get(t);return null!=i?i:t}));else if(Xm.test(i.cwd)){const e=this._sharedToLocalPaths.get("vsls:/~0");null!=e&&(r=!0,i.cwd=(0,j.AH)(this.container.git.getAbsoluteUri(i.cwd,e).fsPath))}let s=!1,a=-1;for(const e of n)a++,"--"!==e?s&&"string"==typeof e&&(r&&Xm.test(e[0])&&n.splice(a,1,e.substr(1)),this._sharedPathsRegex?.test(e)&&n.splice(a,1,(0,j.AH)(e).replace(this._sharedPathsRegex,((e,t)=>{const i=this._sharedToLocalPaths.get(t);return null!=i?i:t})))):s=!0;let l=await function(e,...t){return Promise.resolve("")}(i,...n);return"string"==typeof l?(null!=this._localPathsRegex&&l.length>0&&(l=l.replace(this._localPathsRegex,((e,t)=>{const i=this._localToSharedPaths.get((0,j.AH)(t));return null!=i?i:t}))),{data:l}):{data:l.toString("binary"),isBuffer:!0}}async onGetRepositoriesForUriRequest(e,t){const i=[],o=this.convertSharedUriToLocal(n.Uri.parse(e.folderUri,!0)),r=this.container.git.getRepository(o);if(null!=r){const e=this.convertLocalUriToShared(r.uri);i.push({folderUri:e.toString(),root:r.root,closed:r.closed})}return{repositories:i}}convertLocalUriToShared(e){const t=(0,G.UH)();let i=this._api.convertLocalUriToShared(e);B.Yd.debug(t,`LiveShare.convertLocalUriToShared(${e.toString(!0)}) returned ${i.toString(!0)}`);const o=e.path;let r=i.path;if(i.authority.length>0&&(r=`/${i.authority}${r}`),new RegExp(`${o}$`,"i").test(r))if(r.length===o.length){const t=n.workspace.getWorkspaceFolder(e);i=i.with({path:`/~${t.index}`})}else i=i.with({path:r.substr(0,r.length-o.length)});else if(!r.startsWith("/~")){const t=n.workspace.getWorkspaceFolder(e);i=i.with({path:`/~${t.index}${r}`})}return i}convertSharedUriToLocal(e){(0,j.tD)(e.path)&&(e=e.with({path:`${e.path}/`}));const t=this._api.convertSharedUriToLocal(e);let i=t.path;const n=e.path;return i.endsWith(n)&&(i=i.substr(0,i.length-n.length)),47===i.charCodeAt(i.length-1)&&(i=i.slice(0,-1)),t.with({path:i})}};let eg=Zm;eg.ServiceId="proxy",zm([(0,H.cM)()],eg.prototype,"onAvailabilityChanged",1),zm([(0,H.fF)()],eg.prototype,"onWorkspaceFoldersChanged",1),zm([(0,H.cM)()],eg.prototype,"onGitCommandRequest",1),zm([(0,H.cM)()],eg.prototype,"onGetRepositoriesForUriRequest",1),zm([(0,H.fF)({exit:e=>`returned ${e.toString(!0)}`})],eg.prototype,"convertLocalUriToShared",1),zm([(0,H.cM)()],eg,"share",1);var tg=Object.defineProperty,ig=Object.getOwnPropertyDescriptor,ng=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ig(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&tg(t,i,r),r};const og=class{constructor(e,t,i){this._api=e,this._service=t,this.container=i,t.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this)),this.onAvailabilityChanged(t.isServiceAvailable)}static async connect(e,t){const i=(0,G.UH)();try{const i=await e.getSharedService(eg.ServiceId);if(null==i)throw new Error("Failed to connect to host service");return new og(e,i,t)}catch(e){return void B.Yd.error(e,i)}}dispose(){}onAvailabilityChanged(e){e?this.container.git.setEnabledContext(!0):(this.container.git.setEnabledContext(!1),n.window.showWarningMessage("GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed."))}async git(e,...t){const i=await this.sendRequest(qm,{options:e,args:t});return i.isBuffer?Buffer.from(i.data,"binary"):i.data}async getRepositoriesForUri(e){return(await this.sendRequest(jm,{folderUri:e.toString()})).repositories}sendRequest(e,t,i){return this._service.request(e.name,[t])}};let rg=og;ng([(0,H.cM)()],rg.prototype,"onAvailabilityChanged",1),ng([(0,H.cM)()],rg.prototype,"git",1),ng([(0,H.cM)()],rg.prototype,"getRepositoriesForUri",1),ng([(0,H.fF)()],rg.prototype,"sendRequest",1),ng([(0,H.cM)()],rg,"connect",1);var sg=Object.defineProperty,ag=Object.getOwnPropertyDescriptor,lg=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ag(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&sg(t,i,r),r};function cg(e){switch(e){case"available":return{status:"online",statusText:"Available"};case"away":return{status:"away",statusText:"Away"};case"busy":return{status:"busy",statusText:"Busy"};case"doNotDisturb":return{status:"dnd",statusText:"DND"};default:return{status:"offline",statusText:"Offline"}}}class VslsController{constructor(e){this.container=e,this._readonly=!1,this._ready=(0,Y.PQ)(),this._disposable=n.Disposable.from((0,z.IH)(e.onReady)(this.onReady,this))}dispose(){this._ready.fulfill(),this._disposable.dispose(),this._host?.dispose(),this._guest?.dispose()}onReady(){this.initialize()}async initialize(){n.workspace.workspaceFolders?.some((e=>e.uri.scheme===s.sN.Vsls))&&this.setReadonly(!0);try{this._api=this.getLiveShareApi();const e=await this._api;if(null==e)return(0,a.v)(s.zf.Vsls,!1),void this._ready.fulfill();(0,a.v)(s.zf.Vsls,!0),this._disposable=n.Disposable.from(this._disposable,e.onDidChangeSession((t=>this.onLiveShareSessionChanged(e,t)),this)),this.onLiveShareSessionChanged(e,{session:e.session})}catch(e){B.Yd.error(e)}}async onLiveShareSessionChanged(e,t){switch(this._host?.dispose(),this._host=void 0,this._guest?.dispose(),this._guest=void 0,t.session.role){case 1:this.setReadonly(!1),(0,a.v)(s.zf.Vsls,"host"),r.DN.get("liveshare.allowGuestAccess")&&(this._host=await eg.share(e,this.container)),this._ready.fulfill();break;case 2:this.setReadonly(!0),(0,a.v)(s.zf.Vsls,"guest"),this._guest=await rg.connect(e,this.container),this._ready.fulfill();break;default:this.setReadonly(!1),(0,a.v)(s.zf.Vsls,!0),this._ready=(0,Y.PQ)()}}async getLiveShareApi(){try{const e=n.extensions.getExtension("ms-vsliveshare.vsliveshare");if(null!=e){const t=e.isActive?e.exports:await e.activate();return await t.getApi("1.0.4753")??void 0}}catch{}}get readonly(){return this._readonly}setReadonly(e){this._readonly=e,(0,a.v)(s.zf.Readonly,!!e||void 0)}async guest(){return null!=this._guest||await this._ready.promise,this._guest}async getContact(e){if(null==e)return;const t=await this._api;if(null==t)return;return(await t.getContacts([e])).contacts[e]}async getContacts(e){const t=await this._api;if(null==t)return;const i=await t.getContacts(e);return Object.values(i.contacts)}async getContactPresence(e){const t=await this.getContact(e);if(null!=t)return cg(t.status)}async getContactsPresence(e){const t=await this.getContacts(e);if(null!=t)return new Map(Object.values(t).map((e=>[e.email,cg(e.status)])))}maybeGetPresence(e){return this.getContactPresence(e)}async invite(e){if(null==e)return;const t=await this.getContact(e);return null!=t?t.invite():void 0}async startSession(){const e=await this._api;if(null!=e)return e.share()}}lg([(0,H.fF)()],VslsController.prototype,"getContact",1),lg([(0,H.fF)({args:{0:e=>e.length}})],VslsController.prototype,"getContacts",1),lg([(0,H.fF)()],VslsController.prototype,"getContactPresence",1),lg([(0,H.fF)({args:{0:e=>e.length}})],VslsController.prototype,"getContactsPresence",1),lg([(0,H.fF)(),ur(250)],VslsController.prototype,"maybeGetPresence",1);const hg=new IpcCommandType("commit/actions"),ug=new IpcCommandType("commit/file/actions"),dg=new IpcCommandType("commit/file/open"),pg=new IpcCommandType("commit/file/openOnRemote"),mg=new IpcCommandType("commit/file/compareWorking"),gg=new IpcCommandType("commit/file/comparePrevious"),fg=new IpcCommandType("commit/pickCommit"),wg=new IpcCommandType("commit/searchCommit"),_g=new IpcCommandType("commit/autolinkSettings"),vg=new IpcCommandType("commit/pin"),yg=new IpcCommandType("commit/preferences"),bg=new IpcNotificationType("commit/didChange");new IpcNotificationType("commit/didChange/rich");var Cg=Object.defineProperty,Sg=Object.getOwnPropertyDescriptor,kg=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?Sg(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Cg(t,i,r),r};class CommitDetailsWebviewView extends tm{constructor(e){super(e,"gitlens.views.commitDetails","commitDetails.html","Commit Details",`${s.zf.WebviewViewPrefix}commitDetails`,"commitDetailsView"),this._bootstraping=!0,this._pinned=!1,this._cancellationTokenSource=void 0,this._notifyDidChangeStateDebounced=void 0,this._context={pinned:!1,commit:void 0,preferences:void 0,richStateLoaded:!1,formattedMessage:void 0,autolinkedIssues:void 0,pullRequest:void 0,dateFormat:r.DN.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",indentGuides:r.DN.getAny("workbench.tree.renderIndentGuides")??"onHover"},this.disposables.push(r.DN.onDidChange(this.onConfigurationChanged,this),r.DN.onDidChangeAny(this.onAnyConfigurationChanged,this),this.container.events.on("commit:selected",(0,K.Ds)(this.onCommitSelected,250),this))}onCommitSelected(e){null!=e.data&&this.show(e.data)}async show(e){if(!this._pinned||e?.pin||!this.visible){if(null!=e){let t,i;if(({commit:t,pin:i,...e}=e),null==t&&(t=this.getBestCommitOrStash()),null!=t&&!this._context.commit?.ref.startsWith(t.ref)){if(!(0,y.f_)(t))if("stash"===t.refType){t=(await this.container.git.getStash(t.repoPath))?.commits.get(t.ref)}else t=await this.container.git.getCommit(t.repoPath,t.ref);this.updateCommit(t,{pinned:i??!1})}}if(!e?.preserveVisibility)return super.show(e)}}async includeBootstrap(){return this._bootstraping=!0,this._context={...this._context,...this._pendingContext},this._pendingContext=void 0,this.getState(this._context)}onInitializing(){if(null==this._context.preferences&&this.updatePendingContext({preferences:{autolinksExpanded:this.container.storage.getWorkspace("views:commitDetails:autolinksExpanded"),avatars:r.DN.get("views.commitDetails.avatars"),dismissed:this.container.storage.get("views:commitDetails:dismissed"),files:r.DN.get("views.commitDetails.files")}}),null==this._context.commit){const e=this.getBestCommitOrStash();null!=e&&this.updateCommit(e,{immediate:!1})}}onVisibilityChanged(e){this.ensureTrackers(),e&&(this._bootstraping&&(this._bootstraping=!1,null==this._pendingContext)||this.updateState(!0))}onAnyConfigurationChanged(e){e.affectsConfiguration("workbench.tree.renderIndentGuides")&&(this.updatePendingContext({indentGuides:r.DN.getAny("workbench.tree.renderIndentGuides")??"onHover"}),this.updateState())}onConfigurationChanged(e){r.DN.changed(e,"defaultDateFormat")&&(this.updatePendingContext({dateFormat:r.DN.get("defaultDateFormat")??"MMMM Do, YYYY h:mma"}),this.updateState()),r.DN.changed(e,"views.commitDetails")&&((r.DN.changed(e,"views.commitDetails.files")||r.DN.changed(e,"views.commitDetails.avatars"))&&this.updatePendingContext({preferences:{...this._context.preferences,...this._pendingContext?.preferences,avatars:r.DN.get("views.commitDetails.avatars"),files:r.DN.get("views.commitDetails.files")}}),null!=this._context.commit&&(r.DN.changed(e,"views.commitDetails.autolinks")||r.DN.changed(e,"views.commitDetails.pullRequests"))&&this.updateCommit(this._context.commit,{force:!0}),this.updateState())}ensureTrackers(){if(this._visibilityDisposable?.dispose(),this._visibilityDisposable=void 0,this._pinned||!this.visible)return;const{lineTracker:e}=this.container;this._visibilityDisposable=n.Disposable.from(e.subscribe(this,e.onDidChangeActiveLines(this.onActiveLinesChanged,this)));const t=this._pendingContext?.commit??this.getBestCommitOrStash();this.updateCommit(t,{immediate:!1})}onReady(){this.updateState(!1)}onMessageReceived(e){switch(e.method){case pg.method:Wd(pg,e,(e=>{this.openFileOnRemote(e)}));break;case dg.method:Wd(dg,e,(e=>{this.openFile(e)}));break;case mg.method:Wd(mg,e,(e=>{this.openFileComparisonWithWorking(e)}));break;case gg.method:Wd(gg,e,(e=>{this.openFileComparisonWithPrevious(e)}));break;case ug.method:Wd(ug,e,(e=>{this.showFileActions(e)}));break;case hg.method:Wd(hg,e,(e=>{switch(e.action){case"graph":if(null==this._context.commit)return;(0,ke.P0)(s.Gh.ShowInCommitGraph,{ref:x.Wb.fromRevision(this._context.commit)});break;case"more":this.showCommitActions();break;case"scm":(0,ke.dO)(s.nA.ShowSCM);break;case"sha":e.alt?this.showCommitPicker():null!=this._context.commit&&(0,ke.P0)(s.Gh.CopyShaToClipboard,{sha:this._context.commit.sha})}}));break;case fg.method:Wd(fg,e,(e=>this.showCommitPicker()));break;case wg.method:Wd(wg,e,(e=>this.showCommitSearch()));break;case _g.method:Wd(_g,e,(e=>this.showAutolinkSettings()));break;case vg.method:Wd(vg,e,(e=>this.updatePinned(e.pin??!1,!0)));break;case yg.method:Wd(yg,e,(e=>this.updatePreferences(e)))}}onActiveLinesChanged(e){if(e.pending)return;let t;null==e.editor&&((0,a.fw)("gitlens:webview:graph:active")||(0,a.fw)("gitlens:webview:rebaseEditor:active"))&&(t=this._pendingContext?.commit??this._context.commit,null==t)||(null==t&&(t=null!=e.selections?this.container.lineTracker.getState(e.selections[0].active)?.commit:void 0),this.updateCommit(t))}async getState(e){let t;if(null!=this._cancellationTokenSource&&(this._cancellationTokenSource.cancel(),this._cancellationTokenSource.dispose(),this._cancellationTokenSource=void 0),null!=e.commit&&(t=await this.getDetailsModel(e.commit,e.formattedMessage),!e.richStateLoaded)){this._cancellationTokenSource=new n.CancellationTokenSource;const t=this._cancellationTokenSource.token;setTimeout((()=>{t.isCancellationRequested||this.updateRichState(e,t)}),100)}return function(e){try{let t=function(e,t){if(t instanceof Date)return t.getTime();if(t instanceof Map||t instanceof Set)return[...t.entries()];if(t instanceof Function||t instanceof Error)return;if(t instanceof RegExp)return t.toString();const i=this[e];return i instanceof Date?i.getTime():t};return JSON.parse(JSON.stringify(e,t))}catch(e){throw e}}({pinned:e.pinned,includeRichContent:e.richStateLoaded,preferences:e.preferences,selected:t,autolinkedIssues:e.autolinkedIssues?.map(ue.Gj),pullRequest:null!=e.pullRequest?(0,rn.l1)(e.pullRequest):void 0,dateFormat:e.dateFormat,indentGuides:e.indentGuides})}async updateRichState(e,t){const{commit:i}=e;if(null==i)return;const n=await this.container.git.getBestRemoteWithRichProvider(i.repoPath);if(t.isCancellationRequested)return;let o,s;if(null!=n?.provider){const[e,a]=await Promise.allSettled([r.DN.get("views.commitDetails.autolinks.enabled")&&r.DN.get("views.commitDetails.autolinks.enhanced")?this.container.autolinks.getLinkedIssuesAndPullRequests(i.message??i.summary,n):void 0,r.DN.get("views.commitDetails.pullRequests.enabled")?i.getAssociatedPullRequest({remote:n}):void 0]);if(t.isCancellationRequested)return;o=(0,Y.Sb)(e),s=(0,Y.Sb)(a)}const a=this.getFormattedMessage(i,n,o);null!=s&&o?.delete(s.id),this.updatePendingContext({richStateLoaded:!0,formattedMessage:a,autolinkedIssues:null!=o?[...o.values()]:void 0,pullRequest:s}),this.updateState()}updateCommit(e,t){if(t?.force||this._context.commit?.sha!==e?.sha){if(this._commitDisposable?.dispose(),e?.isUncommitted){const t=this.container.git.getRepository(e.repoPath);this._commitDisposable=n.Disposable.from(t.startWatchingFileSystem(),t.onDidChangeFileSystem((()=>{this.updatePendingContext({commit:e},!0),this.updateState()})))}this.updatePendingContext({commit:e,richStateLoaded:Boolean(e?.isUncommitted)||!(0,a.fw)(s.zf.HasConnectedRemotes),formattedMessage:void 0,autolinkedIssues:void 0,pullRequest:void 0},t?.force),null!=t?.pinned&&this.updatePinned(t?.pinned),this.updateState(t?.immediate??!0)}}updatePinned(e,t){e!==this._context.pinned&&(this._pinned=e,this.ensureTrackers(),this.updatePendingContext({pinned:e}),this.updateState(t))}updatePreferences(e){if(this._context.preferences?.autolinksExpanded===e.autolinksExpanded&&this._context.preferences?.avatars===e.avatars&&this._context.preferences?.dismissed===e.dismissed&&this._context.preferences?.files===e.files&&this._context.preferences?.files?.compact===e.files?.compact&&this._context.preferences?.files?.layout===e.files?.layout&&this._context.preferences?.files?.threshold===e.files?.threshold)return;const t={...this._context.preferences,...this._pendingContext?.preferences};null!=e.autolinksExpanded&&this._context.preferences?.autolinksExpanded!==e.autolinksExpanded&&(this.container.storage.storeWorkspace("views:commitDetails:autolinksExpanded",e.autolinksExpanded),t.autolinksExpanded=e.autolinksExpanded),null!=e.avatars&&this._context.preferences?.avatars!==e.avatars&&(r.DN.updateEffective("views.commitDetails.avatars",e.avatars),t.avatars=e.avatars),null!=e.dismissed&&this._context.preferences?.dismissed!==e.dismissed&&(this.container.storage.store("views:commitDetails:dismissed",e.dismissed),t.dismissed=e.dismissed),null!=e.files&&this._context.preferences?.files!==e.files&&(this._context.preferences?.files?.compact!==e.files?.compact&&r.DN.updateEffective("views.commitDetails.files.compact",e.files?.compact),this._context.preferences?.files?.layout!==e.files?.layout&&r.DN.updateEffective("views.commitDetails.files.layout",e.files?.layout),this._context.preferences?.files?.threshold!==e.files?.threshold&&r.DN.updateEffective("views.commitDetails.files.threshold",e.files?.threshold),t.files=e.files),this.updatePendingContext({preferences:t})}updatePendingContext(e,t=!1){let i=!1;for(const[o,r]of Object.entries(e)){const e=this._context[o];!t&&(e instanceof n.Uri||r instanceof n.Uri)&&e?.toString()===r?.toString()||(t||e!==r||void 0===r&&!(o in this._context)||null!=this._pendingContext&&o in this._pendingContext)&&(null==this._pendingContext&&(this._pendingContext={}),this._pendingContext[o]=r,i=!0)}return i}updateState(e=!1){this.isReady&&this.visible&&(e?this.notifyDidChangeState():(null==this._notifyDidChangeStateDebounced&&(this._notifyDidChangeStateDebounced=(0,K.Ds)(this.notifyDidChangeState.bind(this),500)),this._notifyDidChangeStateDebounced()))}async notifyDidChangeState(){if(!this.isReady||!this.visible)return!1;const e=(0,G.UH)();if(this._notifyDidChangeStateDebounced?.cancel(),null==this._pendingContext)return!1;const t={...this._context,...this._pendingContext};return n.window.withProgress({location:{viewId:this.id}},(async()=>{try{await this.notify(bg,{state:await this.getState(t)})&&(this._context=t,this._pendingContext=void 0)}catch(t){B.Yd.error(e,t)}}))}getBestCommitOrStash(){if(this._pinned)return;let e;if(null!=n.window.activeTextEditor){const{lineTracker:t}=this.container,i=t.selections?.[0].active;if(null!=i&&(e=t.getState(i)?.commit,null!=e))return e}else if(((0,a.fw)("gitlens:webview:graph:active")||(0,a.fw)("gitlens:webview:rebaseEditor:active"))&&(e=this._pendingContext?.commit??this._context.commit,null!=e))return e;const{commitsView:t}=this.container;let i=t.activeSelection;if(null!=i&&(i instanceof uo||i instanceof FileRevisionAsCommitNode||i instanceof ro)&&(e=i.commit,null!=e))return e;const{stashesView:o}=this.container;return i=o.activeSelection,null!=i&&(i instanceof Uo||i instanceof StashFileNode)&&(e=i.commit),e}async getDetailsModel(e,t){const[i,o,r]=await Promise.allSettled([e.hasFullDetails()?e:e.ensureFullDetails().then((()=>e)),e.author.getAvatarUri(e,{size:32}),this.container.git.getBestRemoteWithRichProvider(e.repoPath,{includeDisconnected:!0})]);e=(0,Y.Sb)(i,e);const s=(0,Y.Sb)(o),a=(0,Y.Sb)(r);let l;if(null==t&&(t=this.getFormattedMessage(e,a)),null!=e.message){const t=this.container.autolinks.getAutolinks(e.message);if(null!=a){const i=this.container.autolinks.getAutolinks(e.message,a);l=new Map((0,q.G0)(i,t))}else l=t}return{sha:e.sha,shortSha:e.shortSha,isStash:"stash"===e.refType,message:t,author:{...e.author,avatar:s?.toString(!0)},files:e.files?.map((({status:e,repoPath:t,path:i,originalPath:o})=>{const r=T.$9.getStatusIcon(e);return{path:i,originalPath:o,status:e,repoPath:t,icon:{dark:this._view.webview.asWebviewUri(n.Uri.joinPath(this.container.context.extensionUri,"images","dark",r)).toString(),light:this._view.webview.asWebviewUri(n.Uri.joinPath(this.container.context.extensionUri,"images","light",r)).toString()}}})),stats:e.stats,autolinks:null!=l?[...(0,q.UI)(l.values(),_e)]:void 0}}getFormattedMessage(e,t,i){let n=CommitFormatter.fromTemplate("${message}",e);const o=n.indexOf("\n");return-1!==o&&(n=`${n.substring(0,o)}\0\n\0${n.substring(o+1)}`),r.DN.get("views.commitDetails.autolinks.enabled")?this.container.autolinks.linkify(n,"html",null!=t?[t]:void 0,i):n}async getFileCommitFromParams(e){const t=await(this._context.commit?.getCommitForFile(e.path));return null!=t?[t,t.file]:void 0}showAutolinkSettings(){(0,ke.P0)(s.Gh.ShowSettingsPageAndJumpToAutolinks)}showCommitSearch(){Pe({command:"search",state:{openPickInView:!0}})}showCommitPicker(){Pe({command:"log",state:{reference:"HEAD",repo:this._context.commit?.repoPath,openPickInView:!0}})}showCommitActions(){null==this._context.commit||this._context.commit.isUncommitted||yt(this._context.commit)}async showFileActions(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,n]=t;this.updatePinned(!0,!0),yt(i,n)}async openFileComparisonWithWorking(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,n]=t;this.updatePinned(!0,!0),dt(n.path,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)})}async openFileComparisonWithPrevious(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,n]=t;this.updatePinned(!0,!0),ht(n.path,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)}),this.container.events.fire("file:selected",{uri:n.uri},{source:this.id})}async openFile(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,n]=t;this.updatePinned(!0,!0),mt(n.path,i,{preserveFocus:!0,preview:!0,...this.getShowOptions(e)})}async openFileOnRemote(e){const t=await this.getFileCommitFromParams(e);if(null==t)return;const[i,o]=t;!async function(e,t){let i;if(e instanceof n.Uri)i=e;else{if(null==t)throw new Error("Invalid arguments");if(i=_.YY.fromFile(e,t.repoPath,t.ref),"string"!=typeof e&&"?"===e.status)return}await(0,ke.P0)(s.Gh.OpenFileOnRemote,i,{sha:t?.ref})}(o.path,i)}getShowOptions(e){return(0,a.fw)("gitlens:webview:graph:active")||(0,a.fw)("gitlens:webview:rebaseEditor:active")?{...e.showOptions,viewColumn:n.ViewColumn.Beside}:e.showOptions}}kg([(0,H.cM)({args:{0:e=>`{"commit":${e?.commit?.ref},"pin":${e?.pin},"preserveFocus":${e?.preserveFocus},"preserveVisibility":${e?.preserveVisibility}}`}})],CommitDetailsWebviewView.prototype,"show",1),kg([(0,H.fF)({args:!1})],CommitDetailsWebviewView.prototype,"getState",1);var Pg=(e=>(e.DismissedWelcome="dismissed:welcome",e.OpenedSCM="opened:scm",e))(Pg||{});const Rg=new IpcCommandType("home/step/complete"),Dg=new IpcCommandType("home/section/dismiss"),$g=new IpcCommandType("home/status/dismiss"),Tg=new IpcCommandType("home/banner/dismiss"),Fg=new IpcNotificationType("subscription/didChange"),xg=new IpcNotificationType("extensionEnabled/didChange"),Og=new IpcNotificationType("configuration/didChange"),Ag=new IpcNotificationType("layout/didChange");class HomeWebviewView extends tm{constructor(e){super(e,"gitlens.views.home","home.html","Home",`${s.zf.WebviewViewPrefix}home`,"homeView"),this._validateSubscriptionDebounced=void 0,this.disposables.push(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),(0,a.ve)((e=>{e===s.zf.Disabled&&this.notifyExtensionEnabled()})),r.DN.onDidChange((e=>{this.onConfigurationChanged(e)}),this),this.container.storage.onDidChange((e=>{this.onStorageChanged(e)})))}async show(e){if(await Br())return super.show(e)}async onSubscriptionChanged(e){await this.container.storage.store("home:status:pinned",!0),this.notifyDidChangeData(e.current)}onConfigurationChanged(e){r.DN.changed(e,"plusFeatures.enabled")&&this.notifyDidChangeConfiguration()}onStorageChanged(e){"views:layout"===e.key&&this.notifyDidChangeLayout()}onVisibilityChanged(e){e?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}onWindowFocusChanged(e){e&&this.visible?queueMicrotask((()=>{this.validateSubscription()})):this._validateSubscriptionDebounced?.cancel()}registerCommands(){return[(0,ke.xR)(`${this.id}.refresh`,(()=>this.refresh()),this),(0,ke.xR)("gitlens.home.toggleWelcome",(async()=>{const e=!this.welcomeVisible;await this.container.storage.store("views:welcome:visible",e),e&&(await this.container.storage.store("home:actions:completed",[]),await this.container.storage.store("home:steps:completed",[]),await this.container.storage.store("home:sections:dismissed",[])),this.refresh()})),(0,ke.xR)("gitlens.home.restoreWelcome",(async()=>{await this.container.storage.store("home:steps:completed",[]),await this.container.storage.store("home:sections:dismissed",[]),this.refresh()})),(0,ke.xR)("gitlens.home.showSCM",(async()=>{const e=this.container.storage.get("home:actions:completed",[]);e.includes(Pg.OpenedSCM)||(e.push(Pg.OpenedSCM),await this.container.storage.store("home:actions:completed",e),this.notifyDidChangeData()),await(0,ke.dO)(s.nA.ShowSCM)}))]}onMessageReceived(e){switch(e.method){case Rg.method:Wd(Rg,e,(e=>this.completeStep(e)));break;case Dg.method:Wd(Dg,e,(e=>this.dismissSection(e)));break;case $g.method:Wd($g,e,(e=>this.dismissPinStatus()));break;case Tg.method:Wd(Tg,e,(e=>this.dismissBanner(e)))}}completeStep({id:e,completed:t=!1}){const i=this.container.storage.get("home:steps:completed",[]),n=i.includes(e);!n&&t?i.push(e):n&&!t&&i.splice(i.indexOf(e),1),this.container.storage.store("home:steps:completed",i)}dismissSection(e){const t=this.container.storage.get("home:sections:dismissed",[]);t.includes(e.id)||(t.push(e.id),this.container.storage.store("home:sections:dismissed",t))}dismissBanner(e){const t=this.container.storage.get("home:banners:dismissed",[]);t.includes(e.id)||t.push(e.id),this.container.storage.store("home:banners:dismissed",t)}dismissPinStatus(){this.container.storage.store("home:status:pinned",!1)}async includeBootstrap(){return this.getState()}get welcomeVisible(){return this.container.storage.get("views:welcome:visible",!0)}async getRepoVisibility(){return await this.container.git.visibility()}async getSubscription(e){const t=[...this.container.storage.get("home:actions:completed",[])];this.welcomeVisible||t.push(Pg.DismissedWelcome);const i=e??await this.container.subscription.getSubscription(!0);let n;return n=i.account?.email?(0,b.GV)(i.account.email,34).toString():`${this.getWebRoot()??""}/media/gitlens-logo.webp`,{subscription:i,completedActions:t,avatar:n}}getPinStatus(){return this.container.storage.get("home:status:pinned")??!0}async getState(e){const t=await this.getSubscription(e),i=this.container.storage.get("home:steps:completed",[]),n=this.container.storage.get("home:sections:dismissed",[]),o=this.container.storage.get("home:banners:dismissed",[]);return{extensionEnabled:this.getExtensionEnabled(),webroot:this.getWebRoot(),subscription:t.subscription,completedActions:t.completedActions,plusEnabled:this.getPlusEnabled(),visibility:await this.getRepoVisibility(),completedSteps:i,dismissedSections:n,avatar:t.avatar,layout:this.getLayout(),pinStatus:this.getPinStatus(),dismissedBanners:o}}notifyDidChangeData(e){if(!this.isReady)return!1;const t=async()=>({...await this.getSubscription(e),pinStatus:this.getPinStatus()});return n.window.withProgress({location:{viewId:this.id}},(async()=>this.notify(Fg,await t())))}getExtensionEnabled(){return!(0,a.fw)(s.zf.Disabled,!1)}notifyExtensionEnabled(){this.isReady&&this.notify(xg,{extensionEnabled:this.getExtensionEnabled()})}getPlusEnabled(){return r.DN.get("plusFeatures.enabled")}notifyDidChangeConfiguration(){this.isReady&&this.notify(Og,{plusEnabled:this.getPlusEnabled()})}getLayout(){const e=this.container.storage.get("views:layout");return null!=e?e:Oc.SourceControl}notifyDidChangeLayout(){this.isReady&&this.notify(Ag,{layout:this.getLayout()})}async validateSubscription(){null==this._validateSubscriptionDebounced&&(this._validateSubscriptionDebounced=(0,K.Ds)(this.validateSubscriptionCore,1e3)),await this._validateSubscriptionDebounced()}async validateSubscriptionCore(){if(null==this._validating){this._validating=this.container.subscription.validate();try{await this._validating}finally{this._validating=void 0}}}}const Ig=new IpcCommandType("rebase/abort"),Eg=new IpcCommandType("rebase/disable"),Ng=new IpcCommandType("rebase/search"),Ug=new IpcCommandType("rebase/start"),Lg=new IpcCommandType("rebase/switch"),Mg=new IpcCommandType("rebase/reorder"),Wg=new IpcCommandType("rebase/change/entry"),Bg=new IpcCommandType("rebase/move/entry"),Gg=new IpcCommandType("rebase/selection/update"),Vg=new IpcNotificationType("rebase/didChange");var Hg=Object.defineProperty,qg=Object.getOwnPropertyDescriptor,jg=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?qg(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&Hg(t,i,r),r};const Yg=2**30;let Qg=0;let zg=0;const Kg=/^\s?#\s?Rebase\s([0-9a-f]+)(?:..([0-9a-f]+))?\sonto\s([0-9a-f]+)\s.*$/im,Jg=/^\s?(p|pick|r|reword|e|edit|s|squash|f|fixup|d|drop)\s([0-9a-f]+?)\s(.*)$/gm,Xg=new Map([["p","pick"],["pick","pick"],["r","reword"],["reword","reword"],["e","edit"],["edit","edit"],["s","squash"],["squash","squash"],["f","fixup"],["fixup","fixup"],["d","drop"],["drop","drop"]]);class RebaseEditorProvider{constructor(e){this.container=e,this.ascending=!1,this._disableAfterNextUse=!1,this._disposable=n.Disposable.from(n.window.registerCustomEditorProvider("gitlens.rebase",this,{supportsMultipleEditorsPerDocument:!1,webviewOptions:{enableFindWidget:!0,retainContextWhenHidden:!0}})),this.ascending="asc"===r.DN.get("rebaseEditor.ordering")}dispose(){this._disposable.dispose()}get contextKeyPrefix(){return`${s.zf.WebviewPrefix}rebaseEditor`}get enabled(){const e=r.DN.inspectAny("workbench.editorAssociations")?.globalValue;if(null==e||0===e.length)return!0;if(Array.isArray(e)){const t=e.find((e=>"git-rebase-todo"===e.filenamePattern));return null==t||"gitlens.rebase"===t.viewType}const t=e["git-rebase-todo"];return null==t||"gitlens.rebase"===t}async enableForNextUse(){this.enabled||(await this.setEnabled(!0),this._disableAfterNextUse=!0)}async setEnabled(e){this._disableAfterNextUse=!1;let t=r.DN.inspectAny("workbench.editorAssociations")?.globalValue;if(Array.isArray(t)&&(t=t.reduce(((e,t)=>(e[t.filenamePattern]=t.viewType,e)),Object.create(null))),null==t){if(e)return;t={"git-rebase-todo":"default"}}else t["git-rebase-todo"]=e?"gitlens.rebase":"default";await r.DN.updateAny("workbench.editorAssociations",t,n.ConfigurationTarget.Global)}async resolveCustomTextEditor(e,t,i){this.container.usage.track("rebaseEditor:shown");const o=(0,j.AH)(n.Uri.joinPath(e.uri,"..","..","..").fsPath),r=this.container.git.getRepository(o),s=[],a={dispose:()=>{n.Disposable.from(...s).dispose()},id:(zg===Yg?zg=1:zg++,zg),subscriptions:s,document:e,panel:t,repoPath:r?.path??o,firstSelection:!0};s.push(t.onDidDispose((()=>{this.resetContextKeys(),n.Disposable.from(...s).dispose()})),t.onDidChangeViewState((e=>this.onViewStateChanged(a,e))),t.webview.onDidReceiveMessage((e=>this.onMessageReceived(a,e))),n.workspace.onDidChangeTextDocument((t=>{0!==t.contentChanges.length&&t.document.uri.toString()===e.uri.toString()&&this.updateState(a,!0)})),n.workspace.onDidSaveTextDocument((t=>{t.uri.toString()===e.uri.toString()&&this.updateState(a,!0)}))),null!=r&&s.push(r.onDidChange((e=>{e.changed(A.I6.Rebase,A.du.Any)&&this.updateState(a)}))),t.webview.options={enableCommandUris:!0,enableScripts:!0},t.webview.html=await this.getHtml(a),this._disableAfterNextUse&&(this._disableAfterNextUse=!1,this.setEnabled(!1))}resetContextKeys(){(0,a.v)(`${this.contextKeyPrefix}:inputFocus`,!1),(0,a.v)(`${this.contextKeyPrefix}:focus`,!1),(0,a.v)(`${this.contextKeyPrefix}:active`,!1)}setContextKeys(e,t,i){null!=e&&((0,a.v)(`${this.contextKeyPrefix}:active`,e),e||(t=!1,i=!1)),null!=t&&(0,a.v)(`${this.contextKeyPrefix}:focus`,t),null!=i&&(0,a.v)(`${this.contextKeyPrefix}:inputFocus`,i)}onViewFocusChanged(e){this.setContextKeys(e.focused,e.focused,e.inputFocused)}onViewStateChanged(e,t){const{active:i,visible:n}=t.webviewPanel;n?this.setContextKeys(i):this.resetContextKeys(),e.pendingChange&&this.updateState(e)}async parseState(e){if(void 0===e.branchName){const t=await this.container.git.getBranch(e.repoPath);e.branchName=t?.name??null}return await this.parseRebaseTodo(e)}async postMessage(e,t){try{const i=await e.panel.webview.postMessage(t);return e.pendingChange=!i,i}catch(t){return B.Yd.error(t),e.pendingChange=!0,!1}}onMessageReceived(e,t){switch(t.method){case Gd.method:Wd(Gd,t,(e=>{this.onViewFocusChanged(e)}));break;case Ig.method:Wd(Ig,t,(()=>this.abort(e)));break;case Eg.method:Wd(Eg,t,(()=>this.disable(e)));break;case Ng.method:Wd(Ng,t,(()=>(0,ke.dO)(s.nA.CustomEditorShowFindWidget)));break;case Ug.method:Wd(Ug,t,(()=>this.rebase(e)));break;case Lg.method:Wd(Lg,t,(()=>this.switchToText(e)));break;case Mg.method:Wd(Mg,t,(t=>this.swapOrdering(t,e)));break;case Wg.method:Wd(Wg,t,(t=>this.onEntryChanged(e,t)));break;case Bg.method:Wd(Bg,t,(t=>this.onEntryMoved(e,t)));break;case Gg.method:Wd(Gg,t,(t=>this.onSelectionChanged(e,t)))}}async onEntryChanged(e,t){const i=Zg(e.document),o=i.find((e=>e.sha===t.sha));if(null==o)return;const r=e.document.positionAt(o.index),s=e.document.validateRange(new n.Range(new n.Position(r.line,0),new n.Position(r.line,Yg)));let a=t.action;const l=new n.WorkspaceEdit,c=[...i];c.splice(i.indexOf(o),1,{...o,action:t.action});let h=!1;for(const e of c)"squash"===e.action||"fixup"===e.action?h=!0:h&&"drop"!==e.action&&(h=!1);if(h){const t=c[c.length-1];if(o.sha===t.sha)a="pick";else{const i=e.document.positionAt(t.index),o=e.document.validateRange(new n.Range(new n.Position(i.line,0),new n.Position(i.line,Yg)));l.replace(e.document.uri,o,`pick ${t.sha} ${t.message}`)}}l.replace(e.document.uri,s,`${a} ${o.sha} ${o.message}`),await n.workspace.applyEdit(l)}async onEntryMoved(e,t){const i=Zg(e.document),o=i.find((e=>e.sha===t.sha));if(null==o)return;const r=i.findIndex((e=>e.sha===t.sha));let s;if(t.relative){if(-1===t.to&&0===r||1===t.to&&r===i.length-1)return;s=r+t.to}else{if(r===t.to)return;s=t.to}const a=i[s];let l=e.document.positionAt(a.index).line;s<r&&l++;const c=e.document.positionAt(o.index),h=e.document.validateRange(new n.Range(new n.Position(c.line,0),new n.Position(c.line+1,0))),u=[...i];u.splice(r,1),u.splice(s,0,o);let d=!1;for(const e of u)"squash"===e.action||"fixup"===e.action?d=!0:d&&"drop"!==e.action&&(d=!1);const p=new n.WorkspaceEdit;let m=o.action;if(d){const t=u[u.length-1];if(o.sha===t.sha)m="pick";else{const i=e.document.positionAt(t.index),o=e.document.validateRange(new n.Range(new n.Position(i.line,0),new n.Position(i.line,Yg)));p.replace(e.document.uri,o,`pick ${t.sha} ${t.message}`)}}p.delete(e.document.uri,h),p.insert(e.document.uri,new n.Position(l,0),`${m} ${o.sha} ${o.message}\n`),await n.workspace.applyEdit(p)}onSelectionChanged(e,t){null==e.fireSelectionChangedDebounced&&(e.fireSelectionChangedDebounced=(0,K.Ds)(this.fireSelectionChanged.bind(this),250)),e.fireSelectionChangedDebounced(e,t.sha)}fireSelectionChanged(e,t){if(null==t)return;const i=r.DN.get("rebaseEditor.showDetailsView");t=e.commits?.find((e=>e.sha.startsWith(t)))?.sha??t,this.container.events.fire("commit:selected",{commit:x.Wb.create(t,e.repoPath,{refType:"revision"}),pin:!1,preserveFocus:!0,preserveVisibility:e.firstSelection?!1===i:"selection"!==i},{source:"gitlens.rebase"}),e.firstSelection=!1}updateState(e,t=!1){if(t)return e.notifyDidChangeStateDebounced?.cancel(),void this.notifyDidChangeState(e);null==e.notifyDidChangeStateDebounced&&(e.notifyDidChangeStateDebounced=(0,K.Ds)(this.notifyDidChangeState.bind(this),250)),e.notifyDidChangeStateDebounced(e)}async notifyDidChangeState(e){if(!e.panel.visible)return void(e.pendingChange=!0);const t=await this.parseState(e);this.postMessage(e,{id:(Qg===Yg?Qg=1:Qg++,`host:${Qg}`),method:Vg.method,params:{state:t}})}async abort(e){e.dispose();const t=new n.WorkspaceEdit;t.replace(e.document.uri,new n.Range(0,0,e.document.lineCount,0),""),await n.workspace.applyEdit(t),await e.document.save(),e.panel.dispose()}async disable(e){await this.abort(e),await this.setEnabled(!1)}async rebase(e){e.dispose(),await e.document.save(),e.panel.dispose()}swapOrdering(e,t){this.ascending=e.ascending??!1,r.DN.updateEffective("rebaseEditor.ordering",this.ascending?"asc":"desc"),this.updateState(t,!0)}switchToText(e){(0,Be.QP)(),(0,ke.dO)(s.nA.Open,e.document.uri,{override:!1,preview:!1})}async getHtml(e){const t=n.Uri.joinPath(this.container.context.extensionUri,"dist","webviews"),i=n.Uri.joinPath(t,"rebase.html"),o=new TextDecoder("utf8").decode(await n.workspace.fs.readFile(i)),r=await this.parseState(e),s=e.panel.webview.cspSource,a=(0,on.Vu)(),l=e.panel.webview.asWebviewUri(this.container.context.extensionUri).toString(),c=e.panel.webview.asWebviewUri(t).toString();return o.replace(/#{(head|body|endOfBody|placement|cspSource|cspNonce|root|webroot)}/g,((e,t)=>{switch(t){case"endOfBody":return`<script type="text/javascript" nonce="${a}">window.bootstrap=${JSON.stringify(r)};<\/script>`;case"placement":return"editor";case"cspSource":return s;case"cspNonce":return a;case"root":return l;case"webroot":return c;default:return""}}))}async parseRebaseTodo(e){const t=e.document.getText(),i=Zg(t);let[,,,n]=Kg.exec(t)??["","",""];null!=e.authors&&null!=e.commits||await this.loadRichCommitData(e,n,i);const o=r.DN.get("defaultDateFormat"),s=Mc.getMarkdownCommandArgs("${commit}",e.repoPath),a=n?e.commits?.find((e=>e.sha.startsWith(n))):void 0;let l;for(const t of i)l=e.commits?.find((e=>e.sha.startsWith(t.sha))),null!=l&&(l.sha===a?.sha&&(n=""),t.commit={sha:l.sha,author:l.author.name,committer:l.committer.name,date:l.formatDate(o),dateFromNow:l.formatDateFromNow(),message:h(l.message??l.summary)});return{branch:e.branchName??"",onto:n?{sha:n,commit:null!=a?{sha:a.sha,author:a.author.name,committer:a.committer.name,date:a.formatDate(o),dateFromNow:a.formatDateFromNow(),message:h(a.message||"root")}:void 0}:void 0,entries:i,authors:null!=e.authors?Object.fromEntries(e.authors):{},commands:{commit:s},ascending:this.ascending}}async loadRichCommitData(e,t,i){e.commits=[],e.authors=new Map;const n=await this.container.git.richSearchCommits(e.repoPath,{query:`${t?`#:${t} `:""}${(0,q.v_)((0,q.UI)(i,(e=>`#:${e.sha}`))," ")}`},{limit:0});if(null!=n)for(const t of n.commits.values())if(e.commits.push(t),e.authors.has(t.author.name)||e.authors.set(t.author.name,{author:t.author.name,avatarUrl:(await t.getAvatarUri()).toString(!0),email:t.author.email}),!e.authors.has(t.committer.name)){const i=await t.committer.getAvatarUri(t);e.authors.set(t.committer.name,{author:t.committer.name,avatarUrl:i.toString(!0),email:t.committer.email})}}}function Zg(e){const t="string"==typeof e?e:e.getText(),i=[];let n,o,r,s;for(;;){if(n=Jg.exec(t),null==n)break;[,o,r,s]=n,i.push({index:n.index,action:Xg.get(o)??"pick",sha:` ${r}`.substr(1),message:null==s||0===s.length?"":` ${s}`.substr(1)})}return i.reverse()}jg([(0,H.fF)({args:{0:e=>e.uri.toString(!0)}})],RebaseEditorProvider.prototype,"resolveCustomTextEditor",1),jg([(0,H.fF)({args:{0:e=>`focused=${e.focused}, inputFocused=${e.inputFocused}`}})],RebaseEditorProvider.prototype,"onViewFocusChanged",1),jg([(0,H.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`,1:e=>`active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`}})],RebaseEditorProvider.prototype,"onViewStateChanged",1),jg([(0,H.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],RebaseEditorProvider.prototype,"updateState",1),jg([(0,H.fF)({args:{0:e=>`${e.id}:${e.document.uri.toString(!0)}`}})],RebaseEditorProvider.prototype,"notifyDidChangeState",1),jg([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"abort",1),jg([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"disable",1),jg([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"rebase",1),jg([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"swapOrdering",1),jg([(0,H.cM)({args:!1})],RebaseEditorProvider.prototype,"switchToText",1),jg([(0,H.fF)({args:!1})],RebaseEditorProvider.prototype,"parseRebaseTodo",1),jg([(0,H.fF)({args:!1})],RebaseEditorProvider.prototype,"loadRichCommitData",1);class WebviewWithConfigBase extends ep{constructor(e,t,i,n,o,s,a,l){super(e,t,i,n,o,s,a,l),this.disposables.push(r.DN.onDidChange(this.onConfigurationChanged,this),r.DN.onDidChangeAny(this.onAnyConfigurationChanged,this))}onAnyConfigurationChanged(e){let t=!1;for(const i of this.customSettings.values())if(e.affectsConfiguration(i.name)){t=!0;break}t&&this.notifyDidChangeConfiguration()}onConfigurationChanged(e){this.notifyDidChangeConfiguration()}onViewStateChanged(e){super.onViewStateChanged(e),e.webviewPanel.active&&this.notifyDidChangeConfiguration()}onMessageReceivedCore(e){if(null!=e)switch(e.method){case qd.method:B.Yd.debug(`Webview(${this.id}).onMessageReceived: method=${e.method}`),Wd(qd,e,(async e=>{const t="workspace"===e.scope?n.ConfigurationTarget.Workspace:n.ConfigurationTarget.Global;let i;for(i in e.changes){let n=e.changes[i];if(tf(i)){const e=this.customSettings.get(i);null!=e&&"boolean"==typeof n&&await e.update(n);continue}const o=r.DN.inspect(i);if(null!=n)if("workspace"===e.scope){if(n===o.workspaceValue)continue}else{if(n===o.globalValue&&n!==o.defaultValue)continue;n===o.defaultValue&&(n=void 0)}await r.DN.update(i,n,t)}for(const i of e.removes)await r.DN.update(i,void 0,t)}));break;case Hd.method:B.Yd.debug(`Webview(${this.id}).onMessageReceived: method=${e.method}`),Wd(Hd,e,(async t=>{switch(t.type){case"commit":case"commit-uncommitted":{const i=new y.aM(this.container,"~/code/eamodio/vscode-gitlens-demo","fe26af408293cba5b4bfd77306e1ac9ff7ccaef8",new y._j("You","eamodio@gmail.com",new Date("2016-11-12T20:41:00.000Z")),new y._j("You","eamodio@gmail.com",new Date("2020-11-01T06:57:21.000Z")),"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",["3ac1d3f51d7cf5f438cc69f25f6740536ad80fef"],"commit-uncommitted"===t.type?"Uncommitted changes":"Supercharged",new T.K8("~/code/eamodio/vscode-gitlens-demo","code.ts",T.NV.Modified),void 0,[]);let n,o,s=!1;switch(t.key){case r.DN.name("currentLine.format"):s=r.DN.get("currentLine.pullRequests.enabled");break;case r.DN.name("statusBar.format"):s=r.DN.get("statusBar.pullRequests.enabled")}s&&(n=new rn.i7({id:"github",name:"GitHub",domain:"github.com",icon:"github"},{name:"Eric Amodio",avatarUrl:"https://avatars1.githubusercontent.com/u/641685?s=32&v=4",url:"https://github.com/eamodio"},"1","Supercharged","https://github.com/gitkraken/vscode-gitlens/pulls/1",rn.o0.Merged,new Date("Sat, 12 Nov 2016 19:41:00 GMT"),void 0,new Date("Sat, 12 Nov 2016 20:41:00 GMT")));try{o=CommitFormatter.fromTemplate(t.format,i,{dateFormat:r.DN.get("defaultDateFormat"),pullRequestOrRemote:n,messageTruncateAtNewLine:!0})}catch{o="Invalid format"}await this.notify(Yd,{preview:o},e.completionId)}}}));break;default:super.onMessageReceivedCore(e)}}get customSettings(){return null==this._customSettings&&(this._customSettings=new Map([["rebaseEditor.enabled",{name:"workbench.editorAssociations",enabled:()=>this.container.rebaseEditor.enabled,update:this.container.rebaseEditor.setEnabled}],["currentLine.useUncommittedChangesFormat",{name:"currentLine.useUncommittedChangesFormat",enabled:()=>null!=r.DN.get("currentLine.uncommittedChangesFormat"),update:async e=>r.DN.updateEffective("currentLine.uncommittedChangesFormat",e?"✏️ ${ago}":null)}]])),this._customSettings}getCustomSettings(){const e=Object.create(null);for(const[t,i]of this.customSettings)e[t]=i.enabled();return e}notifyDidChangeConfiguration(){return this.notify(jd,{config:r.DN.getAll(!0),customSettings:this.getCustomSettings()})}}const ef=["rebaseEditor.enabled","currentLine.useUncommittedChangesFormat"];function tf(e){return ef.includes(e)}const nf=/.*?#(.*)/;class SettingsWebview extends WebviewWithConfigBase{constructor(e){super(e,"gitlens.settings","settings.html","images/gitlens-icon.png","GitLens Settings",`${s.zf.WebviewPrefix}settings`,"settingsWebview",s.Gh.ShowSettingsPage),this.disposables.push(...[s.Gh.ShowSettingsPageAndJumpToBranchesView,s.Gh.ShowSettingsPageAndJumpToCommitsView,s.Gh.ShowSettingsPageAndJumpToContributorsView,s.Gh.ShowSettingsPageAndJumpToFileHistoryView,s.Gh.ShowSettingsPageAndJumpToLineHistoryView,s.Gh.ShowSettingsPageAndJumpToRemotesView,s.Gh.ShowSettingsPageAndJumpToRepositoriesView,s.Gh.ShowSettingsPageAndJumpToSearchAndCompareView,s.Gh.ShowSettingsPageAndJumpToStashesView,s.Gh.ShowSettingsPageAndJumpToTagsView,s.Gh.ShowSettingsPageAndJumpToWorkTreesView,s.Gh.ShowSettingsPageAndJumpToViews,s.Gh.ShowSettingsPageAndJumpToCommitGraph,s.Gh.ShowSettingsPageAndJumpToAutolinks].map((e=>{let t;const i=nf.exec(e);return null!=i&&([,t]=i),(0,ke.xR)(e,((...e)=>this.onShowAnchorCommand(t,...e)),this)})))}onReady(){if(null!=this._pendingJumpToAnchor){const e=this._pendingJumpToAnchor;this._pendingJumpToAnchor=void 0,this.notify(Qd,{anchor:e,scrollBehavior:"auto"})}}onShowAnchorCommand(e,...t){if(e){if(this.isReady&&this.visible)return void queueMicrotask((()=>{this.notify(Qd,{anchor:e,scrollBehavior:"smooth"})}));this._pendingJumpToAnchor=e}this.onShowCommand(...t)}includeBootstrap(){const e=[["user","User"]];return n.workspace.workspaceFolders?.length&&e.push(["workspace","Workspace"]),{config:r.DN.getAll(!0),customSettings:this.getCustomSettings(),scope:"user",scopes:e}}}class WelcomeWebview extends WebviewWithConfigBase{constructor(e){super(e,"gitlens.welcome","welcome.html","images/gitlens-icon.png","Welcome to GitLens",`${s.zf.WebviewPrefix}welcome`,"welcomeWebview",s.Gh.ShowWelcomePage)}includeBootstrap(){return{config:r.DN.getAll(!0)}}}var of=Object.defineProperty,rf=Object.getOwnPropertyDescriptor,sf=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?rf(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&of(t,i,r),r};const af=class{constructor(e,t,i,o,s){this._onReady=new n.EventEmitter,this.BranchDateFormatting={dateFormat:void 0,dateStyle:void 0,reset:()=>{this.BranchDateFormatting.dateFormat=r.DN.get("defaultDateFormat"),this.BranchDateFormatting.dateStyle=r.DN.get("defaultDateStyle")}},this.CommitDateFormatting={dateFormat:null,dateSource:r.Vn.Authored,dateStyle:r.Dn.Relative,reset:()=>{this.CommitDateFormatting.dateFormat=r.DN.get("defaultDateFormat"),this.CommitDateFormatting.dateSource=r.DN.get("defaultDateSource"),this.CommitDateFormatting.dateStyle=r.DN.get("defaultDateStyle")}},this.CommitShaFormatting={length:7,reset:()=>{this.CommitShaFormatting.length=Math.max(5,r.DN.get("advanced.abbreviatedShaLength"))}},this.PullRequestDateFormatting={dateFormat:null,dateStyle:r.Dn.Relative,reset:()=>{this.PullRequestDateFormatting.dateFormat=r.DN.get("defaultDateFormat"),this.PullRequestDateFormatting.dateStyle=r.DN.get("defaultDateStyle")}},this.TagDateFormatting={dateFormat:null,dateStyle:r.Dn.Relative,reset:()=>{this.TagDateFormatting.dateFormat=r.DN.get("defaultDateFormat"),this.TagDateFormatting.dateStyle=r.DN.get("defaultDateStyle")}},this._ready=!1,this._context=e,this._prerelease=i,this._version=o,this.ensureModeApplied(),e.subscriptions.push(this._storage=t),e.subscriptions.push(this._telemetry=new TelemetryService(this)),e.subscriptions.push(this._usage=new UsageTracker(this,t)),e.subscriptions.push(r.DN.onWillChange(this.onConfigurationChanging,this));const a=new ServerConnection(this);e.subscriptions.push(a),e.subscriptions.push(this._subscriptionAuthentication=new SubscriptionAuthenticationProvider(this,a)),e.subscriptions.push(this._subscription=new Id(this,s)),e.subscriptions.push(this._git=new GitProviderService(this)),e.subscriptions.push(new GitFileSystemProvider(this)),e.subscriptions.push(this._uri=new UriService(this)),e.subscriptions.push(this._deepLinks=new DeepLinkService(this)),e.subscriptions.push(this._actionRunners=new Lu.AR(this)),e.subscriptions.push(this._tracker=new GitDocumentTracker(this)),e.subscriptions.push(this._lineTracker=new GitLineTracker(this)),e.subscriptions.push(this._keyboard=new Keyboard),e.subscriptions.push(this._vsls=new VslsController(this)),e.subscriptions.push(this._eventBus=new EventBus),e.subscriptions.push(this._fileAnnotationController=new FileAnnotationController(this)),e.subscriptions.push(this._lineAnnotationController=new LineAnnotationController(this)),e.subscriptions.push(this._lineHoverController=new LineHoverController(this)),e.subscriptions.push(this._statusBarController=new StatusBarController(this)),e.subscriptions.push(this._codeLensController=new GitCodeLensController(this)),e.subscriptions.push(this._settingsWebview=new SettingsWebview(this)),e.subscriptions.push(this._timelineWebview=new TimelineWebview(this)),e.subscriptions.push(this._welcomeWebview=new WelcomeWebview(this)),e.subscriptions.push(this._rebaseEditor=new RebaseEditorProvider(this)),e.subscriptions.push(this._graphWebview=new GraphWebview(this)),e.subscriptions.push(this._focusWebview=new FocusWebview(this)),e.subscriptions.push(new ViewFileDecorationProvider),e.subscriptions.push(this._repositoriesView=new RepositoriesView(this)),e.subscriptions.push(this._commitDetailsView=new CommitDetailsWebviewView(this)),e.subscriptions.push(this._commitsView=new CommitsView(this)),e.subscriptions.push(this._fileHistoryView=new FileHistoryView(this)),e.subscriptions.push(this._lineHistoryView=new LineHistoryView(this)),e.subscriptions.push(this._branchesView=new BranchesView(this)),e.subscriptions.push(this._remotesView=new RemotesView(this)),e.subscriptions.push(this._stashesView=new StashesView(this)),e.subscriptions.push(this._tagsView=new TagsView(this)),e.subscriptions.push(this._worktreesView=new WorktreesView(this)),e.subscriptions.push(this._contributorsView=new ContributorsView(this)),e.subscriptions.push(this._searchAndCompareView=new SearchAndCompareView(this)),e.subscriptions.push(this._homeView=new HomeWebviewView(this)),e.subscriptions.push(this._timelineView=new TimelineWebviewView(this)),r.DN.get("terminalLinks.enabled")&&e.subscriptions.push(this._terminalLinks=new GitTerminalLinkProvider(this)),e.subscriptions.push(r.DN.onDidChange((t=>{r.DN.changed(t,"terminalLinks.enabled")&&(this._terminalLinks?.dispose(),r.DN.get("terminalLinks.enabled")&&e.subscriptions.push(this._terminalLinks=new GitTerminalLinkProvider(this)))})))}static#e;static#t=new Proxy({},{get:function(e,t){if(null!=af.#e)return af.#e[t];if("config"===t)return r.DN.getAll();throw new Error("Container is not initialized")}});static create(e,t,i,n,o){if(null!=af.#e)throw new Error("Container is already initialized");return af.#e=new af(e,t,i,n,o),af.#e}static get instance(){return af.#e??af.#t}get onReady(){return this._onReady.event}async ready(){if(this._ready)throw new Error("Container is already ready");this._ready=!0,await this.registerGitProviders(),queueMicrotask((()=>this._onReady.fire()))}async registerGitProviders(){const e=await async function(e){return[new GitHubGitProvider(e)]}(this);for(const t of e)this._context.subscriptions.push(this._git.register(t.descriptor.id,t));this._git.registrationComplete()}onConfigurationChanging(e){this._mode=void 0,r.DN.changed(e,"outputLevel")&&(B.Yd.logLevel=(0,r.oE)(r.DN.get("outputLevel"))),r.DN.changed(e,"defaultGravatarsStyle")&&(0,b.Wr)(r.DN.get("defaultGravatarsStyle")),r.DN.changed(e,"mode")&&this.ensureModeApplied()}get actionRunners(){return null==this._actionRunners&&this._context.subscriptions.push(this._actionRunners=new Lu.AR(this)),this._actionRunners}get autolinks(){return null==this._autolinks&&this._context.subscriptions.push(this._autolinks=new Autolinks(this)),this._autolinks}get codeLens(){return this._codeLensController}get branchesView(){return null==this._branchesView&&this._context.subscriptions.push(this._branchesView=new BranchesView(this)),this._branchesView}get commitsView(){return null==this._commitsView&&this._context.subscriptions.push(this._commitsView=new CommitsView(this)),this._commitsView}get commitDetailsView(){return null==this._commitDetailsView&&this._context.subscriptions.push(this._commitDetailsView=new CommitDetailsWebviewView(this)),this._commitDetailsView}get context(){return this._context}get contributorsView(){return null==this._contributorsView&&this._context.subscriptions.push(this._contributorsView=new ContributorsView(this)),this._contributorsView}get debugging(){return this._context.extensionMode===n.ExtensionMode.Development}get env(){if(this.prereleaseOrDebugging){const e=r.DN.getAny("gitkraken.env");if("dev"===e)return"dev";if("staging"===e)return"staging"}return"production"}get events(){return this._eventBus}get fileAnnotations(){return this._fileAnnotationController}get fileHistoryView(){return null==this._fileHistoryView&&this._context.subscriptions.push(this._fileHistoryView=new FileHistoryView(this)),this._fileHistoryView}get git(){return this._git}get uri(){return this._uri}get deepLinks(){return this._deepLinks}get github(){return null==this._github&&(this._github=this._loadGitHubApi()),this._github}async _loadGitHubApi(){try{const e=new((await Promise.resolve().then(i.bind(i,9616))).GitHubApi)(this);return this.context.subscriptions.push(e),e}catch(e){return void B.Yd.error(e)}}get gitlab(){return null==this._gitlab&&(this._gitlab=this._loadGitLabApi()),this._gitlab}async _loadGitLabApi(){try{const e=new((await Promise.resolve().then(i.bind(i,1848))).GitLabApi)(this);return this.context.subscriptions.push(e),e}catch(e){return void B.Yd.error(e)}}get homeView(){return null==this._homeView&&this._context.subscriptions.push(this._homeView=new HomeWebviewView(this)),this._homeView}get id(){return this._context.extension.id}get integrationAuthentication(){return null==this._integrationAuthentication&&this._context.subscriptions.push(this._integrationAuthentication=new IntegrationAuthenticationService(this),new id.z4(this),new nd.h(this)),this._integrationAuthentication}get keyboard(){return this._keyboard}get lineAnnotations(){return this._lineAnnotationController}get lineHistoryView(){return null==this._lineHistoryView&&this._context.subscriptions.push(this._lineHistoryView=new LineHistoryView(this)),this._lineHistoryView}get lineHovers(){return this._lineHoverController}get lineTracker(){return this._lineTracker}get prerelease(){return this._prerelease}get prereleaseOrDebugging(){return this._prerelease||this.debugging}get rebaseEditor(){return null==this._rebaseEditor&&this._context.subscriptions.push(this._rebaseEditor=new RebaseEditorProvider(this)),this._rebaseEditor}get remotesView(){return null==this._remotesView&&this._context.subscriptions.push(this._remotesView=new RemotesView(this)),this._remotesView}get repositoriesView(){return null==this._repositoriesView&&this._context.subscriptions.push(this._repositoriesView=new RepositoriesView(this)),this._repositoriesView}get searchAndCompareView(){return null==this._searchAndCompareView&&this._context.subscriptions.push(this._searchAndCompareView=new SearchAndCompareView(this)),this._searchAndCompareView}get subscription(){return this._subscription}get subscriptionAuthentication(){return this._subscriptionAuthentication}get settingsWebview(){return this._settingsWebview}get graphWebview(){return this._graphWebview}get focusWebview(){return this._focusWebview}get stashesView(){return null==this._stashesView&&this._context.subscriptions.push(this._stashesView=new StashesView(this)),this._stashesView}get statusBar(){return this._statusBarController}get storage(){return this._storage}get tagsView(){return null==this._tagsView&&this._context.subscriptions.push(this._tagsView=new TagsView(this)),this._tagsView}get telemetry(){return this._telemetry}get timelineView(){return this._timelineView}get timelineWebview(){return this._timelineWebview}get tracker(){return this._tracker}get usage(){return this._usage}get version(){return this._version}get viewCommands(){return null==this._viewCommands&&(this._viewCommands=new ViewCommands(this)),this._viewCommands}get vsls(){return this._vsls}get welcomeWebview(){return this._welcomeWebview}get worktreesView(){return null==this._worktreesView&&this._context.subscriptions.push(this._worktreesView=new WorktreesView(this)),this._worktreesView}get mode(){return null==this._mode&&(this._mode=r.DN.get("modes")?.[r.DN.get("mode.active")]),this._mode}ensureModeApplied(){const e=this.mode;if(null!=e){if(null!=e.annotations){let t;switch(e.annotations){case"blame":t=s.Gh.ToggleFileBlame;break;case"changes":t=s.Gh.ToggleFileChanges;break;case"heatmap":t=s.Gh.ToggleFileHeatmap}if(null!=t){const i={type:e.annotations,on:!0};setTimeout(ke.P0,50,t,i)}}r.DN.applyOverrides({get:(t,i)=>{if(null!=e.annotations){if(r.DN.matches(`${e.annotations}.toggleMode`,t,i))return i=r.TF.Window;if(r.DN.matches(e.annotations,t,i))return i.toggleMode=r.TF.Window,i}for(const n of["codeLens","currentLine","hovers","statusBar"])if(null!=e[n]){if(r.DN.matches(`${n}.enabled`,t,i))return i=e[n];if(r.DN.matches(n,t,i))return i.enabled=e[n],i}return i},getAll:t=>(null!=e.annotations&&(t[e.annotations].toggleMode=r.TF.Window),null!=e.codeLens&&(t.codeLens.enabled=e.codeLens),null!=e.currentLine&&(t.currentLine.enabled=e.currentLine),null!=e.hovers&&(t.hovers.enabled=e.hovers),null!=e.statusBar&&(t.statusBar.enabled=e.statusBar),t),onChange:e=>{if(r.DN.changed(e,["mode","modes"])){null==this._configAffectedByModeRegex&&(this._configAffectedByModeRegex=new RegExp(`^gitlens\\.(?:${r.DN.name("mode")}|${r.DN.name("modes")}|${r.DN.name("blame")}|${r.DN.name("changes")}|${r.DN.name("heatmap")}|${r.DN.name("codeLens")}|${r.DN.name("currentLine")}|${r.DN.name("hovers")}|${r.DN.name("statusBar")})\\b`));const t=e.affectsConfiguration;e={...e,affectsConfiguration:(e,i)=>!!this._configAffectedByModeRegex.test(e)||t(e,i)}}return e}})}else r.DN.clearOverrides()}};let lf=af;function cf(e){return e instanceof lf}sf([(0,H.cM)()],lf.prototype,"registerGitProviders",1),sf([(0,S.H)()],lf.prototype,"debugging",1),sf([(0,S.H)()],lf.prototype,"env",1),sf([(0,S.H)()],lf.prototype,"id",1),sf([(0,S.H)()],lf.prototype,"prereleaseOrDebugging",1)},6631:(e,t,i)=>{i.d(t,{fw:()=>l,v:()=>c,ve:()=>a});var n=i(9496),o=i(5255);const r=new Map,s=new n.EventEmitter,a=s.event;function l(e,t){return r.get(e)??t}async function c(e,t){r.set(e,t),await n.commands.executeCommand(o.nA.SetContext,e,t),s.fire(e)}},3317:(e,t,i)=>{i.d(t,{U:()=>r});const{fromCharCode:n}=String,o=new TextEncoder;function r(e){let t="string"==typeof e?o.encode(e):e,i="";for(let e=0,{length:o}=t;e<o;e++)i+=n(t[e]);return globalThis.btoa(i)}},4290:(e,t,i)=>{i.d(t,{Vu:()=>c,FB:()=>h,Vj:()=>u});var n=i(3317);function o(e,t){let[i,n,o,r]=e;i+=(n&o|~n&r)+t[0]-680876936|0,i=(i<<7|i>>>25)+n|0,r+=(i&n|~i&o)+t[1]-389564586|0,r=(r<<12|r>>>20)+i|0,o+=(r&i|~r&n)+t[2]+606105819|0,o=(o<<17|o>>>15)+r|0,n+=(o&r|~o&i)+t[3]-1044525330|0,n=(n<<22|n>>>10)+o|0,i+=(n&o|~n&r)+t[4]-176418897|0,i=(i<<7|i>>>25)+n|0,r+=(i&n|~i&o)+t[5]+1200080426|0,r=(r<<12|r>>>20)+i|0,o+=(r&i|~r&n)+t[6]-1473231341|0,o=(o<<17|o>>>15)+r|0,n+=(o&r|~o&i)+t[7]-45705983|0,n=(n<<22|n>>>10)+o|0,i+=(n&o|~n&r)+t[8]+1770035416|0,i=(i<<7|i>>>25)+n|0,r+=(i&n|~i&o)+t[9]-1958414417|0,r=(r<<12|r>>>20)+i|0,o+=(r&i|~r&n)+t[10]-42063|0,o=(o<<17|o>>>15)+r|0,n+=(o&r|~o&i)+t[11]-1990404162|0,n=(n<<22|n>>>10)+o|0,i+=(n&o|~n&r)+t[12]+1804603682|0,i=(i<<7|i>>>25)+n|0,r+=(i&n|~i&o)+t[13]-40341101|0,r=(r<<12|r>>>20)+i|0,o+=(r&i|~r&n)+t[14]-1502002290|0,o=(o<<17|o>>>15)+r|0,n+=(o&r|~o&i)+t[15]+1236535329|0,n=(n<<22|n>>>10)+o|0,i+=(n&r|o&~r)+t[1]-165796510|0,i=(i<<5|i>>>27)+n|0,r+=(i&o|n&~o)+t[6]-1069501632|0,r=(r<<9|r>>>23)+i|0,o+=(r&n|i&~n)+t[11]+643717713|0,o=(o<<14|o>>>18)+r|0,n+=(o&i|r&~i)+t[0]-373897302|0,n=(n<<20|n>>>12)+o|0,i+=(n&r|o&~r)+t[5]-701558691|0,i=(i<<5|i>>>27)+n|0,r+=(i&o|n&~o)+t[10]+38016083|0,r=(r<<9|r>>>23)+i|0,o+=(r&n|i&~n)+t[15]-660478335|0,o=(o<<14|o>>>18)+r|0,n+=(o&i|r&~i)+t[4]-405537848|0,n=(n<<20|n>>>12)+o|0,i+=(n&r|o&~r)+t[9]+568446438|0,i=(i<<5|i>>>27)+n|0,r+=(i&o|n&~o)+t[14]-1019803690|0,r=(r<<9|r>>>23)+i|0,o+=(r&n|i&~n)+t[3]-187363961|0,o=(o<<14|o>>>18)+r|0,n+=(o&i|r&~i)+t[8]+1163531501|0,n=(n<<20|n>>>12)+o|0,i+=(n&r|o&~r)+t[13]-1444681467|0,i=(i<<5|i>>>27)+n|0,r+=(i&o|n&~o)+t[2]-51403784|0,r=(r<<9|r>>>23)+i|0,o+=(r&n|i&~n)+t[7]+1735328473|0,o=(o<<14|o>>>18)+r|0,n+=(o&i|r&~i)+t[12]-1926607734|0,n=(n<<20|n>>>12)+o|0,i+=(n^o^r)+t[5]-378558|0,i=(i<<4|i>>>28)+n|0,r+=(i^n^o)+t[8]-2022574463|0,r=(r<<11|r>>>21)+i|0,o+=(r^i^n)+t[11]+1839030562|0,o=(o<<16|o>>>16)+r|0,n+=(o^r^i)+t[14]-35309556|0,n=(n<<23|n>>>9)+o|0,i+=(n^o^r)+t[1]-1530992060|0,i=(i<<4|i>>>28)+n|0,r+=(i^n^o)+t[4]+1272893353|0,r=(r<<11|r>>>21)+i|0,o+=(r^i^n)+t[7]-155497632|0,o=(o<<16|o>>>16)+r|0,n+=(o^r^i)+t[10]-1094730640|0,n=(n<<23|n>>>9)+o|0,i+=(n^o^r)+t[13]+681279174|0,i=(i<<4|i>>>28)+n|0,r+=(i^n^o)+t[0]-358537222|0,r=(r<<11|r>>>21)+i|0,o+=(r^i^n)+t[3]-722521979|0,o=(o<<16|o>>>16)+r|0,n+=(o^r^i)+t[6]+76029189|0,n=(n<<23|n>>>9)+o|0,i+=(n^o^r)+t[9]-640364487|0,i=(i<<4|i>>>28)+n|0,r+=(i^n^o)+t[12]-421815835|0,r=(r<<11|r>>>21)+i|0,o+=(r^i^n)+t[15]+530742520|0,o=(o<<16|o>>>16)+r|0,n+=(o^r^i)+t[2]-995338651|0,n=(n<<23|n>>>9)+o|0,i+=(o^(n|~r))+t[0]-198630844|0,i=(i<<6|i>>>26)+n|0,r+=(n^(i|~o))+t[7]+1126891415|0,r=(r<<10|r>>>22)+i|0,o+=(i^(r|~n))+t[14]-1416354905|0,o=(o<<15|o>>>17)+r|0,n+=(r^(o|~i))+t[5]-57434055|0,n=(n<<21|n>>>11)+o|0,i+=(o^(n|~r))+t[12]+1700485571|0,i=(i<<6|i>>>26)+n|0,r+=(n^(i|~o))+t[3]-1894986606|0,r=(r<<10|r>>>22)+i|0,o+=(i^(r|~n))+t[10]-1051523|0,o=(o<<15|o>>>17)+r|0,n+=(r^(o|~i))+t[1]-2054922799|0,n=(n<<21|n>>>11)+o|0,i+=(o^(n|~r))+t[8]+1873313359|0,i=(i<<6|i>>>26)+n|0,r+=(n^(i|~o))+t[15]-30611744|0,r=(r<<10|r>>>22)+i|0,o+=(i^(r|~n))+t[6]-1560198380|0,o=(o<<15|o>>>17)+r|0,n+=(r^(o|~i))+t[13]+1309151649|0,n=(n<<21|n>>>11)+o|0,i+=(o^(n|~r))+t[4]-145523070|0,i=(i<<6|i>>>26)+n|0,r+=(n^(i|~o))+t[11]-1120210379|0,r=(r<<10|r>>>22)+i|0,o+=(i^(r|~n))+t[2]+718787259|0,o=(o<<15|o>>>17)+r|0,n+=(r^(o|~i))+t[9]-343485551|0,n=(n<<21|n>>>11)+o|0,e[0]=i+e[0]|0,e[1]=n+e[1]|0,e[2]=o+e[2]|0,e[3]=r+e[3]|0}function r(e){const t=[];for(let i=0;i<64;i+=4)t[i>>2]=e.charCodeAt(i)+(e.charCodeAt(i+1)<<8)+(e.charCodeAt(i+2)<<16)+(e.charCodeAt(i+3)<<24);return t}const s=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function a(e){let t="";for(let i=0;i<4;i+=1)t+=s[e>>8*i+4&15]+s[e>>8*i&15];return t}function l(e,t="hex"){const i=(n=function(e){const t=e.length;let i,n=[1732584193,-271733879,-1732584194,271733878];for(i=64;i<=t;i+=64)o(n,r(e.substring(i-64,i)));let s=(e=e.substring(i-64)).length,a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;i<s;i+=1)a[i>>2]|=e.charCodeAt(i)<<(i%4<<3);if(a[i>>2]|=128<<(i%4<<3),i>55)for(o(n,a),i=0;i<16;i+=1)a[i]=0;const l=(8*t).toString(16).match(/(.*?)(.{0,8})$/),c=parseInt(l[2],16),h=parseInt(l[1],16)||0;return a[14]=c,a[15]=h,o(n,a),n}(e),n.map(a).join(""));var n;return"hex"===t?i:btoa(function(e){const t=[],i=e.length;for(let n=0;n<i-1;n+=2)t.push(parseInt(e.substr(n,2),16));return String.fromCharCode.apply(String,t)}(i))}function c(){return(0,n.U)(globalThis.crypto.getRandomValues(new Uint8Array(16)))}function h(e,t="hex"){return l(e,t)}function u(){return globalThis.crypto.randomUUID()}},9827:(e,t,i)=>{i.d(t,{Nx:()=>o,a_:()=>r,he:()=>n});const n=globalThis.fetch;function o(e){}async function r(e,t){return t()}},185:(e,t,i)=>{i.d(t,{d:()=>a,e:()=>s});const n=new TextDecoder,o=new TextEncoder,r=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function s(e){const t=o.encode(e),i=new Array(t.length);for(let e=0;e<t.length;++e)i[e]=r[t[e]];return i.join("")}function a(e){const t=e.match(/(\w{2})/g);if(null===t)return"";const i=new Uint8Array(t.map((e=>parseInt(e,16))));return n.decode(i)}},9376:(e,t,i)=>{function n(e){const t=.001*performance.now();let i=Math.floor(t),n=Math.floor(t%1*1e9);return void 0!==e&&(i-=e[0],n-=e[1],n<0&&(i--,n+=1e9)),[i,n]}i.d(t,{a:()=>n})},429:(e,t,i)=>{i.d(t,{$L:()=>n,ED:()=>l,IJ:()=>s,Xf:()=>c});const n=!0,o=navigator?.userAgentData?.platform,r=navigator.userAgent,s="Linux"===o||r.indexOf("Linux")>=0,a="macOS"===o||r.indexOf("Macintosh")>=0,l="Windows"===o||r.indexOf("Windows")>=0;function c(){return l?"web-windows":a?"web-macOS":s?"web-linux":"web"}},4575:(e,t,i)=>{i.d(t,{$y:()=>AccessDeniedError,Bn:()=>ProviderRequestClientError,Jx:()=>o,MO:()=>ProviderNotFoundError,R5:()=>ExtensionNotFoundError,Ww:()=>ProviderRequestNotFoundError,Xq:()=>ProviderFetchError,_7:()=>AuthenticationError,dt:()=>AccountValidationError,kX:()=>OpenVirtualRepositoryError,sh:()=>r,yx:()=>ProviderRequestRateLimitError});var n=i(4968);class AccessDeniedError extends Error{constructor(e,t){let i;i=!1===e.account?.verified?"Email verification required":null!=t&&(0,n.aG)(t)?"Paid subscription required":"Subscription required",super(i),this.subscription=e,this.required=t,Error.captureStackTrace?.(this,AccessDeniedError)}}class AccountValidationError extends Error{constructor(e,t,i,n){super(e+=`; status=${i}: ${n}`),this.original=t,this.statusCode=i,this.statusText=n,Error.captureStackTrace?.(this,AccountValidationError)}}var o=(e=>(e[e.UserDidNotConsent=1]="UserDidNotConsent",e[e.Unauthorized=2]="Unauthorized",e[e.Forbidden=3]="Forbidden",e))(o||{});class AuthenticationError extends Error{constructor(e,t,i){let n,o;if(null==t)n=`Unable to get required authentication session for '${e}'`;else if("string"==typeof t)n=t,o=void 0;else switch(o=t,o){case 1:n=`'${e}' authentication is required for this operation`;break;case 2:n=`Your '${e}' credentials are either invalid or expired`;break;case 3:n=`Your '${e}' credentials do not have the required access`}super(n),this.id=e,this.original=i,this.reason=o,Error.captureStackTrace?.(this,AuthenticationError)}}class ExtensionNotFoundError extends Error{constructor(e,t){super(`Unable to find the ${t} extension (${e}). Please ensure it is installed and enabled.`),this.extensionId=e,this.extensionName=t,Error.captureStackTrace?.(this,ExtensionNotFoundError)}}var r=(e=>(e[e.RemoteHubApiNotFound=1]="RemoteHubApiNotFound",e[e.NotAGitHubRepository=2]="NotAGitHubRepository",e[e.GitHubAuthenticationNotFound=3]="GitHubAuthenticationNotFound",e[e.GitHubAuthenticationDenied=4]="GitHubAuthenticationDenied",e))(r||{});class OpenVirtualRepositoryError extends Error{constructor(e,t,i){let n,o;if(null==t)n=`Unable to open the virtual repository: ${e}`;else if("string"==typeof t)n=t,o=void 0;else switch(o=t,n=`Unable to open the virtual repository: ${e}; `,o){case 1:n+="Unable to get required api from the GitHub Repositories extension. Please ensure that the GitHub Repositories extension is installed and enabled";break;case 2:n+="Only GitHub repositories are supported currently";break;case 3:n+="Unable to get required GitHub authentication";break;case 4:n+="GitHub authentication is required"}super(n),this.original=i,this.reason=o,this.repoPath=e,Error.captureStackTrace?.(this,OpenVirtualRepositoryError)}}class ProviderFetchError extends Error{constructor(e,t,i){super(`${e} request failed: ${t.ok?"":`(${t.status}) ${t.statusText}. `}${i?.length?i[0].message:""}`),this.response=t,Error.captureStackTrace?.(this,ProviderFetchError)}get status(){return this.response.status}get statusText(){return this.response.statusText}}class ProviderNotFoundError extends Error{constructor(e){super(`No provider registered for '${null==e?String(e):"string"==typeof e?e:e.toString(!0)}'`),Error.captureStackTrace?.(this,ProviderNotFoundError)}}class ProviderRequestClientError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,ProviderRequestClientError)}}class ProviderRequestNotFoundError extends Error{constructor(e){super(e.message),this.original=e,Error.captureStackTrace?.(this,ProviderRequestNotFoundError)}}class ProviderRequestRateLimitError extends Error{constructor(e,t,i){super(e.message),this.original=e,this.token=t,this.resetAt=i,Error.captureStackTrace?.(this,ProviderRequestRateLimitError)}}},2380:(e,t,i)=>{i.d(t,{pq:()=>n,q4:()=>o});var n=(e=>(e.Git="git",e.GitHub="github",e.Vsls="vsls",e))(n||{}),o=(e=>(e.Private="private",e.Public="public",e.Local="local",e))(o||{})},7462:(e,t,i)=>{i.d(t,{Wj:()=>y,YY:()=>v,uy:()=>b});var n=i(9496),o=i(185),r=i(3680),s=i(5255),a=i(6479),l=i(1277),c=i(4241),h=i(4488),u=i(1774),d=i(3700),p=i(2509),m=i(4321),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor,w=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?f(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&g(t,i,r),r};const _=class extends n.Uri{constructor(e,t){var i=(...e)=>{super(...e)};if(null==e)return void i({scheme:"unknown"});if(e.scheme===s.sN.GitLens){i({scheme:e.scheme,authority:e.authority,path:e.path,query:e.query,fragment:e.fragment});const n=function(e){return JSON.parse((0,o.d)(e))}(e.authority);this.repoPath=n.repoPath;let r=n.ref;return null!=t&&"string"!=typeof t&&(r=t.sha),void(!m.pk.isUncommittedStaged(r)&&m.pk.isUncommitted(r)||(this.sha=r))}if((0,p.pt)(e)){i(e);const[,n,r]=e.path.split("/",3);this.repoPath=e.with({path:`/${n}/${r}`}).toString();const s=function(e){const[t,i]=e.authority.split("+");let n;if(i)try{n=JSON.parse((0,o.d)(i))}catch{}return{scheme:t,metadata:n}}(e);let a=s.metadata?.ref?.id;return null!=t&&"string"!=typeof t&&(a=t.sha),void(!a||!m.pk.isUncommittedStaged(a)&&m.pk.isUncommitted(a)||(this.sha=a))}if(void 0===t)return void i(e);if("string"==typeof t)return i(e),void(this.repoPath=t);let n,r=e.authority,l=(0,d.AH)(a.W.instance.git.getAbsoluteUri(t.fileName??e.fsPath,t.repoPath).fsPath);if(47===l.charCodeAt(0)&&47===l.charCodeAt(1)){const e=l.indexOf("/",2);-1===e?(r=l.substring(2),l="/"):(r=l.substring(2,e),l=l.substring(e)||"/")}switch(e.scheme){case"https":case"http":case"file":n=l?47!==l.charCodeAt(0)?`/${l}`:l:"/";break;default:n=47!==l.charCodeAt(0)?`/${l}`:l}i({scheme:e.scheme,authority:r,path:n,query:e.query,fragment:e.fragment}),this.repoPath=t.repoPath,!m.pk.isUncommittedStaged(t.sha)&&m.pk.isUncommitted(t.sha)||(this.sha=t.sha)}get directory(){return(0,d.Fd)(this.relativePath)}get fileName(){return(0,d.EZ)(this.relativePath)}get isUncommitted(){return m.pk.isUncommitted(this.sha)}get isUncommittedStaged(){return m.pk.isUncommittedStaged(this.sha)}get relativePath(){return(0,d.uo)((0,d.M)(this.fsPath),this.repoPath)[0]}get shortSha(){return m.pk.shorten(this.sha)}documentUri(){return n.Uri.from({scheme:this.scheme,authority:this.authority,path:this.path,query:this.query,fragment:this.fragment})}equals(e){return!!r.n.equals(this,e)&&this.sha===(b(e)?e.sha:void 0)}getFormattedFileName(e){return(0,u.d)(this.fsPath,{...e,fileOnly:!0})}toFileUri(){return a.W.instance.git.getAbsoluteUri(this.fsPath,this.repoPath)}static fromFile(e,t,i,n=!1){const o=a.W.instance.git.getAbsoluteUri("string"==typeof e?e:n&&e.originalPath||e.path,t);return new _(o,i?{repoPath:t,sha:"string"!=typeof e&&"?"===e.status?`${i}^3`:i}:t)}static fromRepoPath(e,t){return new _(a.W.instance.git.getAbsoluteUri(e,e),t?{repoPath:e,sha:t}:e)}static fromRevisionUri(e){return new _(e)}static async fromUri(e){if(b(e))return e;if(!a.W.instance.git.isTrackable(e))return new _(e);if(e.scheme===s.sN.GitLens)return new _(e);if(e.scheme===s.sN.Git){let t;try{t=JSON.parse(e.query)}catch{}if(t?.path){const i=await a.W.instance.git.getOrOpenRepository(n.Uri.file(t.path));if(null==i)throw new Error(`Unable to find repository for uri=${n.Uri.file(t.path).toString(!0)}`);let o;switch(t.ref){case"":case"~":o=m.pk.uncommittedStaged;break;case null:o=void 0;break;default:o=t.ref}const r={fileName:t.path,repoPath:i.path,sha:o};return new _(e,r)}}if(e.scheme===s.sN.PRs){let t;try{t=JSON.parse(e.query)}catch{}if(t?.fileName){const i=await a.W.instance.git.getOrOpenRepository(e);if(null==i)throw new Error(`Unable to find repository for uri=${n.Uri.file(t.fileName).toString(!0)}`);const o={fileName:t.fileName,repoPath:i.path,sha:t.isBase?t.baseCommit:t.headCommit};return new _(e,o)}}const t=await a.W.instance.git.getOrOpenRepository(e);return new _(e,t?.path)}};let v=_;w([(0,h.H)()],v.prototype,"directory",1),w([(0,h.H)()],v.prototype,"fileName",1),w([(0,h.H)()],v.prototype,"isUncommitted",1),w([(0,h.H)()],v.prototype,"isUncommittedStaged",1),w([(0,h.H)()],v.prototype,"relativePath",1),w([(0,h.H)()],v.prototype,"shortSha",1),w([(0,h.H)()],v.prototype,"documentUri",1),w([(0,h.H)()],v.prototype,"toFileUri",1),w([(0,c.fF)({exit:e=>`returned ${l.Yd.toLoggable(e)}`})],v,"fromUri",1);const y=Object.freeze(new v);function b(e){return e instanceof v}},7840:(e,t,i)=>{i.d(t,{XI:()=>GitBranch,Yu:()=>k,Iq:()=>R,Vx:()=>P,S3:()=>D,Lo:()=>$,BF:()=>T,uz:()=>F,YF:()=>O,g2:()=>x});var n=i(3113),o=i(6479),r=i(1277),s=i(7512),a=i(4241),l=i(4488),c=i(7469),h=i(3620),u=i(4321),d=i(5255),p=i(6450),m=i(7881),g=Object.defineProperty,f=Object.getOwnPropertyDescriptor,w=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?f(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&g(t,i,r),r};class GitStatus{constructor(e,t,i,n,o,r,s=!1){this.repoPath=e,this.branch=t,this.sha=i,this.files=n,this.state=o,this.upstream=r,this.rebasing=s,this.detached=F(t),this.detached&&(this.branch=R(this.sha))}get conflicts(){return this.files.filter((e=>e.conflicted))}get hasChanges(){return 0!==this.files.length}get hasConflicts(){return this.files.some((e=>e.conflicted))}get ref(){return this.detached?this.sha:this.branch}computeWorkingTreeStatus(){let e=0,t=0,i=0,n=0,o=0,r=0,s=0,a=0,l=0;const c=[],h=[],u=[];for(const d of this.files){switch(d.conflictStatus){case void 0:break;case m.Vz.AddedByBoth:case m.Vz.AddedByUs:case m.Vz.AddedByThem:e++,h.push(d);break;case m.Vz.DeletedByBoth:case m.Vz.DeletedByUs:case m.Vz.DeletedByThem:t++;break;default:i++,c.push(d)}switch(d.indexStatus){case void 0:break;case m.NV.Added:n++,h.push(d);break;case m.NV.Deleted:a++;break;default:r++,h.push(d)}switch(d.workingTreeStatus){case void 0:case m.Bh.Ignored:break;case m.Bh.Added:case m.Bh.Untracked:o++,u.push(d);break;case m.Bh.Deleted:l++;break;default:s++,u.push(d)}}const d=e+i+t,p=n+r+a,g=o+s+l;return{conflicted:d,conflictedAddsAndChanges:c,conflictedStatus:d>0?`+${e} ~${i} -${t}`:"",staged:p,stagedStatus:p>0?`+${n} ~${r} -${a}`:"",stagedAddsAndChanges:h,unstaged:g,unstagedStatus:g>0?`+${o} ~${s} -${l}`:"",unstagedAddsAndChanges:u}}getDiffStatus(){const e={added:0,deleted:0,changed:0};if(0===this.files.length)return e;for(const t of this.files)switch(t.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}return e}getFormattedDiffStatus({compact:e,empty:t,expand:i,prefix:n="",separator:o=" ",suffix:r=""}={}){const{added:s,changed:a,deleted:l}=this.getDiffStatus();if(0===s&&0===a&&0===l)return t??"";if(i){let e="";return s&&(e+=`${(0,h._6)("file",s)} added`),a&&(e+=`${0===e.length?"":o}${(0,h._6)("file",a)} changed`),l&&(e+=`${0===e.length?"":o}${(0,h._6)("file",l)} deleted`),`${n}${e}${r}`}let c="";return e?(0!==s&&(c+=`+${s}`),0!==a&&(c+=`${0===c.length?"":o}~${a}`),0!==l&&(c+=`${0===c.length?"":o}-${l}`)):c+=`+${s}${o}~${a}${o}-${l}`,`${n}${c}${r}`}async getRemote(){if(null==this.upstream)return;const e=await o.W.instance.git.getRemotesWithProviders(this.repoPath);if(0===e.length)return;const t=$(this.upstream);return e.find((e=>e.name===t))}getUpstreamStatus(e){return _(this.upstream?{name:this.upstream,missing:!1}:void 0,this.state,e)}}function _(e,t,i){let n=!0,o=!1,r=!1,s="",a=" ",l="";if(null!=i&&({count:n=!0,expand:o=!1,icons:r=!1,prefix:s="",separator:a=" ",suffix:l=""}=i),null==e||0===t.behind&&0===t.ahead)return i?.empty??"";if(o){let i="";return e.missing?i="missing":(t.behind&&(i+=`${(0,h._6)("commit",t.behind,{infix:r?"$(arrow-down) ":void 0})} behind`),t.ahead&&(i+=`${0===i.length?"":a}${(0,h._6)("commit",t.ahead,{infix:r?"$(arrow-up) ":void 0})} ahead`,l.startsWith(` ${e.name.split("/")[0]}`)&&(i+=" of"))),`${s}${i}${l}`}const c=n&&!e.missing;return`${s}${c?t.behind:""}${c||0!==t.behind?d.NE.ArrowDown:""}${a}${c?t.ahead:""}${c||0!==t.ahead?d.NE.ArrowUp:""}${l}`}w([(0,l.H)()],GitStatus.prototype,"conflicts",1),w([(0,l.H)()],GitStatus.prototype,"hasConflicts",1),w([(0,l.H)()],GitStatus.prototype,"computeWorkingTreeStatus",1),w([(0,l.H)()],GitStatus.prototype,"getDiffStatus",1),w([(0,l.H)()],GitStatus.prototype,"getRemote",1);w([(0,l.H)()],class GitStatusFile{constructor(e,t,i,n,o){if(this.repoPath=e,this.path=n,this.originalPath=o,null!=t&&null!=i)switch(t+i){case"??":this.workingTreeStatus=m.Bh.Untracked;break;case"!!":this.workingTreeStatus=m.Bh.Ignored;break;case"AA":this.conflictStatus=m.Vz.AddedByBoth;break;case"AU":this.conflictStatus=m.Vz.AddedByUs;break;case"UA":this.conflictStatus=m.Vz.AddedByThem;break;case"DD":this.conflictStatus=m.Vz.DeletedByBoth;break;case"DU":this.conflictStatus=m.Vz.DeletedByUs;break;case"UD":this.conflictStatus=m.Vz.DeletedByThem;break;case"UU":this.conflictStatus=m.Vz.ModifiedByBoth}if(null==this.conflictStatus){switch(t){case"A":this.indexStatus=m.NV.Added;break;case"D":this.indexStatus=m.NV.Deleted;break;case"M":this.indexStatus=m.NV.Modified;break;case"R":this.indexStatus=m.NV.Renamed;break;case"C":this.indexStatus=m.NV.Copied}switch(i){case"A":case"?":this.workingTreeStatus=m.Bh.Added;break;case"D":this.workingTreeStatus=m.Bh.Deleted;break;case"M":this.workingTreeStatus=m.Bh.Modified}}}get conflicted(){return null!=this.conflictStatus}get edited(){return null!=this.workingTreeStatus}get staged(){return null!=this.indexStatus}get status(){return this.conflictStatus??this.indexStatus??this.workingTreeStatus}get uri(){return o.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}getFormattedDirectory(e=!1){return m.$9.getFormattedDirectory(this,e)}getFormattedPath(e={}){return m.$9.getFormattedPath(this,e)}getOcticon(){return m.$9.getStatusCodicon(this.status)}getStatusText(){return m.$9.getStatusText(this.status)}getPseudoCommits(e,t){const i=[],n=new Date;if(null!=this.conflictStatus)return i.push(new p.aM(e,this.repoPath,u.pk.uncommitted,new p._j("You",t?.email??void 0,n),new p._j("You",t?.email??void 0,n),"Uncommitted changes",[u.pk.uncommittedStaged],"Uncommitted changes",new m.K8(this.repoPath,this.path,this.status,this.originalPath,u.pk.uncommittedStaged),void 0,[])),i;if(null==this.workingTreeStatus&&null==this.indexStatus)return i;if(null!=this.workingTreeStatus&&null!=this.indexStatus){const o=new Date(n);o.setMilliseconds(o.getMilliseconds()-1),i.push(new p.aM(e,this.repoPath,u.pk.uncommitted,new p._j("You",t?.email??void 0,n),new p._j("You",t?.email??void 0,n),"Uncommitted changes",[u.pk.uncommittedStaged],"Uncommitted changes",new m.K8(this.repoPath,this.path,this.status,this.originalPath,u.pk.uncommittedStaged),void 0,[]),new p.aM(e,this.repoPath,u.pk.uncommittedStaged,new p._j("You",t?.email??void 0,o),new p._j("You",t?.email??void 0,o),"Uncommitted changes",["HEAD"],"Uncommitted changes",new m.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD"),void 0,[]))}else i.push(new p.aM(e,this.repoPath,null!=this.workingTreeStatus?u.pk.uncommitted:u.pk.uncommittedStaged,new p._j("You",t?.email??void 0,n),new p._j("You",t?.email??void 0,n),"Uncommitted changes",["HEAD"],"Uncommitted changes",new m.K8(this.repoPath,this.path,this.status,this.originalPath,"HEAD"),void 0,[]));return i}}.prototype,"uri",1);var v=Object.defineProperty,y=Object.getOwnPropertyDescriptor,b=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?y(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&v(t,i,r),r};const C=/\s/,S=/^(?=.*\bHEAD\b)?(?=.*\bdetached\b).*$/;var k=(e=>(e.Ahead="ahead",e.Behind="behind",e.Diverged="diverged",e.Local="local",e.MissingUpstream="missingUpstream",e.Remote="remote",e.UpToDate="upToDate",e.Unpublished="unpublished",e))(k||{});function P(e,t,i){return`${e}|${t?"remotes/":"heads/"}${i}`}class GitBranch{constructor(e,t,i,n,o,r,s,a=0,l=0,c=!1,h=!1){this.repoPath=e,this.name=t,this.remote=i,this.current=n,this.date=o,this.sha=r,this.rebasing=h,this.refType="branch",this.id=P(e,i,t),this.detached=c||!!this.current&&F(t),this.detached&&(this.name=R(this.sha)),this.upstream=null==s?.name||0===s.name.length?void 0:s,this.state={ahead:a,behind:l}}toString(){return`${(0,r.q4)(this)}(${this.id})`}get formattedDate(){return o.W.instance.BranchDateFormatting.dateStyle===n.Dn.Absolute?this.formatDate(o.W.instance.BranchDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.detached?this.sha:this.name}formatDate(e){return null!=this.date?(0,s.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,s.Zh)(this.date):""}async getAssociatedPullRequest(e){if(null==this._pullRequest){async function t(){const t=await this.getRemoteWithProvider();if(null==t)return;const i=this.getTrackingWithoutRemote()??this.getNameWithoutRemote();return o.W.instance.git.getPullRequestForBranch(i,t,e)}this._pullRequest=t.call(this)}return(0,c.HO)(this._pullRequest,e?.timeout)}getBasename(){const e=this.getNameWithoutRemote(),t=e.lastIndexOf("/");return-1!==t?e.substring(t+1):e}getNameWithoutRemote(){return this.remote?this.name.substring(this.name.indexOf("/")+1):this.name}getTrackingWithoutRemote(){return this.upstream?.name.substring(this.upstream.name.indexOf("/")+1)}async getRemote(){const e=this.getRemoteName();if(null==e)return;const t=await o.W.instance.git.getRemotes(this.repoPath);return 0!==t.length?t.find((t=>t.name===e)):void 0}async getRemoteWithProvider(){const e=this.getRemoteName();if(null==e)return;const t=await o.W.instance.git.getRemotesWithProviders(this.repoPath);return 0!==t.length?t.find((t=>t.name===e)):void 0}getRemoteName(){return this.remote?$(this.name):null!=this.upstream?$(this.upstream.name):void 0}async getStatus(){if(this.remote)return"remote";if(null!=this.upstream)return this.upstream.missing?"missingUpstream":this.state.ahead&&this.state.behind?"diverged":this.state.ahead?"ahead":this.state.behind?"behind":"upToDate";return(await o.W.instance.git.getRemotesWithProviders(this.repoPath)).length>0?"unpublished":"local"}getTrackingStatus(e){return _(this.upstream,this.state,e)}get starred(){const e=o.W.instance.storage.getWorkspace("starred:branches");return void 0!==e&&!0===e[this.id]}star(){return o.W.instance.git.getRepository(this.repoPath)?.star(this)}unstar(){return o.W.instance.git.getRepository(this.repoPath)?.unstar(this)}}function R(e){return`(${u.pk.shorten(e)}...)`}function D(e){return e.substring(e.indexOf("/")+1)}function $(e){return e.substring(0,e.indexOf("/"))}function T(e){return e instanceof GitBranch}function F(e){return C.test(e)||S.test(e)}function x(e){const t=e.indexOf("/");return-1===t?[e,void 0]:[e.substring(t+1),e.substring(0,t)]}function O(e,t){switch((t={current:!0,orderBy:n.DN.get("sortBranchesBy"),...t}).orderBy){case n.Vz.DateAsc:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==e.date?-1:e.date.getTime())-(null==i.date?-1:i.date.getTime())));case n.Vz.NameAsc:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,h.dm)(e.name,i.name)));case n.Vz.NameDesc:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||("main"===e.name?-1:1)-("main"===i.name?-1:1)||("master"===e.name?-1:1)-("master"===i.name?-1:1)||("develop"===e.name?-1:1)-("develop"===i.name?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(0,h.dm)(i.name,e.name)));case n.Vz.DateDesc:default:return e.sort(((e,i)=>(t.missingUpstream?(e.upstream?.missing?-1:1)-(i.upstream?.missing?-1:1):0)||(t.current?(e.current?-1:1)-(i.current?-1:1):0)||(e.starred?-1:1)-(i.starred?-1:1)||(i.remote?-1:1)-(e.remote?-1:1)||(null==i.date?-1:i.date.getTime())-(null==e.date?-1:e.date.getTime())))}}b([(0,l.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitBranch.prototype,"formatDate",1),b([(0,a.fF)()],GitBranch.prototype,"getAssociatedPullRequest",1),b([(0,l.H)()],GitBranch.prototype,"getBasename",1),b([(0,l.H)()],GitBranch.prototype,"getNameWithoutRemote",1),b([(0,l.H)()],GitBranch.prototype,"getTrackingWithoutRemote",1),b([(0,l.H)()],GitBranch.prototype,"getRemote",1),b([(0,l.H)()],GitBranch.prototype,"getRemoteWithProvider",1),b([(0,l.H)()],GitBranch.prototype,"getRemoteName",1),b([(0,l.H)()],GitBranch.prototype,"getStatus",1)},6450:(e,t,i)=>{i.d(t,{By:()=>k,G2:()=>S,_j:()=>GitCommitIdentity,aM:()=>b,f_:()=>C});var n=i(9496),o=i(8388),r=i(3113),s=i(5255),a=i(1277),l=i(7512),c=i(5432),h=i(4488),u=i(7469),d=i(3620),p=i(7462),m=i(7881),g=i(4321),f=Object.defineProperty,w=Object.getOwnPropertyDescriptor,_=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?w(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&f(t,i,r),r};const v=/stash@{(\d+)}/,y=class{constructor(e,t,i,n,o,r,a,l,c,h,u,d,p,g){this.container=e,this.repoPath=t,this.sha=i,this.author=n,this.committer=o,this.parents=a,this._stashUntrackedFilesLoaded=!1,this._recomputeStats=!1,this.ref=this.sha,this.shortSha=this.sha.substring(0,this.container.CommitShaFormatting.length),this.tips=d,p?(this.refType="stash",this.stashName=p||void 0,this.stashOnRef=g||void 0,this.number=v.exec(p)?.[1]):this.refType="revision",null!=l?(this._message=l,this._summary=r!==l?`${r} ${s.NE.Ellipsis}`:r):this._summary=`${r} ${s.NE.Ellipsis}`,null!=h&&(this._stats=h),null!=c&&(Array.isArray(c)?this._files=c:c instanceof m.K8?this._file=c:(null!=c.file&&(this._file=c.file),null!=c.files&&(this._files=c.files)),this._recomputeStats=!0),null!=u?Array.isArray(u)?this.lines=u:this.lines=[u]:this.lines=[]}toString(){return`${(0,a.q4)(this)}(${this.repoPath}|${this.shortSha})`}get date(){return this.container.CommitDateFormatting.dateSource===r.Vn.Committed?this.committer.date:this.author.date}get file(){return this._file}get files(){return this._files}get formattedDate(){return this.container.CommitDateFormatting.dateStyle===r.Dn.Absolute?this.formatDate(this.container.CommitDateFormatting.dateFormat):this.formatDateFromNow()}get isUncommitted(){return g.pk.isUncommitted(this.sha)}get isUncommittedStaged(){return g.pk.isUncommittedStaged(this.sha)}get message(){return this._message}get name(){return this.stashName?this.stashName:this.shortSha}get stats(){return this._recomputeStats&&this.computeFileStats(),this._stats}get summary(){return this._summary}get unresolvedPreviousSha(){const e=this._resolvedPreviousSha??(null!=this.file?this.file.previousSha:this.parents[0])??`${this.sha}^`;return g.pk.isUncommittedParent(e)?"HEAD":e}hasFullDetails(){return null!=this.message&&null!=this.files&&(this.isUncommitted&&this._etagFileSystem===this.container.git.getRepository(this.repoPath)?.etagFileSystem||0!==this.parents.length)&&("stash"!==this.refType||this._stashUntrackedFilesLoaded)}assertsFullDetails(){if(!this.hasFullDetails())throw new Error(`GitCommit(${this.sha}) is not fully loaded`)}async ensureFullDetails(){if(this.hasFullDetails())return;if(this.isUncommitted){this._message="Uncommitted Changes";const e=this.container.git.getRepository(this.repoPath);if(this._etagFileSystem=e?.etagFileSystem,null!=this._etagFileSystem){const t=await this.container.git.getStatusForRepo(this.repoPath);null!=t&&(this._files=t.files.map((e=>new m.K8(this.repoPath,e.path,e.status,e.originalPath)))),this._etagFileSystem=e?.etagFileSystem}return void(null==this._files&&(this._files=null!=this.file?[this.file]:[]))}const[e,t]=await Promise.allSettled(["stash"!==this.refType?this.container.git.getCommit(this.repoPath,this.sha):void 0,"stash"!==this.refType||this._stashUntrackedFilesLoaded?void 0:this.container.git.getCommit(this.repoPath,`${this.stashName}^3`),this.getPreviousSha()]);let i;if("fulfilled"===e.status&&null!=e.value&&(i=e.value,this.parents.push(...i.parents??[]),this._summary=i.summary,this._message=i.message,this._files=i.files,null!=this._file)){const e=this._files.find((e=>e.path===this._file.path));null!=e&&(this._file=new m.K8(e.repoPath,e.path,e.status,e.originalPath??this._file.originalPath,e.previousSha??this._file.previousSha,e.stats??this._file.stats))}if("fulfilled"===t.status&&null!=t.value&&(this._stashUntrackedFilesLoaded=!0,i=t.value,null!=i?.files&&0!==i.files.length)){const e=i.files.map((e=>new m.K8(this.repoPath,e.path,m.Bh.Untracked,e.originalPath)));null==this._files?this._files=e:this._files.push(...e)}this._recomputeStats=!0}computeFileStats(){if(!this._recomputeStats||null==this._files)return;this._recomputeStats=!1;const e={added:0,deleted:0,changed:0};let t=0,i=0;for(const n of this._files)switch(null!=n.stats&&(t+=n.stats.additions,i+=n.stats.deletions),n.status){case"A":case"?":e.added++;break;case"D":e.deleted++;break;default:e.changed++}null!=this._stats&&(0===t&&0!==this._stats.additions&&(t=this._stats.additions),0===i&&0!==this._stats.deletions&&(i=this._stats.deletions)),this._stats={...this._stats,changedFiles:e,additions:t,deletions:i}}async findFile(e){if(!this.hasFullDetails()&&(await this.ensureFullDetails(),null==this._files))return;const t=this.container.git.getRelativePath(e,this.repoPath);return this._files?.find((e=>e.path===t))}formatDate(e){return this.container.CommitDateFormatting.dateSource===r.Vn.Committed?this.committer.formatDate(e):this.author.formatDate(e)}formatDateFromNow(e){return this.container.CommitDateFormatting.dateSource===r.Vn.Committed?this.committer.fromNow(e):this.author.fromNow(e)}formatStats(e){const t=this.stats;if(null==t)return e?.empty??"";const{changedFiles:i,additions:n,deletions:o}=t;if(k(i)<=0&&n<=0&&o<=0)return e?.empty??"";const{compact:r=!1,expand:a=!1,prefix:l="",sectionSeparator:c=` ${(0,d.vk)(s.NE.Dot,1,1,s.NE.Space)} `,separator:h=" ",suffix:u=""}=e??{};let p=l;if("number"==typeof i)i&&(p+=a?`${(0,d._6)("file",i)} changed`:`~${i}`);else{const{added:e,changed:t,deleted:o}=i;e?p+=a?`${(0,d._6)("file",e)} added`:`+${e}`:a||r||(p+="+0"),t?p+=`${e?h:""}${a?`${(0,d._6)("file",t)} changed`:`~${t}`}`:a||r||(p+="~0"),o?p+=`${t|n?h:""}${a?`${(0,d._6)("file",o)} deleted`:`-${o}`}`:a||r||(p+="-0")}return a&&(n&&(p+=`${i?c:""}${(0,d._6)("addition",n)}`),o&&(p+=`${i||n?h:""}${(0,d._6)("deletion",o)}`)),p+=u,p}async getAssociatedPullRequest(e){if(null==this._pullRequest){async function t(){const t=e?.remote??await this.container.git.getBestRemoteWithRichProvider(this.repoPath);if(null!=t?.provider)return this.container.git.getPullRequestForCommit(this.ref,t,e)}this._pullRequest=t.call(this)}return(0,u.HO)(this._pullRequest,e?.timeout)}getAvatarUri(e){return this.author.getAvatarUri(this,e)}getCachedAvatarUri(e){return this.author.getCachedAvatarUri(e)}async getCommitForFile(e){const t="string"==typeof e?this.container.git.getRelativePath(e,this.repoPath):e.path,i=await this.findFile(t);if(null==i)return;return this.with({files:{file:i}})}async getCommitsForFiles(){if(!this.hasFullDetails()&&(await this.ensureFullDetails(),null==this._files))return[];const e=this._files?.map((e=>this.with({files:{file:e}})));return e??[]}getGitUri(e=!1){const t=this._file?.uri??this.container.git.getAbsoluteUri(this.repoPath,this.repoPath);return e?new p.YY(this._file?.originalUri??t,{repoPath:this.repoPath,sha:this.unresolvedPreviousSha}):new p.YY(t,this)}getPreviousComparisonUrisForLine(e,t){return null!=this.file?this.container.git.getPreviousComparisonUrisForLine(this.repoPath,this.file.uri,e,t??(this.sha===g.pk.uncommitted?void 0:this.sha)):Promise.resolve(void 0)}async getPreviousSha(){if(null==this._previousShaPromise){async function e(){if(null!=this.file){if(null!=this.file.previousSha&&g.pk.isSha(this.file.previousSha))return this.file.previousSha;const e=await this.container.git.resolveReference(this.repoPath,g.pk.isUncommitted(this.sha,!0)?"HEAD":`${this.sha}^`,this.file.originalPath??this.file.path);return this._resolvedPreviousSha=e,e}const e=this.parents[0];if(null!=e&&g.pk.isSha(e))return e;const t=await this.container.git.resolveReference(this.repoPath,g.pk.isUncommitted(this.sha,!0)?"HEAD":`${this.sha}^`);return this._resolvedPreviousSha=t,t}this._previousShaPromise=e.call(this)}return this._previousShaPromise}getRepository(){return this.container.git.getRepository(this.repoPath)}async isPushed(){return this.container.git.hasCommitBeenPushed(this.repoPath,this.ref)}with(e){let t;return null!=e.files?(t={file:this._file,files:this._files},null!=e.files.file?t.file=e.files.file:null===e.files.file&&(t.file=void 0),null!=e.files.files?t.files=e.files.files:null===e.files.files&&(t.files=void 0)):null===e.files&&(t=void 0),new y(this.container,this.repoPath,e.sha??this.sha,this.author,this.committer,this.summary,this.getChangedValue(e.parents,this.parents)??[],this.message,t,this.stats,this.getChangedValue(e.lines,this.lines),this.tips,this.stashName,this.stashOnRef)}getChangedValue(e,t){return void 0===e?t:null!==e?e:void 0}};let b=y;function C(e){return e instanceof b}function S(e){return e instanceof b&&"stash"===e.refType&&Boolean(e.stashName)}_([(0,h.H)()],b.prototype,"isUncommitted",1),_([(0,h.H)()],b.prototype,"isUncommittedStaged",1),_([(0,c.H)()],b.prototype,"ensureFullDetails",1),_([(0,h.H)()],b.prototype,"getGitUri",1),_([(0,h.H)(((e,t)=>`${e}|${t??""}`))],b.prototype,"getPreviousComparisonUrisForLine",1),_([(0,c.H)()],b.prototype,"isPushed",1);class GitCommitIdentity{constructor(e,t,i,n){this.name=e,this.email=t,this.date=i,this.avatarUrl=n}formatDate(e){return(0,l.p6)(this.date,e??"MMMM Do, YYYY h:mma")}fromNow(e){return(0,l.Zh)(this.date,e)}getAvatarUri(e,t){return null!=this.avatarUrl?n.Uri.parse(this.avatarUrl):(0,o.oP)(this.email,e,t)}getCachedAvatarUri(e){return null!=this.avatarUrl?n.Uri.parse(this.avatarUrl):(0,o.x4)(this.email,e)}}function k(e){return null==e?0:"number"==typeof e?e:e.added+e.changed+e.deleted}_([(0,h.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitCommitIdentity.prototype,"formatDate",1)},7881:(e,t,i)=>{i.d(t,{$9:()=>n,Bh:()=>g,K8:()=>w,NV:()=>m,Vz:()=>p});var n,o=i(5255),r=i(6479),s=i(4488),a=i(1774),l=i(3700),c=i(3620),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?u(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&h(t,i,r),r},p=(e=>(e.AddedByBoth="AA",e.AddedByUs="AU",e.AddedByThem="UA",e.DeletedByBoth="DD",e.DeletedByUs="DU",e.DeletedByThem="UD",e.ModifiedByBoth="UU",e))(p||{}),m=(e=>(e.Modified="M",e.Added="A",e.Deleted="D",e.Renamed="R",e.Copied="C",e.Unchanged=".",e.Untracked="?",e.Ignored="!",e.UpdatedButUnmerged="U",e))(m||{}),g=(e=>(e.Modified="M",e.Added="A",e.Deleted="D",e.Untracked="?",e.Ignored="!",e))(g||{});(e=>{e.is=function(e){return null!=e&&"fileName"in e&&"string"==typeof e.fileName&&"status"in e&&"string"==typeof e.status&&1===e.status.length},e.getFormattedDirectory=function(e,t=!1,i){const n=(0,l.Fd)(e.path,i);return t&&("R"===e.status||"C"===e.status)&&e.originalPath?`${n} ${(0,c.vk)(o.NE.ArrowLeft,1,1)} ${e.originalPath}`:n},e.getFormattedPath=function(e,t={}){return(0,a.d)(e.path,t)},e.getOriginalRelativePath=function(e,t){return e.originalPath?(0,l.uo)(e.originalPath,t)[0]:""},e.getRelativePath=function(e,t){return(0,l.uo)(e.path,t)[0]};const t={".":void 0,"!":"icon-status-ignored.svg","?":"icon-status-untracked.svg",A:"icon-status-added.svg",D:"icon-status-deleted.svg",M:"icon-status-modified.svg",R:"icon-status-renamed.svg",C:"icon-status-copied.svg",AA:"icon-status-conflict.svg",AU:"icon-status-conflict.svg",UA:"icon-status-conflict.svg",DD:"icon-status-conflict.svg",DU:"icon-status-conflict.svg",UD:"icon-status-conflict.svg",UU:"icon-status-conflict.svg",T:"icon-status-modified.svg",U:"icon-status-modified.svg"};e.getStatusIcon=function(e){return t[e]??"icon-status-unknown.svg"};const i={".":void 0,"!":"$(diff-ignored)","?":"$(diff-added)",A:"$(diff-added)",D:"$(diff-removed)",M:"$(diff-modified)",R:"$(diff-renamed)",C:"$(diff-added)",AA:"$(warning)",AU:"$(warning)",UA:"$(warning)",DD:"$(warning)",DU:"$(warning)",UD:"$(warning)",UU:"$(warning)",T:"$(diff-modified)",U:"$(diff-modified)"};e.getStatusCodicon=function(e,t=o.NE.Space.repeat(4)){return i[e]??t};const n={".":"Unchanged","!":"Ignored","?":"Untracked",A:"Added",D:"Deleted",M:"Modified",R:"Renamed",C:"Copied",AA:"Conflict",AU:"Conflict",UA:"Conflict",DD:"Conflict",DU:"Conflict",UD:"Conflict",UU:"Conflict",T:"Modified",U:"Updated but Unmerged"};e.getStatusText=function(e){return n[e]??"Unknown"}})(n||(n={}));const f=class{constructor(e,t,i,n,o,r){this.repoPath=e,this.path=t,this.status=i,this.originalPath=n,this.previousSha=o,this.stats=r}static is(e){return e instanceof f}get hasConflicts(){switch(this.status){case"UA":case"AU":case"AA":case"UD":case"DU":case"DD":case"UU":return!0;default:return!1}}get uri(){return r.W.instance.git.getAbsoluteUri(this.path,this.repoPath)}get originalUri(){return this.originalPath?r.W.instance.git.getAbsoluteUri(this.originalPath,this.repoPath):void 0}getWorkingUri(){return r.W.instance.git.getWorkingUri(this.repoPath,this.uri)}formatStats(e){if(null==this.stats)return e?.empty??"";const{additions:t,deletions:i}=this.stats;if(t<0&&i<0)return e?.empty??"";const{compact:n=!1,expand:o=!1,prefix:r="",separator:s=" ",suffix:a=""}=e??{};let l=r;return t?l+=o?`${(0,c._6)("line",t)} added`:`+${t}`:o||n||(l+="+0"),i?l+=`${t?s:""}${o?`${(0,c._6)("line",i)} deleted`:`-${i}`}`:o||n||(l+="-0"),l+=a,l}};let w=f;d([(0,s.H)()],w.prototype,"uri",1),d([(0,s.H)()],w.prototype,"originalUri",1),d([(0,s.H)()],w.prototype,"getWorkingUri",1)},8452:(e,t,i)=>{i.d(t,{$9:()=>Issue,Gj:()=>l,mX:()=>a,um:()=>n,y$:()=>c});var n,o,r=i(9496),s=i(5255),a=(e=>(e.Issue="Issue",e.PullRequest="PullRequest",e))(a||{});function l(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed}}function c(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,updatedDate:e.updatedDate,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},repository:{owner:e.repository.owner,repo:e.repository.repo},assignees:e.assignees.map((e=>({name:e.name,avatarUrl:e.avatarUrl,url:e.url}))),labels:null==e.labels?void 0:e.labels.map((e=>({color:e.color,name:e.name}))),commentsCount:e.commentsCount,thumbsUpCount:e.thumbsUpCount}}(o=n||(n={})).getHtmlIcon=function(e){return"PullRequest"===e.type?e.closed?`<span class="codicon codicon-git-pull-request" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`:`<span class="codicon codicon-git-pull-request" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`:e.closed?`<span class="codicon codicon-pass" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};"></span>`:`<span class="codicon codicon-issues" style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};"></span>`},o.getMarkdownIcon=function(e){return"PullRequest"===e.type?e.closed?`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(git-pull-request)</span>`:`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(git-pull-request)</span>`:e.closed?`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(pass)</span>`:`<span style="color:${r.window.activeColorTheme.kind===r.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(issues)</span>`},o.getThemeIcon=function(e){return"PullRequest"===e.type?e.closed?new r.ThemeIcon("git-pull-request",new r.ThemeColor(s.wL.MergedPullRequestIconColor)):new r.ThemeIcon("git-pull-request",new r.ThemeColor(s.wL.OpenPullRequestIconColor)):e.closed?new r.ThemeIcon("pass",new r.ThemeColor(s.wL.ClosedAutolinkedIssueIconColor)):new r.ThemeIcon("issues",new r.ThemeColor(s.wL.OpenAutolinkedIssueIconColor))};class Issue{constructor(e,t,i,n,o,r,s,a,l,c,h,u,d,p){this.provider=e,this.id=t,this.title=i,this.url=n,this.date=o,this.closed=r,this.updatedDate=s,this.author=a,this.repository=l,this.assignees=c,this.closedDate=h,this.labels=u,this.commentsCount=d,this.thumbsUpCount=p,this.type="Issue"}}},4092:(e,t,i)=>{i.d(t,{Cz:()=>g,i7:()=>_,l1:()=>f,o0:()=>p,pD:()=>m});var n=i(9496),o=i(3113),r=i(5255),s=i(6479),a=i(7512),l=i(4488),c=i(8452),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?u(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&h(t,i,r),r},p=(e=>(e.Open="Open",e.Closed="Closed",e.Merged="Merged",e))(p||{}),m=(e=>(e.Approved="Approved",e.ChangesRequested="ChangesRequested",e.ReviewRequired="ReviewRequired",e))(m||{}),g=(e=>(e.Unknown="Unknown",e.Mergeable="Mergeable",e.Conflicting="Conflicting",e))(g||{});function f(e){return{type:e.type,provider:{id:e.provider.id,name:e.provider.name,domain:e.provider.domain,icon:e.provider.icon},id:e.id,title:e.title,url:e.url,date:e.date,closedDate:e.closedDate,closed:e.closed,author:{name:e.author.name,avatarUrl:e.author.avatarUrl,url:e.author.url},state:e.state,mergedDate:e.mergedDate,mergeableState:e.mergeableState,refs:e.refs?{head:{exists:e.refs.head.exists,owner:e.refs.head.owner,repo:e.refs.head.repo,sha:e.refs.head.sha,branch:e.refs.head.branch},base:{exists:e.refs.base.exists,owner:e.refs.base.owner,repo:e.refs.base.repo,sha:e.refs.base.sha,branch:e.refs.base.branch},isCrossRepository:e.refs.isCrossRepository}:void 0,isDraft:e.isDraft,additions:e.additions,deletions:e.deletions,comments:e.comments,reviewDecision:e.reviewDecision,reviewRequests:e.reviewRequests,assignees:e.assignees}}const w=class{constructor(e,t,i,n,o,r,s,a,l,h,u,d,p,m,g,f,w,_){this.provider=e,this.author=t,this.id=i,this.title=n,this.url=o,this.state=r,this.date=s,this.closedDate=a,this.mergedDate=l,this.mergeableState=h,this.refs=u,this.isDraft=d,this.additions=p,this.deletions=m,this.comments=g,this.reviewDecision=f,this.reviewRequests=w,this.assignees=_,this.type=c.mX.PullRequest}static is(e){return e instanceof w}static getMarkdownIcon(e){switch(e.state){case"Open":return`<span style="color:${n.window.activeColorTheme.kind===n.ColorThemeKind.Dark?"#3fb950":"#1a7f37"};">$(git-pull-request)</span>`;case"Closed":return`<span style="color:${n.window.activeColorTheme.kind===n.ColorThemeKind.Dark?"#f85149":"#cf222e"};">$(git-pull-request-closed)</span>`;case"Merged":return`<span style="color:${n.window.activeColorTheme.kind===n.ColorThemeKind.Dark?"#a371f7":"#8250df"};">$(git-merge)</span>`;default:return"$(git-pull-request)"}}static getThemeIcon(e){switch(e.state){case"Open":return new n.ThemeIcon("git-pull-request",new n.ThemeColor(r.wL.OpenPullRequestIconColor));case"Closed":return new n.ThemeIcon("git-pull-request-closed",new n.ThemeColor(r.wL.ClosedPullRequestIconColor));case"Merged":return new n.ThemeIcon("git-merge",new n.ThemeColor(r.wL.MergedPullRequestIconColor));default:return new n.ThemeIcon("git-pull-request")}}get closed(){return"Closed"===this.state}get formattedDate(){return s.W.instance.PullRequestDateFormatting.dateStyle===o.Dn.Absolute?this.formatDate(s.W.instance.PullRequestDateFormatting.dateFormat):this.formatDateFromNow()}formatDate(e){return(0,a.p6)(this.mergedDate??this.closedDate??this.date,e??"MMMM Do, YYYY h:mma")}formatDateFromNow(){return(0,a.Zh)(this.mergedDate??this.closedDate??this.date)}formatClosedDate(e){return null==this.closedDate?"":(0,a.p6)(this.closedDate,e??"MMMM Do, YYYY h:mma")}formatClosedDateFromNow(){return null==this.closedDate?"":(0,a.Zh)(this.closedDate)}formatMergedDate(e){return null==this.mergedDate?"":(0,a.p6)(this.mergedDate,e??"MMMM Do, YYYY h:mma")??""}formatMergedDateFromNow(){return null==this.mergedDate?"":(0,a.Zh)(this.mergedDate)}formatUpdatedDate(e){return(0,a.p6)(this.date,e??"MMMM Do, YYYY h:mma")??""}formatUpdatedDateFromNow(){return(0,a.Zh)(this.date)}};let _=w;d([(0,l.H)((e=>e??"MMMM Do, YYYY h:mma"))],_.prototype,"formatDate",1),d([(0,l.H)((e=>e??"MMMM Do, YYYY h:mma"))],_.prototype,"formatClosedDate",1),d([(0,l.H)((e=>e??"MMMM Do, YYYY h:mma"))],_.prototype,"formatMergedDate",1),d([(0,l.H)((e=>e??"MMMM Do, YYYY h:mma"))],_.prototype,"formatUpdatedDate",1)},4321:(e,t,i)=>{i.d(t,{Wb:()=>g,pk:()=>m});var n=i(3113),o=i(5255),r=i(7840);const s=/^(\S*?)(\.\.\.?)(\S*)\s*$/,a=/(^[0-9a-f]{40}([\^@~:]\S*)?$)|(^[0]{40}(:|-)$)/,l=/(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/,c=/(^[0-9a-f]{40})\^[0-3]?$/,h=/^(.*?)([\^@~:].*)?$/,u=/^[0]{40}(?:[\^@~:]\S*)?:?$/,d=/^[0]{40}([\^@~]\S*)?:$/;function p(e,t){return!!t&&e.test(t)}var m,g;(e=>{function t(e){return p(a,e)}function i(t,i=!1){return t===e.uncommitted||t===e.uncommittedStaged||!i&&p(u,t)}function o(t,i=!1){return t===e.uncommittedStaged||!i&&p(d,t)}e.deletedOrMissing="0000000000000000000000000000000000000000-",e.uncommitted="0000000000000000000000000000000000000000",e.uncommittedStaged="0000000000000000000000000000000000000000:",e.createRange=function(e,t,i=".."){return`${e??""}${i}${t??""}`},e.isRange=function(e){return e?.includes("..")??!1},e.isSha=function(e){return p(l,e)},e.isShaLike=t,e.isShaParent=function(e){return p(c,e)},e.isUncommitted=i,e.isUncommittedParent=function(t){return t===`${e.uncommitted}^`||t===`${e.uncommittedStaged}^`},e.isUncommittedStaged=o,e.shorten=function(r,s){if(r===e.deletedOrMissing)return"(deleted)";if(!r)return s?.strings?.working??"";if(i(r))return o(r)?s?.strings?.uncommittedStaged??"Index":s?.strings?.uncommitted??"Working Tree";if(e.isRange(r))return r;if(!s?.force&&!t(r))return r;const a=Math.max(5,n.DN.get("advanced.abbreviatedShaLength")),l=h.exec(r);if(null!=l){const[,e,t]=l;if(null!=t)return`${e.substr(0,a)}${t}`}return r.substr(0,a)},e.splitRange=function(e){const t=s.exec(e);if(null==t)return;const[,i,n,o]=t;return{ref1:i,notation:n,ref2:o}}})(m||(m={})),(e=>{function t(e,t,i={refType:"revision"}){switch(i.refType){case"branch":return{refType:"branch",repoPath:t,ref:e,name:i.name,id:i.id,remote:i.remote,upstream:i.upstream};case"stash":return{refType:"stash",repoPath:t,ref:e,name:i.name,number:i.number,message:i.message};case"tag":return{refType:"tag",repoPath:t,ref:e,name:i.name,id:i.id};default:return{refType:"revision",repoPath:t,ref:e,name:i.name??m.shorten(e,{force:!0,strings:{working:"Working Tree"}}),message:i.message}}}e.create=t,e.fromBranch=function(e){return t(e.ref,e.repoPath,{id:e.id,refType:e.refType,name:e.name,remote:e.remote,upstream:e.upstream})},e.fromRevision=function(e){return"stash"===e.refType?t(e.ref,e.repoPath,{refType:e.refType,name:e.name,number:e.number,message:e.message}):t(e.ref,e.repoPath,{refType:e.refType,name:e.name,message:e.message})},e.fromTag=function(e){return t(e.ref,e.repoPath,{id:e.id,refType:e.refType,name:e.name})},e.getNameWithoutRemote=function(e){return"branch"===e.refType&&e.remote?(0,r.S3)(e.name):e.name},e.isBranch=function(e){return"branch"===e?.refType},e.isRevision=function(e){return"revision"===e?.refType},e.isRevisionRange=function(e){return"revision"===e?.refType&&m.isRange(e.ref)},e.isStash=function(e){return"stash"===e?.refType||"revision"===e?.refType&&Boolean(e?.stashName)},e.isTag=function(e){return"tag"===e?.refType},e.toString=function(t,i){if(null==t)return"";let n;if(i=!1===i?{}:{expand:!0,icon:!0,label:i?.label??i?.expand??!0,...i},!Array.isArray(t)||1===t.length){const s=Array.isArray(t)?t[0]:t;let a=i?.quoted?`'${s.name}'`:s.name;switch(s.refType){case"branch":s.remote&&(a=`${(0,r.Lo)(a)}: ${(0,r.S3)(a)}`,a=i?.quoted?`'${a}'`:a),n=`${i.label?(s.remote?"remote ":"")+"branch ":""}${i.icon?`$(git-branch)${o.NE.Space}${a}`:a}`;break;case"tag":n=`${i.label?"tag ":""}${i.icon?`$(tag)${o.NE.Space}${a}`:a}`;break;default:if(e.isStash(s)){let e;i.expand&&s.message&&(e=`${null!=s.number?`${s.number}: `:""}${s.message.length>20?`${s.message.substring(0,20).trimRight()}${o.NE.Ellipsis}`:s.message}`),n=`${i.label?"stash ":""}${i.icon?`$(archive)${o.NE.Space}${e??s.name}`:`${e??s.number??s.name}`}`}else if(m.isRange(s.ref))n=a;else{let e,t;i.expand&&s.message&&(e=s.message.length>20?` (${s.message.substring(0,20).trimRight()}${o.NE.Ellipsis})`:` (${s.message})`),i.expand&&i.label&&m.isShaParent(s.ref)?(a=s.name.endsWith("^")?s.name.substr(0,s.name.length-1):s.name,i?.quoted&&(a=`'${a}'`),t="before "):t="",n=`${i.label?`${t}commit `:""}${i.icon?`$(git-commit)${o.NE.Space}${a}${e??""}`:`${a}${e??""}`}`}}return i.capitalize&&i.expand&&!1!==i.label?`${n[0].toLocaleUpperCase()}${n.substring(1)}`:n}const s=i.expand?` (${t.map((e=>e.name)).join(", ")})`:"";switch(t[0].refType){case"branch":return`${t.length} branches${s}`;case"tag":return`${t.length} tags${s}`;default:return`${t.length} ${e.isStash(t[0])?"stashes":"commits"}${s}`}}})(g||(g={}))},3050:(e,t,i)=>{i.d(t,{XG:()=>d,dM:()=>f,jv:()=>g,ss:()=>m});var n=i(9496),o=i(5255),r=i(6479),s=i(4488),a=i(3620),l=i(2509),c=i(4794),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e=>(e.Fetch="fetch",e.Push="push",e))(d||{});const p=class{constructor(e,t,i,n,o,r,s,a){this.repoPath=e,this.id=t,this.name=i,this.scheme=n,this.domain=o,this.path=r,this.provider=s,this.urls=a}static getHighlanderProviders(e){if(0===e.length)return;const t=1===e.length?e[0]:e.find((e=>e.default));if(null!=t)return[t.provider];const i=e[0].provider.name;return e.every((e=>e.provider.name===i))?e.map((e=>e.provider)):void 0}static getHighlanderProviderName(e){if(0===e.length)return;const t=1===e.length?e[0]:e.find((e=>e.default));if(null!=t)return t.provider.name;const i=e[0].provider.name;return e.every((e=>e.provider.name===i))?i:void 0}static is(e){return e instanceof p}static sort(e){return e.sort(((e,t)=>(e.default?-1:1)-(t.default?-1:1)||("origin"===e.name?-1:1)-("origin"===t.name?-1:1)||("upstream"===e.name?-1:1)-("upstream"===t.name?-1:1)||(0,a.dm)(e.name,t.name)))}get default(){const e=r.W.instance.storage.getWorkspace("remote:default");return this.id===e}get url(){let e;for(const t of this.urls){if("push"===t.type)return t.url;null==e&&(e=t.url)}return e}hasRichProvider(){return this.provider?.hasRichIntegration()??!1}matches(e,t){if(null==t){if((0,a.qq)(e,this.url))return!0;[,e,t]=(0,c.S)(e)}return(0,a.qq)(e,this.domain)&&(0,a.qq)(t,this.path)}async setAsDefault(e=!0){const t=r.W.instance.git.getRepository(this.repoPath);await(t?.setRemoteAsDefault(this,e))}};let m=p;function g(e){const t=function(e){let t,i,n;for(const{type:t}of e.urls)if("fetch"===t){if(i=!0,n)break}else if("push"===t&&(n=!0,i))break;return t=i&&n?o.NE.ArrowsRightLeft:n?o.NE.ArrowRight:i?o.NE.ArrowLeft:o.NE.Dash,t}(e),{provider:i}=e;return null!=i?`${t}${o.NE.Space} ${i.name} ${o.NE.Space}${o.NE.Dot}${o.NE.Space} ${i.displayPath}`:`${t}${o.NE.Space} ${e.domain?`${e.domain} ${o.NE.Space}${o.NE.Dot}${o.NE.Space} `:""}${e.path}`}function f(e,t,i,o=n.window.activeColorTheme){if(null==t.provider?.icon)return;const r=n.Uri.joinPath(e.context.extensionUri,`images/${(0,l.GC)(o)?"light":"dark"}/icon-${t.provider.icon}.svg`);return null!=i?i(r):r}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?u(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&h(t,i,r)})([(0,s.H)()],m.prototype,"url",1)},6503:(e,t,i)=>{i.d(t,{C:()=>o,J:()=>n});var n=(e=>(e.Branch="branch",e.Branches="branches",e.Commit="commit",e.Comparison="comparison",e.CreatePullRequest="createPullRequest",e.File="file",e.Repo="repo",e.Revision="revision",e))(n||{});function o(e){switch(e.type){case"branch":return"Branch";case"branches":return"Branches";case"commit":return"Commit";case"comparison":return"Comparison";case"createPullRequest":return"Create Pull Request";case"file":case"revision":return"File";case"repo":return"Repository";default:return""}}},1529:(e,t,i)=>{i.d(t,{_j:()=>L,I6:()=>N,du:()=>U,uC:()=>M});var n=i(9496),o=i(4290),r=i(5640),s=i(3113),a=i(5255),l=i(1277),c=i(6446),h=i(7925),u=i(2133),d=i(2800),p=i(9529),m=i(7512),g=i(5432),f=i(4241),w=i(4486),_=i(3105),v=i(9967),y=i(3700),b=i(6479),C=i(2509);let S,k;const P="GitLens";function R(e,t,i,o=!1){const r=(null==S&&(S=n.window.createTerminal(P),k=n.window.onDidCloseTerminal((e=>{e.name===P&&(S=void 0,k?.dispose(),k=void 0)})),b.W.instance.context.subscriptions.push(k)),S);r.show(!1);const a=s.DN.get("terminal.overrideGitEditor")?`-c "core.editor=${(0,C._L)()}" `:"";r.sendText(`git -C "${i}" ${a}${e} ${t}`,o)}var D=i(7552),$=i(7840),T=i(4321),F=Object.defineProperty,x=Object.getOwnPropertyDescriptor,O=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?x(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&F(t,i,r),r};const A=Object.freeze([]),I=36e5,E=864e5;var N=(e=>(e[e.Unknown=-1]="Unknown",e[e.Index=0]="Index",e[e.Head=1]="Head",e[e.Heads=2]="Heads",e[e.Tags=3]="Tags",e[e.Stash=4]="Stash",e[e.Remotes=5]="Remotes",e[e.Worktrees=6]="Worktrees",e[e.Config=7]="Config",e[e.Status=8]="Status",e[e.CherryPick=9]="CherryPick",e[e.Merge=10]="Merge",e[e.Rebase=11]="Rebase",e[e.Closed=100]="Closed",e[e.Ignores=101]="Ignores",e[e.RemoteProviders=102]="RemoteProviders",e[e.Starred=103]="Starred",e))(N||{}),U=(e=>(e[e.Any=0]="Any",e[e.All=1]="All",e[e.Exclusive=2]="Exclusive",e))(U||{});class RepositoryChangeEvent{constructor(e,t){this.repository=e,this._changes=new Set(t)}toString(e=!1){return e?`changes=${(0,_.v_)(this._changes,", ")}`:`{ repository: ${this.repository?.name??""}, changes: ${(0,_.v_)(this._changes,", ")} }`}changed(...e){const t=e.slice(0,-1),i=e[e.length-1];if(0===i)return(0,_.G)(this._changes,(e=>t.includes(e)));let n=this._changes;2===i&&(t.includes(9)||t.includes(10)||t.includes(11)?t.includes(8)||t.push(8):t.includes(8)&&(n=new Set(n),n.delete(9),n.delete(10),n.delete(11)));const o=[...(0,_.hX)(n,(e=>t.includes(e)))];return 2===i?o.length===n.size:o.length===t.length}with(e){return new RepositoryChangeEvent(this.repository,[...this._changes,...e])}}let L=class{constructor(e,t,i,o,r,a,l,c=!1){if(this.container=e,this.onDidRepositoryChange=t,this.provider=i,this.folder=o,this.uri=r,this.root=a,this._onDidChange=new n.EventEmitter,this._onDidChangeFileSystem=new n.EventEmitter,this._fireChangeDebounced=void 0,this._fireFileSystemChangeDebounced=void 0,this._fsWatchCounter=0,this._updatedAt=0,this._closed=!1,null!=(o=n.workspace.getWorkspaceFolder(r)??o))if(a)this.name=o.name;else{const t=e.git.getRelativePath(r,o.uri);this.name=t||o.name}else this.name=(0,y.EZ)(r.path);this.index=o?.index??e.git.repositoryCount,this.id=(0,u.YW)(r),this._suspended=l,this._closed=c,this._disposable=n.Disposable.from(this.setupRepoWatchers(),s.DN.onDidChange(this.onConfigurationChanged,this)),this.onConfigurationChanged()}static formatLastFetched(e,t=!0){const i=new Date(e);if(Date.now()-e<E)return(0,m.Zh)(i);if(t)return(0,m.p6)(i,s.DN.get("defaultDateShortFormat")??"short");let n=s.DN.get("defaultDateFormat")??`dddd, MMMM Do, YYYY [at] ${s.DN.get("defaultTimeFormat")??"h:mma"}`;return/[hHm]/.test(n)||(n+=` [at] ${s.DN.get("defaultTimeFormat")??"h:mma"}`),(0,m.p6)(i,n)}static getLastFetchedUpdateInterval(e){const t=Date.now()-e;return t<E?(t<I?6e4:I)/2:0}static sort(e){return e.sort(((e,t)=>(e.starred?-1:1)-(t.starred?-1:1)||e.index-t.index))}get onDidChange(){return this._onDidChange.event}get onDidChangeFileSystem(){return this._onDidChangeFileSystem.event}get formattedName(){return this.name}get idHash(){return void 0===this._idHash&&(this._idHash=(0,o.FB)(this.id)),this._idHash}setupRepoWatchers(){let e;return this.setupRepoWatchersCore().then((t=>e=t)),{dispose:()=>{e?.dispose()}}}async setupRepoWatchersCore(){const e=[];e.push(this.container.events.on("git:cache:reset",(e=>{e.data.repoPath&&e.data.repoPath!==this.path||this.resetCaches(...e.data.caches??A)})));const t=n.workspace.createFileSystemWatcher(new n.RelativePattern(this.uri,"**/.gitignore"));function i(t,i){const o=n.workspace.createFileSystemWatcher(new n.RelativePattern(t,i));return e.push(o,o.onDidChange((e=>this.onRepositoryChanged(e,t))),o.onDidCreate((e=>this.onRepositoryChanged(e,t))),o.onDidDelete((e=>this.onRepositoryChanged(e,t)))),o}e.push(t,t.onDidChange(this.onGitIgnoreChanged,this),t.onDidCreate(this.onGitIgnoreChanged,this),t.onDidDelete(this.onGitIgnoreChanged,this));const o=await this.getGitDir();return null!=o&&(null==o?.commonUri?i.call(this,o.uri,"{index,HEAD,*_HEAD,MERGE_*,config,refs/**,rebase-merge/**,sequencer/**,worktrees/**}"):(i.call(this,o.uri,"{index,HEAD,*_HEAD,MERGE_*,rebase-merge/**,sequencer/**}"),i.call(this,o.commonUri,"{config,refs/**,worktrees/**}"))),n.Disposable.from(...e)}dispose(){this.stopWatchingFileSystem(),this._remotesDisposable?.dispose(),this._disposable.dispose()}toString(){return`${(0,l.q4)(this)}(${this.id})`}get virtual(){return this.provider.virtual}get path(){return this.uri.scheme===a.sN.File?(0,y.AH)(this.uri.fsPath):this.uri.toString()}get etag(){return this._updatedAt}get updatedAt(){return this._updatedAt}onConfigurationChanged(e){s.DN.changed(e,"remotes",this.folder?.uri)&&(this._providers=(0,D.v)(s.DN.get("remotes",this.folder?.uri??null)),null!=e&&(this.resetCaches("remotes"),this.fireChange(5)))}onFileSystemChanged(e){/\.git(?:\/|\\|$)/.test(e.fsPath)||(this._etagFileSystem=Date.now(),this.fireFileSystemChange(e))}onGitIgnoreChanged(e){this.fireChange(101)}onRepositoryChanged(e,t){if(e?.path.includes("/fsmonitor--daemon/"))return;this._lastFetched=void 0;const i=null!=e?/(worktrees|index|HEAD|FETCH_HEAD|ORIG_HEAD|CHERRY_PICK_HEAD|MERGE_HEAD|REBASE_HEAD|rebase-merge|config|refs\/(?:heads|remotes|stash|tags))/.exec(this.container.git.getRelativePath(e,t)):void 0;if(null!=i)switch(i[1]){case"config":return this.resetCaches(),void this.fireChange(7,5);case"index":return void this.fireChange(0);case"FETCH_HEAD":return;case"HEAD":return this.resetCaches("branches"),void this.fireChange(1,2);case"ORIG_HEAD":case"refs/heads":return this.resetCaches("branches"),void this.fireChange(2);case"CHERRY_PICK_HEAD":return void this.fireChange(9,8);case"MERGE_HEAD":return void this.fireChange(10,8);case"REBASE_HEAD":case"rebase-merge":return void this.fireChange(11,8);case"refs/remotes":return this.resetCaches(),void this.fireChange(5);case"refs/stash":return void this.fireChange(4);case"refs/tags":return void this.fireChange(3);case"worktrees":return void this.fireChange(6)}this.fireChange(-1)}get closed(){return this._closed}set closed(e){const t=this._closed!==e;this._closed=e,t&&this.fireChange(100)}access(e){return this.container.git.access(e,this.uri)}supports(e){return this.container.git.supports(this.uri,e)}async addRemote(e,t,i){await this.container.git.addRemote(this.path,e,t,i);const[n]=await this.getRemotes({filter:e=>e.url===t});return n}pruneRemote(e){return this.container.git.pruneRemote(this.path,e)}removeRemote(e){return this.container.git.removeRemote(this.path,e)}branch(...e){this.runTerminalCommand("branch",...e)}branchDelete(e,t){Array.isArray(e)||(e=[e]);const i=e.filter((e=>!e.remote));if(0!==i.length){const n=["--delete"];if(t?.force&&n.push("--force"),this.runTerminalCommand("branch",...n,...e.map((e=>e.ref))),t?.remote){const e=i.filter((e=>null!=e.upstream));if(0!==e.length){const t=(0,d.XI)(e,(e=>(0,$.Lo)(e.upstream.name)));for(const[e,i]of t.entries())this.runTerminalCommand("push","-d",e,...i.map((e=>(0,$.S3)(e.upstream.name))))}}}const n=e.filter((e=>e.remote));if(0!==n.length){const e=(0,d.XI)(n,(e=>(0,$.Lo)(e.name)));for(const[t,i]of e.entries())this.runTerminalCommand("push","-d",t,...i.map((e=>T.Wb.getNameWithoutRemote(e))))}}cherryPick(...e){this.runTerminalCommand("cherry-pick",...e)}containsUri(e){return this===this.container.git.getRepository(e)}async fetch(e){const{progress:t,...i}={progress:!0,...e};return t?n.window.withProgress({location:n.ProgressLocation.Notification,title:null!=i.branch?`${i.pull?"Pulling":"Fetching"} ${i.branch.name}...`:`Fetching ${i.remote?`${i.remote} of `:""}${this.formattedName}...`},(()=>this.fetchCore(i))):this.fetchCore(i)}async fetchCore(e){try{await this.container.git.fetch(this.path,e),this.fireChange(-1)}catch(e){l.Yd.error(e),(0,h.W8)("Unable to fetch repository")}}async getBranch(e){if(e){const{values:[t]}=await this.getBranches({filter:t=>t.name===e});return t}return null==this._branch&&(this._branch=this.container.git.getBranch(this.path)),this._branch}getBranches(e){return this.container.git.getBranches(this.path,e)}getChangedFilesCount(e){return this.container.git.getChangedFilesCount(this.path,e)}getCommit(e){return this.container.git.getCommit(this.path,e)}getContributors(e){return this.container.git.getContributors(this.path,e)}getGitDir(){return null==this._gitDirPromise&&(this._gitDirPromise=this.container.git.getGitDir(this.path).then((e=>this._gitDir=e))),this._gitDirPromise}async getLastFetched(){if(null==this._lastFetched&&!await this.hasRemotes())return 0;try{const e=await this.container.git.getLastFetchedTimestamp(this.path);null!=e&&(this._lastFetched=e)}catch{this._lastFetched=void 0}return this._lastFetched??0}async getMainRepository(){const e=await this.getGitDir();return null==e?.commonUri?this:this.container.git.getOrOpenRepository(e.commonUri,{closeOnOpen:!0})}getMergeStatus(){return this.container.git.getMergeStatus(this.path)}getRebaseStatus(){return this.container.git.getRebaseStatus(this.path)}async getRemote(e){return(await this.getRemotes()).find((t=>t.name===e))}async getRemotes(e){if(null==this._remotes){if(null==this._providers){const e=s.DN.get("remotes",this.folder?.uri??null);this._providers=(0,D.v)(e)}this._remotes=this.container.git.getRemotes(this.path,{providers:this._providers,sort:!0}),this.subscribeToRemotes(this._remotes)}return null!=e?.filter?(await this._remotes).filter(e.filter):this._remotes}async getRichRemote(e=!1){return this.container.git.getBestRemoteWithRichProvider(await this.getRemotes(),{includeDisconnected:!e})}async subscribeToRemotes(e){this._remotesDisposable?.dispose(),this._remotesDisposable=void 0,this._remotesDisposable=n.Disposable.from(...(0,d.DZ)(await e,(e=>{if(e.provider?.hasRichIntegration())return e.provider.onDidChange((()=>this.fireChange(102)))})))}getStash(){return this.container.git.getStash(this.path)}getStatus(){return this.container.git.getStatusForRepo(this.path)}async getTag(e){const{values:[t]}=await this.getTags({filter:t=>t.name===e});return t}getTags(e){return this.container.git.getTags(this.path,e)}async createWorktree(e,t){await this.container.git.createWorktree(this.path,e.fsPath,t);const i=e.toString();return this.container.git.getWorktree(this.path,(e=>e.uri.toString()===i))}getWorktrees(){return this.container.git.getWorktrees(this.path)}async getWorktreesDefaultUri(){return this.container.git.getWorktreesDefaultUri(this.path)}deleteWorktree(e,t){return this.container.git.deleteWorktree(this.path,e.fsPath,t)}async hasRemotes(){return(await this.getRemotes())?.length>0}async hasRichRemote(e=!1){return null!=(await this.getRichRemote(e))?.provider}async hasUpstreamBranch(){return null!=(await this.getBranch())?.upstream}isMaybeWorktree(){if(null!=this._gitDir)return null!=this._gitDir.commonUri}async isWorktree(){return null!=(await this.getGitDir())?.commonUri}merge(...e){this.runTerminalCommand("merge",...e)}async pull(e){const{progress:t,...i}={progress:!0,...e};return t?n.window.withProgress({location:n.ProgressLocation.Notification,title:`Pulling ${this.formattedName}...`},(()=>this.pullCore(i))):this.pullCore()}async pullCore(e){try{await this.hasUpstreamBranch()?await(0,p.Zv)(e?.rebase?a.S8.PullRebase:a.S8.Pull,this.path):s.DN.getAny(a.eq.FetchOnPull,n.Uri.file(this.path))&&await this.container.git.fetch(this.path),this.fireChange(-1)}catch(e){l.Yd.error(e),(0,h.W8)("Unable to pull repository")}}async push(e){const{progress:t,...i}={progress:!0,...e};return t?n.window.withProgress({location:n.ProgressLocation.Notification,title:T.Wb.isBranch(i.reference)?`${null!=i.publish?"Publishing ":"Pushing "}${i.reference.name}...`:`Pushing ${this.formattedName}...`},(()=>this.pushCore(i))):this.pushCore(i)}async showCreatePullRequestPrompt(e,t){if(!this.container.actionRunners.count("createPullRequest"))return;if(!await(0,h.B8)(t.name))return;const i=await this.getRemote(e);(0,p.SI)("createPullRequest",{repoPath:this.path,remote:null!=i?{name:i.name,provider:null!=i.provider?{id:i.provider.id,name:i.provider.name,domain:i.provider.domain}:void 0,url:i.url}:{name:e},branch:{name:t.name,isRemote:t.remote,upstream:t.upstream?.name}})}async pushCore(e){try{if(T.Wb.isBranch(e?.reference)){const t=await this.container.git.getOrOpenScmRepository(this.path);if(null==t)return;if(null!=e?.publish)await(t?.push(e.publish.remote,e.reference.name,!0)),this.showCreatePullRequestPrompt(e.publish.remote,e.reference);else{const i=await this.getBranch(e?.reference.name);if(null==i)return;await(t?.push(i.getRemoteName(),i.name,void 0,e?.force?r.QO.ForceWithLease:void 0))}}else if(null!=e?.reference){const t=await this.container.git.getOrOpenScmRepository(this.path);if(null==t)return;const i=await this.getBranch();if(null==i)return;await(t?.push(i.getRemoteName(),`${e.reference.ref}:${i.getNameWithoutRemote()}`,void 0,e?.force?r.QO.ForceWithLease:void 0))}else await(0,p.Zv)(e?.force?a.S8.PushForce:a.S8.Push,this.path);this.fireChange(-1)}catch(e){l.Yd.error(e),(0,h.W8)("Unable to push repository")}}rebase(e,...t){this.runTerminalCommand(null!=e&&0!==e.length?`${e.join(" ")} rebase`:"rebase",...t)}reset(...e){this.runTerminalCommand("reset",...e)}resetCaches(...e){(0===e.length||e.includes("branches"))&&(this._branch=void 0),(0===e.length||e.includes("remotes"))&&(this._remotes=void 0,this._remotesDisposable?.dispose(),this._remotesDisposable=void 0)}resume(){this._suspended&&(this._suspended=!1,null!=this._pendingRepoChange&&this._fireChangeDebounced(),null!=this._pendingFileSystemChange&&this._fireFileSystemChangeDebounced())}revert(...e){this.runTerminalCommand("revert",...e)}richSearchCommits(e,t){return this.container.git.richSearchCommits(this.path,e,t)}searchCommits(e,t){return this.container.git.searchCommits(this.path,e,t)}async setRemoteAsDefault(e,t=!0){await this.container.storage.storeWorkspace("remote:default",t?e.id:void 0),this.fireChange(5,102)}get starred(){const e=this.container.storage.getWorkspace("starred:repositories");return null!=e&&!0===e[this.id]}star(e){return this.updateStarred(!0,e)}async stashApply(e,t){await this.container.git.stashApply(this.path,e,t),this.fireChange(4)}async stashDelete(e,t){await this.container.git.stashDelete(this.path,e,t),this.fireChange(4)}async stashSave(e,t,i){await this.container.git.stashSave(this.path,e,t,i),this.fireChange(4)}async switch(e,t){const{progress:i,...o}={progress:!0,...t};return i?n.window.withProgress({location:n.ProgressLocation.Notification,title:`Switching ${this.formattedName} to ${e}...`,cancellable:!1},(()=>this.switchCore(e,o))):this.switchCore(e,o)}async switchCore(e,t){try{await this.container.git.checkout(this.path,e,t),this.fireChange(-1)}catch(e){l.Yd.error(e),(0,h.W8)("Unable to switch to reference")}}toAbsoluteUri(e,t){const i=this.container.git.getAbsoluteUri(e,this.path);return!(t?.validate??1)||this.containsUri(i)?i:void 0}unstar(e){return this.updateStarred(!1,e)}async updateStarred(e,t){null!=t?await this.updateStarredCore("branches",t.id,e):await this.updateStarredCore("repositories",this.id,e),this.fireChange(103)}async updateStarredCore(e,t,i){const n=`starred:${e}`;let o=this.container.storage.getWorkspace(n);o=(0,v.iC)(o,t,i),await this.container.storage.storeWorkspace(n,o),this.fireChange(103)}get etagFileSystem(){return this._etagFileSystem}startWatchingFileSystem(){if(this._fsWatchCounter++,null==this._fsWatcherDisposable){const e=n.workspace.createFileSystemWatcher(new n.RelativePattern(this.uri,"**"));this._fsWatcherDisposable=n.Disposable.from(e,e.onDidChange(this.onFileSystemChanged,this),e.onDidCreate(this.onFileSystemChanged,this),e.onDidDelete(this.onFileSystemChanged,this)),this._etagFileSystem=Date.now()}return{dispose:()=>this.stopWatchingFileSystem()}}stopWatchingFileSystem(e=!1){null!=this._fsWatcherDisposable&&(--this._fsWatchCounter>0&&!e||(this._etagFileSystem=void 0,this._fsWatchCounter=0,this._fsWatcherDisposable.dispose(),this._fsWatcherDisposable=void 0))}suspend(){this._suspended=!0}tag(...e){this.runTerminalCommand("tag",...e)}tagDelete(e){Array.isArray(e)||(e=[e]);this.runTerminalCommand("tag","--delete",...e.map((e=>e.ref)))}fireChange(...e){const t=(0,c.UH)();this._updatedAt=Date.now(),null==this._fireChangeDebounced&&(this._fireChangeDebounced=(0,w.Ds)(this.fireChangeCore.bind(this),250)),this._pendingRepoChange=this._pendingRepoChange?.with(e)??new RepositoryChangeEvent(this,e),this.onDidRepositoryChange(this,new RepositoryChangeEvent(this,e)),this._suspended?l.Yd.debug(t,`queueing suspended ${this._pendingRepoChange.toString(!0)}`):this._fireChangeDebounced()}fireChangeCore(){const e=this._pendingRepoChange;null!=e&&(this._pendingRepoChange=void 0,l.Yd.debug(`Repository(${this.id}) firing ${e.toString(!0)}`),this._onDidChange.fire(e))}fireFileSystemChange(e){const t=(0,c.UH)();this._updatedAt=Date.now(),null==this._fireFileSystemChangeDebounced&&(this._fireFileSystemChangeDebounced=(0,w.Ds)(this.fireFileSystemChangeCore.bind(this),2500)),null==this._pendingFileSystemChange&&(this._pendingFileSystemChange={repository:this,uris:[]});const i=this._pendingFileSystemChange;i.uris.push(e),this._suspended?l.Yd.debug(t,`queueing suspended fs changes=${i.uris.map((e=>e.fsPath)).join(", ")}`):this._fireFileSystemChangeDebounced()}async fireFileSystemChangeCore(){let e=this._pendingFileSystemChange;if(null==e)return;this._pendingFileSystemChange=void 0;const t=await this.container.git.excludeIgnoredUris(this.path,e.uris);0!==t.length&&(t.length!==e.uris.length&&(e={...e,uris:t}),l.Yd.debug(`Repository(${this.id}) firing fs changes=${e.uris.map((e=>e.fsPath)).join(", ")}`),this._onDidChangeFileSystem.fire(e))}runTerminalCommand(e,...t){R(e,t.map((e=>e.startsWith("#")||/['();$|>&<]/.test(e)?`"${e}"`:e)).join(" "),this.path,!0),setTimeout((()=>this.fireChange(-1)),2500)}};function M(e){return e instanceof L}O([(0,f.fF)()],L.prototype,"onGitIgnoreChanged",1),O([(0,f.fF)()],L.prototype,"onRepositoryChanged",1),O([(0,f.cM)()],L.prototype,"access",1),O([(0,f.cM)()],L.prototype,"supports",1),O([(0,f.cM)()],L.prototype,"addRemote",1),O([(0,f.cM)()],L.prototype,"pruneRemote",1),O([(0,f.cM)()],L.prototype,"removeRemote",1),O([(0,f.cM)()],L.prototype,"branch",1),O([(0,f.cM)()],L.prototype,"branchDelete",1),O([(0,f.cM)()],L.prototype,"cherryPick",1),O([(0,g.H)(),(0,f.cM)()],L.prototype,"fetch",1),O([(0,g.H)()],L.prototype,"getLastFetched",1),O([(0,g.H)()],L.prototype,"getMainRepository",1),O([(0,f.cM)()],L.prototype,"merge",1),O([(0,g.H)(),(0,f.cM)()],L.prototype,"pull",1),O([(0,g.H)(),(0,f.cM)()],L.prototype,"push",1),O([(0,f.cM)()],L.prototype,"rebase",1),O([(0,f.cM)()],L.prototype,"reset",1),O([(0,f.cM)({singleLine:!0})],L.prototype,"resetCaches",1),O([(0,f.cM)()],L.prototype,"revert",1),O([(0,f.fF)()],L.prototype,"richSearchCommits",1),O([(0,f.fF)()],L.prototype,"searchCommits",1),O([(0,g.H)(),(0,f.cM)()],L.prototype,"stashApply",1),O([(0,g.H)(),(0,f.cM)()],L.prototype,"stashDelete",1),O([(0,g.H)(),(0,f.cM)()],L.prototype,"stashSave",1),O([(0,g.H)(),(0,f.cM)()],L.prototype,"switch",1),O([(0,f.cM)()],L.prototype,"tag",1),O([(0,f.cM)()],L.prototype,"tagDelete",1),O([(0,f.fF)()],L.prototype,"fireChange",1),O([(0,f.fF)()],L.prototype,"fireFileSystemChange",1),L=O([(0,f.hJ)(((e,t)=>`${t}(${e.id})`))],L)},9502:(e,t,i)=>{i.d(t,{Pj:()=>p,YR:()=>d,gE:()=>GitTag});var n=i(3113),o=i(6479),r=i(1277),s=i(7512),a=i(4488),l=i(3620),c=Object.defineProperty,h=Object.getOwnPropertyDescriptor,u=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?h(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&c(t,i,r),r};class GitTag{constructor(e,t,i,n,o,r){this.repoPath=e,this.name=t,this.sha=i,this.message=n,this.date=o,this.commitDate=r,this.refType="tag",this.id=function(e,t){return`${e}|tag/${t}`}(e,t)}toString(){return`${(0,r.q4)(this)}(${this.id})`}get formattedDate(){return o.W.instance.TagDateFormatting.dateStyle===n.Dn.Absolute?this.formatDate(o.W.instance.TagDateFormatting.dateFormat):this.formatDateFromNow()}get ref(){return this.name}formatCommitDate(e){return null!=this.commitDate?(0,s.p6)(this.commitDate,e??"MMMM Do, YYYY h:mma"):""}formatCommitDateFromNow(){return null!=this.commitDate?(0,s.Zh)(this.commitDate):""}formatDate(e){return null!=this.date?(0,s.p6)(this.date,e??"MMMM Do, YYYY h:mma"):""}formatDateFromNow(){return null!=this.date?(0,s.Zh)(this.date):""}getBasename(){const e=this.name.lastIndexOf("/");return-1!==e?this.name.substring(e+1):this.name}}function d(e){return e instanceof GitTag}function p(e,t){switch((t={orderBy:n.DN.get("sortTagsBy"),...t}).orderBy){case n.RV.DateAsc:return e.sort(((e,t)=>(e.date?.getTime()??0)-(t.date?.getTime()??0)));case n.RV.NameAsc:return e.sort(((e,t)=>(0,l.dm)(e.name,t.name)));case n.RV.NameDesc:return e.sort(((e,t)=>(0,l.dm)(t.name,e.name)));case n.RV.DateDesc:default:return e.sort(((e,t)=>(t.date?.getTime()??0)-(e.date?.getTime()??0)))}}u([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitTag.prototype,"formatCommitDate",1),u([(0,a.H)((e=>e??"MMMM Do, YYYY h:mma"))],GitTag.prototype,"formatDate",1),u([(0,a.H)()],GitTag.prototype,"getBasename",1)},4794:(e,t,i)=>{i.d(t,{S:()=>h});var n=i(4241),o=i(3050),r=Object.defineProperty,s=Object.getOwnPropertyDescriptor;const a="",l=/^(.*)\t(.*)\s\((.*)\)$/gm;((e,t,i,n)=>{for(var o,a=n>1?void 0:n?s(t,i):t,l=e.length-1;l>=0;l--)(o=e[l])&&(a=(n?o(t,i,a):o(a))||a);n&&a&&r(t,i,a)})([(0,n.fF)({args:!1,singleLine:!0})],class GitRemoteParser{static parse(e,t,i){if(!e)return;const n=[],r=Object.create(null);let s,a,c,u,d,p,m,g,f;for(;;){if(f=l.exec(e),null==f)break;if([,s,a,c]=f,a=` ${a}`.substr(1),[u,d,p]=h(a),m=`${d?`${d}/`:""}${p}`,g=r[m],void 0===g){const e=i(a,d,p);g=new o.ss(t,m,` ${s}`.substr(1),u,void 0!==e?e.domain:d,void 0!==e?e.path:p,e,[{url:a,type:` ${c}`.substr(1)}]),n.push(g),r[m]=g}else g.urls.push({url:a,type:` ${c}`.substr(1)})}return n}},"parse",1);const c=/^(?:(git:\/\/)(.*?)\/|(https?:\/\/)(?:.*?@)?(.*?)\/|git@(.*):|(ssh:\/\/)(?:.*@)?(.*?)(?::.*?)?(?:\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;function h(e){const t=c.exec(e);return null==t?[a,a,e]:[t[1]||t[3]||t[6],t[2]||t[4]||t[5]||t[7]||t[8],t[9].replace(/\.git\/?$/,a)]}},2075:(e,t,i)=>{i.d(t,{at:()=>y,gu:()=>GitHubRemote,z4:()=>GitHubAuthenticationProvider});var n=i(9496),o=i(4241),r=i(4488),s=i(8786),a=i(3620),l=i(4321),c=i(3084),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor,d=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?u(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&h(t,i,r),r};const p=/\b(?<repo>[^/\s]+\/[^/\s]+)#(?<num>[0-9]+)\b(?!]\()/g,m=/^\/([^/]+)\/([^/]+?)\/blob(.+)$/i,g=/^L(\d+)(?:-L(\d+))?$/,f=Object.freeze({id:"github",scopes:["repo","read:user","user:email"]}),w=Object.freeze({id:"github-enterprise",scopes:["repo","read:user","user:email"]});function _(e){return(0,a.qq)(e,"github.com")}class GitHubRemote extends c.D{constructor(e,t,i,n,o,r=!1){super(e,t,i,n,o,r)}get authProvider(){return _(this.domain)?f:w}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api/v3`:`https://api.${this.domain}`}get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,description:`${this.name} Issue or Pull Request #<num>`},{prefix:"gh-",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue or Pull Request #<num> on ${this.name}`,ignoreCase:!0,description:`${this.name} Issue or Pull Request #<num>`},{tokenize:(e,t,i)=>"plaintext"===t?e:e.replace(p,((e,n,o)=>{const r=(0,s.M)(`${this.protocol}://${this.domain}/${n}/issues/${o}`),a=` "Open Issue or Pull Request #${o} from ${n} on ${this.name}"`,l=`\0${i.size}\0`;return"markdown"===t?i.set(l,`[${e}](${r}${a})`):"html"===t&&i.set(l,`<a href="${r}" title=${a}>${e}</a>`),l})),parse:(e,t)=>{let i,n,o;for(;;){if(o=p.exec(e),null==o?.groups)break;({repo:i,num:n}=o.groups),t.set(n,{provider:this,id:n,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/issues/${n}`,title:`Open Issue or Pull Request #<num> from ${i} on ${this.name}`,description:`${this.name} Issue or Pull Request ${i}#${n}`})}}}]),this._autolinks}get avatarUri(){const[e]=this.splitPath();return n.Uri.parse(`https://avatars.githubusercontent.com/${e}`)}get icon(){return"github"}get id(){return"github"}get name(){return this.formatName("GitHub")}async connect(){return!(!_(this.domain)&&!await(0,c.e)("GitHub Enterprise instance",this.container))&&super.connect()}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let n,o;if(t.fragment){const e=g.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(n=parseInt(t,10),i&&(o=parseInt(i,10)))}}const r=m.exec(t.path);if(null==r)return;const[,,,s]=r;let a,c=s.indexOf("/",1);if(-1!==c){const t=s.substring(1,c);if(l.pk.isSha(t)){const t=e.toAbsoluteUri(s.substr(c),{validate:i?.validate});if(null!=t)return{uri:t,startLine:n,endLine:o}}}const h=new Map;c=s.length;do{c=s.lastIndexOf("/",c-1),a=s.substring(1,c),h.set(a,s.substr(c))}while(c>0);if(0!==h.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&h.has(e.getNameWithoutRemote())});for(const r of t){const t=h.get(r.getNameWithoutRemote());if(null==t)continue;const s=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=s)return{uri:s,startLine:n,endLine:o}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}${i}${t}`)}getUrlForCreatePullRequest(e,t){if(e.remote.url===t.remote.url)return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${t.branch}`);const[i]=t.remote.path.split("/",1);return this.encodeUrl(`${this.baseUrl}/pull/new/${e.branch??"HEAD"}...${i}:${t.branch}`)}getUrlForFile(e,t,i,n){let o;return o=null!=n?n.start.line===n.end.line?`#L${n.start.line}`:`#L${n.start.line}-L${n.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/blob/${i}/${e}`)}${o}`:t?`${this.encodeUrl(`${this.baseUrl}/blob/${t}/${e}`)}${o}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${o}`}async getProviderAccountForCommit({accessToken:e},t,i){const[n,o]=this.splitPath();return(await this.container.github)?.getAccountForCommit(this,e,n,o,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i){const[n,o]=this.splitPath();return(await this.container.github)?.getAccountForEmail(this,e,n,o,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.github)?.getDefaultBranch(this,e,t,i,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t){const[i,n]=this.splitPath();return(await this.container.github)?.getIssueOrPullRequest(this,e,i,n,Number(t),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,n){const[o,r]=this.splitPath(),{include:s,...a}=n??{},l=(await Promise.resolve().then(i.bind(i,3878))).GitHubPullRequest;return(await this.container.github)?.getPullRequestForBranch(this,e,o,r,t,{...a,include:s?.map((e=>l.toState(e))),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t){const[i,n]=this.splitPath();return(await this.container.github)?.getPullRequestForCommit(this,e,i,n,t,{baseUrl:this.apiBaseUrl})}async searchProviderMyPullRequests({accessToken:e}){return(await this.container.github)?.searchMyPullRequests(this,e,{repos:[this.path]})}async searchProviderMyIssues({accessToken:e}){return(await this.container.github)?.searchMyIssues(this,e,{repos:[this.path]})}}d([(0,r.H)()],GitHubRemote.prototype,"authProvider",1),d([(0,o.cM)()],GitHubRemote.prototype,"connect",1);const v=/^(?:(\d+)\+)?([a-zA-Z\d-]{1,39})@users\.noreply\.(.*)$/i;function y(e){const t=v.exec(e);if(null==t)return;const[,i,n,o]=t;return{userId:i,login:n,authority:o}}class GitHubAuthenticationProvider{constructor(e){this._disposable=e.integrationAuthentication.registerProvider("github-enterprise",this)}dispose(){this._disposable.dispose()}getSessionId(e){return e?.domain??""}async createSession(e){const t=n.window.createInputBox();t.ignoreFocusOut=!0;const i=[];let o;try{const r={iconPath:new n.ThemeIcon("link-external"),tooltip:"Open Access Tokens page on GitHub"};o=await new Promise((o=>{i.push(t.onDidHide((()=>o(void 0))),t.onDidChangeValue((()=>t.validationMessage=void 0)),t.onDidAccept((()=>{const e=t.value.trim();e?o(e):t.validationMessage="A personal access token is required"})),t.onDidTriggerButton((t=>{t===r&&n.env.openExternal(n.Uri.parse(`https://${e?.domain??"github.com"}/settings/tokens`))}))),t.password=!0,t.title="GitHub Authentication"+(e?.domain?`  • ${e.domain}`:""),t.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,t.prompt="Paste your GitHub Personal Access Token",t.buttons=[r],t.show()}))}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}if(o)return{id:this.getSessionId(e),accessToken:o,scopes:[],account:{id:"",label:""}}}}},5542:(e,t,i)=>{i.d(t,{E:()=>GitLabRemote,h:()=>GitLabAuthenticationProvider});var n=i(9496),o=i(2540),r=i(4241),s=i(8786),a=i(3620),l=i(4321),c=i(3084),h=Object.defineProperty,u=Object.getOwnPropertyDescriptor;const d=/\b(?<repo>[^/\s]+\/[^/\s]+)#(?<num>[0-9]+)\b(?!]\()/g,p=/\b(?<repo>[^/\s]+\/[^/\s]+)!(?<num>[0-9]+)\b(?!]\()/g,m=/^\/([^/]+)\/([^/]+?)\/-\/blob(.+)$/i,g=/^L(\d+)(?:-(\d+))?$/,f=Object.freeze({id:"gitlab",scopes:["read_api","read_user","read_repository"]});class GitLabRemote extends c.D{constructor(e,t,i,n,o,r=!1){super(e,t,i,n,o,r)}get authProvider(){return f}get apiBaseUrl(){return this.custom?`${this.protocol}://${this.domain}/api`:`https://${this.domain}/api`}get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/-/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:o.fH.Issue,description:`${this.name} Issue #<num>`},{prefix:"!",url:`${this.baseUrl}/-/merge_requests/<num>`,title:`Open Merge Request !<num> on ${this.name}`,type:o.fH.PullRequest,description:`${this.name} Merge Request !<num>`},{tokenize:(e,t,i)=>"plaintext"===t?e:e.replace(d,((e,n,o)=>{const r=(0,s.M)(`${this.protocol}://${this.domain}/${n}/-/issues/${o}`),a=` "Open Issue #${o} from ${n} on ${this.name}"`,l=`\0${i.size}\0`;return"markdown"===t?i.set(l,`[${e}](${r}${a})`):"html"===t&&i.set(l,`<a href="${r}" title=${a}>${e}</a>`),l})),parse:(e,t)=>{let i,n,r;for(;;){if(r=d.exec(e),null==r?.groups)break;({repo:i,num:n}=r.groups),t.set(n,{provider:this,id:n,prefix:`${i}#`,url:`${this.protocol}://${this.domain}/${i}/-/issues/${n}`,title:`Open Issue #<num> from ${i} on ${this.name}`,type:o.fH.Issue,description:`${this.name} Issue ${i}#${n}`})}}},{tokenize:(e,t,i)=>"plaintext"===t?e:e.replace(p,((e,n,o)=>{const r=(0,s.M)(`${this.protocol}://${this.domain}/${n}/-/merge_requests/${o}`),a=` "Open Merge Request !${o} from ${n} on ${this.name}"`,l=`\0${i.size}\0`;return"markdown"===t?i.set(l,`[${e}](${r}${a})`):"html"===t&&i.set(l,`<a href="${r}" title=${a}>${e}</a>`),l})),parse:(e,t)=>{let i,n,r;for(;;){if(r=p.exec(e),null==r?.groups)break;({repo:i,num:n}=r.groups),t.set(n,{provider:this,id:n,prefix:`${i}!`,url:`${this.protocol}://${this.domain}/${i}/-/merge_requests/${n}`,title:`Open Merge Request !<num> from ${i} on ${this.name}`,type:o.fH.PullRequest,description:`Merge Request !${n} from ${i} on ${this.name}`})}}}]),this._autolinks}get icon(){return"gitlab"}get id(){return"gitlab"}get name(){return this.formatName("GitLab")}async connect(){return!(!(0,a.qq)(this.domain,"gitlab.com")&&!await(0,c.e)("GitLab self-managed instance",this.container))&&super.connect()}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let n,o;if(t.fragment){const e=g.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(n=parseInt(t,10),i&&(o=parseInt(i,10)))}}const r=m.exec(t.path);if(null==r)return;const[,,,s]=r;let a,c=s.indexOf("/",1);if(-1!==c){const t=s.substring(1,c);if(l.pk.isSha(t)){const t=e.toAbsoluteUri(s.substr(c),{validate:i?.validate});if(null!=t)return{uri:t,startLine:n,endLine:o}}}const h=new Map;c=s.length;do{c=s.lastIndexOf("/",c-1),a=s.substring(1,c),h.set(a,s.substr(c))}while(c>0);if(0!==h.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&h.has(e.getNameWithoutRemote())});for(const r of t){const t=h.get(r.getNameWithoutRemote());if(null==t)continue;const s=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=s)return{uri:s,startLine:n,endLine:o}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/-/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/-/tree/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/-/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/-/compare/${e}${i}${t}`)}getUrlForFile(e,t,i,n){let o;return o=null!=n?n.start.line===n.end.line?`#L${n.start.line}`:`#L${n.start.line}-${n.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/-/blob/${i}/${e}`)}${o}`:t?`${this.encodeUrl(`${this.baseUrl}/-/blob/${t}/${e}`)}${o}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${o}`}async getProviderAccountForCommit({accessToken:e},t,i){const[n,o]=this.splitPath();return(await this.container.gitlab)?.getAccountForCommit(this,e,n,o,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderAccountForEmail({accessToken:e},t,i){const[n,o]=this.splitPath();return(await this.container.gitlab)?.getAccountForEmail(this,e,n,o,t,{...i,baseUrl:this.apiBaseUrl})}async getProviderDefaultBranch({accessToken:e}){const[t,i]=this.splitPath();return(await this.container.gitlab)?.getDefaultBranch(this,e,t,i,{baseUrl:this.apiBaseUrl})}async getProviderIssueOrPullRequest({accessToken:e},t){const[i,n]=this.splitPath();return(await this.container.gitlab)?.getIssueOrPullRequest(this,e,i,n,Number(t),{baseUrl:this.apiBaseUrl})}async getProviderPullRequestForBranch({accessToken:e},t,n){const[o,r]=this.splitPath(),{include:s,...a}=n??{},l=(await Promise.resolve().then(i.bind(i,6630))).GitLabMergeRequest;return(await this.container.gitlab)?.getPullRequestForBranch(this,e,o,r,t,{...a,include:s?.map((e=>l.toState(e))),baseUrl:this.apiBaseUrl})}async getProviderPullRequestForCommit({accessToken:e},t){const[i,n]=this.splitPath();return(await this.container.gitlab)?.getPullRequestForCommit(this,e,i,n,t,{baseUrl:this.apiBaseUrl})}async searchProviderMyPullRequests(e){return Promise.resolve(void 0)}async searchProviderMyIssues(e){return Promise.resolve(void 0)}}((e,t,i,n)=>{for(var o,r=n>1?void 0:n?u(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);n&&r&&h(t,i,r)})([(0,r.cM)()],GitLabRemote.prototype,"connect",1);class GitLabAuthenticationProvider{constructor(e){this._disposable=e.integrationAuthentication.registerProvider("gitlab",this)}dispose(){this._disposable.dispose()}getSessionId(e){return e?.domain??""}async createSession(e){const t=n.window.createInputBox();t.ignoreFocusOut=!0;const i=[];let o;try{const r={iconPath:new n.ThemeIcon("link-external"),tooltip:"Open Access Tokens page on GitLab"};o=await new Promise((o=>{i.push(t.onDidHide((()=>o(void 0))),t.onDidChangeValue((()=>t.validationMessage=void 0)),t.onDidAccept((()=>{const e=t.value.trim();e?o(e):t.validationMessage="A personal access token is required"})),t.onDidTriggerButton((t=>{t===r&&n.env.openExternal(n.Uri.parse(`https://${e?.domain??"gitlab.com"}/-/profile/personal_access_tokens`))}))),t.password=!0,t.title="GitLab Authentication"+(e?.domain?`  • ${e.domain}`:""),t.placeholder=`Requires ${e?.scopes.join(", ")??"all"} scopes`,t.prompt="Paste your GitLab Personal Access Token",t.buttons=[r],t.show()}))}finally{t.dispose(),i.forEach((e=>{e.dispose()}))}if(o)return{id:this.getSessionId(e),accessToken:o,scopes:[],account:{id:"",label:""}}}}},2795:(e,t,i)=>{i.d(t,{x:()=>RemoteProvider});var n=i(9496),o=i(8786),r=i(6503);class RemoteProvider{constructor(e,t,i="https",n,o=!1){this.domain=e,this.path=t,this.protocol=i,this.custom=o,this.type="simple",this._name=n}get autolinks(){return[]}get avatarUri(){}get displayPath(){return this.path}get icon(){return"remote"}async copy(e){const t=this.url(e);null!=t&&await n.env.clipboard.writeText(t)}hasRichIntegration(){return"rich"===this.type}open(e){return this.openUrl(this.url(e))}url(e){switch(e.type){case r.J.Branch:return this.getUrlForBranch(e.branch);case r.J.Branches:return this.getUrlForBranches();case r.J.Commit:return this.getUrlForCommit(e.sha);case r.J.Comparison:return this.getUrlForComparison?.(e.base,e.compare,e.notation??"...");case r.J.CreatePullRequest:return this.getUrlForCreatePullRequest?.(e.base,e.compare);case r.J.File:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,void 0,e.range);case r.J.Repo:return this.getUrlForRepository();case r.J.Revision:return this.getUrlForFile(e.fileName,null!=e.branchOrTag?e.branchOrTag:void 0,null!=e.sha?e.sha:void 0,e.range);default:return}}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}formatName(e){return null!=this._name?this._name:`${e}${this.custom?` (${this.domain})`:""}`}splitPath(){const e=this.path.indexOf("/");return[this.path.substring(0,e),this.path.substring(e+1)]}getUrlForRepository(){return this.baseUrl}async openUrl(e){if(null==e)return;const t=n.Uri.parse(e);return t.path.includes("#")?n.env.openExternal(t.toString()):n.env.openExternal(t)}encodeUrl(e){return(0,o.M)(e)?.replace(/#/g,"%23")}}},418:(e,t,i)=>{i.d(t,{j:()=>n});var n,o=i(9496),r=i(6479);(e=>{const t=new Set;e._onDidChangeConnectionState=new o.EventEmitter,e.onDidChangeConnectionState=e._onDidChangeConnectionState.event,e.connected=function(i){t.has(i)||(t.add(i),r.W.instance.telemetry.sendEvent("remoteProviders/connected",{"remoteProviders.key":i}),e._onDidChangeConnectionState.fire({key:i,reason:"connected"}))},e.disconnected=function(i){t.delete(i),r.W.instance.telemetry.sendEvent("remoteProviders/disconnected",{"remoteProviders.key":i}),e._onDidChangeConnectionState.fire({key:i,reason:"disconnected"})}})(n||(n={}))},7552:(e,t,i)=>{i.d(t,{B:()=>T,v:()=>D});var n=i(3113),o=i(1277),r=i(2540),s=i(2795);const a=/\/_git\/?/i,l=/^DefaultCollection\//i,c=/^(.*?)\/(.*?)\/(.*)/,h=/^(ssh|vs-ssh)\./i,u=/^\/?v\d\//i,d=/path=([^&]+)/i,p=/line=(\d+)(?:&lineEnd=(\d+))?/;class AzureDevOpsRemote extends s.x{constructor(e,t,i,n,o=!1){if(h.test(e)){t=t.replace(u,""),e=e.replace(h,"");const i=c.exec(t);if(null!=i){const[,n,r,s]=i;o?(e=`${n}.${e}`,t=`${r}/_git/${s}`):t=`${n}/${r}/_git/${s}`}}super(e,t=decodeURIComponent(t),i,n)}get autolinks(){if(void 0===this._autolinks){const e=this.baseUrl.replace(a,"/");this._autolinks=[{prefix:"#",url:`${e}/_workitems/edit/<num>`,title:`Open Work Item #<num> on ${this.name}`,type:r.fH.Issue,description:`${this.name} Work Item #<num>`},{prefix:"Merged PR ",url:`${this.baseUrl}/pullrequest/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:r.fH.PullRequest,description:`${this.name} Pull Request #<num>`}]}return this._autolinks}get icon(){return"azdo"}get id(){return"azure-devops"}get name(){return"Azure DevOps"}get displayPath(){return void 0===this._displayPath&&(this._displayPath=this.path.replace(a,"/").replace(l,"")),this._displayPath}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return Promise.resolve(void 0);let n,o;if(t.query){const e=p.exec(t.query);if(null!=e){const[,t,i]=e;t&&(n=parseInt(t,10),i&&(o=parseInt(i,10)))}}const r=d.exec(t.query);if(null==r)return Promise.resolve(void 0);const[,s]=r,a=e.toAbsoluteUri(s,{validate:i?.validate});return Promise.resolve(null!=a?{uri:a,startLine:n,endLine:o}:void 0)}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/?version=GB${e}&_a=history`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branchCompare?baseVersion=GB${e}&targetVersion=GB${t}`)}getUrlForFile(e,t,i,n){let o;return o=null!=n?n.start.line===n.end.line?`&line=${n.start.line}&lineStartColumn=${n.start.character+1}&lineEndColumn=${n.end.character+1}`:`&line=${n.start.line}&lineEnd=${n.end.line}&lineStartColumn=${n.start.character+1}&lineEndColumn=${n.end.character+1}`:"",i?this.encodeUrl(`${this.baseUrl}?path=${e}&version=GC${i}${o}&_a=contents`):t?this.encodeUrl(`${this.baseUrl}/?path=/${e}&version=GB${t}&_a=contents${o}`):this.encodeUrl(`${this.baseUrl}?path=/${e}${o}`)}}var m=i(4321);const g=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,f=/^lines-(\d+)(?::(\d+))?$/;class BitbucketRemote extends s.x{constructor(e,t,i,n,o=!1){super(e,t,i,n,o)}get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:r.fH.Issue,description:`${this.name} Issue #<num>`},{prefix:"pull request #",url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:r.fH.PullRequest,description:`${this.name} Pull Request #<num>`}]),this._autolinks}get icon(){return"bitbucket"}get id(){return"bitbucket"}get name(){return this.formatName("Bitbucket")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let n,o;if(t.fragment){const e=f.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(n=parseInt(t,10),i&&(o=parseInt(i,10)))}}const r=g.exec(t.path);if(null==r)return;const[,,,s]=r;let a,l=s.indexOf("/",1);if(-1!==l){const t=s.substring(1,l);if(m.pk.isSha(t)){const t=e.toAbsoluteUri(s.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:n,endLine:o}}}const c=new Map;l=s.length;do{l=s.lastIndexOf("/",l-1),a=s.substring(1,l),c.set(a,s.substr(l))}while(l>0);if(0!==c.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&c.has(e.getNameWithoutRemote())});for(const r of t){const t=c.get(r.getNameWithoutRemote());if(null==t)continue;const s=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=s)return{uri:s,startLine:n,endLine:o}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,n){let o;return o=null!=n?n.start.line===n.end.line?`#${e}-${n.start.line}`:`#${e}-${n.start.line}:${n.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/src/${i}/${e}`)}${o}`:t?`${this.encodeUrl(`${this.baseUrl}/src/${t}/${e}`)}${o}`:`${this.encodeUrl(`${this.baseUrl}?path=${e}`)}${o}`}}const w=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,_=/^lines-(\d+)(?::(\d+))?$/;class BitbucketServerRemote extends s.x{constructor(e,t,i,n,o=!1){super(e,t,i,n,o)}get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"issue #",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:r.fH.Issue,description:`${this.name} Issue #<num>`},{prefix:"pull request #",ignoreCase:!0,url:`${this.baseUrl}/pull-requests/<num>`,title:`Open Pull Request #<num> on ${this.name}`,type:r.fH.PullRequest,description:`${this.name} Pull Request #<num>`}]),this._autolinks}get baseUrl(){const[e,t]=this.path.startsWith("scm/")?this.path.replace("scm/","").split("/"):this.splitPath();return`${this.protocol}://${this.domain}/projects/${e}/repos/${t}`}get icon(){return"bitbucket"}get id(){return"bitbucket-server"}get name(){return this.formatName("Bitbucket Server")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let n,o;if(t.fragment){const e=_.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(n=parseInt(t,10),i&&(o=parseInt(i,10)))}}const r=w.exec(t.path);if(null==r)return;const[,,,s]=r;let a,l=s.indexOf("/",1);if(-1!==l){const t=s.substring(1,l);if(m.pk.isSha(t)){const t=e.toAbsoluteUri(s.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:n,endLine:o}}}const c=new Map;l=s.length;do{l=s.lastIndexOf("/",l-1),a=s.substring(1,l),c.set(a,s.substr(l))}while(l>0);if(0!==c.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&c.has(e.getNameWithoutRemote())});for(const r of t){const t=c.get(r.getNameWithoutRemote());if(null==t)continue;const s=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=s)return{uri:s,startLine:n,endLine:o}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/commits?until=${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commits/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/branches/compare/${e}%0D${t}`).replace("%250D","%0D")}getUrlForFile(e,t,i,n){let o;return o=null!=n?n.start.line===n.end.line?`#${n.start.line}`:`#${n.start.line}-${n.end.line}`:"",i?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${i}`)}${o}`:t?`${this.encodeUrl(`${this.baseUrl}/browse/${e}?at=${t}`)}${o}`:`${this.encodeUrl(`${this.baseUrl}/browse/${e}`)}${o}`}}var v=i(3620);class CustomRemote extends s.x{constructor(e,t,i,n,o){super(e,t,n,o,!0),this.urls=i}get id(){return"custom"}get name(){return this.formatName("Custom")}getLocalInfoFromRemoteUri(e,t){return Promise.resolve(void 0)}getUrlForRepository(){return this.encodeUrl((0,v.sX)(this.urls.repository,this.getContext()))}getUrlForBranches(){return this.encodeUrl((0,v.sX)(this.urls.branches,this.getContext()))}getUrlForBranch(e){return this.encodeUrl((0,v.sX)(this.urls.branch,this.getContext({branch:e})))}getUrlForCommit(e){return this.encodeUrl((0,v.sX)(this.urls.commit,this.getContext({id:e})))}getUrlForComparison(e,t,i){if(null!=this.urls.comparison)return this.encodeUrl((0,v.sX)(this.urls.comparison,this.getContext({ref1:e,ref2:t,notation:i})))}getUrlForFile(e,t,i,n){let o,r;o=null!=n?n.start.line===n.end.line?(0,v.sX)(this.urls.fileLine,{line:n.start.line}):(0,v.sX)(this.urls.fileRange,{start:n.start.line,end:n.end.line}):"",r=i?(0,v.sX)(this.urls.fileInCommit,this.getContext({id:i,file:e,line:o})):t?(0,v.sX)(this.urls.fileInBranch,this.getContext({branch:t,file:e,line:o})):(0,v.sX)(this.urls.file,this.getContext({file:e,line:o}));const s=r.includes("#");if(r=this.encodeUrl(r),s){const e=r.lastIndexOf("%23");-1!==e&&(r=`${r.substring(0,e)}#${r.substring(e+3)}`)}return r}getContext(e){const[t,i]=this.splitPath();return{repo:this.path,repoBase:t,repoPath:i,...e??{}}}}const y=/^\/([^/]+)\/\+(.+)$/i,b=/^(\d+)$/;class GerritRemote extends s.x{constructor(e,t,i,n,o=!1,r=!0){r&&"ssh"!==i&&(t=t.replace(/^a\//,"")),super(e,t,i,n,o)}get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"Change-Id: ",url:`${this.baseReviewUrl}/q/<num>`,title:`Open Change #<num> on ${this.name}`,alphanumeric:!0,description:`${this.name} Change #<num>`}]),this._autolinks}get icon(){return"gerrit"}get id(){return"gerrit"}get name(){return this.formatName("Gerrit")}get baseUrl(){return`${this.protocol}://${this.domain}/plugins/gitiles/${this.path}`}get baseReviewUrl(){return`${this.protocol}://${this.domain}`}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let n;if(t.fragment){const e=b.exec(t.fragment);if(null!=e){const[,t]=e;t&&(n=parseInt(t,10))}}const o=y.exec(t.path);if(null==o)return;const[,,r]=o;let s=r.indexOf("/",1);if(-1!==s){const t=r.substring(1,s);if(m.pk.isSha(t)||"HEAD"==t){const t=e.toAbsoluteUri(r.substr(s),{validate:i?.validate});if(null!=t)return{uri:t,startLine:n}}}if(r.startsWith("/refs/heads/")){const t=r.substr("/refs/heads/".length);let o;const a=new Map;s=t.length;do{s=t.lastIndexOf("/",s-1),o=t.substring(1,s),a.set(o,t.substr(s))}while(s>0);if(0!==a.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&a.has(e.getNameWithoutRemote())});for(const o of t){const t=a.get(o.getNameWithoutRemote());if(null==t)continue;const r=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=r)return{uri:r,startLine:n}}}}else if(r.startsWith("/refs/tags/")){const t=r.substr("/refs/tags/".length);let o;const a=new Map;s=t.length;do{s=t.lastIndexOf("/",s-1),o=t.substring(1,s),a.set(o,t.substr(s))}while(s>0);if(0!==a.size){const{values:t}=await e.getTags({filter:e=>a.has(e.name)});for(const o of t){const t=a.get(o.name);if(null==t)continue;const r=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=r)return{uri:r,startLine:n}}}}else;}getUrlForBranches(){return this.encodeUrl(`${this.baseReviewUrl}/admin/repos/${this.path},branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/+/refs/heads/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseReviewUrl}/q/${e}`)}getUrlForFile(e,t,i,n){const o=null!=n?`#${n.start.line}`:"";return i?`${this.encodeUrl(`${this.baseUrl}/+/${i}/${e}`)}${o}`:t?`${this.encodeUrl(`${this.getUrlForBranch(t)}/${e}`)}${o}`:`${this.encodeUrl(`${this.baseUrl}/+/HEAD/${e}`)}${o}`}}const C=/^\/([^/]+)\/([^/]+?)\/src(.+)$/i,S=/^L(\d+)(?:-L(\d+))?$/;class GiteaRemote extends s.x{constructor(e,t,i,n,o=!1){super(e,t,i,n,o)}get autolinks(){return void 0===this._autolinks&&(this._autolinks=[{prefix:"#",url:`${this.baseUrl}/issues/<num>`,title:`Open Issue #<num> on ${this.name}`,type:r.fH.Issue,description:`${this.name} Issue #<num>`}]),this._autolinks}get icon(){return"gitea"}get id(){return"gitea"}get name(){return this.formatName("Gitea")}async getLocalInfoFromRemoteUri(e,t,i){if(t.authority!==this.domain)return;if((i?.validate??1)&&!t.path.startsWith(`/${this.path}/`))return;let n,o;if(t.fragment){const e=S.exec(t.fragment);if(null!=e){const[,t,i]=e;t&&(n=parseInt(t,10),i&&(o=parseInt(i,10)))}}const r=C.exec(t.path);if(null==r)return;const[,,,s]=r;let a,l;if(s.startsWith("/commit/")&&(a="/commit/".length,l=s.indexOf("/",a),-1!==l)){const t=s.substring(a,l);if(m.pk.isSha(t)){const t=e.toAbsoluteUri(s.substr(l),{validate:i?.validate});if(null!=t)return{uri:t,startLine:n,endLine:o}}}if(s.startsWith("/branch/")){let t;const r=new Map;a="/branch/".length,l=a;do{t=s.substring(a,l),r.set(t,s.substr(l)),l=s.indexOf("/",l+1)}while(l<s.length&&-1!==l);if(0!==r.size){const{values:t}=await e.getBranches({filter:e=>e.remote&&r.has(e.getNameWithoutRemote())});for(const s of t){const t=r.get(s.getNameWithoutRemote());if(null==t)continue;const a=e.toAbsoluteUri(t,{validate:i?.validate});if(null!=a)return{uri:a,startLine:n,endLine:o}}}}}getUrlForBranches(){return this.encodeUrl(`${this.baseUrl}/branches`)}getUrlForBranch(e){return this.encodeUrl(`${this.baseUrl}/src/branch/${e}`)}getUrlForCommit(e){return this.encodeUrl(`${this.baseUrl}/commit/${e}`)}getUrlForComparison(e,t,i){return this.encodeUrl(`${this.baseUrl}/compare/${e}...${t}`)}getUrlForFile(e,t,i,n){let o;return o=null!=n?n.start.line===n.end.line?`#L${n.start.line}`:`#L${n.start.line}-L${n.end.line}`:"",i?this.encodeUrl(`${this.baseUrl}/src/commit/${i}/${e}${o}`):t?this.encodeUrl(`${this.baseUrl}/src/branch/${t}/${e}${o}`):this.encodeUrl(`${this.baseUrl}/src/${e}${o}`)}}var k=i(2075),P=i(5542);class GoogleSourceRemote extends GerritRemote{constructor(e,t,i,n,o=!1){super(e,t,i,n,o,!1)}get id(){return"google-source"}get name(){return this.formatName("Google Source")}get baseUrl(){return`${this.protocol}://${this.domain}/${this.path}`}get reviewDomain(){const[e,...t]=this.domain.split(".");return[`${e}-review`,...t].join(".")}get baseReviewUrl(){return`${this.protocol}://${this.reviewDomain}`}}const R=[{custom:!1,matcher:"bitbucket.org",creator:(e,t,i)=>new BitbucketRemote(t,i)},{custom:!1,matcher:"github.com",creator:(e,t,i)=>new k.gu(e,t,i)},{custom:!1,matcher:"gitlab.com",creator:(e,t,i)=>new P.E(e,t,i)},{custom:!1,matcher:/\bdev\.azure\.com$/i,creator:(e,t,i)=>new AzureDevOpsRemote(t,i)},{custom:!0,matcher:/^(.+\/(?:bitbucket|stash))\/scm\/(.+)$/i,creator:(e,t,i)=>new BitbucketServerRemote(t,i)},{custom:!1,matcher:/\bgitlab\b/i,creator:(e,t,i)=>new P.E(e,t,i)},{custom:!1,matcher:/\bvisualstudio\.com$/i,creator:(e,t,i)=>new AzureDevOpsRemote(t,i,void 0,void 0,!0)},{custom:!1,matcher:/\bgitea\b/i,creator:(e,t,i)=>new GiteaRemote(t,i)},{custom:!1,matcher:/\bgerrithub\.io$/i,creator:(e,t,i)=>new GerritRemote(t,i)},{custom:!1,matcher:/\bgooglesource\.com$/i,creator:(e,t,i)=>new GoogleSourceRemote(t,i)}];function D(e){const t=[];if(e?.length)for(const i of e){const e=$(i);if(null==e)continue;let n;try{if(n=i.regex?new RegExp(i.regex,"i"):i.domain?.toLowerCase(),null==n)throw new Error("No matcher found")}catch(e){o.Yd.error(e,`Loading remote provider '${i.name??""}' failed`)}t.push({custom:!0,matcher:n,creator:e})}return t.push(...R),t}function $(e){switch(e.type){case n.zW.AzureDevOps:return(t,i,n)=>new AzureDevOpsRemote(i,n,e.protocol,e.name,!0);case n.zW.Bitbucket:return(t,i,n)=>new BitbucketRemote(i,n,e.protocol,e.name,!0);case n.zW.BitbucketServer:return(t,i,n)=>new BitbucketServerRemote(i,n,e.protocol,e.name,!0);case n.zW.Custom:return(t,i,n)=>new CustomRemote(i,n,e.urls,e.protocol,e.name);case n.zW.Gerrit:return(t,i,n)=>new GerritRemote(i,n,e.protocol,e.name,!0);case n.zW.GoogleSource:return(t,i,n)=>new GoogleSourceRemote(i,n,e.protocol,e.name,!0);case n.zW.Gitea:return(t,i,n)=>new GiteaRemote(i,n,e.protocol,e.name,!0);case n.zW.GitHub:return(t,i,n)=>new k.gu(t,i,n,e.protocol,e.name,!0);case n.zW.GitLab:return(t,i,n)=>new P.E(t,i,n,e.protocol,e.name,!0);default:return}}function T(e,t){return(i,n,r)=>function(e,t,i,n,r){try{const o=n.toLowerCase();for(const{custom:s,matcher:a,creator:l}of t){if("string"==typeof a){if(a===o)return l(e,n,r);continue}if(a.test(o))return l(e,n,r);if(!s)continue;const t=a.exec(i);if(null!=t)return l(e,t[1],t[2])}return}catch(e){return void o.Yd.error(e,"createRemoteProvider")}}(e,t,i,n,r)}},3084:(e,t,i)=>{i.d(t,{D:()=>RichRemoteProvider,e:()=>y});var n=i(9496),o=i(9827),r=i(429),s=i(3113),a=i(4575),l=i(1277),c=i(6446),h=i(7925),u=i(4968),d=i(5432),p=i(4241),m=i(7469),g=i(2795),f=i(418),w=Object.defineProperty,_=Object.getOwnPropertyDescriptor,v=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?_(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&w(t,i,r),r};class RichRemoteProvider extends g.x{constructor(e,t,i,o,r,a){super(t,i,o,r,a),this.container=e,this.type="rich",this._onDidChange=new n.EventEmitter,this.requestExceptionCount=0,this._ignoreSSLErrors=new Map,this._prsByCommit=new Map,e.context.subscriptions.push(s.DN.onDidChange((e=>{s.DN.changed(e,"remotes")&&this._ignoreSSLErrors.clear()})),f.j.onDidChangeConnectionState((e=>{e.key===this.key&&("disconnected"===e.reason?this.disconnect({silent:!0}):"connected"===e.reason&&this.ensureSession(!1))})),n.authentication.onDidChangeSessions(this.onAuthenticationSessionsChanged,this))}get onDidChange(){return this._onDidChange.event}get authProviderDescriptor(){return{domain:this.domain,scopes:this.authProvider.scopes}}get key(){return this.custom?`${this.name}:${this.domain}`:this.name}get connectedKey(){return`connected:${this.key}`}get maybeConnected(){return void 0===this._session?void 0:null!==this._session}session(){return void 0===this._session?this.ensureSession(!1):this._session??void 0}onAuthenticationSessionsChanged(e){e.provider.id===this.authProvider.id&&this.ensureSession(!1)}async connect(){try{const e=await this.ensureSession(!0);return Boolean(e)}catch(e){return!1}}async disconnect(e){if(e?.currentSessionOnly&&null===this._session)return;const t=null!=this._session;if(t&&!e?.silent)if(e?.currentSessionOnly)(0,h.mm)(this.name);else{const e={title:"Disable"},t={title:"Disable & Sign Out"},i={title:"Cancel",isCloseAffordance:!0};let o;if(o=this.container.integrationAuthentication.hasProvider(this.authProvider.id)?await n.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?\n\nNote: signing out clears the saved authentication.`,{modal:!0},e,t,i):await n.window.showWarningMessage(`Are you sure you want to disable the rich integration with ${this.name}?`,{modal:!0},e,i),null==o||o===i)return;o===t&&this.container.integrationAuthentication.deleteSession(this.id,this.authProviderDescriptor)}this.resetRequestExceptionCount(),this._prsByCommit.clear(),this._session=null,t&&(e?.currentSessionOnly||this.container.storage.storeWorkspace(this.connectedKey,!1),this._onDidChange.fire(),e?.silent||e?.currentSessionOnly||f.j.disconnected(this.key))}async reauthenticate(){void 0!==this._session&&(this._session=void 0,await this.ensureSession(!0,!0))}resetRequestExceptionCount(){this.requestExceptionCount=0}trackRequestException(){this.requestExceptionCount++,this.requestExceptionCount>=5&&null!==this._session&&this.disconnect({currentSessionOnly:!0})}async isConnected(){return null!=await this.session()}async getAccountForCommit(e,t){const i=(0,c.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderAccountForCommit(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return l.Yd.error(e,i),void((e instanceof a._7||e instanceof a.Bn)&&this.trackRequestException())}}async getAccountForEmail(e,t){const i=(0,c.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderAccountForEmail(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return l.Yd.error(e,i),void((e instanceof a._7||e instanceof a.Bn)&&this.trackRequestException())}}async getDefaultBranch(){const e=(0,c.UH)();if(this.maybeConnected??await this.isConnected())try{const e=await this.getProviderDefaultBranch(this._session);return this.resetRequestExceptionCount(),e}catch(t){return l.Yd.error(t,e),void((t instanceof a._7||t instanceof a.Bn)&&this.trackRequestException())}}async searchMyPullRequests(){const e=(0,c.UH)();try{const e=await this.searchProviderMyPullRequests(this._session);return this.resetRequestExceptionCount(),e}catch(t){return l.Yd.error(t,e),void((t instanceof a._7||t instanceof a.Bn)&&this.trackRequestException())}}async searchMyIssues(){const e=(0,c.UH)();try{const e=await this.searchProviderMyIssues(this._session);return this.resetRequestExceptionCount(),e}catch(t){return l.Yd.error(t,e),void((t instanceof a._7||t instanceof a.Bn)&&this.trackRequestException())}}async getIssueOrPullRequest(e){const t=(0,c.UH)();if(this.maybeConnected??await this.isConnected())try{const t=await this.getProviderIssueOrPullRequest(this._session,e);return this.resetRequestExceptionCount(),t}catch(e){return l.Yd.error(e,t),void((e instanceof a._7||e instanceof a.Bn)&&this.trackRequestException())}}getIgnoreSSLErrors(){if(r.$L)return!1;let e=this._ignoreSSLErrors.get(this.id);if(void 0===e){const t=s.DN.get("remotes")?.find((e=>e.type.toLowerCase()===this.id&&e.domain===this.domain));e=t?.ignoreSSLErrors??!1,this._ignoreSSLErrors.set(this.id,e)}return e}async getPullRequestForBranch(e,t){const i=(0,c.UH)();if(this.maybeConnected??await this.isConnected())try{const i=await this.getProviderPullRequestForBranch(this._session,e,t);return this.resetRequestExceptionCount(),i}catch(e){return l.Yd.error(e,i),void((e instanceof a._7||e instanceof a.Bn)&&this.trackRequestException())}}getPullRequestForCommit(e){let t=this._prsByCommit.get(e);return void 0===t&&(t=this.getPullRequestForCommitCore(e),this._prsByCommit.set(e,t)),null!=t&&(0,m.tI)(t)?t.then((e=>e??void 0)):t??void 0}async getPullRequestForCommitCore(e){const t=(0,c.UH)();if(!(this.maybeConnected??await this.isConnected()))return null;try{const t=await this.getProviderPullRequestForCommit(this._session,e)??null;return this._prsByCommit.set(e,t),this.resetRequestExceptionCount(),t}catch(i){return l.Yd.error(i,t),this._prsByCommit.delete(e),(i instanceof a._7||i instanceof a.Bn)&&this.trackRequestException(),null}}async ensureSession(e,t=!1){if(null!=this._session)return this._session;if(!s.DN.get("integrations.enabled"))return;if(e)await this.container.storage.deleteWorkspace(this.connectedKey);else if(!1===this.container.storage.getWorkspace(this.connectedKey))return;let i;try{i=this.container.integrationAuthentication.hasProvider(this.authProvider.id)?await this.container.integrationAuthentication.getSession(this.authProvider.id,this.authProviderDescriptor,{createIfNeeded:e,forceNewSession:t}):await(0,o.a_)(this.getIgnoreSSLErrors(),(()=>n.authentication.getSession(this.authProvider.id,this.authProvider.scopes,{createIfNone:t?void 0:e,silent:!e&&!t||void 0,forceNewSession:!!t||void 0})))}catch(e){if(await this.container.storage.deleteWorkspace(this.connectedKey),e instanceof Error&&e.message.includes("User did not consent"))return;i=null}return void 0!==i||e||await this.container.storage.deleteWorkspace(this.connectedKey),this._session=i??null,this.resetRequestExceptionCount(),null!=i&&(await this.container.storage.storeWorkspace(this.connectedKey,!0),queueMicrotask((()=>{this._onDidChange.fire(),f.j.connected(this.key)}))),i??void 0}}async function y(e,t){const i=`Connecting to a ${e} instance for rich integration features requires GitLens Pro.`;for(;;){const e=await t.subscription.getSubscription();if(!1===e.account?.verified){const e={title:"Resend Verification"},o={title:"Cancel",isCloseAffordance:!0};if(await n.window.showWarningMessage(`${i}\n\nYou must verify your email address before you can continue.`,{modal:!0},e,o)===e&&await t.subscription.resendVerification())continue;return!1}const o=e.plan.effective.id;if((0,u.aG)(o))break;if(null==e.account&&!(0,u.gA)(e)){const e={title:"Start a GitLens Pro Trial"},o={title:"Cancel",isCloseAffordance:!0};if(await n.window.showWarningMessage(`${i}\n\nDo you want to also try GitLens+ features on private repos, free for 3 days?`,{modal:!0},e,o)!==e)return!1;t.subscription.startPreviewTrial();break}if(null==e.account){const e={title:"Extend Your GitLens Pro Trial"},o={title:"Cancel",isCloseAffordance:!0};if(await n.window.showWarningMessage(`${i}\n\nDo you want to continue to use GitLens+ features on private repos, free for an additional 7-days?`,{modal:!0},e,o)===e&&await t.subscription.loginOrSignUp())continue}else{const e={title:"Upgrade to Pro"},o={title:"Cancel",isCloseAffordance:!0};await n.window.showWarningMessage(`${i}\n\nDo you want to continue to use GitLens+ features on private repos?`,{modal:!0},e,o)===e&&t.subscription.purchase()}return!1}return!0}v([(0,p.cM)()],RichRemoteProvider.prototype,"connect",1),v([(0,d.H)(),(0,p.cM)()],RichRemoteProvider.prototype,"disconnect",1),v([(0,p.cM)()],RichRemoteProvider.prototype,"reauthenticate",1),v([(0,p.fF)()],RichRemoteProvider.prototype,"trackRequestException",1),v([(0,d.H)(),(0,p.fF)({exit:e=>`returned ${e}`})],RichRemoteProvider.prototype,"isConnected",1),v([(0,d.H)(),(0,p.fF)()],RichRemoteProvider.prototype,"getAccountForCommit",1),v([(0,d.H)(),(0,p.fF)()],RichRemoteProvider.prototype,"getAccountForEmail",1),v([(0,d.H)(),(0,p.fF)()],RichRemoteProvider.prototype,"getDefaultBranch",1),v([(0,d.H)(),(0,p.fF)()],RichRemoteProvider.prototype,"searchMyPullRequests",1),v([(0,d.H)(),(0,p.fF)()],RichRemoteProvider.prototype,"searchMyIssues",1),v([(0,d.H)(),(0,p.fF)()],RichRemoteProvider.prototype,"getIssueOrPullRequest",1),v([(0,d.H)(),(0,p.fF)()],RichRemoteProvider.prototype,"getPullRequestForBranch",1),v([(0,p.fF)()],RichRemoteProvider.prototype,"getPullRequestForCommit",1),v([(0,p.fF)()],RichRemoteProvider.prototype,"getPullRequestForCommitCore",1),v([(0,d.H)()],RichRemoteProvider.prototype,"ensureSession",1)},6446:(e,t,i)=>{i.d(t,{DS:()=>h,Fp:()=>s,OD:()=>c,QR:()=>l,UH:()=>a});const n=2**30,o=new Map;let r=0;function s(e){o.delete(e)}function a(){return o.get(r)}function l(e){const t=c();return{scopeId:t,prefix:`[${String(t).padStart(5)}] ${e}`}}function c(){return r===n&&(r=0),++r}function h(e,t){o.set(e,t)}},1277:(e,t,i)=>{i.d(t,{Nu:()=>l,Yd:()=>r,q4:()=>a});var n=i(5255);const o="";const r=new class Logger2{constructor(){this._isDebugging=!1,this.level=0,this._logLevel=n.in.Off}configure(e,t,i=!1){this.provider=e,this._isDebugging=i,this.logLevel=t}enabled(e){return this.level>=s(e)}get isDebugging(){return this._isDebugging}get logLevel(){return this._logLevel}set logLevel(e){this._logLevel=e,this.level=s(this._logLevel),e===n.in.Off?(this.output?.dispose?.(),this.output=void 0):this.output=this.output??this.provider.createChannel(this.provider.name)}get timestamp(){return`[${(new Date).toISOString().replace(/T/," ").slice(0,-1)}]`}debug(e,...t){if(this.level<4&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??o}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??o,...t),null==this.output||this.level<4||this.output.appendLine(`${this.timestamp} ${i??o}${this.toLoggableParams(!0,t)}`)}error(e,t,...i){if(this.level<1&&!this.isDebugging)return;let n;if(n=null==t||"string"==typeof t?t:`${t.prefix} ${i.shift()??o}`,null==n){const t=e instanceof Error?e.stack:void 0;if(t){const e=/.*\s*?at\s(.+?)\s/.exec(t);null!=e&&(n=e[1])}}this.isDebugging&&console.error(this.timestamp,`[${this.provider.name}]`,n??o,...i,e),null==this.output||this.level<1||this.output.appendLine(`${this.timestamp} ${n??o}${this.toLoggableParams(!1,i)}\n${String(e)}`)}log(e,...t){if(this.level<3&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??o}`)),this.isDebugging&&console.log(this.timestamp,`[${this.provider.name}]`,i??o,...t),null==this.output||this.level<3||this.output.appendLine(`${this.timestamp} ${i??o}${this.toLoggableParams(!1,t)}`)}warn(e,...t){if(this.level<2&&!this.isDebugging)return;let i;"string"==typeof e?i=e:(i=t.shift(),null!=e&&(i=`${e.prefix} ${i??o}`)),this.isDebugging&&console.warn(this.timestamp,`[${this.provider.name}]`,i??o,...t),null==this.output||this.level<2||this.output.appendLine(`${this.timestamp} ${i??o}${this.toLoggableParams(!1,t)}`)}showOutputChannel(e){this.output?.show?.(e)}toLoggable(e,t){if("object"!=typeof e)return String(e);const i=this.provider.toLoggable?.(e);if(null!=i)return i;try{return JSON.stringify(e,t)}catch{return"<error>"}}toLoggableParams(e,t){if(0===t.length||e&&this.level<4&&!this.isDebugging)return o;const i=t.map((e=>this.toLoggable(e))).join(", ");return 0!==i.length?` — ${i}`:o}};function s(e){switch(e){case n.in.Off:return 0;case n.in.Error:return 1;case n.in.Warn:return 2;case n.in.Info:return 3;case n.in.Debug:return 4;default:return 0}}function a(e){let t;if("function"==typeof e){if(null==e.prototype?.constructor)return e.name;t=e.prototype.constructor.name??o}else t=e.constructor?.name??o;const i=t.indexOf("_");return-1===i?t:t.substr(i+1)}const l={enabled:e=>r.enabled(e),log:(e,t,i,...o)=>{switch(e){case n.in.Error:r.error("",t,i,...o);break;case n.in.Warn:r.warn(t,i,...o);break;case n.in.Info:r.log(t,i,...o);break;default:r.debug(t,i,...o)}}}},7925:(e,t,i)=>{i.d(t,{B8:()=>h,Bm:()=>m,EB:()=>u,G:()=>c,Nl:()=>g,PV:()=>S,QP:()=>_,RR:()=>l,W8:()=>d,bi:()=>w,f3:()=>f,mm:()=>v,s$:()=>b,vF:()=>y,xs:()=>C,zk:()=>p});var n=i(9496),o=i(3113),r=i(5255),s=i(1277),a=i(9529);function l(e){return S("info",null==e?"There is no previous commit.":`Commit ${e.shortSha} (${e.author.name}, ${e.formattedDate}) has no previous commit.`,o.kl.CommitHasNoPreviousCommitWarning)}function c(e){return S("warn",`${e}. The commit could not be found.`,o.kl.CommitNotFoundWarning)}async function h(e){const t={title:"Create Pull Request..."};return await S("info",`Would you like to create a Pull Request for branch '${e}'?`,o.kl.CreatePullRequestPrompt,{title:"Don't Show Again"},t)===t}async function u(){const e={title:"Disable Debug Logging"};return await S("warn","GitLens debug logging is currently enabled. Unless you are reporting an issue, it is recommended to be disabled. Would you like to disable it?",o.kl.SuppressDebugLoggingWarning,{title:"Don't Show Again"},e)===e}async function d(e){if(s.Yd.enabled(r.in.Error)){null!=await S("error",`${e}. See output channel for more details.`,void 0,null,{title:"Open Output Channel"})&&s.Yd.showOutputChannel()}else{null!=await S("error",`${e}. If the error persists, please enable debug logging and try again.`,void 0,null,{title:"Enable Debug Logging"})&&(0,a.P0)(r.Gh.EnableDebugLogging)}}function p(e){return S("warn",`${e}. The file is probably not under source control.`,o.kl.FileNotUnderSourceControlWarning)}function m(){return S("error","GitLens (Insiders) cannot be used while GitLens is also enabled. Please ensure that only one version is enabled.")}function g(e,t){return S("error",`This GitLens ${t?"(Insiders)":"pre-release"} version (${e}) has expired. Please upgrade to a more recent version.`)}function f(e){return S("warn",`${e}. The line has uncommitted changes.`,o.kl.LineUncommittedWarning)}function w(e){return S("warn",`${e}. No repository could be found.`,o.kl.NoRepositoryWarning)}function _(){return S("warn","Closing either the git-rebase-todo file or the Rebase Editor will start the rebase.",o.kl.RebaseSwitchToTextWarning)}function v(e){return S("error",`Rich integration with ${e} has been disconnected for this session, because of too many failed requests.`,o.kl.IntegrationDisconnectedTooManyFailedRequestsWarning,void 0,{title:"OK"})}function y(e){return S("error",e,o.kl.IntegrationRequestFailed500Warning,void 0,{title:"OK"})}function b(e){return S("error",`${e} request timed out.`,o.kl.IntegrationRequestTimedOutWarning,void 0,{title:"OK"})}async function C(e){const t={title:"See What's New"};await S("info",`GitLens ${e} is here — check out what's new!`,void 0,null,t)===t&&await n.env.openExternal(n.Uri.parse("https://help.gitkraken.com/gitlens/gitlens-release-notes-current/"))}async function S(e,t,i,r={title:"Don't Show Again"},...a){if(s.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(r)})`),null!=i&&o.DN.get(`advanced.messages.${i}`))return void s.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(r)}) skipped`);let l;switch(null!=i&&null!==r&&a.push(r),e){case"info":l=await n.window.showInformationMessage(t,...a);break;case"warn":l=await n.window.showWarningMessage(t,...a);break;case"error":l=await n.window.showErrorMessage(t,...a)}return null==i||null!==r&&l!==r||(s.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(r)}) don't show again requested`),await function(e){const t={...o.DN.get("advanced.messages")};t[e]=!0;for(const[e,i]of Object.entries(t))!0!==i&&delete t[e];return o.DN.update("advanced.messages",t,n.ConfigurationTarget.Global)}(i),l!==r)?(s.Yd.log(`ShowMessage(${e}, '${t}', ${i}, ${JSON.stringify(r)}) returned ${null!=l?l.title:l}`),l):void 0}},9616:(e,t,i)=>{function n(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}i.r(t),i.d(t,{GitHubApi:()=>GitHubApi});var o=i(5186);function r(e){return"[object Object]"===Object.prototype.toString.call(e)}function s(e){var t,i;return!1!==r(e)&&(void 0===(t=e.constructor)||!1!==r(i=t.prototype)&&!1!==i.hasOwnProperty("isPrototypeOf"))}function a(e,t){const i=Object.assign({},e);return Object.keys(t).forEach((n=>{s(t[n])?n in e?i[n]=a(e[n],t[n]):Object.assign(i,{[n]:t[n]}):Object.assign(i,{[n]:t[n]})})),i}function l(e){for(const t in e)void 0===e[t]&&delete e[t];return e}function c(e,t,i){if("string"==typeof t){let[e,n]=t.split(" ");i=Object.assign(n?{method:e,url:n}:{url:e},i)}else i=Object.assign({},t);var n;i.headers=(n=i.headers)?Object.keys(n).reduce(((e,t)=>(e[t.toLowerCase()]=n[t],e)),{}):{},l(i),l(i.headers);const o=a(e||{},i);return e&&e.mediaType.previews.length&&(o.mediaType.previews=e.mediaType.previews.filter((e=>!o.mediaType.previews.includes(e))).concat(o.mediaType.previews)),o.mediaType.previews=o.mediaType.previews.map((e=>e.replace(/-preview/,""))),o}const h=/\{[^}]+\}/g;function u(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function d(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,i)=>(t[i]=e[i],t)),{})}function p(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function m(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function g(e,t,i){return t="+"===e||"#"===e?p(t):m(t),i?m(i)+"="+t:t}function f(e){return null!=e}function w(e){return";"===e||"&"===e||"?"===e}function _(e,t){var i=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,n,o){if(n){let e="";const o=[];if(-1!==i.indexOf(n.charAt(0))&&(e=n.charAt(0),n=n.substr(1)),n.split(/,/g).forEach((function(i){var n=/([^:\*]*)(?::(\d+)|(\*))?/.exec(i);o.push(function(e,t,i,n){var o=e[i],r=[];if(f(o)&&""!==o)if("string"==typeof o||"number"==typeof o||"boolean"==typeof o)o=o.toString(),n&&"*"!==n&&(o=o.substring(0,parseInt(n,10))),r.push(g(t,o,w(t)?i:""));else if("*"===n)Array.isArray(o)?o.filter(f).forEach((function(e){r.push(g(t,e,w(t)?i:""))})):Object.keys(o).forEach((function(e){f(o[e])&&r.push(g(t,o[e],e))}));else{const e=[];Array.isArray(o)?o.filter(f).forEach((function(i){e.push(g(t,i))})):Object.keys(o).forEach((function(i){f(o[i])&&(e.push(m(i)),e.push(g(t,o[i].toString())))})),w(t)?r.push(m(i)+"="+e.join(",")):0!==e.length&&r.push(e.join(","))}else";"===t?f(o)&&r.push(m(i)):""!==o||"&"!==t&&"?"!==t?""===o&&r.push(""):r.push(m(i)+"=");return r}(t,e,n[1],n[2]||n[3]))})),e&&"+"!==e){var r=",";return"?"===e?r="&":"#"!==e&&(r=e),(0!==o.length?e:"")+o.join(r)}return o.join(",")}return p(o)}))}function v(e){let t,i=e.method.toUpperCase(),n=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),r=d(e,["method","baseUrl","url","headers","request","mediaType"]);const s=function(e){const t=e.match(h);return t?t.map(u).reduce(((e,t)=>e.concat(t)),[]):[]}(n);var a;n=(a=n,{expand:_.bind(null,a)}).expand(r),/^http/.test(n)||(n=e.baseUrl+n);const l=d(r,Object.keys(e).filter((e=>s.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")),e.mediaType.previews.length)){const t=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=t.concat(e.mediaType.previews).map((t=>`application/vnd.github.${t}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(i)?n=function(e,t){const i=/\?/.test(e)?"&":"?",n=Object.keys(t);return 0===n.length?e:e+i+n.map((e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`)).join("&")}(n,l):"data"in l?t=l.data:Object.keys(l).length&&(t=l),o["content-type"]||void 0===t||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(i)&&void 0===t&&(t=""),Object.assign({method:i,url:n,headers:o},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function y(e,t,i){return v(c(e,t,i))}const b=function e(t,i){const n=c(t,i),o=y.bind(null,n);return Object.assign(o,{DEFAULTS:n,defaults:e.bind(null,n),merge:c.bind(null,n),parse:v})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/7.0.5 ${n()}`},mediaType:{format:"",previews:[]}});var C=i(3300),S=i.n(C);class Deprecation extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var k=i(778),P=i.n(k);const R=P()((e=>console.warn(e))),D=P()((e=>console.warn(e)));class RequestError extends Error{constructor(e,t,i){let n;super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,"headers"in i&&void 0!==i.headers&&(n=i.headers),"response"in i&&(this.response=i.response,n=i.response.headers);const o=Object.assign({},i.request);i.request.headers.authorization&&(o.headers=Object.assign({},i.request.headers,{authorization:i.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o,Object.defineProperty(this,"code",{get:()=>(R(new Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),Object.defineProperty(this,"headers",{get:()=>(D(new Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),n||{})})}}function $(e){const t=e.request&&e.request.log?e.request.log:console;(s(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let i,n,o={};return(e.request&&e.request.fetch||globalThis.fetch||S())(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((async r=>{n=r.url,i=r.status;for(const e of r.headers)o[e[0]]=e[1];if("deprecation"in o){const i=o.link&&o.link.match(/<([^>]+)>; rel="deprecation"/),n=i&&i.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${o.sunset}${n?`. See ${n}`:""}`)}if(204!==i&&205!==i){if("HEAD"===e.method){if(i<400)return;throw new RequestError(r.statusText,i,{response:{url:n,status:i,headers:o,data:void 0},request:e})}if(304===i)throw new RequestError("Not modified",i,{response:{url:n,status:i,headers:o,data:await T(r)},request:e});if(i>=400){const t=await T(r),s=new RequestError(function(e){if("string"==typeof e)return e;if("message"in e)return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message;return`Unknown error: ${JSON.stringify(e)}`}(t),i,{response:{url:n,status:i,headers:o,data:t},request:e});throw s}return T(r)}})).then((e=>({status:i,url:n,headers:o,data:e}))).catch((t=>{if(t instanceof RequestError)throw t;if("AbortError"===t.name)throw t;throw new RequestError(t.message,500,{request:e})}))}async function T(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json():!t||/^text\/|charset=utf-8$/.test(t)?e.text():function(e){return e.arrayBuffer()}(e)}const F=function e(t,i){const n=t.defaults(i);return Object.assign((function(t,i){const o=n.merge(t,i);if(!o.request||!o.request.hook)return $(n.parse(o));const r=(e,t)=>$(n.parse(n.merge(e,t)));return Object.assign(r,{endpoint:n,defaults:e.bind(null,n)}),o.request.hook(r,o)}),{endpoint:n,defaults:e.bind(null,n)})}(b,{headers:{"user-agent":`octokit-request.js/6.2.3 ${n()}`}});class GraphqlResponseError extends Error{constructor(e,t,i){super("Request failed due to following response errors:\n"+i.errors.map((e=>` - ${e.message}`)).join("\n")),this.request=e,this.headers=t,this.response=i,this.name="GraphqlResponseError",this.errors=i.errors,this.data=i.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const x=["method","baseUrl","url","headers","request","query","mediaType"],O=["query","method","url"],A=/\/api\/v3\/?$/;function I(e,t){const i=e.defaults(t);return Object.assign(((e,t)=>function(e,t,i){if(i){if("string"==typeof t&&"query"in i)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const e in i)if(O.includes(e))return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`))}const n="string"==typeof t?Object.assign({query:t},i):t,o=Object.keys(n).reduce(((e,t)=>x.includes(t)?(e[t]=n[t],e):(e.variables||(e.variables={}),e.variables[t]=n[t],e)),{}),r=n.baseUrl||e.endpoint.DEFAULTS.baseUrl;return A.test(r)&&(o.url=r.replace(A,"/api/graphql")),e(o).then((e=>{if(e.data.errors){const t={};for(const i of Object.keys(e.headers))t[i]=e.headers[i];throw new GraphqlResponseError(o,t,e.data)}return e.data.data}))}(i,e,t)),{defaults:I.bind(null,i),endpoint:i.endpoint})}I(F,{headers:{"user-agent":`octokit-graphql.js/5.0.5 ${n()}`},method:"POST",url:"/graphql"});const E=/^v1\./,N=/^ghs_/,U=/^ghu_/;async function L(e){const t=3===e.split(/\./).length,i=E.test(e)||N.test(e),n=U.test(e);return{type:"token",token:e,tokenType:t?"app":i?"installation":n?"user-to-server":"oauth"}}async function M(e,t,i,n){const o=t.endpoint.merge(i,n);return o.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),t(o)}const W=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(L.bind(null,e),{hook:M.bind(null,e)})},B="4.2.0";class Octokit{constructor(e={}){const t=new o.Collection,i={baseUrl:F.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};var r;if(i.headers["user-agent"]=[e.userAgent,`octokit-core.js/${B} ${n()}`].filter(Boolean).join(" "),e.baseUrl&&(i.baseUrl=e.baseUrl),e.previews&&(i.mediaType.previews=e.previews),e.timeZone&&(i.headers["time-zone"]=e.timeZone),this.request=F.defaults(i),this.graphql=(r=this.request,I(r,{method:"POST",url:"/graphql"})).defaults(i),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=t,e.authStrategy){const{authStrategy:i,...n}=e,o=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:n},e.auth));t.wrap("request",o.hook),this.auth=o}else if(e.auth){const i=W(e.auth);t.wrap("request",i.hook),this.auth=i}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((t=>{Object.assign(this,t(this,e))}))}static defaults(e){return class extends(this){constructor(...t){const i=t[0]||{};super("function"!=typeof e?Object.assign({},e,i,i.userAgent&&e.userAgent?{userAgent:`${i.userAgent} ${e.userAgent}`}:null):e(i))}}}static plugin(...e){var t;const i=this.plugins;return(t=class extends(this){}).plugins=i.concat(e.filter((e=>!i.includes(e)))),t}}Octokit.VERSION=B,Octokit.plugins=[];var G=i(9496),V=i(9827),H=i(429),q=i(3113),j=i(5255),Y=i(4575),Q=i(2380),z=i(4321),K=i(2075),J=i(1277),X=i(6446),Z=i(7925),ee=i(2800),te=i(4241),ie=i(6398),ne=i(3620),oe=i(4550),re=i(3878),se=Object.defineProperty,ae=Object.getOwnPropertyDescriptor,le=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?ae(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&se(t,i,r),r};const ce=Object.freeze({values:[]}),he=Object.freeze({ranges:[]});class GitHubApi{constructor(e){this._onDidReauthenticate=new G.EventEmitter,this._proxyAgent=null,this._enterpriseVersions=new Map,this._octokits=new Map,this._disposable=G.Disposable.from(q.DN.onDidChange((e=>{(q.DN.changed(e,"proxy")||q.DN.changed(e,"outputLevel"))&&this.resetCaches()})),q.DN.onDidChangeAny((e=>{(e.affectsConfiguration("http.proxy")||e.affectsConfiguration("http.proxyStrictSSL"))&&this.resetCaches()})))}get onDidReauthenticate(){return this._onDidReauthenticate.event}dispose(){this._disposable?.dispose()}resetCaches(){this._proxyAgent=null,this._octokits.clear(),this._enterpriseVersions.clear()}get proxyAgent(){if(!H.$L)return null===this._proxyAgent&&(this._proxyAgent=(0,V.Nx)()),this._proxyAgent}async getAccountForCommit(e,t,i,n,o,r){const s=(0,X.UH)();try{const a="query getAccountForCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: GitObjectID!\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $ref) {\n\t\t\t... on Commit {\n\t\t\t\tauthor {\n\t\t\t\t\tname\n\t\t\t\t\temail\n\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=(await this.graphql(e,t,a,{...r,owner:i,repo:n,ref:o},s))?.repository?.object?.author;if(null==l)return;return{provider:e,name:l.name??void 0,email:l.email??void 0,avatarUrl:!l.avatarUrl||ue(r)?l.avatarUrl??void 0:l.email&&null!=r?.baseUrl?await this.createEnterpriseAvatarUrl(e,t,r.baseUrl,l.email,r.avatarSize):void 0}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,s)}}async getAccountForEmail(e,t,i,n,o,r){const s=(0,X.UH)();try{const a="query getAccountForEmail(\n\t$emailQuery: String!\n\t$avatarSize: Int\n) {\n\tsearch(type: USER, query: $emailQuery, first: 1) {\n\t\tnodes {\n\t\t\t... on User {\n\t\t\t\tname\n\t\t\t\temail\n\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t}\n\t\t}\n\t}\n}",l=(await this.graphql(e,t,a,{...r,owner:i,repo:n,emailQuery:`in:email ${o}`},s))?.search?.nodes?.[0];if(null==l)return;return{provider:e,name:l.name??void 0,email:l.email??void 0,avatarUrl:!l.avatarUrl||ue(r)?l.avatarUrl??void 0:l.email&&null!=r?.baseUrl?await this.createEnterpriseAvatarUrl(e,t,r.baseUrl,l.email,r.avatarSize):void 0}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,s)}}async getDefaultBranch(e,t,i,n,o){const r=(0,X.UH)();try{const s="query getDefaultBranch(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tdefaultBranchRef {\n\t\t\tname\n\t\t}\n\t}\n}",a=(await this.graphql(e,t,s,{...o,owner:i,repo:n},r))?.repository?.defaultBranchRef?.name??void 0;if(null==a)return;return{provider:e,name:a}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,r)}}async getIssueOrPullRequest(e,t,i,n,o,r){const s=(0,X.UH)();try{const a="query getIssueOrPullRequest(\n\t$owner: String!\n\t$repo: String!\n\t$number: Int!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tissueOrPullRequest(number: $number) {\n\t\t\t__typename\n\t\t\t... on Issue {\n\t\t\t\tcreatedAt\n\t\t\t\tclosed\n\t\t\t\tclosedAt\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t}\n\t\t\t... on PullRequest {\n\t\t\t\tcreatedAt\n\t\t\t\tclosed\n\t\t\t\tclosedAt\n\t\t\t\ttitle\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n}",l=(await this.graphql(e,t,a,{...r,owner:i,repo:n,number:o},s))?.repository?.issueOrPullRequest;if(null==l)return;return{provider:e,type:l.type,id:String(o),date:new Date(l.createdAt),title:l.title,closed:l.closed,closedDate:null==l.closedAt?void 0:new Date(l.closedAt),url:l.url}}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,s)}}async getPullRequestForBranch(e,t,i,n,o,r){const s=(0,X.UH)();try{const a='query getPullRequestForBranch(\n\t$owner: String!\n\t$repo: String!\n\t$branch: String!\n\t$limit: Int!\n\t$include: [PullRequestState!]\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\trefs(query: $branch, refPrefix: "refs/heads/", first: 1) {\n\t\t\tnodes {\n\t\t\t\tassociatedPullRequests(first: $limit, orderBy: {field: UPDATED_AT, direction: DESC}, states: $include) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpermalink\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tstate\n\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\tclosedAt\n\t\t\t\t\t\tmergedAt\n\t\t\t\t\t\trepository {\n\t\t\t\t\t\t\tisFork\n\t\t\t\t\t\t\towner {\n\t\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',l=(await this.graphql(e,t,a,{...r,owner:i,repo:n,branch:o,limit:10},s))?.repository?.refs.nodes[0]?.associatedPullRequests?.nodes?.filter((e=>null!=e&&(!e.repository.isFork||e.repository.owner.login===i)));if(null==l||0===l.length)return;return l.length>1&&l.sort(((e,t)=>(e.repository.owner.login===i?-1:1)-(t.repository.owner.login===i?-1:1)||("OPEN"===e.state?-1:1)-("OPEN"===t.state?-1:1)||new Date(t.updatedAt).getTime()-new Date(e.updatedAt).getTime())),re.GitHubPullRequest.from(l[0],e)}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,s)}}async getPullRequestForCommit(e,t,i,n,o,r){const s=(0,X.UH)();try{const a="query getPullRequestForCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: GitObjectID!\n\t$avatarSize: Int\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $ref) {\n\t\t\t... on Commit {\n\t\t\t\tassociatedPullRequests(first: 2, orderBy: {field: UPDATED_AT, direction: DESC}) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tavatarUrl(size: $avatarSize)\n\t\t\t\t\t\t\turl\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpermalink\n\t\t\t\t\t\tnumber\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tstate\n\t\t\t\t\t\tupdatedAt\n\t\t\t\t\t\tclosedAt\n\t\t\t\t\t\tmergedAt\n\t\t\t\t\t\trepository {\n\t\t\t\t\t\t\tisFork\n\t\t\t\t\t\t\towner {\n\t\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=(await this.graphql(e,t,a,{...r,owner:i,repo:n,ref:o},s))?.repository?.object?.associatedPullRequests?.nodes?.filter((e=>null!=e&&(!e.repository.isFork||e.repository.owner.login===i)));if(null==l||0===l.length)return;return l.length>1&&l.sort(((e,t)=>(e.repository.owner.login===i?-1:1)-(t.repository.owner.login===i?-1:1)||("MERGED"===e.state?-1:1)-("MERGED"===t.state?-1:1)||new Date(t.updatedAt).getTime()-new Date(e.updatedAt).getTime())),re.GitHubPullRequest.from(l[0],e)}catch(t){if(t instanceof Y.Ww)return;throw this.handleException(t,e,s)}}async getBlame(e,t,i,n,o){const r=(0,X.UH)();try{const s="query getBlameRanges(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String!\n) {\n\tviewer { name }\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\t...on Commit {\n\t\t\t\tblame(path: $path) {\n\t\t\t\t\tranges {\n\t\t\t\t\t\tstartingLine\n\t\t\t\t\t\tendingLine\n\t\t\t\t\t\tcommit {\n\t\t\t\t\t\t\toid\n\t\t\t\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\tchangedFiles\n\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommitter {\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=await this.graphql(void 0,e,s,{owner:t,repo:i,ref:n,path:o},r);if(null==a)return he;const l=a.repository?.object?.blame?.ranges;return null==l||0===l.length?{ranges:[],viewer:a.viewer?.name}:{ranges:l,viewer:a.viewer?.name}}catch(e){if(e instanceof Y.Ww)return he;throw this.handleException(e,void 0,r)}}async getBranches(e,t,i,n){const o=(0,X.UH)();try{const r='query getBranches(\n\t$owner: String!\n\t$repo: String!\n\t$branchQuery: String\n\t$cursor: String\n\t$limit: Int = 100\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(query: $branchQuery, refPrefix: "refs/heads/", first: $limit, after: $cursor, orderBy: { field: TAG_COMMIT_DATE, direction: DESC }) {\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\toid\n\t\t\t\t\tcommitUrl\n\t\t\t\t\t...on Commit {\n\t\t\t\t\t\tauthoredDate\n\t\t\t\t\t\tcommittedDate\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',s=await this.graphql(void 0,e,r,{owner:t,repo:i,branchQuery:n?.query,cursor:n?.cursor,limit:Math.min(100,n?.limit??100)},o);if(null==s)return ce;const a=s.repository?.refs;return null==a?ce:{paging:{cursor:a.pageInfo.endCursor,more:a.pageInfo.hasNextPage},values:a.nodes}}catch(e){if(e instanceof Y.Ww)return ce;throw this.handleException(e,void 0,o)}}async getCommit(e,t,i,n){const o=(0,X.UH)();try{const r=(await this.request(void 0,e,"GET /repos/{owner}/{repo}/commits/{ref}",{owner:t,repo:i,ref:n},o))?.data;if(null==r)return;const{commit:s}=r;return{oid:r.sha,parents:{nodes:r.parents.map((e=>({oid:e.sha})))},message:s.message,additions:r.stats?.additions,changedFiles:r.files?.length,deletions:r.stats?.deletions,author:{avatarUrl:r.author?.avatar_url??void 0,date:s.author?.date??(new Date).toString(),email:s.author?.email??void 0,name:s.author?.name??""},committer:{date:s.committer?.date??(new Date).toString(),email:s.committer?.email??void 0,name:s.committer?.name??""},files:r.files}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,o)}}async getCommitForFile(e,t,i,n,o){if(z.pk.isSha(n))return this.getCommit(e,t,i,n);const r=await this.getCommits(e,t,i,n,{limit:1,path:o});if(0===r.values.length)return;return{...await this.getCommit(e,t,i,r.values[0].oid)??r.values[0],viewer:r.viewer}}async getCommitBranches(e,t,i,n,o){const r=(0,X.UH)();try{const s='query getCommitBranches(\n\t$owner: String!\n\t$repo: String!\n\t$since: GitTimestamp!\n\t$until: GitTimestamp!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(first: 20, refPrefix: "refs/heads/", orderBy: { field: TAG_COMMIT_DATE, direction: DESC }) {\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\t... on Commit {\n\t\t\t\t\t\thistory(first: 3, since: $since until: $until) {\n\t\t\t\t\t\t\tnodes { oid }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',a=(await this.graphql(void 0,e,s,{owner:t,repo:i,since:o.toISOString(),until:o.toISOString()},r))?.repository?.refs?.nodes;if(null==a)return[];const l=[];for(const e of a)for(const t of e.target.history.nodes)if(t.oid===n){l.push(e.name);break}return l}catch(e){if(e instanceof Y.Ww)return[];throw this.handleException(e,void 0,r)}}async getCommitCount(e,t,i,n){const o=(0,X.UH)();try{const r="query getCommitCount(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tref(qualifiedName: $ref) {\n\t\t\ttarget {\n\t\t\t\t... on Commit {\n\t\t\t\t\thistory(first: 1) {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",s=(await this.graphql(void 0,e,r,{owner:t,repo:i,ref:n},o))?.repository?.ref?.target.history.totalCount;return s}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,o)}}async getCommitOnBranch(e,t,i,n,o,r){const s=(0,X.UH)();try{const a="query getCommitOnBranch(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$since: GitTimestamp!\n\t$until: GitTimestamp!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tref(qualifiedName: $ref) {\n\t\t\ttarget {\n\t\t\t\t... on Commit {\n\t\t\t\t\thistory(first: 3, since: $since until: $until) {\n\t\t\t\t\t\tnodes { oid }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",l=(await this.graphql(void 0,e,a,{owner:t,repo:i,ref:`refs/heads/${n}`,since:r.toISOString(),until:r.toISOString()},s))?.repository?.ref.target.history.nodes;if(null==l)return[];const c=[];for(const e of l)if(e.oid===o){c.push(n);break}return c}catch(e){if(e instanceof Y.Ww)return[];throw this.handleException(e,void 0,s)}}async getCommits(e,t,i,n,o){const r=(0,X.UH)();if(1===o?.limit&&null==o?.path)return this.getCommitsCoreSingle(e,t,i,n);try{const s="query getCommits(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String\n\t$author: CommitAuthor\n\t$after: String\n\t$before: String\n\t$limit: Int = 100\n\t$since: GitTimestamp\n\t$until: GitTimestamp\n) {\n\tviewer { name }\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: $limit, author: $author, path: $path, after: $after, before: $before, since: $since, until: $until) {\n\t\t\t\t\tpageInfo {\n\t\t\t\t\t\tstartCursor\n\t\t\t\t\t\tendCursor\n\t\t\t\t\t\thasNextPage\n\t\t\t\t\t\thasPreviousPage\n\t\t\t\t\t}\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t... on Commit {\n\t\t\t\t\t\t\toid\n\t\t\t\t\t\t\tmessage\n\t\t\t\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\tchangedFiles\n\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t\t\tdate\n\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommitter {\n\t\t\t\t\t\t\t\t date\n\t\t\t\t\t\t\t\t email\n\t\t\t\t\t\t\t\t name\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}";let a;if(null!=o?.authors)if(1===o.authors.length){const[e]=o.authors;a={id:e.id,emails:e.email?[e.email]:void 0}}else{const e=o.authors.filter((e=>e.email)).map((e=>e.email));a=e.length?{emails:e}:void 0}const l=await this.graphql(void 0,e,s,{owner:t,repo:i,ref:n,after:o?.after,before:o?.before,path:o?.path,author:a,limit:Math.min(100,o?.limit??100),since:"string"==typeof o?.since?o?.since:o?.since?.toISOString(),until:"string"==typeof o?.until?o?.until:o?.until?.toISOString()},r),c=l?.repository?.object?.history;return null==c?ce:{paging:null!=c.pageInfo.endCursor?{cursor:c.pageInfo.endCursor??void 0,more:c.pageInfo.hasNextPage}:void 0,values:c.nodes,viewer:l?.viewer.name}}catch(e){if(e instanceof Y.Ww)return ce;throw this.handleException(e,void 0,r)}}async getCommitsCoreSingle(e,t,i,n){const o=(0,X.UH)();try{const r="query getCommit(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\tviewer { name }\n\trepository(name: $repo owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t...on Commit {\n\t\t\t\toid\n\t\t\t\tparents(first: 3) { nodes { oid } }\n\t\t\t\tmessage\n\t\t\t\tadditions\n\t\t\t\tchangedFiles\n\t\t\t\tdeletions\n\t\t\t\tauthor {\n\t\t\t\t\tavatarUrl\n\t\t\t\t\tdate\n\t\t\t\t\temail\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t\tcommitter {\n\t\t\t\t\tdate\n\t\t\t\t\temail\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",s=await this.graphql(void 0,e,r,{owner:t,repo:i,ref:n},o);if(null==s)return ce;const a=s.repository?.object;return null!=a?{values:[a],viewer:s.viewer.name}:ce}catch(e){if(e instanceof Y.Ww)return ce;throw this.handleException(e,void 0,o)}}async getCommitRefs(e,t,i,n,o){const r=(0,X.UH)();try{const s="query getCommitRefs(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$after: String\n\t$before: String\n\t$first: Int\n\t$last: Int\n\t$path: String\n\t$since: GitTimestamp\n\t$until: GitTimestamp\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: $first, last: $last, path: $path, since: $since, until: $until, after: $after, before: $before) {\n\t\t\t\t\tpageInfo { startCursor, endCursor, hasNextPage, hasPreviousPage }\n\t\t\t\t\ttotalCount\n\t\t\t\t\tnodes { oid }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",a=(await this.graphql(void 0,e,s,{owner:t,repo:i,ref:n,path:o?.path,first:o?.first,last:o?.last,after:o?.after,before:o?.before,since:o?.since,until:o?.until},r))?.repository?.object?.history;if(null==a)return;return{pageInfo:a.pageInfo,totalCount:a.totalCount,values:a.nodes}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,r)}}async getNextCommitRefs(e,t,i,n,o,r){const s=await this.getCommitDate(e,t,i,r);if(null==s)return[];let a=await this.getCommitRefs(e,t,i,n,{path:o,first:1,since:s});if(null==a)return[];const l=`${a.pageInfo.startCursor.split(" ",1)[0]} ${a.totalCount}`;let c;if([,c]=l.split(" ",2),c=Math.min(parseInt(c,10),5),a=await this.getCommitRefs(e,t,i,n,{path:o,last:c,before:l}),null==a)return[];const h=[];for(const{oid:e}of a.values){if(e===r)break;h.push(e)}return h.reverse()}async getCommitDate(e,t,i,n){const o=(0,X.UH)();try{const r="query getCommitDate(\n\t$owner: String!\n\t$repo: String!\n\t$sha: GitObjectID!\n) {\n\trepository(name: $repo, owner: $owner) {\n\t\tobject(oid: $sha) {\n\t\t\t... on Commit { committer { date } }\n\t\t}\n\t}\n}",s=(await this.graphql(void 0,e,r,{owner:t,repo:i,sha:n},o))?.repository?.object?.committer.date;return s}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,o)}}async getContributors(e,t,i){const n=(0,X.UH)();try{const o=await this.request(void 0,e,"GET /repos/{owner}/{repo}/contributors",{owner:t,repo:i,per_page:100},n),r=o?.data;return null==r?[]:o.data}catch(e){if(e instanceof Y.Ww)return[];throw this.handleException(e,void 0,n)}}async getDefaultBranchName(e,t,i){const n=(0,X.UH)();try{const o="query getDefaultBranch(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tdefaultBranchRef {\n\t\t\tname\n\t\t}\n\t}\n}",r=await this.graphql(void 0,e,o,{owner:t,repo:i},n);if(null==r)return;return r.repository?.defaultBranchRef?.name??void 0}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async getCurrentUser(e,t,i){const n=(0,X.UH)();try{const o="query getCurrentUser(\n\t$owner: String!\n\t$repo: String!\n) {\n\tviewer { name, email, login, id }\n\trepository(owner: $owner, name: $repo) { viewerPermission }\n}",r=await this.graphql(void 0,e,o,{owner:t,repo:i},n);if(null==r)return;return{name:r.viewer?.name,email:r.viewer?.email,username:r.viewer?.login,id:r.viewer?.id}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async getRepositoryVisibility(e,t,i){const n=(0,X.UH)();try{const o="query getRepositoryVisibility(\n\t$owner: String!\n\t$repo: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tvisibility\n\t}\n}",r=await this.graphql(void 0,e,o,{owner:t,repo:i},n);if(null==r?.repository?.visibility)return;return"PUBLIC"===r.repository.visibility?Q.q4.Public:Q.q4.Private}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async getTags(e,t,i,n){const o=(0,X.UH)();try{const r='query getTags(\n\t$owner: String!\n\t$repo: String!\n\t$tagQuery: String\n\t$cursor: String\n\t$limit: Int = 100\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\trefs(query: $tagQuery, refPrefix: "refs/tags/", first: $limit, after: $cursor, orderBy: { field: TAG_COMMIT_DATE, direction: DESC }) {\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\thasNextPage\n\t\t\t}\n\t\t\tnodes {\n\t\t\t\tname\n\t\t\t\ttarget {\n\t\t\t\t\toid\n\t\t\t\t\tcommitUrl\n\t\t\t\t\t...on Commit {\n\t\t\t\t\t\tauthoredDate\n\t\t\t\t\t\tcommittedDate\n\t\t\t\t\t\tmessage\n\t\t\t\t\t}\n\t\t\t\t\t...on Tag {\n\t\t\t\t\t\tmessage\n\t\t\t\t\t\ttagger { date }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}',s=await this.graphql(void 0,e,r,{owner:t,repo:i,tagQuery:n?.query,cursor:n?.cursor,limit:Math.min(100,n?.limit??100)},o);if(null==s)return ce;const a=s.repository?.refs;return null==a?ce:{paging:{cursor:a.pageInfo.endCursor,more:a.pageInfo.hasNextPage},values:a.nodes}}catch(e){if(e instanceof Y.Ww)return ce;throw this.handleException(e,void 0,o)}}async resolveReference(e,t,i,n,o){const r=(0,X.UH)();try{if(!o){const o="query resolveReference(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\toid\n\t\t}\n\t}\n}";return(await this.graphql(void 0,e,o,{owner:t,repo:i,ref:n},r))?.repository?.object?.oid??void 0}const s="query resolveReference(\n\t$owner: String!\n\t$repo: String!\n\t$ref: String!\n\t$path: String!\n) {\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $ref) {\n\t\t\t... on Commit {\n\t\t\t\thistory(first: 1, path: $path) {\n\t\t\t\t\tnodes { oid }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}";return(await this.graphql(void 0,e,s,{owner:t,repo:i,ref:n,path:o},r))?.repository?.object?.history.nodes?.[0]?.oid??void 0}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,r)}}async searchCommits(e,t,i){const n=(0,X.UH)(),o=Math.min(100,i?.limit??100);let r,s,a;null!=i?.cursor?([r,s,a]=i.cursor.split(" ",3),r=parseInt(r,10),s=parseInt(s,10),a=parseInt(a,10)):(r=1,s=o,a=0);try{const o=(await this.request(void 0,e,"GET /search/commits",{q:t,sort:i?.sort,order:i?.order,per_page:s,page:r},n))?.data;if(null==o||0===o.items.length)return;const l=o.items.map((e=>({oid:e.sha,parents:{nodes:e.parents.map((e=>({oid:e.sha})))},message:e.commit.message,author:{avatarUrl:e.author?.avatar_url??void 0,date:e.commit.author?.date??e.commit.author?.date??(new Date).toString(),email:e.author?.email??e.commit.author?.email??void 0,name:e.author?.name??e.commit.author?.name??""},committer:{date:e.commit.committer?.date??e.committer?.date??(new Date).toString(),email:e.committer?.email??e.commit.committer?.email??void 0,name:e.committer?.name??e.commit.committer?.name??""}}))),c=a+o.items.length,h=o.incomplete_results||o.total_count>c;return{pageInfo:{startCursor:`${r} ${s} ${a}`,endCursor:h?`${r+1} ${s} ${c}`:void 0,hasPreviousPage:o.total_count>0&&r>1,hasNextPage:h},totalCount:o.total_count,values:l}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async searchCommitShas(e,t,i){const n=(0,X.UH)(),o=Math.min(100,i?.limit??100);let r,s,a;null!=i?.cursor?([r,s,a]=i.cursor.split(" ",3),r=parseInt(r,10),s=parseInt(s,10),a=parseInt(a,10)):(r=1,s=o,a=0);try{const o=(await this.request(void 0,e,"GET /search/commits",{q:t,sort:i?.sort,order:i?.order,per_page:s,page:r},n))?.data;if(null==o||0===o.items.length)return;const l=a+o.items.length,c=o.incomplete_results||o.total_count>l;return{pageInfo:{startCursor:`${r} ${s} ${a}`,endCursor:c?`${r+1} ${s} ${l}`:void 0,hasPreviousPage:o.total_count>0&&r>1,hasNextPage:c},totalCount:o.total_count,values:o.items.map((e=>({sha:e.sha,authorDate:new Date(e.commit.author.date).getTime(),committerDate:new Date(e.commit.committer?.date??e.commit.author.date).getTime()})))}}catch(e){if(e instanceof Y.Ww)return;throw this.handleException(e,void 0,n)}}async getEnterpriseVersion(e,t,i){let n=this._enterpriseVersions.get(t);if(null!=n)return n;if(null===n)return;const o=(0,X.UH)();try{const r=(await this.request(e,t,"GET /meta",i,o))?.data?.installed_version;n=r?(0,oe.mL)(r):null}catch(e){n=null}return this._enterpriseVersions.set(t,n),n??void 0}octokit(e,t){let i=this._octokits.get(e);if(null==i){let n;if(H.$L){let t=function(e,t){if(null!=t.headers){const{"user-agent":e,...i}=t.headers;e&&(t.headers=i)}return(0,V.he)(e,t)};n=Octokit.defaults({auth:`token ${e}`,request:{fetch:t}})}else n=Octokit.defaults({auth:`token ${e}`,request:{agent:this.proxyAgent}});i=new n(t),this._octokits.set(e,i),(J.Yd.logLevel===j.in.Debug||J.Yd.isDebugging)&&i.hook.wrap("request",(async(e,t)=>{const i=new ie.u(`[GITHUB] ${t.method} ${t.url}`,{log:!1});try{return await e(t)}finally{let e;try{if("string"==typeof t.query){e=` ${/(^[^({\n]+)/.exec(t.query)?.[1].trim()??t.query}`}}catch{}i.stop({message:e})}}))}return i}async graphql(e,t,i,n,o){try{return await(0,V.a_)(e?.getIgnoreSSLErrors()??!1,(()=>this.octokit(t).graphql(i,n)))}catch(i){if(i instanceof GraphqlResponseError){switch(i.errors?.[0]?.type){case"NOT_FOUND":throw new Y.Ww(i);case"FORBIDDEN":throw new Y._7("github",Y.Jx.Forbidden,i);case"RATE_LIMITED":{let e;const n=i.headers?.["x-ratelimit-reset"];throw null!=n&&(e=parseInt(n,10),Number.isNaN(e)&&(e=void 0)),new Y.yx(i,t,e)}}J.Yd.isDebugging&&G.window.showErrorMessage(`GitHub request failed: ${i.errors?.[0]?.message??i.message}`)}else i instanceof RequestError?this.handleRequestError(e,t,i,o):J.Yd.isDebugging&&G.window.showErrorMessage(`GitHub request failed: ${i.message}`);throw i}}async request(e,t,i,n,o){try{return await(0,V.a_)(e?.getIgnoreSSLErrors()??!1,(()=>this.octokit(t).request(i,n)))}catch(i){throw i instanceof RequestError?this.handleRequestError(e,t,i,o):J.Yd.isDebugging&&G.window.showErrorMessage(`GitHub request failed: ${i.message}`),i}}handleRequestError(e,t,i,n){switch(i.status){case 404:case 410:case 422:throw new Y.Ww(i);case 401:throw new Y._7("github",Y.Jx.Unauthorized,i);case 403:if(i.message.includes("rate limit")){let e;const n=i.response?.headers?.["x-ratelimit-reset"];throw null!=n&&(e=parseInt(n,10),Number.isNaN(e)&&(e=void 0)),new Y.yx(i,t,e)}throw new Y._7("github",Y.Jx.Forbidden,i);case 500:return J.Yd.error(i,n),void(null!=i.response&&(e?.trackRequestException(),(0,Z.vF)(`${e?.name??"GitHub"} failed to respond and might be experiencing issues.${e?.custom?"":" Please visit the [GitHub status page](https://githubstatus.com) for more information."}`)));case 502:if(J.Yd.error(i,n),i.message.includes("timeout"))return e?.trackRequestException(),void(0,Z.s$)(e?.name??"GitHub");break;default:if(i.status>=400&&i.status<500)throw new Y.Bn(i)}J.Yd.error(i,n),J.Yd.isDebugging&&G.window.showErrorMessage(`GitHub request failed: ${i.response?.errors?.[0]?.message??i.message}`)}handleException(e,t,i){return J.Yd.error(e,i),e instanceof Y._7&&this.showAuthenticationErrorMessage(e,t),e}async showAuthenticationErrorMessage(e,t){if(e.reason===Y.Jx.Unauthorized||e.reason===Y.Jx.Forbidden){const i="Reauthenticate";await G.window.showErrorMessage(`${e.message}. Would you like to try reauthenticating${e.reason===Y.Jx.Forbidden?" to provide additional access":""}?`,i)===i&&(await(t?.reauthenticate()),this._onDidReauthenticate.fire())}else G.window.showErrorMessage(e.message)}async createEnterpriseAvatarUrl(e,t,i,n,o){o=o??16;const r=await this.getEnterpriseVersion(e,t,{baseUrl:i});if((0,oe.L5)(r,">= 3.0.0")){let r;const s=(0,K.at)(n);null!=s&&G.Uri.parse(i).authority===s.authority&&(null!=s.userId?r=`${i}/enterprise/avatars/u/${encodeURIComponent(s.userId)}?s=${o}`:null!=s.login&&(r=`${i}/enterprise/avatars/${encodeURIComponent(s.login)}?s=${o}`)),null==r&&(r=`${i}/enterprise/avatars/u/e?email=${encodeURIComponent(n)}&s=${o}`);const a=await(0,V.a_)(e?.getIgnoreSSLErrors()??!1,(()=>(0,V.he)(r,{method:"GET",headers:{Authorization:`Bearer ${t}`}})));if(a.ok){const e=(0,ne.US)(new Uint8Array(await a.arrayBuffer()));return`data:${a.headers.get("content-type")};base64,${e}`}}return`https://avatars.githubusercontent.com/u/e?email=${encodeURIComponent(n)}&s=${o}`}async searchMyPullRequests(e,t,i){const n=(0,X.UH)();try{let o=function(t,i){return{pullRequest:re.GitHubPullRequest.fromDetailed(t,e),reasons:i?[i]:[]}};const r=`query searchPullRequests(\n\t$authored: String!\n\t$assigned: String!\n\t$reviewRequested: String!\n\t$mentioned: String!\n) {\n\tauthored: search(first: 100, query: $authored, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n\tassigned: search(first: 100, query: $assigned, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n\treviewRequested: search(first: 100, query: $reviewRequested, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n\tmentioned: search(first: 100, query: $mentioned, type: ISSUE) {\n\t\tnodes {\n\t\t\t...on PullRequest {\n\t\t\t\t${pe}\n\t\t\t}\n\t\t}\n\t}\n}`;let s=i?.search?.trim()??"";if(i?.user&&(s+=` user:${i.user}`),null!=i?.repos&&i.repos.length>0){const e="  repo:";s+=`${e}${i.repos.join(e)}`}const a="is:pr is:open archived:false",l=await this.graphql(void 0,t,r,{authored:`${s} ${a} author:@me`.trim(),assigned:`${s} ${a} assignee:@me`.trim(),reviewRequested:`${s} ${a} review-requested:@me`.trim(),mentioned:`${s} ${a} mentions:@me`.trim()},n);if(void 0===l)return[];return de([...l.assigned.nodes.map((e=>o(e,"assigned"))),...l.reviewRequested.nodes.map((e=>o(e,"review-requested"))),...l.mentioned.nodes.map((e=>o(e,"mentioned"))),...l.authored.nodes.map((e=>o(e,"authored")))],(e=>e.pullRequest.url))}catch(e){throw this.handleException(e,void 0,n)}}async searchMyIssues(e,t,i){const n=(0,X.UH)(),o=`query searchIssues(\n\t\t\t\t$authored: String!\n\t\t\t\t$assigned: String!\n\t\t\t\t$mentioned: String!\n\t\t\t) {\n\t\t\t\tauthored: search(first: 100, query: $authored, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${me}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassigned: search(first: 100, query: $assigned, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${me}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmentioned: search(first: 100, query: $mentioned, type: ISSUE) {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\t${me}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}`;let r=i?.search?.trim()??"";if(i?.user&&(r+=` user:${i.user}`),null!=i?.repos&&i.repos.length>0){const e="  repo:";r+=`${e}${i.repos.join(e)}`}const s="type:issue is:open archived:false";try{let i=function(t,i){return{issue:re.GitHubDetailedIssue.from(t,e),reasons:i?[i]:[]}};const a=await this.graphql(void 0,t,o,{authored:`${r} ${s} author:@me`.trim(),assigned:`${r} ${s} assignee:@me`.trim(),mentioned:`${r} ${s} mentions:@me`.trim()},n);if(void 0===a)return[];return de([...a.assigned.nodes.map((e=>i(e,"assigned"))),...a.mentioned.nodes.map((e=>i(e,"mentioned"))),...a.authored.nodes.map((e=>i(e,"authored")))],(e=>e.issue.url))}catch(e){throw this.handleException(e,void 0,n)}}}function ue(e){return null==e?.baseUrl||"https://api.github.com"===e.baseUrl}function de(e,t){return(0,ee.uw)(e,t,((e,t)=>(0!==t.reasons.length&&e.reasons.push(...t.reasons),e)))}le([(0,te.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getAccountForCommit",1),le([(0,te.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getAccountForEmail",1),le([(0,te.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getDefaultBranch",1),le([(0,te.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getIssueOrPullRequest",1),le([(0,te.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getPullRequestForBranch",1),le([(0,te.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"getPullRequestForCommit",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getBlame",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getBranches",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommit",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitForFile",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitBranches",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitCount",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitOnBranch",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommits",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCommitRefs",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getNextCommitRefs",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getContributors",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getDefaultBranchName",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getCurrentUser",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getRepositoryVisibility",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getTags",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"resolveReference",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchCommits",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchCommitShas",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"getEnterpriseVersion",1),le([(0,te.fF)({args:{0:e=>e.name,1:"<token>"}})],GitHubApi.prototype,"searchMyPullRequests",1),le([(0,te.fF)({args:{0:"<token>"}})],GitHubApi.prototype,"searchMyIssues",1);const pe="\nassignees(first: 10) {\n  nodes {\n\tlogin\n\tavatarUrl\n\turl\n  }\n}\nauthor {\n  login\n  avatarUrl\n  url\n}\nbaseRefName\nbaseRefOid\nbaseRepository {\n  name\n  owner {\n\tlogin\n  }\n}\nchecksUrl\nisDraft\nisCrossRepository\nisReadByViewer\nheadRefName\nheadRefOid\nheadRepository {\n  name\n  owner {\n\tlogin\n  }\n}\npermalink\nnumber\ntitle\nstate\nadditions\ndeletions\nupdatedAt\nclosedAt\nmergeable\nmergedAt\nmergedBy {\n  login\n}\nrepository {\n  isFork\n  owner {\n\tlogin\n  }\n}\nrepository {\n  isFork\n  owner {\n\tlogin\n  }\n}\nreviewDecision\nreviewRequests(first: 10) {\n  nodes {\n\tasCodeOwner\n\tid\n\trequestedReviewer {\n\t  ... on User {\n\t\tlogin\n\t\tavatarUrl\n\t\turl\n\t  }\n\t}\n  }\n}\ntotalCommentsCount\n",me="\n... on Issue {\n\tassignees(first: 100) {\n\t\tnodes {\n\t\t\tlogin\n\t\t\turl\n\t\t\tavatarUrl\n\t\t}\n\t}\n\tauthor {\n\t\tlogin\n\t\tavatarUrl\n\t\turl\n\t}\n\tcomments {\n\t  totalCount\n\t}\n\tnumber\n\ttitle\n\turl\n\tcreatedAt\n\tclosedAt\n\tclosed\n\tupdatedAt\n\tlabels(first: 20) {\n\t\tnodes {\n\t\t\tcolor\n\t\t\tname\n\t\t}\n\t}\n\treactions(content: THUMBS_UP) {\n\t  totalCount\n\t}\n\trepository {\n\t\tname\n\t\towner {\n\t\t\tlogin\n\t\t}\n\t}\n}\n"},3878:(e,t,i)=>{i.r(t),i.d(t,{GitHubDetailedIssue:()=>o,GitHubPullRequest:()=>n,fromCommitFileStatus:()=>l});var n,o,r=i(7881),s=i(8452),a=i(4092);function l(e){switch(e){case"added":return r.NV.Added;case"changed":case"modified":return r.NV.Modified;case"removed":return r.NV.Deleted;case"renamed":return r.NV.Renamed;case"copied":return r.NV.Copied}}(e=>{function t(e){return"MERGED"===e?a.o0.Merged:"CLOSED"===e?a.o0.Closed:a.o0.Open}function i(e){switch(e){case"APPROVED":return a.pD.Approved;case"CHANGES_REQUESTED":return a.pD.ChangesRequested;case"REVIEW_REQUIRED":return a.pD.ReviewRequired}}function n(e){switch(e){case"MERGEABLE":return a.Cz.Mergeable;case"CONFLICTING":return a.Cz.Conflicting;case"UNKNOWN":return a.Cz.Unknown}}e.from=function(e,i){return new a.i7(i,{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},String(e.number),e.title,e.permalink,t(e.state),new Date(e.updatedAt),null==e.closedAt?void 0:new Date(e.closedAt),null==e.mergedAt?void 0:new Date(e.mergedAt))},e.fromState=t,e.toState=function(e){return e===a.o0.Merged?"MERGED":e===a.o0.Closed?"CLOSED":"OPEN"},e.fromReviewDecision=i,e.toReviewDecision=function(e){switch(e){case a.pD.Approved:return"APPROVED";case a.pD.ChangesRequested:return"CHANGES_REQUESTED";case a.pD.ReviewRequired:return"REVIEW_REQUIRED"}},e.fromMergeableState=n,e.toMergeableState=function(e){switch(e){case a.Cz.Mergeable:return"MERGEABLE";case a.Cz.Conflicting:return"CONFLICTING";case a.Cz.Unknown:return"UNKNOWN"}},e.fromDetailed=function(e,o){return new a.i7(o,{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},String(e.number),e.title,e.permalink,t(e.state),new Date(e.updatedAt),null==e.closedAt?void 0:new Date(e.closedAt),null==e.mergedAt?void 0:new Date(e.mergedAt),n(e.mergeable),{head:{exists:null!=e.headRepository,owner:e.headRepository?.owner.login,repo:e.baseRepository?.name,sha:e.headRefOid,branch:e.headRefName},base:{exists:null!=e.baseRepository,owner:e.baseRepository?.owner.login,repo:e.baseRepository?.name,sha:e.baseRefOid,branch:e.baseRefName},isCrossRepository:e.isCrossRepository},e.isDraft,e.additions,e.deletions,e.totalCommentsCount,i(e.reviewDecision),e.reviewRequests.nodes.map((e=>({isCodeOwner:e.asCodeOwner,reviewer:{name:e.requestedReviewer.login,avatarUrl:e.requestedReviewer.avatarUrl,url:e.requestedReviewer.url}}))),e.assignees.nodes.map((e=>({name:e.login,avatarUrl:e.avatarUrl,url:e.url}))))}})(n||(n={})),(o||(o={})).from=function(e,t){return new s.$9({id:t.id,name:t.name,domain:t.domain,icon:t.icon},String(e.number),e.title,e.url,new Date(e.createdAt),e.closed,new Date(e.updatedAt),{name:e.author.login,avatarUrl:e.author.avatarUrl,url:e.author.url},{owner:e.repository.owner.login,repo:e.repository.name},e.assignees.nodes.map((e=>({name:e.name,avatarUrl:e.avatarUrl,url:e.url}))),null==e.closedAt?void 0:new Date(e.closedAt),null==e.labels?.nodes?void 0:e.labels.nodes.map((e=>({color:e.color,name:e.name}))),e.comments?.totalCount,e.reactions?.totalCount)}},1848:(e,t,i)=>{i.r(t),i.d(t,{GitLabApi:()=>GitLabApi});var n=i(9496),o=i(9827),r=i(429),s=i(3113),a=i(5255),l=i(4575),c=i(8452),h=i(4092),u=i(1277),d=i(6446),p=i(7925),m=i(4241),g=i(6398),f=i(3620),w=i(6630),_=Object.defineProperty,v=Object.getOwnPropertyDescriptor,y=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?v(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&_(t,i,r),r};class GitLabApi{constructor(e){this._projectIds=new Map,this._proxyAgents=new Map,this._disposable=n.Disposable.from(s.DN.onDidChange((e=>{(s.DN.changed(e,"proxy")||s.DN.changed(e,"remotes"))&&(this._projectIds.clear(),this._proxyAgents.clear())})),s.DN.onDidChangeAny((e=>{(e.affectsConfiguration("http.proxy")||e.affectsConfiguration("http.proxyStrictSSL"))&&(this._projectIds.clear(),this._proxyAgents.clear())})))}dispose(){this._disposable?.dispose()}getProxyAgent(e){if(r.$L)return;let t=this._proxyAgents.get(e.id);if(void 0===t){const i=e.getIgnoreSSLErrors();t=(0,o.Nx)(!0!==i&&"force"!==i&&void 0),this._proxyAgents.set(e.id,t??null)}return t??void 0}async getAccountForCommit(e,t,i,o,r,s){const a=(0,d.UH)(),c=await this.getProjectId(e,t,i,o,s?.baseUrl);if(c)try{const i=await this.request(e,t,s?.baseUrl,`v4/projects/${c}/repository/commits/${r}?stats=false`,{method:"GET"},a);let o;const l=await this.findUser(e,t,i.author_name,s);for(const e of l)if(e.name===i.author_name||e.publicEmail&&e.publicEmail===i.author_email){if(o=e,"active"===e.state)break}else((0,f.qq)(e.name,i.author_name)||e.publicEmail&&(0,f.qq)(e.publicEmail,i.author_email))&&(o=e);if(null==o)return;return o.avatarUrl&&!/^([a-zA-Z][\w+.-]+):/.test(o.avatarUrl)&&(o.avatarUrl=n.Uri.joinPath(n.Uri.parse(o.webUrl),"..",o.avatarUrl).toString()),{provider:e,name:o.name||void 0,email:i.author_email||void 0,avatarUrl:o.avatarUrl||void 0}}catch(t){if(t instanceof l.Ww)return;throw this.handleException(t,e,a)}}async getAccountForEmail(e,t,i,n,o,r){const s=(0,d.UH)();try{const[i]=await this.findUser(e,t,o,r);if(null==i)return;return{provider:e,name:i.name||void 0,email:i.publicEmail||void 0,avatarUrl:i.avatarUrl||void 0}}catch(t){if(t instanceof l.Ww)return;throw this.handleException(t,e,s)}}async getDefaultBranch(e,t,i,n,o){const r=(0,d.UH)();try{const s="query getDefaultBranch(\n\t$fullPath: ID!\n) {\n\tproject(fullPath: $fullPath) {\n\t\trepository {\n\t\t\trootRef\n\t\t}\n}",a=(await this.graphql(e,t,o?.baseUrl,s,{fullPath:`${i}/${n}`},r))?.data?.project?.repository?.rootRef??void 0;if(null==a)return;return{provider:e,name:a}}catch(t){if(t instanceof l.Ww)return;throw this.handleException(t,e,r)}}async getIssueOrPullRequest(e,t,i,n,o,r){const s=(0,d.UH)();try{const a="query getIssueOrMergeRequest(\n\t$fullPath: ID!\n\t$iid: String!\n) {\n\tproject(fullPath: $fullPath) {\n\t\tmergeRequest(iid: $iid) {\n\t\t\tauthor {\n\t\t\t\tname\n\t\t\t\tavatarUrl\n\t\t\t\twebUrl\n\t\t\t}\n\t\t\tiid\n\t\t\ttitle\n\t\t\tdescription\n\t\t\tstate\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tmergedAt\n\t\t\twebUrl\n\t\t}\n\t\tissue(iid: $iid) {\n\t\t\tauthor {\n\t\t\t\tname\n\t\t\t\tavatarUrl\n\t\t\t\twebUrl\n\t\t\t}\n\t\t\tiid\n\t\t\ttitle\n\t\t\tdescription\n\t\t\tstate\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tclosedAt\n\t\t\twebUrl\n\t\t}\n\t}\n}",l=await this.graphql(e,t,r?.baseUrl,a,{fullPath:`${i}/${n}`,iid:String(o)},s);if(null!=l?.data?.project?.issue){const t=l.data.project.issue;return{provider:e,type:c.mX.Issue,id:t.iid,date:new Date(t.createdAt),title:t.title,closed:"closed"===t.state,closedDate:null==t.closedAt?void 0:new Date(t.closedAt),url:t.webUrl}}if(null!=l?.data?.project?.mergeRequest){const t=l.data.project.mergeRequest;return{provider:e,type:c.mX.PullRequest,id:t.iid,date:new Date(t.createdAt),title:t.title,closed:"closed"===t.state,closedDate:"closed"===t.state?new Date(t.updatedAt):void 0,url:t.webUrl}}return}catch(t){if(t instanceof l.Ww)return;throw this.handleException(t,e,s)}}async getPullRequestForBranch(e,t,i,n,o,r){const s=(0,d.UH)();try{const a="\n\t\t\tnodes {\n\t\t\t\tiid\n\t\t\t\tauthor {\n\t\t\t\t\tname\n\t\t\t\t\tavatarUrl\n\t\t\t\t\twebUrl\n\t\t\t\t}\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tstate\n\t\t\t\tcreatedAt\n\t\t\t\tupdatedAt\n\t\t\t\tmergedAt\n\t\t\t\twebUrl\n\t\t\t}",l=`query getMergeRequestForBranch(\n\t$fullPath: ID!\n\t$branches: [String!]\n) {\n\tproject(fullPath: $fullPath) {\n\t\t${null==r?.include?`mergeRequests(sourceBranches: $branches sort: UPDATED_DESC first: 1) {\n\t\t\t${a}\n\t\t}`:""}\n\t\t${r?.include?.includes(w.GitLabMergeRequestState.OPEN)?`opened: mergeRequests(sourceBranches: $branches state: opened sort: UPDATED_DESC first: 1) {\n\t\t\t${a}\n\t\t}`:""}\n\t\t${r?.include?.includes(w.GitLabMergeRequestState.MERGED)?`merged: mergeRequests(sourceBranches: $branches state: merged sort: UPDATED_DESC first: 1) {\n\t\t\t${a}\n\t\t}`:""}\n\t\t${r?.include?.includes(w.GitLabMergeRequestState.CLOSED)?`closed: mergeRequests(sourceBranches: $branches state: closed sort: UPDATED_DESC first: 1) {\n\t\t\t${a}\n\t\t}`:""}\n\t}\n}`,c=await this.graphql(e,t,r?.baseUrl,l,{fullPath:`${i}/${n}`,branches:[o],state:r?.include},s);let u;if(null==r?.include)u=c?.data?.project?.mergeRequests?.nodes?.[0];else for(const e of r.include){let t;e===w.GitLabMergeRequestState.OPEN?t=c?.data?.project?.opened?.nodes?.[0]:e===w.GitLabMergeRequestState.MERGED?t=c?.data?.project?.merged?.nodes?.[0]:e===w.GitLabMergeRequestState.CLOSED&&(t=c?.data?.project?.closed?.nodes?.[0]),null!=t&&(null==u||new Date(t.updatedAt)>new Date(u.updatedAt))&&(u=t)}if(null==u)return;return new h.i7(e,{name:u.author?.name??"Unknown",avatarUrl:u.author?.avatarUrl??"",url:u.author?.webUrl??""},String(u.iid),u.title,u.webUrl,w.GitLabMergeRequest.fromState(u.state),new Date(u.updatedAt),u.state!==w.GitLabMergeRequestState.CLOSED?void 0:new Date(u.updatedAt),null==u.mergedAt?void 0:new Date(u.mergedAt))}catch(t){if(t instanceof l.Ww)return;throw this.handleException(t,e,s)}}async getPullRequestForCommit(e,t,i,n,o,r){const s=(0,d.UH)(),a=await this.getProjectId(e,t,i,n,r?.baseUrl);if(a)try{const i=await this.request(e,t,r?.baseUrl,`v4/projects/${a}/repository/commits/${o}/merge_requests`,{method:"GET"},s);if(null==i||0===i.length)return;return i.length>1&&i.sort(((e,t)=>(e.state===w.GitLabMergeRequestState.OPEN?-1:1)-(t.state===w.GitLabMergeRequestState.OPEN?-1:1)||new Date(t.updated_at).getTime()-new Date(e.updated_at).getTime())),w.GitLabMergeRequestREST.from(i[0],e)}catch(t){if(t instanceof l.Ww)return;throw this.handleException(t,e,s)}}async findUser(e,t,i,n){const o=(0,d.UH)();try{const r="query findUser(\n$search: String!\n) {\n\tusers(search: $search) {\n\t\tnodes {\n\t\t\tid\n\t\t\tname\n\t\t\tusername,\n\t\t\tpublicEmail,\n\t\t\tstate\n\t\t\tavatarUrl\n\t\t\twebUrl\n\t\t}\n\t}\n}",s=(await this.graphql(e,t,n?.baseUrl,r,{search:i},o))?.data?.users?.nodes;if(null==s||0===s.length)return[];const a=[];for(const e of s){const t=/gid:\/\/gitlab\/User\/([0-9]+)\b/.exec(e.id);null!=t&&a.push({id:parseInt(t[1],10),name:e.name,username:e.username,publicEmail:e.publicEmail||void 0,state:e.state,avatarUrl:e.avatarUrl,webUrl:e.webUrl})}return a}catch(t){return t instanceof l.Ww||this.handleException(t,e,o),[]}}getProjectId(e,t,i,n,o){const r=`${t}|${i}/${n}`;let s=this._projectIds.get(r);return null==s&&(s=this.getProjectIdCore(e,t,i,n,o),this._projectIds.set(r,s)),s}async getProjectIdCore(e,t,i,n,o){const r=(0,d.UH)();try{const s="query getProjectId(\n\t$fullPath: ID!\n) {\n\tproject(fullPath: $fullPath) {\n\t\tid\n\t}\n}",a=(await this.graphql(e,t,o,s,{fullPath:`${i}/${n}`},r))?.data?.project?.id;if(null==a)return;const l=/gid:\/\/gitlab\/Project\/([0-9]+)\b/.exec(a);if(null==l)return;const c=l[1];return null!=r&&(r.exitDetails=`• projectId=${c}`),c}catch(t){if(t instanceof l.Ww)return;return void this.handleException(t,e,r)}}async graphql(e,t,i,r,s,c){let h;try{const n=u.Yd.logLevel===a.in.Debug||u.Yd.isDebugging?new g.u(`[GITLAB] POST ${i}`,{log:!1}):void 0,c=this.getProxyAgent(e);try{if(h=await(0,o.a_)(e.getIgnoreSSLErrors(),(()=>(0,o.he)(`${i??"https://gitlab.com/api"}/graphql`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},agent:c,body:JSON.stringify({query:r,variables:s})}))),h.ok){const e=await h.json();if("errors"in e)throw new l.Xq("GitLab",h,e.errors);return e}throw new l.Xq("GitLab",h)}finally{const e=` ${/(^[^({\n]+)/.exec(r)?.[1].trim()??r}`;n?.stop({message:e})}}catch(i){throw i instanceof l.Xq?this.handleRequestError(e,t,i,c):u.Yd.isDebugging&&n.window.showErrorMessage(`GitLab request failed: ${i.message}`),i}}async request(e,t,i,r,s,c){const h=`${i??"https://gitlab.com/api"}/${r}`;let d;try{const i=u.Yd.logLevel===a.in.Debug||u.Yd.isDebugging?new g.u(`[GITLAB] ${s?.method??"GET"} ${h}`,{log:!1}):void 0,n=this.getProxyAgent(e);try{if(d=await(0,o.a_)(e.getIgnoreSSLErrors(),(()=>(0,o.he)(h,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},agent:n,...s}))),d.ok){return await d.json()}throw new l.Xq("GitLab",d)}finally{i?.stop()}}catch(i){throw i instanceof l.Xq?this.handleRequestError(e,t,i,c):u.Yd.isDebugging&&n.window.showErrorMessage(`GitLab request failed: ${i.message}`),i}}handleRequestError(e,t,i,o){switch(i.status){case 404:case 410:case 422:throw new l.Ww(i);case 401:throw new l._7("gitlab",l.Jx.Unauthorized,i);case 403:if(i.message.includes("rate limit exceeded")){let e;const n=i.response?.headers?.get("x-ratelimit-reset");throw null!=n&&(e=parseInt(n,10),Number.isNaN(e)&&(e=void 0)),new l.yx(i,t,e)}throw new l._7("gitlab",l.Jx.Forbidden,i);case 500:return u.Yd.error(i,o),void(null!=i.response&&(e?.trackRequestException(),(0,p.vF)(`${e?.name??"GitLab"} failed to respond and might be experiencing issues.${e?.custom?"":" Please visit the [GitLab status page](https://status.gitlab.com) for more information."}`)));case 502:if(u.Yd.error(i,o),i.message.includes("timeout"))return e?.trackRequestException(),void(0,p.s$)(e?.name??"GitLab");break;default:if(i.status>=400&&i.status<500)throw new l.Bn(i)}u.Yd.error(i,o),u.Yd.isDebugging&&n.window.showErrorMessage(`GitLab request failed: ${i.response?.errors?.[0]?.message??i.message}`)}handleException(e,t,i){return u.Yd.error(e,i),e instanceof l._7&&this.showAuthenticationErrorMessage(e,t),e}async showAuthenticationErrorMessage(e,t){if(e.reason===l.Jx.Unauthorized||e.reason===l.Jx.Forbidden){const i="Reauthenticate";await n.window.showErrorMessage(`${e.message}. Would you like to try reauthenticating${e.reason===l.Jx.Forbidden?" to provide additional access":""}?`,i)===i&&await t.reauthenticate()}else n.window.showErrorMessage(e.message)}}y([(0,m.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getAccountForCommit",1),y([(0,m.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getAccountForEmail",1),y([(0,m.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getDefaultBranch",1),y([(0,m.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getIssueOrPullRequest",1),y([(0,m.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getPullRequestForBranch",1),y([(0,m.fF)({args:{0:e=>e.name,1:"<token>"}})],GitLabApi.prototype,"getPullRequestForCommit",1)},6630:(e,t,i)=>{i.r(t),i.d(t,{GitLabMergeRequest:()=>n,GitLabMergeRequestREST:()=>r,GitLabMergeRequestState:()=>a});var n,o,r,s=i(4092),a=(e=>(e.OPEN="opened",e.CLOSED="closed",e.MERGED="merged",e.LOCKED="locked",e))(a||{});(o=n||(n={})).fromState=function(e){return"merged"===e?s.o0.Merged:"closed"===e||"locked"===e?s.o0.Closed:s.o0.Open},o.toState=function(e){return e===s.o0.Merged?"merged":e===s.o0.Closed?"closed":"opened"},(r||(r={})).from=function(e,t){return new s.i7(t,{name:e.author?.name??"Unknown",avatarUrl:e.author?.avatar_url??"",url:e.author?.web_url??""},String(e.iid),e.title,e.web_url,n.fromState(e.state),new Date(e.updated_at),null==e.closed_at?void 0:new Date(e.closed_at),null==e.merged_at?void 0:new Date(e.merged_at))}},2133:(e,t,i)=>{i.d(t,{YW:()=>l,x8:()=>Repositories});var n=i(429),o=i(5255),r=i(3700),s=i(1526);const a=47;function l(e){const{path:t}=c(e);return t}function c(e){let t;switch(e.scheme.toLowerCase()){case o.sN.File:return t=(0,r.AH)(e.fsPath),{path:t,ignoreCase:!n.IJ};case o.sN.Git:case o.sN.GitLens:return t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!n.IJ};case o.sN.Virtual:case o.sN.GitHub:{t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1);const i=e.authority?.split("+",1)[0];return{path:i?`${i}/${t}`:t,ignoreCase:!1}}case o.sN.Vsls:case o.sN.VslsScc:return t=(0,r.IC)(e.path),t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!1};case o.sN.PRs:{t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1);const i=e.authority?.split("+",1)[0];return i===o.sN.GitHub?{path:i?`${i}/${t}`:t,ignoreCase:!1}:{path:t,ignoreCase:!n.IJ}}default:return t=e.path,t=t.charCodeAt(t.length-1)===a?t.slice(1,-1):t.slice(1),{path:t,ignoreCase:!1}}}class Repositories{constructor(){this._count=0,this._trie=new s.QF(c)}get count(){return this._count}add(e){const t=this._trie.set(e.uri,e);return t&&this._count++,t}clear(){this._count=0,this._trie.clear()}forEach(e,t){for(const i of this._trie.getDescendants())e.call(t,i)}get(e){return this._trie.get(e)}getClosest(e){return this._trie.getClosest(e)}has(e){return this._trie.has(e)}remove(e,t=!0){const i=this._trie.delete(e,t);return i&&this._count--,i}values(){return this._trie.getDescendants()}}},4968:(e,t,i)=>{i.d(t,{Cx:()=>o,EE:()=>d,PY:()=>u,RE:()=>s,Z1:()=>g,aG:()=>m,dz:()=>f,fV:()=>a,gA:()=>w,jc:()=>r,kU:()=>h,tL:()=>l,ww:()=>p});var n=i(7512),o=(e=>(e.Free="free",e.FreePlus="free+",e.Pro="pro",e.Teams="teams",e.Enterprise="enterprise",e))(o||{}),r=(e=>(e[e.VerificationRequired=-1]="VerificationRequired",e[e.Free=0]="Free",e[e.FreeInPreviewTrial=1]="FreeInPreviewTrial",e[e.FreePreviewTrialExpired=2]="FreePreviewTrialExpired",e[e.FreePlusInTrial=3]="FreePlusInTrial",e[e.FreePlusTrialExpired=4]="FreePlusTrialExpired",e[e.Paid=5]="Paid",e))(r||{});function s(e){const{account:t,plan:{actual:i,effective:n},previewTrial:o}=e;if(!1===t?.verified)return-1;if(i.id===n.id)switch(n.id){case"free":return null==o?0:2;case"free+":return 4;case"pro":case"teams":case"enterprise":return 5}switch(n.id){case"free":return null==o?0:1;case"free+":return 4;case"pro":return"free"===i.id?1:3;case"teams":case"enterprise":return 5}}function a(e,t,i,n,o){return{id:e,name:l(e),bundle:t,organizationId:i,startedOn:(n??new Date).toISOString(),expiresOn:null!=o?o.toISOString():void 0}}function l(e){switch(e){case"free+":return"GitLens Free";case"pro":return"GitLens Pro";case"teams":return"GitLens Teams";case"enterprise":return"GitLens Enterprise";default:return"GitLens"}}const c=new Map([[void 0,-1],["free",0],["free+",1],["pro",2],["teams",3],["enterprise",4]]);function h(e){return c.get(e)}function u(e,t){return d(e.plan.effective.expiresOn,t)}function d(e,t){return null!=e?(0,n.hM)(Date.now(),new Date(e),t):void 0}function p(e){return m(e.plan.effective.id)}function m(e){return"free"!==e&&"free+"!==e}function g(e){const t=u(e);return null!=t&&t<=0}function f(e){return e.plan.actual.id!==e.plan.effective.id}function w(e){const t=d(e.previewTrial?.expiresOn);return null!=t?t<=0:void 0}},2800:(e,t,i)=>{i.d(t,{DZ:()=>r,GI:()=>u,Mo:()=>d,Qy:()=>c,XI:()=>l,h8:()=>m,jV:()=>h,qr:()=>s,uw:()=>g,vM:()=>a,zx:()=>o});var n=i(3105);function o(e){return null==e?void 0:Array.isArray(e)?e:[e]}function r(e,t){let i=0;return e.reduce(((e,n)=>{const o=t(n,i++);return null!=o&&e.push(o),e}),[])}function s(e,t){let i=e.length;for(;i--;)if(t(e[i],i,e))return i;return-1}function a(e,t){return e.reduce(((e,i)=>{const n=t(i),o=e[n];return void 0===o?e[n]=[i]:o.push(i),e}),Object.create(null))}function l(e,t){return e.reduce(((e,i)=>{const n=t(i),o=e.get(n);return void 0===o?e.set(n,[i]):o.push(i),e}),new Map)}function c(e,t,i){return e.reduce(((e,n)=>{const o=i(n);if(null!=o){const i=t(n),r=e.get(i);void 0===r?e.set(i,[o]):r.push(o)}return e}),new Map)}function h(e,t){const i=[],n=e.length;e:for(const o of e[0]){let r=n-1;for(;r--;)if(!e[r+1].some((e=>t(e,o))))break e;i.some((e=>t(e,o)))||i.push(o)}return i}function u(e){return"string"==typeof e[0]}function d(e,t,i,n=!1,o){const r={name:"",relativePath:"",children:new Map,descendants:[]};let s=e.reduce(((e,n)=>{let o=e,r="";for(const e of t(n)){r=i(r,e),void 0===o.children&&(o.children=new Map);let t=o.children.get(e);void 0===t&&(t={name:e,relativePath:r,parent:o,children:void 0,descendants:void 0},o.children.set(e,t)),void 0===o.descendants&&(o.descendants=[]),o.descendants.push(n),o=t}return o.value=n,e}),r);return n&&(s=p(s,i,!0,o)),s}function p(e,t,i=!0,n){if(void 0===e.children)return e;const o=[...e.children.values()];for(const e of o)p(e,t,!1,n);if(!i&&1===o.length){const i=o[0];(void 0===i.value||n?.(i.value))&&(e.name=t(e.name,i.name),e.relativePath=i.relativePath,e.children=i.children,e.descendants=i.descendants,e.value=i.value)}return e}function m(e,t){return(0,n.v_)(new Set(e),t)}function g(e,t,i){return[...e.reduce(((e,n)=>{const o=t(n),r=e.get(o);if(void 0===r)e.set(o,n);else{const t=i(r,n);void 0!==t&&e.set(o,t)}return e}),new Map).values()]}},9529:(e,t,i)=>{i.d(t,{$$:()=>c,P0:()=>d,SI:()=>u,WD:()=>a,Zv:()=>m,_N:()=>h,b2:()=>g,dO:()=>p,xR:()=>l});var n=i(9496),o=i(5255),r=i(6479);const s=[];function a(){return e=>{s.push(e)}}function l(e,t,i){return n.commands.registerCommand(e,(function(...i){r.W.instance.telemetry.sendEvent("command",{command:e}),t.call(this,...i)}),i)}function c(e){return s.map((t=>new t(e)))}function h(e){return e}function u(e,t){return n.commands.executeCommand(`${o.Gh.ActionPrefix}${e}`,{...t,type:e})}function d(e,...t){return n.commands.executeCommand(e,...t)}function p(e,...t){return e!==o.nA.ExecuteDocumentSymbolProvider&&r.W.instance.telemetry.sendEvent("command/core",{command:e}),n.commands.executeCommand(e,...t)}function m(e,...t){return r.W.instance.telemetry.sendEvent("command/core",{command:e}),n.commands.executeCommand(e,...t)}function g(e,t,i){return n.commands.executeCommand(e,t,i)}},7512:(e,t,i)=>{i.d(t,{Cz:()=>d,IH:()=>p,Zh:()=>m,hM:()=>f,p6:()=>g});const n=/(?<literal>\[.*?\])|(?<year>YYYY|YY)|(?<month>M{1,4})|(?<day>Do|DD?)|(?<weekday>d{2,4})|(?<hour>HH?|hh?)|(?<minute>mm?)|(?<second>ss?)|(?<fractionalSecond>SSS)|(?<dayPeriod>A|a)|(?<timeZoneName>ZZ?)/g,o=/(?<dateStyle>full|long|medium|short)(?:\+(?<timeStyle>full|long|medium|short))?/,r=[["year",629856e5,31536e6,"yr"],["month",2628e6,2628e6,"mo"],["week",6048e5,6048e5,"wk"],["day",864e5,864e5,"d"],["hour",36e5,36e5,"h"],["minute",6e4,6e4,"m"],["second",1e3,1e3,"s"]];let s;const a=new Map;let l,c,h;const u=new Map;function d(e){l="string"==typeof e?"system"===e?void 0:[e]:e??void 0,c=void 0,h=void 0,a.clear(),u.clear(),s=void 0}function p(e,t){const i=new Date(e.getTime());for(const[e,n]of Object.entries(t))if(n)switch(e){case"years":i.setFullYear(i.getFullYear()+n);break;case"months":i.setMonth(i.getMonth()+n);break;case"days":i.setDate(i.getDate()+n);break;case"hours":i.setHours(i.getHours()+n);break;case"minutes":i.setMinutes(i.getMinutes()+n);break;case"seconds":i.setSeconds(i.getSeconds()+n)}return i}function m(e,t){const i=("number"==typeof e?e:e.getTime())-(new Date).getTime();for(const[e,n,o,a]of r){const r=Math.abs(i);if(r>=n||1e3===n){if(t){if(null==s&&(null!=h?s=h.resolvedOptions().locale:null!=c?s=c.resolvedOptions().locale:(h=new Intl.RelativeTimeFormat(l,{localeMatcher:"best fit",numeric:"always",style:"narrow"}),s=h.resolvedOptions().locale)),"en"===s||s?.startsWith("en-")){return`${Math.round(r/o)}${a}`}return null==h&&(h=new Intl.RelativeTimeFormat(l,{localeMatcher:"best fit",numeric:"always",style:"narrow"})),h.format(Math.round(i/o),e)}return null==c&&(c=new Intl.RelativeTimeFormat(l,{localeMatcher:"best fit",numeric:"auto",style:"long"})),c.format(Math.round(i/o),e)}}return""}function g(e,t,i,r=!0){const s=`${i??""}:${t=t??void 0}`;let c=a.get(s);if(null==c){const e=function(e){if(null==e)return{localeMatcher:"best fit",dateStyle:"full",timeStyle:"short"};const t=o.exec(e);if(null!=t?.groups){const{dateStyle:e,timeStyle:i}=t.groups;return{localeMatcher:"best fit",dateStyle:e||"full",timeStyle:i||void 0}}const i={localeMatcher:"best fit"};for(const{groups:t}of e.matchAll(n))if(null!=t)for(const e in t){const n=t[e];if(null!=n)switch(e){case"year":i.year=4===n.length?"numeric":"2-digit";break;case"month":switch(n.length){case 4:i.month="long";break;case 3:i.month="short";break;case 2:i.month="2-digit";break;case 1:i.month="numeric"}break;case"day":i.day="DD"===n?"2-digit":"numeric";break;case"weekday":switch(n.length){case 4:i.weekday="long";break;case 3:i.weekday="short";break;case 2:i.weekday="narrow"}break;case"hour":i.hour=2===n.length?"2-digit":"numeric",i.hour12="hh"===n||"h"===n;break;case"minute":i.minute=2===n.length?"2-digit":"numeric";break;case"second":i.second=2===n.length?"2-digit":"numeric";break;case"fractionalSecond":i.fractionalSecondDigits=3;break;case"dayPeriod":i.dayPeriod="narrow",i.hour12=!0,i.hourCycle="h12";break;case"timeZoneName":i.timeZoneName=2===n.length?"long":"short"}}return i}(t);let h;h=null==i?l:"system"===i?void 0:[i],c=new Intl.DateTimeFormat(h,e),r&&a.set(s,c)}if(null==t||o.test(t))return c.format(e);function h(e){const t=`${i??""}:time:${e}`;let n=a.get(t);if(null==n){const o={localeMatcher:"best fit",timeStyle:e};let s;s=null==i?l:"system"===i?void 0:[i],n=new Intl.DateTimeFormat(s,o),r&&a.set(t,n)}return n}const u=c.formatToParts(e);return t.replace(n,((t,i,n,o,r,s,a,l,c,d,p,m,g,f,w)=>{if(null!=i)return i.substring(1,i.length-1);for(const t in w){const i=w[t];if(null==i)continue;const n=u.find((e=>e.type===t));if("Do"===i&&"day"===n?.type)return _(Number(n.value));if("a"===i&&"dayPeriod"===n?.type){return` ${(h("short").formatToParts(e).find((e=>"dayPeriod"===e.type))??n)?.value??""}`}return n?.value??""}return""}))}function f(e,t,i){const n=("number"==typeof t?t:t.getTime())-("number"==typeof e?e:e.getTime());switch(i){case"days":return Math.floor(n/864e5);case"hours":return Math.floor(n/36e5);case"minutes":return Math.floor(n/6e4);case"seconds":return Math.floor(n/1e3);default:return n}}const w=["th","st","nd","rd"];function _(e){const t=e%100;return`${e}${w[(t-20)%10]??w[t]??w[0]}`}},5432:(e,t,i)=>{i.d(t,{H:()=>r});var n=i(7469),o=i(9610);function r(e){return(t,i,r)=>{let s;if("function"==typeof r.value?s=r.value:"function"==typeof r.get&&(s=r.get),null==s)throw new Error("Not supported");const a=`$gate$${i}`;r.value=function(...t){const i=(0,o.S)(a,e,...t);Object.prototype.hasOwnProperty.call(this,i)||Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!0,value:void 0});let r=this[i];if(void 0===r){let e;try{if(e=s.apply(this,t),null==e||!(0,n.tI)(e))return e;this[i]=r=e.then((e=>(this[i]=void 0,e))).catch((e=>{throw this[i]=void 0,e}))}catch(e){throw this[i]=void 0,e}}return r}}}},4241:(e,t,i)=>{i.d(t,{cM:()=>m,fF:()=>p,hJ:()=>d});var n=i(9376),o=i(5255),r=i(1277),s=i(6446),a=i(4486),l=i(7469),c=i(3620);const h="",u=Symbol("logInstanceNameFn");function d(e){return t=>{t[u]=e}}function p(e){return m(e,!0)}function m(e,t=!1){let i,d,p,m,g,f,w=0,_=!1,v=!1,y=!0;null!=e&&({args:i,condition:d,enter:p,exit:m,prefix:g,sanitize:f,logThreshold:w=0,scoped:_=!0,singleLine:v=!1,timed:y=!0}=e),w>0&&(v=!0,y=!0),y&&(_=!0);const b=t?r.Yd.debug.bind(r.Yd):r.Yd.log.bind(r.Yd),C=r.Yd.warn.bind(r.Yd);return(e,S,k)=>{let P,R;if("function"==typeof k.value?(P=k.value,R="value"):"function"==typeof k.get&&(P=k.get,R="get"),null==P||null==R)throw new Error("Not supported");const D=(0,a.ZS)(P);k[R]=function(...a){const k=(0,s.OD)();if(!r.Yd.isDebugging&&!r.Yd.enabled(o.in.Debug)&&(!r.Yd.enabled(o.in.Info)||t)||null!=d&&!d(...a))return P.apply(this,a);let R;null!=this?(R=(0,r.q4)(this),this.constructor?.[u]&&(R=e.constructor[u](this,R))):R=h;let $,T=`${_?`[${k.toString(16).padStart(5)}] `:h}${R?`${R}.`:h}${S}`;null!=g&&(T=g({id:k,instance:this,instanceName:R,name:S,prefix:T},...a)),_&&($={scopeId:k,prefix:T},(0,s.DS)(k,$));const F=null!=p?p(...a):h;let x;if(!1===i||0===a.length)x=h,v||b(`${T}${F}`);else{let e;x="";let n,s,l,c=-1;for(l of a){if(n=D[++c],e=i?.[c],null!=e){if("boolean"==typeof e)continue;if(x.length>0&&(x+=", "),"string"==typeof e){x+=e;continue}s=String(e(l))}else x.length>0&&(x+=", "),s=r.Yd.toLoggable(l,f);x+=n?`${n}=${s}`:s}v||b(`${T}${F}${x&&(t||r.Yd.enabled(o.in.Debug)||r.Yd.isDebugging)?`(${x})`:h}`)}if(v||y||null!=m){const e=y?(0,n.a)():void 0,i=t=>{const i=void 0!==e?` • ${(0,c.qk)(e)} ms`:h;v?r.Yd.error(t,`${T}${F}${x?`(${x})`:h}`,`failed${$?.exitDetails?$.exitDetails:h}${i}`):r.Yd.error(t,T,`failed${$?.exitDetails?$.exitDetails:h}${i}`),_&&(0,s.Fp)(k)};let u;try{u=P.apply(this,a)}catch(e){throw i(e),e}const d=i=>{let n,a,l,u;if(null!=e?(n=(0,c.qk)(e),n>o.Os?(a=C,l=` • ${n} ms (slow)`):(a=b,l=` • ${n} ms`)):(l=h,a=b),null!=m)try{u=m(i)}catch(e){u=`@log.exit error: ${e}`}else u="completed";v?(0===w||n>w)&&a(`${T}${F}${x&&(t||r.Yd.enabled(o.in.Debug)||r.Yd.isDebugging)?`(${x})`:h} ${u}${$?.exitDetails?$.exitDetails:h}${l}`):a(`${T}${x&&(t||r.Yd.enabled(o.in.Debug)||r.Yd.isDebugging)?`(${x})`:h} ${u}${$?.exitDetails?$.exitDetails:h}${l}`),_&&(0,s.Fp)(k)};if(null!=u&&(0,l.tI)(u)){u.then(d).catch(i)}else d(u);return u}return P.apply(this,a)}}}},4488:(e,t,i)=>{i.d(t,{H:()=>o});var n=i(9610);function o(e){return(t,i,o)=>{let r,s;if("function"==typeof o.value)r=o.value,s="value";else{if("function"!=typeof o.get)throw new Error("Not supported");r=o.get,s="get"}if(null==r)throw new Error("Not supported");const a=`$memoize$${i}`;let l;o[s]=function(...t){const i=(0,n.S)(a,e,...t);return Object.prototype.hasOwnProperty.call(this,i)?(l=this[i],l):(l=r.apply(this,t),Object.defineProperty(this,i,{configurable:!1,enumerable:!1,writable:!1,value:l}),l)}}}},9610:(e,t,i)=>{i.d(t,{S:()=>u});var n=i(9496),o=i(6479),r=i(7840),s=i(6450),a=i(9502),l=i(6922);function c(e,t){return""===e||null==t||"object"!=typeof t?t:t instanceof Error?String(t):t instanceof n.Uri?"sha"in t&&t.sha?`${t.sha}:${t.toString()}`:t.toString():(0,r.BF)(t)||(0,s.f_)(t)||(0,a.YR)(t)||(0,l.Jc)(t)?t.toString():(0,o.N)(t)?"<container>":t}function h(...e){if(0===e.length)return"";if(1!==e.length)return JSON.stringify(e,c);const t=e[0];if(null==t)return"";switch(typeof t){case"string":return t;case"number":case"boolean":case"undefined":case"symbol":case"bigint":return String(t);default:return t instanceof Error?String(t):t instanceof n.Uri?"sha"in t&&"string"==typeof t.sha&&t.sha?`${t.sha}:${t.toString()}`:t.toString():(0,r.BF)(t)||(0,s.f_)(t)||(0,a.YR)(t)||(0,l.Jc)(t)?t.toString():(0,o.N)(t)?"<container>":JSON.stringify(t,c)}}function u(e,t,...i){if(0===i.length)return e;let n;if(null!=t)try{n=t(...i)}catch{n=h(...i)}else n=h(...i);return`${e}$${n}`}},8786:(e,t,i)=>{function n(e){if(null!=e)return encodeURI(e.replace(/%20/g," "))}i.d(t,{M:()=>n})},2185:(e,t,i)=>{function n(e){return(t,i,n)=>{const o=e((e=>(o.dispose(),t.call(i,e))),null,n);return o}}i.d(t,{IH:()=>n,ue:()=>r});const o=(e,t)=>t(e);function r(e,t=o){let i,n;return{promise:new Promise(((o,r)=>{i=()=>{i=void 0,r()},n=e((async e=>{try{await t(e,o,r)}catch(e){r(e)}}))})).then((e=>(n.dispose(),e)),(e=>{throw n.dispose(),e})),cancel:()=>i?.()}}},1774:(e,t,i)=>{i.d(t,{d:()=>r});var n=i(3700),o=i(3620);function r(e,t){const i=(0,n.M)(e);let r=(0,n.EZ)(i);if(null!=t?.truncateTo&&r.length>=t.truncateTo)return(0,o.ro)(r,t.truncateTo);if(t?.suffix){if(null!=t.truncateTo&&r.length+t.suffix.length>=t.truncateTo)return`${(0,o.ro)(r,t.truncateTo-t.suffix.length)}${t.suffix}`;r+=t.suffix}if(t?.fileOnly)return r;const s=(0,n.Fd)(i,t?.relativeTo);return s?(r=`/${r}`,null!=t?.truncateTo&&r.length+s.length>=t.truncateTo?`${(0,o.AO)(s,t.truncateTo-r.length)}${r}`:`${s}${r}`):r}},4486:(e,t,i)=>{i.d(t,{Ds:()=>H,DH:()=>ne,ZS:()=>ee,is:()=>te,IH:()=>ie,df:()=>oe,NX:()=>re});const n=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)};const o="object"==typeof global&&global&&global.Object===Object&&global;var r="object"==typeof self&&self&&self.Object===Object&&self;const s=o||r||Function("return this")();const a=function(){return s.Date.now()};var l=/\s/;const c=function(e){for(var t=e.length;t--&&l.test(e.charAt(t)););return t};var h=/^\s+/;const u=function(e){return e?e.slice(0,c(e)+1).replace(h,""):e};const d=s.Symbol;var p=Object.prototype,m=p.hasOwnProperty,g=p.toString,f=d?d.toStringTag:void 0;const w=function(e){var t=m.call(e,f),i=e[f];try{e[f]=void 0;var n=!0}catch(e){}var o=g.call(e);return n&&(t?e[f]=i:delete e[f]),o};var _=Object.prototype.toString;const v=function(e){return _.call(e)};var y="[object Null]",b="[object Undefined]",C=d?d.toStringTag:void 0;const S=function(e){return null==e?void 0===e?b:y:C&&C in Object(e)?w(e):v(e)};const k=function(e){return null!=e&&"object"==typeof e};var P="[object Symbol]";const R=function(e){return"symbol"==typeof e||k(e)&&S(e)==P};var D=NaN,$=/^[-+]0x[0-9a-f]+$/i,T=/^0b[01]+$/i,F=/^0o[0-7]+$/i,x=parseInt;const O=function(e){if("number"==typeof e)return e;if(R(e))return D;if(n(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=n(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=u(e);var i=T.test(e);return i||F.test(e)?x(e.slice(2),i?2:8):$.test(e)?D:+e};var A="Expected a function",I=Math.max,E=Math.min;const N=function(e,t,i){var o,r,s,l,c,h,u=0,d=!1,p=!1,m=!0;if("function"!=typeof e)throw new TypeError(A);function g(t){var i=o,n=r;return o=r=void 0,u=t,l=e.apply(n,i)}function f(e){var i=e-h;return void 0===h||i>=t||i<0||p&&e-u>=s}function w(){var e=a();if(f(e))return _(e);c=setTimeout(w,function(e){var i=t-(e-h);return p?E(i,s-(e-u)):i}(e))}function _(e){return c=void 0,m&&o?g(e):(o=r=void 0,l)}function v(){var e=a(),i=f(e);if(o=arguments,r=this,h=e,i){if(void 0===c)return function(e){return u=e,c=setTimeout(w,t),d?g(e):l}(h);if(p)return clearTimeout(c),c=setTimeout(w,t),g(h)}return void 0===c&&(c=setTimeout(w,t)),l}return t=O(t)||0,n(i)&&(d=!!i.leading,s=(p="maxWait"in i)?I(O(i.maxWait)||0,t):s,m="trailing"in i?!!i.trailing:m),v.cancel=function(){void 0!==c&&clearTimeout(c),u=0,o=h=r=c=void 0},v.flush=function(){return void 0===c?l:_(a())},v};var U=1/0,L=17976931348623157e292;const M=function(e){return e?(e=O(e))===U||e===-U?(e<0?-1:1)*L:e==e?e:0:0===e?e:0};const W=function(e){var t=M(e),i=t%1;return t==t?i?t-i:t:0};var B="Expected a function";const G=function(e,t){var i;if("function"!=typeof t)throw new TypeError(B);return e=W(e),function(){return--e>0&&(i=t.apply(this,arguments)),e<=1&&(t=void 0),i}};const V=function(e){return G(2,e)};function H(e,t,i){const{track:n,...o}={track:!1,...i??{}};if(!0!==n)return N(e,t,o);let r=!1;const s=N((function(...t){return r=!1,e.apply(this,t)}),t,i),a=function(...e){return r=!0,s.apply(this,e)};return a.pending=function(){return r},a.cancel=function(){return s.cancel.apply(s)},a.flush=function(){return s.flush.apply(s)},a}const q=",",j="",Y="=",Q="{",z="(",K=")",J=/\(([\s\S]*)\)/,X=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,Z=/\s?=.*$/;function ee(e){if("function"!=typeof e)throw new Error("Not supported");if(0===e.length)return[];let t=Function.prototype.toString.call(e);t=t.replace(X,j)||t,t=t.slice(0,t.indexOf(Q));let i=t.indexOf(z),n=t.indexOf(K);i=i>=0?i+1:0,n=n>0?n:t.indexOf(Y),t=t.slice(i,n),t=`(${t})`;const o=J.exec(t);return null!=o?o[1].split(q).map((e=>e.trim().replace(Z,j))):[]}function te(e,t,i){return null==t?null!=e:"function"==typeof t?t(e):void 0===i?void 0!==e[t]:e[t]===i}function ie(e){return V(e)}function ne(e,t){let i;const n={dispose:()=>{null!=i&&(clearInterval(i),i=void 0)}};return i=setInterval(e,t),n}async function oe(e,t,i){for(const n of t)try{await e.apply(i,n)}catch{}}function re(e,t){return e>=t?e*e+e+t:e+t*t}},3105:(e,t,i)=>{function n(e,t){let i,n=0;for(;i=e.next(),!i.done;)(void 0===t||t(i.value))&&n++;return n}function o(e,t){for(const i of e)if(!t(i))return!1;return!0}function*r(e,t){if(void 0===t)for(const t of e)null!=t&&(yield t);else for(const i of e)t(i)&&(yield i)}function*s(e,t){for(const i of e){const e=t(i);null!=e&&(yield e)}}function a(e,t){for(const i of e)if(t(i))return i;return null}function l(e){return e[Symbol.iterator]().next().value}function*c(e,t){for(const i of e)yield*t(i)}function h(e,t){const i=e[Symbol.iterator]();let n=i.next();if(n.done)return"";let o=String(n.value);for(;n=i.next(),!n.done;)o+=`${t}${n.value}`;return o}function u(e){let t;for(t of e);return t}function*d(e,t){for(const i of e)yield t(i)}function p(e,t){for(const i of e)if(t(i))return!0;return!1}function*m(...e){for(const t of e)for(const e of t)yield e}function g(e,t,i){const n=new Map;for(const o of e){const e=t(o),r=n.get(e);if(void 0===r)n.set(e,o);else{const t=i(r,o);void 0!==t&&n.set(e,t)}}return n.values()}i.d(t,{DZ:()=>s,G:()=>p,G0:()=>m,Ps:()=>l,QX:()=>n,UI:()=>d,VS:()=>c,Z$:()=>u,hX:()=>r,sE:()=>a,uw:()=>g,v_:()=>h,yW:()=>o})},9967:(e,t,i)=>{function n(e,t){if(e===t)return!0;if(null==e||null==t)return!1;const i=typeof e;return(i!==typeof t||"string"!==i&&"number"!==i&&"boolean"!==i)&&JSON.stringify(e)===JSON.stringify(t)}function o(e,t){const i=null!=t?.skipPaths&&t.skipPaths.length?t?.prefix?t.skipPaths.map((e=>`${t.prefix}.${e}`)):t.skipPaths:void 0,n=t?.skipNulls??!1,o=t?.stringify??!1;const r=Object.create(null);return function e(r,s,a){if(!i?.includes(s))if(Object(a)!==a)if(null==a){if(n)return;r[s]=o?"all"==o?JSON.stringify(a):a??null:a}else r[s]="string"==typeof a?a:o?"number"==typeof a||"boolean"==typeof a?a:JSON.stringify(a):a;else if(Array.isArray(a)){const i=a.length;if(0===i)return;if("join"===t?.arrays)r[s]=a.join(",");else for(let t=0;t<i;t++)e(r,`${s}[${t}]`,a[t])}else{const t=Object.entries(a);if(0===t.length)return;for(const[i,n]of t)e(r,s?`${s}.${i}`:i,n)}}(r,t?.prefix??"",e),r}function r(e,t,i){if(null==e&&(e=Object.create(null)),null==i||"boolean"==typeof i&&!i){const{[t]:i,...n}=e;e=n}else e[t]="object"==typeof i?{...i}:i;return e}i.d(t,{iC:()=>r,wy:()=>n,xH:()=>o})},3700:(e,t,i)=>{i.d(t,{$d:()=>v,AH:()=>S,DZ:()=>n.extname,EZ:()=>n.basename,Fd:()=>P,Gf:()=>k,IC:()=>p,M:()=>w,Mh:()=>b,RQ:()=>n.join,UG:()=>_,XX:()=>n.dirname,YP:()=>y,tD:()=>g,tE:()=>C,uo:()=>R});var n=i(6470),o=i(9496),r=i(429),s=i(5255);const a=47,l=/(?<=^\/?)([A-Z])(?=:\/)/,c=/^([a-zA-Z][\w+.-]+):/,h=/\\/g,u=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/,d=/^[/|\\]~(?:\d+?|external)(?:[/|\\]|$)/;function p(e){if("string"==typeof e&&C(e)&&(e=o.Uri.parse(e)),"string"==typeof e)return m(e)?e:`/~0${(e=S(e)).charCodeAt(0)===a?e:`/${e}`}`;let t=e.fsPath;return m(t)?e:(t=S(t),e.with({path:`/~0${t.charCodeAt(0)===a?t:`/${t}`}`}))}function m(e){return u.test(e)}function g(e){return d.test(e)}function f(e,t,i,n){if(0===e.length||0===t.length)return 0;let o;(n??!r.IJ)&&(e=e.toLowerCase(),t=t.toLowerCase());let s=0;for(let n=0;n<e.length&&(o=e[n],o===t[n]);n++)o===i&&(s=n);return s}function w(e){if("string"==typeof e){if(!c.test(e))return S(e);e=o.Uri.parse(e,!0)}return S(e.scheme===s.sN.File?e.fsPath:e.path)}function _(e){return c.exec(e)?.[1]}function v(e,t){return"string"==typeof t&&(t=S(t)).charCodeAt(0)!==a&&(t=`/${t}`),"string"==typeof e&&(e=S(e)).charCodeAt(0)!==a&&(e=`/${e}`),"string"==typeof t?1===t.length||("string"==typeof e?e:e.path).startsWith(t.charCodeAt(t.length-1)===a?t:`${t}/`):"string"==typeof e?1===t.path.length||e.startsWith(t.path.charCodeAt(t.path.length-1)===a?t.path:`${t.path}/`):t.scheme===e.scheme&&t.authority===e.authority&&(1===t.path.length||e.path.startsWith(t.path.charCodeAt(t.path.length-1)===a?t.path:`${t.path}/`))}function y(e){return!C(e)&&(0,n.isAbsolute)(e)}function b(e){return"*"===(0,n.basename)(e)}function C(e){return c.test(e)}function S(e){return e?((e=e.replace(h,"/")).charCodeAt(e.length-1)===a&&(r.ED&&3===e.length&&":"===e[1]||(e=e.slice(0,-1))),r.ED&&(e=e.replace(l,(e=>e.toLowerCase()))),e):e}function k(e,t,i){e=c.test(e)?o.Uri.parse(e,!0).path:S(e);const n=f(`${t=c.test(t)?o.Uri.parse(t,!0).path:S(t)}/`,`${e}/`,"/",i);return n>0?t.substring(n+1):t}function P(e,t){const i=(0,n.dirname)(e);if(!i||"."===i||i===t)return"";if(!t)return i;const[o]=R(i,t);return o}function R(e,t,i=!1,r){if(e=w(e),t){let i;c.test(t)?(i=o.Uri.parse(t,!0),t=w(i)):t=S(t);const n=f(`${t}/`,`${e}/`,"/",r);n>0?(t=e.substring(0,n),e=e.substring(n+1)):e.charCodeAt(0)===a&&(e=e.slice(1)),null!=i&&(t=i.with({path:t}).toString())}else t=S(i?(0,n.dirname)(e):""),e=i?(0,n.basename)(e):e;return[e,t]}},7469:(e,t,i)=>{i.d(t,{HO:()=>r,PK:()=>PromiseCancelledError,PQ:()=>s,Sb:()=>a,Wx:()=>o,ag:()=>h,tI:()=>l,xu:()=>c});var n=i(3105);async function*o(e){const t=new Map(e.map(((e,t)=>[t,e.then((e=>({index:t,value:e,status:"fulfilled"})),(e=>({index:t,reason:e,status:"rejected"})))])));for(;t.size;){const e=await Promise.race(t.values());t.delete(e.index),yield e}}class PromiseCancelledError extends Error{constructor(e,t){super(t),this.promise=e}}class PromiseCancelledErrorWithId extends PromiseCancelledError{constructor(e,t,i){super(t,i),this.id=e}}function r(e,t,i={}){return null==t||"number"==typeof t&&t<=0?e:new Promise(((n,o)=>{let r,s,a=!1;"number"==typeof t?r=setTimeout((()=>{"function"==typeof i.onDidCancel?i.onDidCancel(n,o):o(new PromiseCancelledError(e,i.cancelMessage??"TIMED OUT"))}),t):s=t.onCancellationRequested((()=>{s?.dispose(),a||("function"==typeof i.onDidCancel?i.onDidCancel(n,o):o(new PromiseCancelledError(e,i.cancelMessage??"CANCELLED")))})),e.then((()=>{a=!0,null!=r&&clearTimeout(r),s?.dispose(),n(e)}),(e=>{a=!0,null!=r&&clearTimeout(r),s?.dispose(),o(e)}))}))}function s(){const e={promise:void 0,fulfill:void 0,cancel:void 0};return e.promise=new Promise(((t,i)=>{e.fulfill=t,e.cancel=i})),e}function a(e,t){return"fulfilled"===e.status?e.value:t}function l(e){return e instanceof Promise||"function"==typeof e?.then}async function c(e,t,i){let o;return null!=t&&"number"!=typeof t?o=new Map((0,n.UI)(e,(e=>[e,t(e)]))):(i=t,o=e),o instanceof Map?new Map(await Promise.all((0,n.UI)(o.entries(),null==i?([e,t])=>t.then((t=>[e,t])):([e,t])=>Promise.race([t,new Promise((n=>setTimeout((()=>n(new PromiseCancelledErrorWithId(e,t,"TIMED OUT"))),i)))]).then((t=>[e,t]))))):Promise.all(null==i?o:o.map((e=>Promise.race([e,new Promise((t=>setTimeout((()=>t(new PromiseCancelledError(e,"TIMED OUT"))),i)))]))))}async function h(){await new Promise((e=>queueMicrotask(e)))}class AggregateError extends Error{constructor(e){super(`AggregateError(${e.length})\n${e.map((e=>`\t${String(e)}`)).join("\n")}`),this.errors=e,Error.captureStackTrace?.(this,AggregateError)}}},6398:(e,t,i)=>{i.d(t,{u:()=>l});var n=i(9376),o=i(5255),r=i(1277),s=i(6446);const a=class{constructor(e,t,...i){let a,l;if(this.scope=e,this.instance=`[${String((0,s.OD)()).padStart(5)}] `,"string"!=typeof e&&(a=e,e="",this.instance=""),l="boolean"==typeof t?.log?t.log?{}:void 0:t?.log??{},this.logLevel=t?.logLevel??o.in.Info,this.logProvider=t?.provider??r.Nu,this._time=(0,n.a)(),null!=l){if(!this.logProvider.enabled(this.logLevel))return;i.length?this.logProvider.log(this.logLevel,a,`${this.instance}${e}${l.message??""}${l.suffix??""}`,...i):this.logProvider.log(this.logLevel,a,`${this.instance}${e}${l.message??""}${l.suffix??""}`)}}get startTime(){return this._time}elapsed(){const[e,t]=(0,n.a)(this._time);return 1e3*e+Math.floor(t/1e6)}log(e){this.logCore(this.scope,e,!1)}restart(e){this.logCore(this.scope,e,!0),this._time=(0,n.a)()}stop(e){this.restart(e)}logCore(e,t,i){if(!this.logProvider.enabled(this.logLevel))return;let r;if("string"!=typeof e&&(r=e,e=""),!i)return void this.logProvider.log(this.logLevel,r,`${this.instance}${e}${t?.message??""}${t?.suffix??""}`);const[s,a]=(0,n.a)(this._time),l=1e3*s+Math.floor(a/1e6),c=`${this.instance}${e}${t?.message??""}`;this.logProvider.log(l>250?o.in.Warn:this.logLevel,r,`${c?`${c} ${o.NE.Dot} `:""}${l} ms${t?.suffix??""}`)}static start(e,t,...i){a.watches.get(e)?.log(),a.watches.set(e,new a(e,t,...i))}static log(e,t){a.watches.get(e)?.log(t)}static stop(e,t){a.watches.get(e)?.stop(t),a.watches.delete(e)}};let l=a;l.watches=new Map},3620:(e,t,i)=>{i.d(t,{US:()=>r.U,zY:()=>a,TT:()=>h,j_:()=>u,se:()=>d,qq:()=>l,ry:()=>f,yI:()=>w,qk:()=>_,sC:()=>y,Gg:()=>R,dz:()=>j,sX:()=>T,Qu:()=>A,vk:()=>N,Q_:()=>U,eh:()=>L,_6:()=>M,dm:()=>c,pW:()=>W,$G:()=>B,AO:()=>G,ro:()=>V});var n=i(9376),o=i(5255),r=i(3317);const s=new Intl.Collator(void 0,{sensitivity:"accent"});function a(e,t){const i=s.compare(e,t);return 0===i?0:i>0?1:-1}function l(e,t){return null==e&&null==t||null!=e&&null!=t&&0===a(e,t)}const c=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"}).compare;function h(e,t,i=0,n=e.length,o=0,r=t.length){for(;i<n&&o<r;i++,o++){const n=e.charCodeAt(i),r=t.charCodeAt(o);if(n<r)return-1;if(n>r)return 1}const s=n-i,a=r-o;return s<a?-1:s>a?1:0}function u(e,t,i=0,n=e.length,o=0,r=t.length){for(;i<n&&o<r;i++,o++){const s=e.charCodeAt(i),a=t.charCodeAt(o);if(s===a)continue;const l=s-a;if((32!==l||!E(a))&&(-32!==l||!E(s)))return I(s)&&I(a)?l:h(e.toLowerCase(),t.toLowerCase(),i,n,o,r)}const s=n-i,a=r-o;return s<a?-1:s>a?1:0}function d(e){return e?.replace(/[<>&"]/g,(e=>{switch(e){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";case'"':return"&quot;";default:return e}}))}const p=/[\\`*_{}[\]()#+\-.!]/g,m=/^===/gm,g=/\r?\n/g;function f(e,t={}){return e=e.replace(p,"\\$&").replace(m,"​==="),t.quoted?e.trim().replace(g,"\t\\\n>  "):e}function w(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")}function _(e){const[t,i]=(0,n.a)(e);return 1e3*t+Math.floor(i/1e6)}const v=["¹","²","³","⁴","⁵","⁶","⁷","⁸","⁹"];function y(e){return v[e-1]??""}const b=/\$\{('.*?[^\\]'|\W*)?([^|]*?)(?:\|(\d+)(-|\?)?)?('.*?[^\\]'|\W*)?\}/g,C=/\$\{(?:'.*?[^\\]'|\W*)?(\w*?)(?:'.*?[^\\]'|[\W\d]*)\}/g,S="'",k=/(\\')/g,P=/^'?(.*?)'?$/s;function R(e){const t=[];let i;for(;;){if(i=b.exec(e),null==i)break;let[,n,o,r,s,a]=i;null!=n&&(i=P.exec(n),null!=i&&([,n]=i,n=n.replace(k,S))),null!=a&&(i=P.exec(a),null!=i&&([,a]=i,a=a.replace(k,S))),t.push({key:o,options:{collapseWhitespace:"?"===s,padDirection:"-"===s?"left":"right",prefix:n||void 0,suffix:a||void 0,truncateTo:null==r?void 0:parseInt(r,10)}})}return t}const D="$${$1=this.$1,($1 == null ? '' : $1)}",$=new Map;function T(e,t){if(null==e||0===e.length)return e;if(null==t)return e.replace(C,"");let i=$.get(e);return null==i&&(i=new Function(`return \`${e.replace(C,D)}\`;`),$.set(e,i)),i.call(t)}const F=Object.getPrototypeOf((async function(){})).constructor,x="$${$1=this.$1,($1 == null ? '' : typeof $1.then === 'function' ? (($1 = await $1),$1 == null ? '' : $1) : $1)}",O=new Map;async function A(e,t){if(null==e||0===e.length)return e;if(null==t)return e.replace(C,"");let i=O.get(e);if(null==i){const t=`return \`${e.replace(C,x)}\`;`;i=new F(t),O.set(e,i)}return await i.call(t)}function I(e){return e>=o.mN.a&&e<=o.mN.z}function E(e){return e>=o.mN.A&&e<=o.mN.Z}function N(e,t=0,i=0,n=" "){return 0===t&&0===i?e:`${0===t?"":n.repeat(t)}${e}${0===i?"":n.repeat(i)}`}function U(e,t,i=" ",n){const o=t-(n??j(e));return o<=0?e:i.repeat(o)+e}function L(e,t,i=" ",n){const o=t-(n??j(e));return o<=0?e:e+i.repeat(o)}function M(e,t,i){if(null==i)return`${t} ${e}${1===t?"":"s"}`;const n=1===t?e:i.plural??`${e}s`;return i.only?n:`${0===t?i.zero??t:i.format?.(t)??t}${i.infix??" "}${n}`}function W(e,t){const i=e.indexOf(t);if(-1===i)return[e];const n=e.substring(0,i),o=e.substring(i+t.length);return null!=o?[n,o]:[n]}function B(e,t,i="…",n){if(!e)return e;if(t<=1)return i;if((n=n??j(e))<=t)return e;if(n===e.length)return`${e.substring(0,t-1)}${i}`;let o=Math.floor(t/(n/e.length)),r=j(e.substring(0,o));for(;r<t;)r+=j(e[o++]);return r>=t&&o--,`${e.substring(0,o)}${i}`}function G(e,t,i="…",n){if(!e)return e;if(t<=1)return i;if((n=n??j(e))<=t)return e;if(n===e.length)return`${i}${e.substring(n-t)}`;let o=Math.floor(t/(n/e.length)),r=j(e.substring(0,o));for(;r<t;)r+=j(e[o++]);return r>=t&&o--,`${i}${e.substring(e.length-o)}`}function V(e,t,i="…"){if(!e)return e;if(t<=1)return i;const n=j(e);return n<=t?e:`${e.slice(0,Math.floor(t/2)-1)}${i}${e.slice(n-Math.ceil(t/2))}`}let H;const q=/[^\x20-\x7F\u00a0\u2026]/;function j(e){if(null==e||0===e.length)return 0;if(!q.test(e))return e.length;if(null==H&&(H=function({onlyFirst:e=!1}={}){const t=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(t,e?void 0:"g")}()),0===(e=e.replace(H,"")).length)return 0;let t=0,i=0,n=0;const o=[...e];for(let e=0;e<o.length;e++){const r=o[e].codePointAt(0);if(!(r<=31||r>=127&&r<=159)&&!(r>=768&&r<=879))if(r>=128512&&r<=128591||r>=127744&&r<=128511||r>=128640&&r<=128767||r>=9728&&r<=9983||r>=9984&&r<=10175||r>=65024&&r<=65039||r>=129280&&r<=129535||r>=65024&&r<=65039||r>=8400&&r<=8447){if(r>=127995&&r<=127999)continue;i++,t+=2}else 8205!==r?(r>65535&&e++,t+=Y(r)?2:1):(n++,t-=2)}const r=i-n;return r>1&&(t+=r-1),t}function Y(e){return e>=4352&&(e<=4447||9001===e||9002===e||e>=11904&&e<=12871&&12351!==e||e>=12880&&e<=19903||e>=19968&&e<=42182||e>=43360&&e<=43388||e>=44032&&e<=55203||e>=63744&&e<=64255||e>=65040&&e<=65049||e>=65072&&e<=65131||e>=65281&&e<=65376||e>=65504&&e<=65510||e>=110592&&e<=110593||e>=127488&&e<=127569||e>=131072&&e<=262141)}},1526:(e,t,i)=>{i.d(t,{QF:()=>UriTrie,u$:()=>VisitedPathsTrie});var n=i(429),o=i(3105),r=i(3700);const s=47;function a(e){return(e=(0,r.AH)(e)).charCodeAt(0)===s&&(e=e.slice(1)),e}class UriTrie{constructor(e){this.normalize=e,this.trie=new PathTrie}clear(){this.trie.clear()}delete(e,t=!0){const{path:i,ignoreCase:n}=this.normalize(e);return this.trie.delete(i,n,t)}get(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.get(t,i)}getChildren(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.getChildren(t,i)}getClosest(e,t,i){const{path:n,ignoreCase:o}=this.normalize(e);return this.trie.getClosest(n,t,i,o)}getDescendants(e,t){if(null==e)return this.trie.getDescendants();const{path:i,ignoreCase:n}=this.normalize(e);return this.trie.getDescendants(i,t,n)}has(e){const{path:t,ignoreCase:i}=this.normalize(e);return this.trie.has(t,i)}set(e,t){const{path:i,ignoreCase:n}=this.normalize(e);return this.trie.set(i,t,n)}}class PathNode{constructor(e){this.path=e}}class PathTrie{constructor(e=a){this.normalize=e,this.root=new PathNode("")}clear(){this.root.children=void 0}delete(e,t,i=!0){let o,r;e=this.normalize(e),t=t??!n.IJ;for(const i of e.split("/")){const e=(o??this.root).children?.get(t?i.toLowerCase():i);if(null==e)return!1;r=o??this.root,o=e}return!!o?.value&&(i&&l(o.value),o.value=void 0,null!=o.children&&0!==o.children.size||null==r?.children||(r.children.delete(t?o.path.toLowerCase():o.path),0===r.children.size&&(r.children=void 0)),!0)}get(e,t){return this.getCore(e,t)}getCore(e,t){let i;e=this.normalize(e),t=t??!n.IJ;for(const n of e.split("/")){const e=(i??this.root).children?.get(t?n.toLowerCase():n);if(null==e)return;i=e}return i?.value}getChildren(e,t){let i;if(e=this.normalize(e),t=t??!n.IJ,e)for(const n of e.split("/")){const e=(i??this.root).children?.get(t?n.toLowerCase():n);if(null==e)return[];i=e}else i=this.root;return null==i?.children?[]:[...(0,o.DZ)(i.children.values(),(e=>e.value||void 0))]}getClosest(e,t,i,o){let r,s;e=this.normalize(e),o=o??!n.IJ;for(const t of e.split("/")){!r?.value||i&&!i?.(r.value)||(s=r);const e=(r??this.root).children?.get(o?t.toLowerCase():t);if(null==e)break;r=e}return t||!r?.value||i&&!i?.(r.value)?s?.value:r.value}*getDescendants(e,t,i){e=e?this.normalize(e):"",i=i??!n.IJ;let o,r="";if(e)for(const t of e.split("/")){const e=(o??this.root).children?.get(i?t.toLowerCase():t);if(null==e)return;o=e,r+=`${e.path}/`}else o=this.root;null!=o?.children&&(yield*function*e(i,n,o){for(const r of i.values()){const i=n?`${n}/${r.path}`:r.path;!r.value||t&&!t?.(r.value)||(yield r.value),null!=r.children&&(yield*e(r.children,i,o))}}(o.children,"",r))}has(e,t){return null!=this.getCore(e,t)}set(e,t,i){e=this.normalize(e),i=i??!n.IJ;let o=this.root;for(const t of e.split("/")){const e=i?t.toLowerCase():t;let n=o.children?.get(e);null==n&&(null==o.children&&(o.children=new Map),n=new PathNode(t),o.children.set(e,n)),o=n}const r=null==o.value;return r||o.value===t||l(o.value),o.value=t,r}}function l(e){null!=e&&"object"==typeof e&&"dispose"in e&&"function"==typeof e.dispose&&e.dispose()}class VisitedPathNode{constructor(e){this.path=e}}class VisitedPathsTrie{constructor(e=a){this.normalize=e,this.root=new VisitedPathNode("")}clear(){this.root.children=void 0}has(e,t){let i;e=this.normalize(e),t=t??!n.IJ;for(const n of e.split("/")){const e=(i??this.root).children?.get(t?n.toLowerCase():n);if(null==e)return!1;i=e}return null!=i}set(e,t){e=this.normalize(e),t=t??!n.IJ;let i=this.root;for(const n of e.split("/")){const e=t?n.toLowerCase():n;let o=i.children?.get(e);null==o&&(null==i.children&&(i.children=new Map),o=new VisitedPathNode(n),i.children.set(e,o)),i=o}}}},2509:(e,t,i)=>{i.d(t,{$S:()=>f,$_:()=>d,$o:()=>w,GC:()=>_,GR:()=>u,JM:()=>g,PH:()=>y,Tc:()=>S,_L:()=>P,aW:()=>p,bM:()=>b,hE:()=>m,ic:()=>k,lN:()=>C,pt:()=>v,s5:()=>h});var n=i(9496),o=i(3113),r=i(5255),s=i(7462),a=i(1277),l=i(9529),c=i(3700);function h(e){const t=e.toString();return n.workspace.textDocuments.find((e=>e.uri.toString()===t))}async function u(e,t){const i=function(e){const t=n.window.activeTextEditor,i=e.toString();for(const e of[...null!=t?[t]:[],...n.window.visibleTextEditors])if(e.document.uri.toString()===i&&null!=e?.viewColumn)return e}(e);return null!=i?(t?.preserveFocus||await n.window.showTextDocument(i.document,{...t,viewColumn:i.viewColumn}),i):b(e,{viewColumn:n.window.activeTextEditor?.viewColumn,...t})}function d(e){const t=new Map(e.map((e=>[e.toString(),e])));for(const e of n.window.visibleTextEditors)null!=e?.viewColumn&&t.delete(e.document.uri.toString());for(const e of t.values())(0,l.dO)(r.nA.Open,e,{background:!0,preview:!1})}function p(e){const t=n.window.activeTextEditor;return null!=t&&t.document===e?t:void 0}function m(){return!o.DN.get("advanced.quickPick.closeOnFocusOut")}function g(){return 0!==n.window.visibleTextEditors.length&&n.window.visibleTextEditors.some((e=>y(e)))}function f(e){const t=n.window.activeTextEditor;return null!=t&&t.document===e}function w(e){return e.kind===n.ColorThemeKind.Dark||e.kind===n.ColorThemeKind.HighContrast}function _(e){return e.kind===n.ColorThemeKind.Light||e.kind===n.ColorThemeKind.HighContrastLight}function v(e){return e.scheme===r.sN.Virtual||e.scheme===r.sN.GitHub}function y(e){const t=e.document.uri.scheme;return t!==r.sN.Output&&t!==r.sN.DebugConsole}async function b(e,t={}){const{rethrow:i,...o}=t;try{if((0,s.uy)(e)&&(e=e.documentUri()),e.scheme===r.sN.GitLens&&r.ZY[(0,c.DZ)(e.fsPath)])return void await(0,l.dO)(r.nA.Open,e);const t=await n.workspace.openTextDocument(e);return n.window.showTextDocument(t,{preserveFocus:!1,preview:!0,viewColumn:n.ViewColumn.Active,...o})}catch(t){if((t?.toString()??"").includes("File seems to be binary and cannot be opened as text"))return void await(0,l.dO)(r.nA.Open,e);if(i)throw t;return void a.Yd.error(t,"openEditor")}}async function C(e,t,i,o=!0){o&&null==n.window.tabGroups.activeTabGroup.activeTab&&(o=!1),await(0,l.dO)(r.nA.OpenWalkthrough,{category:`${e}#${t}`,step:i?`${e}#${t}#${i}`:void 0},o)}var S=(e=>(e.CurrentWindow="currentWindow",e.NewWindow="newWindow",e.AddToWorkspace="addToWorkspace",e))(S||{});function k(e,t={location:"currentWindow"}){if("addToWorkspace"!==t?.location)(0,l.dO)(r.nA.OpenFolder,e,{forceNewWindow:"newWindow"===t?.location});else{const i=n.workspace.workspaceFolders?.length??0;n.workspace.updateWorkspaceFolders(i,0,{uri:e,name:t?.name})}}function P(){let e;switch(n.env.appName){case"Visual Studio Code - Insiders":e="code-insiders --wait --reuse-window";break;case"Visual Studio Code - Exploration":e="code-exploration --wait --reuse-window";break;case"VSCodium":e="codium --wait --reuse-window";break;default:e="code --wait --reuse-window"}return e}},4550:(e,t,i)=>{i.d(t,{L5:()=>s,mL:()=>r,qu:()=>o});var n=i(3620);function o(e,t){return"string"==typeof e&&(e=r(e)),"string"==typeof t&&(t=r(t)),e.major>t.major?1:e.major<t.major?-1:e.minor>t.minor?1:e.minor<t.minor?-1:e.patch>t.patch?1:e.patch<t.patch?-1:void 0===e.pre&&void 0!==t.pre?1:void 0!==e.pre&&void 0===t.pre?-1:void 0!==e.pre&&void 0!==t.pre?(0,n.zY)(e.pre,t.pre):0}function r(e){const[t,i]=e.split("-"),[n,o,r]=t.split(".");return function(e,t,i,n){return{major:"string"==typeof e?parseInt(e,10):e,minor:"string"==typeof t?parseInt(t,10):t,patch:null==i?0:"string"==typeof i?parseInt(i,10):i,pre:n}}(n,o,r,i)}function s(e,t){if(null==e)return!1;const[i,n]=t.split(" ");if("="===i)return 0===o(e,n);if(">"===i)return o(e,n)>0;if(">="===i)return o(e,n)>=0;if("<"===i)return o(e,n)<0;if("<="===i)return o(e,n)<=0;throw new Error(`Unknown operator: ${i}`)}},2020:(e,t,i)=>{var n;i.r(t),i.d(t,{OpenTelemetryProvider:()=>OpenTelemetryProvider}),function(e){e[e.INTERNAL=0]="INTERNAL",e[e.SERVER=1]="SERVER",e[e.CLIENT=2]="CLIENT",e[e.PRODUCER=3]="PRODUCER",e[e.CONSUMER=4]="CONSUMER"}(n||(n={}));var o="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:"object"==typeof i.g?i.g:{},r="1.4.0",s=/^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;var a=function(e){var t=new Set([e]),i=new Set,n=e.match(s);if(!n)return function(){return!1};var o=+n[1],r=+n[2],a=+n[3];if(null!=n[4])return function(t){return t===e};function l(e){return i.add(e),!1}function c(e){return t.add(e),!0}return function(e){if(t.has(e))return!0;if(i.has(e))return!1;var n=e.match(s);if(!n)return l(e);var h=+n[1],u=+n[2],d=+n[3];return null!=n[4]||o!==h?l(e):0===o?r===u&&a<=d?c(e):l(e):r<=u?c(e):l(e)}}(r),l=r.split(".")[0],c=Symbol.for("opentelemetry.js.api."+l),h=o;function u(e,t,i,n){var o;void 0===n&&(n=!1);var s=h[c]=null!==(o=h[c])&&void 0!==o?o:{version:r};if(!n&&s[e]){var a=new Error("@opentelemetry/api: Attempted duplicate registration of API: "+e);return i.error(a.stack||a.message),!1}if(s.version!==r){a=new Error("@opentelemetry/api: All API registration versions must match");return i.error(a.stack||a.message),!1}return s[e]=t,i.debug("@opentelemetry/api: Registered a global for "+e+" v"+r+"."),!0}function d(e){var t,i,n=null===(t=h[c])||void 0===t?void 0:t.version;if(n&&a(n))return null===(i=h[c])||void 0===i?void 0:i[e]}function p(e,t){t.debug("@opentelemetry/api: Unregistering a global for "+e+" v"+r+".");var i=h[c];i&&delete i[e]}var m,g=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},f=function(e,t,i){if(i||2===arguments.length)for(var n,o=0,r=t.length;o<r;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))},w=function(){function e(e){this._namespace=e.namespace||"DiagComponentLogger"}return e.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return _("debug",this._namespace,e)},e.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return _("error",this._namespace,e)},e.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return _("info",this._namespace,e)},e.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return _("warn",this._namespace,e)},e.prototype.verbose=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return _("verbose",this._namespace,e)},e}();function _(e,t,i){var n=d("diag");if(n)return i.unshift(t),n[e].apply(n,f([],g(i),!1))}!function(e){e[e.NONE=0]="NONE",e[e.ERROR=30]="ERROR",e[e.WARN=50]="WARN",e[e.INFO=60]="INFO",e[e.DEBUG=70]="DEBUG",e[e.VERBOSE=80]="VERBOSE",e[e.ALL=9999]="ALL"}(m||(m={}));var v=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},y=function(e,t,i){if(i||2===arguments.length)for(var n,o=0,r=t.length;o<r;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))},b="diag",C=function(){function e(){function e(e){return function(){for(var t=[],i=0;i<arguments.length;i++)t[i]=arguments[i];var n=d("diag");if(n)return n[e].apply(n,y([],v(t),!1))}}var t=this;t.setLogger=function(e,i){var n,o,r;if(void 0===i&&(i={logLevel:m.INFO}),e===t){var s=new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");return t.error(null!==(n=s.stack)&&void 0!==n?n:s.message),!1}"number"==typeof i&&(i={logLevel:i});var a=d("diag"),l=function(e,t){function i(i,n){var o=t[i];return"function"==typeof o&&e>=n?o.bind(t):function(){}}return e<m.NONE?e=m.NONE:e>m.ALL&&(e=m.ALL),t=t||{},{error:i("error",m.ERROR),warn:i("warn",m.WARN),info:i("info",m.INFO),debug:i("debug",m.DEBUG),verbose:i("verbose",m.VERBOSE)}}(null!==(o=i.logLevel)&&void 0!==o?o:m.INFO,e);if(a&&!i.suppressOverrideMessage){var c=null!==(r=(new Error).stack)&&void 0!==r?r:"<failed to generate stacktrace>";a.warn("Current logger will be overwritten from "+c),l.warn("Current logger will overwrite one already registered from "+c)}return u("diag",l,t,!0)},t.disable=function(){p(b,t)},t.createComponentLogger=function(e){return new w(e)},t.verbose=e("verbose"),t.debug=e("debug"),t.info=e("info"),t.warn=e("warn"),t.error=e("error")}return e.instance=function(){return this._instance||(this._instance=new e),this._instance},e}(),S=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},k=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},P=function(){function e(e){this._entries=e?new Map(e):new Map}return e.prototype.getEntry=function(e){var t=this._entries.get(e);if(t)return Object.assign({},t)},e.prototype.getAllEntries=function(){return Array.from(this._entries.entries()).map((function(e){var t=S(e,2);return[t[0],t[1]]}))},e.prototype.setEntry=function(t,i){var n=new e(this._entries);return n._entries.set(t,i),n},e.prototype.removeEntry=function(t){var i=new e(this._entries);return i._entries.delete(t),i},e.prototype.removeEntries=function(){for(var t,i,n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];var r=new e(this._entries);try{for(var s=k(n),a=s.next();!a.done;a=s.next()){var l=a.value;r._entries.delete(l)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(i=s.return)&&i.call(s)}finally{if(t)throw t.error}}return r},e.prototype.clear=function(){return new e},e}(),R=Symbol("BaggageEntryMetadata"),D=C.instance();function $(e){return void 0===e&&(e={}),new P(new Map(Object.entries(e)))}var T,F="=",x=";",O=",",A="baggage",I=8192,E=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s};function N(e){var t=e.split(x);if(!(t.length<=0)){var i=t.shift();if(i){var n=i.split(F);if(2===n.length){var o,r,s=decodeURIComponent(n[0].trim()),a=decodeURIComponent(n[1].trim());return t.length>0&&("string"!=typeof(r=t.join(x))&&(D.error("Cannot create baggage metadata from unknown type: "+typeof r),r=""),o={__TYPE__:R,toString:function(){return r}}),{key:s,value:a,metadata:o}}}}}function U(e){return"string"!=typeof e||0===e.length?{}:e.split(O).map((function(e){return N(e)})).filter((function(e){return void 0!==e&&e.value.length>0})).reduce((function(e,t){return e[t.key]=t.value,e}),{})}!function(e){e.AlwaysOff="always_off",e.AlwaysOn="always_on",e.ParentBasedAlwaysOff="parentbased_always_off",e.ParentBasedAlwaysOn="parentbased_always_on",e.ParentBasedTraceIdRatio="parentbased_traceidratio",e.TraceIdRatio="traceidratio"}(T||(T={}));var L="object"==typeof globalThis?globalThis:"object"==typeof self?self:"object"==typeof window?window:"object"==typeof i.g?i.g:{},M=",",W=["OTEL_SDK_DISABLED"];function B(e){return W.indexOf(e)>-1}var G=["OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_JAEGER_AGENT_PORT"];function V(e){return G.indexOf(e)>-1}var H=["OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS"];function q(e){return H.indexOf(e)>-1}var j=1/0,Y=128,Q={OTEL_SDK_DISABLED:!1,CONTAINER_NAME:"",ECS_CONTAINER_METADATA_URI_V4:"",ECS_CONTAINER_METADATA_URI:"",HOSTNAME:"",KUBERNETES_SERVICE_HOST:"",NAMESPACE:"",OTEL_BSP_EXPORT_TIMEOUT:3e4,OTEL_BSP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BSP_MAX_QUEUE_SIZE:2048,OTEL_BSP_SCHEDULE_DELAY:5e3,OTEL_EXPORTER_JAEGER_AGENT_HOST:"",OTEL_EXPORTER_JAEGER_AGENT_PORT:6832,OTEL_EXPORTER_JAEGER_ENDPOINT:"",OTEL_EXPORTER_JAEGER_PASSWORD:"",OTEL_EXPORTER_JAEGER_USER:"",OTEL_EXPORTER_OTLP_ENDPOINT:"",OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:"",OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:"",OTEL_EXPORTER_OTLP_HEADERS:"",OTEL_EXPORTER_OTLP_TRACES_HEADERS:"",OTEL_EXPORTER_OTLP_METRICS_HEADERS:"",OTEL_EXPORTER_OTLP_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_TRACES_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_METRICS_TIMEOUT:1e4,OTEL_EXPORTER_ZIPKIN_ENDPOINT:"http://localhost:9411/api/v2/spans",OTEL_LOG_LEVEL:m.INFO,OTEL_NO_PATCH_MODULES:[],OTEL_PROPAGATORS:["tracecontext","baggage"],OTEL_RESOURCE_ATTRIBUTES:"",OTEL_SERVICE_NAME:"",OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT:j,OTEL_ATTRIBUTE_COUNT_LIMIT:Y,OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT:j,OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT:Y,OTEL_SPAN_EVENT_COUNT_LIMIT:128,OTEL_SPAN_LINK_COUNT_LIMIT:128,OTEL_TRACES_EXPORTER:"",OTEL_TRACES_SAMPLER:T.ParentBasedAlwaysOn,OTEL_TRACES_SAMPLER_ARG:"",OTEL_EXPORTER_OTLP_INSECURE:"",OTEL_EXPORTER_OTLP_TRACES_INSECURE:"",OTEL_EXPORTER_OTLP_METRICS_INSECURE:"",OTEL_EXPORTER_OTLP_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_COMPRESSION:"",OTEL_EXPORTER_OTLP_TRACES_COMPRESSION:"",OTEL_EXPORTER_OTLP_METRICS_COMPRESSION:"",OTEL_EXPORTER_OTLP_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE:"cumulative"};function z(e,t,i){if(void 0!==i[e]){var n=String(i[e]);t[e]="true"===n.toLowerCase()}}function K(e,t,i,n,o){if(void 0===n&&(n=-1/0),void 0===o&&(o=1/0),void 0!==i[e]){var r=Number(i[e]);isNaN(r)||(t[e]=r<n?n:r>o?o:r)}}function J(e,t,i,n){void 0===n&&(n=M);var o=i[e];"string"==typeof o&&(t[e]=o.split(n).map((function(e){return e.trim()})))}var X={ALL:m.ALL,VERBOSE:m.VERBOSE,DEBUG:m.DEBUG,INFO:m.INFO,WARN:m.WARN,ERROR:m.ERROR,NONE:m.NONE};function Z(e,t,i){var n=i[e];if("string"==typeof n){var o=X[n.toUpperCase()];null!=o&&(t[e]=o)}}function ee(e){var t={};for(var i in Q){var n=i;if("OTEL_LOG_LEVEL"===n)Z(n,t,e);else if(B(n))z(n,t,e);else if(V(n))K(n,t,e);else if(q(n))J(n,t,e);else{var o=e[n];null!=o&&(t[n]=String(o))}}return t}function te(){var e=ee(L);return Object.assign({},Q,e)}var ie=C.instance(),ne=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},oe=1e4;function re(e){return"number"==typeof e?e<=0?se(e,oe):e:function(){var e,t=Number(null!==(e=te().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT)&&void 0!==e?e:te().OTEL_EXPORTER_OTLP_TIMEOUT);return t<=0?se(t,oe):t}()}function se(e,t){return ie.warn("Timeout must be greater than 0",e),t}var ae,le=function(){function e(){var e=this;this._promise=new Promise((function(t,i){e._resolve=t,e._reject=i}))}return Object.defineProperty(e.prototype,"promise",{get:function(){return this._promise},enumerable:!1,configurable:!0}),e.prototype.resolve=function(e){this._resolve(e)},e.prototype.reject=function(e){this._reject(e)},e}(),ce=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},he=function(e,t,i){if(i||2===arguments.length)for(var n,o=0,r=t.length;o<r;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))},ue=function(){function e(e,t){this._callback=e,this._that=t,this._isCalled=!1,this._deferred=new le}return Object.defineProperty(e.prototype,"isCalled",{get:function(){return this._isCalled},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"promise",{get:function(){return this._deferred.promise},enumerable:!1,configurable:!0}),e.prototype.call=function(){for(var e,t=this,i=[],n=0;n<arguments.length;n++)i[n]=arguments[n];if(!this._isCalled){this._isCalled=!0;try{Promise.resolve((e=this._callback).call.apply(e,he([this._that],ce(i),!1))).then((function(e){return t._deferred.resolve(e)}),(function(e){return t._deferred.reject(e)}))}catch(e){this._deferred.reject(e)}}return this._deferred.promise},e}();!function(e){e[e.SUCCESS=0]="SUCCESS",e[e.FAILED=1]="FAILED"}(ae||(ae={}));var de,pe=function(){function e(e){void 0===e&&(e={}),this._sendingPromises=[],this.url=this.getDefaultUrl(e),"string"==typeof e.hostname&&(this.hostname=e.hostname),this.shutdown=this.shutdown.bind(this),this._shutdownOnce=new ue(this._shutdown,this),this._concurrencyLimit="number"==typeof e.concurrencyLimit?e.concurrencyLimit:1/0,this.timeoutMillis=re(e.timeoutMillis),this.onInit(e)}return e.prototype.export=function(e,t){this._shutdownOnce.isCalled?t({code:ae.FAILED,error:new Error("Exporter has been shutdown")}):this._sendingPromises.length>=this._concurrencyLimit?t({code:ae.FAILED,error:new Error("Concurrent export limit reached")}):this._export(e).then((function(){t({code:ae.SUCCESS})})).catch((function(e){t({code:ae.FAILED,error:e})}))},e.prototype._export=function(e){var t=this;return new Promise((function(i,n){try{ie.debug("items to be sent",e),t.send(e,i,n)}catch(e){n(e)}}))},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype._shutdown=function(){return ie.debug("shutdown started"),this.onShutdown(),Promise.all(this._sendingPromises).then((function(){}))},e}(),me=(de=function(e,t){return de=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},de(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function i(){this.constructor=e}de(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}),ge=function(e){function t(t,i,n){var o=e.call(this,t)||this;return o.name="OTLPExporterError",o.data=n,o.code=i,o}return me(t,e),t}(Error),fe=function(){return fe=Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},fe.apply(this,arguments)},we=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s};var _e=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),ve=function(e){function t(t){void 0===t&&(t={});var i=e.call(this,t)||this;return i._useXHR=!1,i._useXHR=!!t.headers||"function"!=typeof navigator.sendBeacon,i._useXHR?i._headers=Object.assign({},function(e){void 0===e&&(e={});var t={};return Object.entries(e).forEach((function(e){var i=ne(e,2),n=i[0],o=i[1];void 0!==o?t[n]=String(o):ie.warn('Header "'+n+'" has wrong value and will be ignored')})),t}(t.headers),U(te().OTEL_EXPORTER_OTLP_HEADERS)):i._headers={},i}return _e(t,e),t.prototype.onInit=function(){window.addEventListener("unload",this.shutdown)},t.prototype.onShutdown=function(){window.removeEventListener("unload",this.shutdown)},t.prototype.send=function(e,t,i){var n=this;if(this._shutdownOnce.isCalled)ie.debug("Shutdown already started. Cannot send objects");else{var o=this.convert(e),r=JSON.stringify(o),s=new Promise((function(e,t){n._useXHR?function(e,t,i,n,o,r){var s,a=setTimeout((function(){s=!0,l.abort()}),n),l=new XMLHttpRequest;l.open("POST",t),Object.entries(fe(fe({},{Accept:"application/json","Content-Type":"application/json"}),i)).forEach((function(e){var t=we(e,2),i=t[0],n=t[1];l.setRequestHeader(i,n)})),l.send(e),l.onreadystatechange=function(){if(l.readyState===XMLHttpRequest.DONE)if(l.status>=200&&l.status<=299)clearTimeout(a),ie.debug("xhr success",e),o();else if(s){var t=new ge("Request Timeout",l.status);r(t)}else t=new ge("Failed to export with XHR (status: "+l.status+")",l.status),clearTimeout(a),r(t)}}(r,n.url,n._headers,n.timeoutMillis,e,t):function(e,t,i,n,o){navigator.sendBeacon(t,new Blob([e],i))?(ie.debug("sendBeacon - can send",e),n()):o(new ge("sendBeacon - cannot send "+e))}(r,n.url,{type:"application/json"},e,t)})).then(t,i);this._sendingPromises.push(s);var a=function(){var e=n._sendingPromises.indexOf(s);n._sendingPromises.splice(e,1)};s.then(a,a)}},t}(pe),ye=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s};function be(e){return Object.keys(e).map((function(t){return Ce(t,e[t])}))}function Ce(e,t){return{key:e,value:Se(t)}}function Se(e){var t=typeof e;return"string"===t?{stringValue:e}:"number"===t?Number.isInteger(e)?{intValue:e}:{doubleValue:e}:"boolean"===t?{boolValue:e}:e instanceof Uint8Array?{bytesValue:e}:Array.isArray(e)?{arrayValue:{values:e.map(Se)}}:"object"===t&&null!=e?{kvlistValue:{values:Object.entries(e).map((function(e){var t=ye(e,2);return Ce(t[0],t[1])}))}}:{}}var ke=performance,Pe=9,Re=Math.pow(10,6),De=Math.pow(10,Pe);function $e(e){var t=e/1e3;return[Math.trunc(t),Math.round(e%1e3*Re)]}function Te(){var e=ke.timeOrigin;if("number"!=typeof e){var t=ke;e=t.timing&&t.timing.fetchStart}return e}function Fe(e){return Ie($e(Te()),$e("number"==typeof e?e:ke.now()))}function xe(e){return e[0]*De+e[1]}function Oe(e){return Array.isArray(e)&&2===e.length&&"number"==typeof e[0]&&"number"==typeof e[1]}function Ae(e){return Oe(e)||"number"==typeof e||e instanceof Date}function Ie(e,t){var i=[e[0]+t[0],e[1]+t[1]];return i[1]>=De&&(i[1]-=De,i[0]+=1),i}function Ee(e){for(var t=e.length,i="",n=0;n<t;n+=2){var o=e.substring(n,n+2),r=parseInt(o,16);i+=String.fromCharCode(r)}return btoa(i)}function Ne(e,t){var i,n=e.spanContext(),o=e.status,r=t?e.parentSpanId:null!=e.parentSpanId?Ee(e.parentSpanId):void 0;return{traceId:t?n.traceId:Ee(n.traceId),spanId:t?n.spanId:Ee(n.spanId),parentSpanId:r,traceState:null===(i=n.traceState)||void 0===i?void 0:i.serialize(),name:e.name,kind:null==e.kind?0:e.kind+1,startTimeUnixNano:xe(e.startTime),endTimeUnixNano:xe(e.endTime),attributes:be(e.attributes),droppedAttributesCount:0,events:e.events.map(Ue),droppedEventsCount:0,status:{code:o.code,message:o.message},links:e.links.map((function(e){return function(e,t){var i;return{attributes:e.attributes?be(e.attributes):[],spanId:t?e.context.spanId:Ee(e.context.spanId),traceId:t?e.context.traceId:Ee(e.context.traceId),traceState:null===(i=e.context.traceState)||void 0===i?void 0:i.serialize(),droppedAttributesCount:0}}(e,t)})),droppedLinksCount:0}}function Ue(e){return{attributes:e.attributes?be(e.attributes):[],name:e.name,timeUnixNano:xe(e.time),droppedAttributesCount:0}}var Le=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Me=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s};function We(e,t){for(var i=function(e){var t,i,n=new Map;try{for(var o=Le(e),r=o.next();!r.done;r=o.next()){var s=r.value,a=n.get(s.resource);a||(a=new Map,n.set(s.resource,a));var l=s.instrumentationLibrary.name+"@"+(s.instrumentationLibrary.version||"")+":"+(s.instrumentationLibrary.schemaUrl||""),c=a.get(l);c||(c=[],a.set(l,c)),c.push(s)}}catch(e){t={error:e}}finally{try{r&&!r.done&&(i=o.return)&&i.call(o)}finally{if(t)throw t.error}}return n}(e),n=[],o=i.entries(),r=o.next();!r.done;){for(var s=Me(r.value,2),a=s[0],l=[],c=s[1].values(),h=c.next();!h.done;){var u=h.value;if(u.length>0){var d=u[0].instrumentationLibrary,p=d.name,m=d.version,g=d.schemaUrl,f=u.map((function(e){return Ne(e,t)}));l.push({scope:{name:p,version:m},spans:f,schemaUrl:g})}h=c.next()}var w={resource:{attributes:be(a.attributes),droppedAttributesCount:0},scopeSpans:l,schemaUrl:void 0};n.push(w),r=o.next()}return n}var Be,Ge=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),Ve="v1/traces",He="http://localhost:4318/"+Ve,qe=function(e){function t(t){void 0===t&&(t={});var i=e.call(this,t)||this;return i._headers=Object.assign(i._headers,U(te().OTEL_EXPORTER_OTLP_TRACES_HEADERS)),i}return Ge(t,e),t.prototype.convert=function(e){return function(e,t){return{resourceSpans:We(e,t)}}(e,!0)},t.prototype.getDefaultUrl=function(e){return"string"==typeof e.url?e.url:te().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length>0?function(e){try{var t=new URL(e);return""===t.pathname&&(t.pathname=t.pathname+"/"),t.toString()}catch(t){return ie.warn("Could not parse export URL: '"+e+"'"),e}}(te().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT):te().OTEL_EXPORTER_OTLP_ENDPOINT.length>0?(t=te().OTEL_EXPORTER_OTLP_ENDPOINT,i=Ve,t.endsWith("/")||(t+="/"),t+i):He;var t,i},t}(ve),je="deployment.environment",Ye="device.id",Qe="os.type",ze="process.runtime.name",Ke="service.name",Je="service.version",Xe="telemetry.sdk.name",Ze="telemetry.sdk.language",et="telemetry.sdk.version",tt=((Be={})[Xe]="opentelemetry",Be[ze]="browser",Be[Ze]="webjs",Be[et]="1.9.1",Be);var it=function(){function e(e){this.attributes=e}return e.empty=function(){return e.EMPTY},e.default=function(){var t;return new e(((t={})[Ke]="unknown_service",t[Ze]=tt[Ze],t[Xe]=tt[Xe],t[et]=tt[et],t))},e.prototype.merge=function(t){return t&&Object.keys(t.attributes).length?new e(Object.assign({},this.attributes,t.attributes)):this},e.EMPTY=new e({}),e}();function nt(e){return Symbol.for(e)}var ot,rt=new function e(t){var i=this;i._currentContext=t?new Map(t):new Map,i.getValue=function(e){return i._currentContext.get(e)},i.setValue=function(t,n){var o=new e(i._currentContext);return o._currentContext.set(t,n),o},i.deleteValue=function(t){var n=new e(i._currentContext);return n._currentContext.delete(t),n}},st=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},at=function(e,t,i){if(i||2===arguments.length)for(var n,o=0,r=t.length;o<r;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))},lt=function(){function e(){}return e.prototype.active=function(){return rt},e.prototype.with=function(e,t,i){for(var n=[],o=3;o<arguments.length;o++)n[o-3]=arguments[o];return t.call.apply(t,at([i],st(n),!1))},e.prototype.bind=function(e,t){return t},e.prototype.enable=function(){return this},e.prototype.disable=function(){return this},e}(),ct=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},ht=function(e,t,i){if(i||2===arguments.length)for(var n,o=0,r=t.length;o<r;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))},ut="context",dt=new lt,pt=function(){function e(){}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalContextManager=function(e){return u(ut,e,C.instance())},e.prototype.active=function(){return this._getContextManager().active()},e.prototype.with=function(e,t,i){for(var n,o=[],r=3;r<arguments.length;r++)o[r-3]=arguments[r];return(n=this._getContextManager()).with.apply(n,ht([e,t,i],ct(o),!1))},e.prototype.bind=function(e,t){return this._getContextManager().bind(e,t)},e.prototype._getContextManager=function(){return d(ut)||dt},e.prototype.disable=function(){this._getContextManager().disable(),p(ut,C.instance())},e}();!function(e){e[e.NONE=0]="NONE",e[e.SAMPLED=1]="SAMPLED"}(ot||(ot={}));var mt="0000000000000000",gt="00000000000000000000000000000000",ft={traceId:gt,spanId:mt,traceFlags:ot.NONE},wt=function(){function e(e){void 0===e&&(e=ft),this._spanContext=e}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return this},e.prototype.setAttributes=function(e){return this},e.prototype.addEvent=function(e,t){return this},e.prototype.setStatus=function(e){return this},e.prototype.updateName=function(e){return this},e.prototype.end=function(e){},e.prototype.isRecording=function(){return!1},e.prototype.recordException=function(e,t){},e}(),_t=nt("OpenTelemetry Context Key SPAN");function vt(e){return e.getValue(_t)||void 0}function yt(){return vt(pt.getInstance().active())}function bt(e,t){return e.setValue(_t,t)}function Ct(e){return e.deleteValue(_t)}function St(e,t){return bt(e,new wt(t))}function kt(e){var t;return null===(t=vt(e))||void 0===t?void 0:t.spanContext()}var Pt=/^([0-9a-f]{32})$/i,Rt=/^[0-9a-f]{16}$/i;function Dt(e){return Pt.test(e)&&e!==gt}function $t(e){return Dt(e.traceId)&&(t=e.spanId,Rt.test(t)&&t!==mt);var t}function Tt(e){return new wt(e)}var Ft=pt.getInstance(),xt=function(){function e(){}return e.prototype.startSpan=function(e,t,i){if(void 0===i&&(i=Ft.active()),Boolean(null==t?void 0:t.root))return new wt;var n,o=i&&kt(i);return"object"==typeof(n=o)&&"string"==typeof n.spanId&&"string"==typeof n.traceId&&"number"==typeof n.traceFlags&&$t(o)?new wt(o):new wt},e.prototype.startActiveSpan=function(e,t,i,n){var o,r,s;if(!(arguments.length<2)){2===arguments.length?s=t:3===arguments.length?(o=t,s=i):(o=t,r=i,s=n);var a=null!=r?r:Ft.active(),l=this.startSpan(e,o,a),c=bt(a,l);return Ft.with(c,s,void 0,l)}},e}();var Ot=new xt,At=function(){function e(e,t,i,n){this._provider=e,this.name=t,this.version=i,this.options=n}return e.prototype.startSpan=function(e,t,i){return this._getTracer().startSpan(e,t,i)},e.prototype.startActiveSpan=function(e,t,i,n){var o=this._getTracer();return Reflect.apply(o.startActiveSpan,o,arguments)},e.prototype._getTracer=function(){if(this._delegate)return this._delegate;var e=this._provider.getDelegateTracer(this.name,this.version,this.options);return e?(this._delegate=e,this._delegate):Ot},e}(),It=new(function(){function e(){}return e.prototype.getTracer=function(e,t,i){return new xt},e}()),Et=function(){function e(){}return e.prototype.getTracer=function(e,t,i){var n;return null!==(n=this.getDelegateTracer(e,t,i))&&void 0!==n?n:new At(this,e,t,i)},e.prototype.getDelegate=function(){var e;return null!==(e=this._delegate)&&void 0!==e?e:It},e.prototype.setDelegate=function(e){this._delegate=e},e.prototype.getDelegateTracer=function(e,t,i){var n;return null===(n=this._delegate)||void 0===n?void 0:n.getTracer(e,t,i)},e}(),Nt="trace",Ut=function(){function e(){this._proxyTracerProvider=new Et,this.wrapSpanContext=Tt,this.isSpanContextValid=$t,this.deleteSpan=Ct,this.getSpan=vt,this.getActiveSpan=yt,this.getSpanContext=kt,this.setSpan=bt,this.setSpanContext=St}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalTracerProvider=function(e){var t=u(Nt,this._proxyTracerProvider,C.instance());return t&&this._proxyTracerProvider.setDelegate(e),t},e.prototype.getTracerProvider=function(){return d(Nt)||this._proxyTracerProvider},e.prototype.getTracer=function(e,t){return this.getTracerProvider().getTracer(e,t)},e.prototype.disable=function(){p(Nt,C.instance()),this._proxyTracerProvider=new Et},e}().getInstance(),Lt=pt.getInstance(),Mt=function(){function e(){}return e.prototype.inject=function(e,t){},e.prototype.extract=function(e,t){return e},e.prototype.fields=function(){return[]},e}(),Wt={get:function(e,t){if(null!=e)return e[t]},keys:function(e){return null==e?[]:Object.keys(e)}},Bt={set:function(e,t,i){null!=e&&(e[t]=i)}},Gt=nt("OpenTelemetry Baggage Key");function Vt(e){return e.getValue(Gt)||void 0}function Ht(){return Vt(pt.getInstance().active())}function qt(e,t){return e.setValue(Gt,t)}function jt(e){return e.deleteValue(Gt)}var Yt,Qt,zt="propagation",Kt=new Mt,Jt=function(){function e(){this.createBaggage=$,this.getBaggage=Vt,this.getActiveBaggage=Ht,this.setBaggage=qt,this.deleteBaggage=jt}return e.getInstance=function(){return this._instance||(this._instance=new e),this._instance},e.prototype.setGlobalPropagator=function(e){return u(zt,e,C.instance())},e.prototype.inject=function(e,t,i){return void 0===i&&(i=Bt),this._getGlobalPropagator().inject(e,t,i)},e.prototype.extract=function(e,t,i){return void 0===i&&(i=Wt),this._getGlobalPropagator().extract(e,t,i)},e.prototype.fields=function(){return this._getGlobalPropagator().fields()},e.prototype.disable=function(){p(zt,C.instance())},e.prototype._getGlobalPropagator=function(){return d(zt)||Kt},e}().getInstance(),Xt="[object Object]",Zt="[object Null]",ei="[object Undefined]",ti=Function.prototype.toString,ii=ti.call(Object),ni=(Yt=Object.getPrototypeOf,Qt=Object,function(e){return Yt(Qt(e))}),oi=Object.prototype,ri=oi.hasOwnProperty,si=Symbol?Symbol.toStringTag:void 0,ai=oi.toString;function li(e){if(!function(e){return null!=e&&"object"==typeof e}(e)||function(e){if(null==e)return void 0===e?ei:Zt;return si&&si in Object(e)?function(e){var t=ri.call(e,si),i=e[si],n=!1;try{e[si]=void 0,n=!0}catch(e){}var o=ai.call(e);n&&(t?e[si]=i:delete e[si]);return o}(e):function(e){return ai.call(e)}(e)}(e)!==Xt)return!1;var t=ni(e);if(null===t)return!0;var i=ri.call(t,"constructor")&&t.constructor;return"function"==typeof i&&i instanceof i&&ti.call(i)===ii}var ci=20;function hi(e){return pi(e)?e.slice():e}function ui(e,t,i,n){var o;if(void 0===i&&(i=0),!(i>ci)){if(i++,fi(e)||fi(t)||mi(t))o=hi(t);else if(pi(e)){if(o=e.slice(),pi(t))for(var r=0,s=t.length;r<s;r++)o.push(hi(t[r]));else if(gi(t))for(r=0,s=(a=Object.keys(t)).length;r<s;r++){o[l=a[r]]=hi(t[l])}}else if(gi(e))if(gi(t)){if(!function(e,t){if(!li(e)||!li(t))return!1;return!0}(e,t))return t;o=Object.assign({},e);var a;for(r=0,s=(a=Object.keys(t)).length;r<s;r++){var l,c=t[l=a[r]];if(fi(c))void 0===c?delete o[l]:o[l]=c;else{var h=o[l],u=c;if(di(e,l,n)||di(t,l,n))delete o[l];else{if(gi(h)&&gi(u)){var d=n.get(h)||[],p=n.get(u)||[];d.push({obj:e,key:l}),p.push({obj:t,key:l}),n.set(h,d),n.set(u,p)}o[l]=ui(o[l],c,i,n)}}}}else o=t;return o}}function di(e,t,i){for(var n=i.get(e[t])||[],o=0,r=n.length;o<r;o++){var s=n[o];if(s.key===t&&s.obj===e)return!0}return!1}function pi(e){return Array.isArray(e)}function mi(e){return"function"==typeof e}function gi(e){return!fi(e)&&!pi(e)&&!mi(e)&&"object"==typeof e}function fi(e){return"string"==typeof e||"number"==typeof e||"boolean"==typeof e||void 0===e||e instanceof Date||e instanceof RegExp||null===e}var wi=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},_i=function(){function e(e){var t;void 0===e&&(e={}),this._propagators=null!==(t=e.propagators)&&void 0!==t?t:[],this._fields=Array.from(new Set(this._propagators.map((function(e){return"function"==typeof e.fields?e.fields():[]})).reduce((function(e,t){return e.concat(t)}),[])))}return e.prototype.inject=function(e,t,i){var n,o;try{for(var r=wi(this._propagators),s=r.next();!s.done;s=r.next()){var a=s.value;try{a.inject(e,t,i)}catch(e){ie.warn("Failed to inject with "+a.constructor.name+". Err: "+e.message)}}}catch(e){n={error:e}}finally{try{s&&!s.done&&(o=r.return)&&o.call(r)}finally{if(n)throw n.error}}},e.prototype.extract=function(e,t,i){return this._propagators.reduce((function(e,n){try{return n.extract(e,t,i)}catch(e){ie.warn("Failed to inject with "+n.constructor.name+". Err: "+e.message)}return e}),e)},e.prototype.fields=function(){return this._fields.slice()},e}(),vi=nt("OpenTelemetry SDK Context Key SUPPRESS_TRACING");function yi(e){return e.setValue(vi,!0)}function bi(e){return!0===e.getValue(vi)}var Ci="[_0-9a-z-*/]",Si=new RegExp("^(?:"+("[a-z]"+Ci+"{0,255}")+"|"+("[a-z0-9]"+Ci+"{0,240}@[a-z]"+Ci+"{0,13}")+")$"),ki=/^[ -~]{0,255}[!-~]$/,Pi=/,|=/;var Ri=function(){function e(e){this._internalState=new Map,e&&this._parse(e)}return e.prototype.set=function(e,t){var i=this._clone();return i._internalState.has(e)&&i._internalState.delete(e),i._internalState.set(e,t),i},e.prototype.unset=function(e){var t=this._clone();return t._internalState.delete(e),t},e.prototype.get=function(e){return this._internalState.get(e)},e.prototype.serialize=function(){var e=this;return this._keys().reduce((function(t,i){return t.push(i+"="+e.get(i)),t}),[]).join(",")},e.prototype._parse=function(e){e.length>512||(this._internalState=e.split(",").reverse().reduce((function(e,t){var i=t.trim(),n=i.indexOf("=");if(-1!==n){var o=i.slice(0,n),r=i.slice(n+1,t.length);(function(e){return Si.test(e)})(o)&&function(e){return ki.test(e)&&!Pi.test(e)}(r)&&e.set(o,r)}return e}),new Map),this._internalState.size>32&&(this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,32))))},e.prototype._keys=function(){return Array.from(this._internalState.keys()).reverse()},e.prototype._clone=function(){var t=new e;return t._internalState=new Map(this._internalState),t},e}(),Di="traceparent",$i="tracestate",Ti=new RegExp("^\\s?((?!ff)[\\da-f]{2})-((?![0]{32})[\\da-f]{32})-((?![0]{16})[\\da-f]{16})-([\\da-f]{2})(-.*)?\\s?$");var Fi,xi=function(){function e(){}return e.prototype.inject=function(e,t,i){var n=Ut.getSpanContext(e);if(n&&!bi(e)&&$t(n)){var o="00-"+n.traceId+"-"+n.spanId+"-0"+Number(n.traceFlags||ot.NONE).toString(16);i.set(t,Di,o),n.traceState&&i.set(t,$i,n.traceState.serialize())}},e.prototype.extract=function(e,t,i){var n=i.get(t,Di);if(!n)return e;var o=Array.isArray(n)?n[0]:n;if("string"!=typeof o)return e;var r=function(e){var t=Ti.exec(e);return t?"00"===t[1]&&t[5]?null:{traceId:t[2],spanId:t[3],traceFlags:parseInt(t[4],16)}:null}(o);if(!r)return e;r.isRemote=!0;var s=i.get(t,$i);if(s){var a=Array.isArray(s)?s.join(","):s;r.traceState=new Ri("string"==typeof a?a:void 0)}return Ut.setSpanContext(e,r)},e.prototype.fields=function(){return[Di,$i]},e}(),Oi=function(){function e(){}return e.prototype.inject=function(e,t,i){var n=Jt.getBaggage(e);if(n&&!bi(e)){var o=function(e){return e.getAllEntries().map((function(e){var t=E(e,2),i=t[0],n=t[1],o=encodeURIComponent(i)+"="+encodeURIComponent(n.value);return void 0!==n.metadata&&(o+=x+n.metadata.toString()),o}))}(n).filter((function(e){return e.length<=4096})).slice(0,180),r=function(e){return e.reduce((function(e,t){var i=""+e+(""!==e?O:"")+t;return i.length>I?e:i}),"")}(o);r.length>0&&i.set(t,A,r)}},e.prototype.extract=function(e,t,i){var n=i.get(t,A),o=Array.isArray(n)?n.join(O):n;if(!o)return e;var r={};return 0===o.length?e:(o.split(O).forEach((function(e){var t=N(e);if(t){var i={value:t.value};t.metadata&&(i.metadata=t.metadata),r[t.key]=i}})),0===Object.entries(r).length?e:Jt.setBaggage(e,Jt.createBaggage(r)))},e.prototype.fields=function(){return[A]},e}();!function(e){e[e.NOT_RECORD=0]="NOT_RECORD",e[e.RECORD=1]="RECORD",e[e.RECORD_AND_SAMPLED=2]="RECORD_AND_SAMPLED"}(Fi||(Fi={}));var Ai,Ii=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},Ei=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s};function Ni(e){var t,i,n={};if("object"!=typeof e||null==e)return n;try{for(var o=Ii(Object.entries(e)),r=o.next();!r.done;r=o.next()){var s=Ei(r.value,2),a=s[0],l=s[1];Ui(a)?Li(l)?Array.isArray(l)?n[a]=l.slice():n[a]=l:ie.warn("Invalid attribute value set for key: "+a):ie.warn("Invalid attribute key: "+a)}}catch(e){t={error:e}}finally{try{r&&!r.done&&(i=o.return)&&i.call(o)}finally{if(t)throw t.error}}return n}function Ui(e){return"string"==typeof e&&e.length>0}function Li(e){return null==e||(Array.isArray(e)?function(e){var t,i,n;try{for(var o=Ii(e),r=o.next();!r.done;r=o.next()){var s=r.value;if(null!=s){if(!n){if(Mi(s)){n=typeof s;continue}return!1}if(typeof s!==n)return!1}}}catch(e){t={error:e}}finally{try{r&&!r.done&&(i=o.return)&&i.call(o)}finally{if(t)throw t.error}}return!0}(e):Mi(e))}function Mi(e){switch(typeof e){case"number":case"boolean":case"string":return!0}return!1}!function(e){e[e.UNSET=0]="UNSET",e[e.OK=1]="OK",e[e.ERROR=2]="ERROR"}(Ai||(Ai={}));var Wi,Bi="exception.type",Gi="exception.message",Vi="exception.stacktrace",Hi=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},qi=function(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var n,o,r=i.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)s.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(i=r.return)&&i.call(r)}finally{if(o)throw o.error}}return s},ji=function(){function e(e,t,i,n,o,r,s,a,l){void 0===s&&(s=[]),this.attributes={},this.links=[],this.events=[],this.status={code:Ai.UNSET},this.endTime=[0,0],this._ended=!1,this._duration=[-1,-1],this.name=i,this._spanContext=n,this.parentSpanId=r,this.kind=o,this.links=s;var c=Date.now();this._performanceStartTime=ke.now(),this._performanceOffset=c-(this._performanceStartTime+Te()),this._startTimeProvided=null!=a,this.startTime=this._getTime(null!=a?a:c),this.resource=e.resource,this.instrumentationLibrary=e.instrumentationLibrary,this._spanLimits=e.getSpanLimits(),this._spanProcessor=e.getActiveSpanProcessor(),this._spanProcessor.onStart(this,t),this._attributeValueLengthLimit=this._spanLimits.attributeValueLengthLimit||0}return e.prototype.spanContext=function(){return this._spanContext},e.prototype.setAttribute=function(e,t){return null==t||this._isSpanEnded()?this:0===e.length?(ie.warn("Invalid attribute key: "+e),this):Li(t)?(Object.keys(this.attributes).length>=this._spanLimits.attributeCountLimit&&!Object.prototype.hasOwnProperty.call(this.attributes,e)||(this.attributes[e]=this._truncateToSize(t)),this):(ie.warn("Invalid attribute value set for key: "+e),this)},e.prototype.setAttributes=function(e){var t,i;try{for(var n=Hi(Object.entries(e)),o=n.next();!o.done;o=n.next()){var r=qi(o.value,2),s=r[0],a=r[1];this.setAttribute(s,a)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(i=n.return)&&i.call(n)}finally{if(t)throw t.error}}return this},e.prototype.addEvent=function(e,t,i){if(this._isSpanEnded())return this;if(0===this._spanLimits.eventCountLimit)return ie.warn("No events allowed."),this;this.events.length>=this._spanLimits.eventCountLimit&&(ie.warn("Dropping extra events."),this.events.shift()),Ae(t)&&(Ae(i)||(i=t),t=void 0);var n=Ni(t);return this.events.push({name:e,attributes:n,time:this._getTime(i)}),this},e.prototype.setStatus=function(e){return this._isSpanEnded()||(this.status=e),this},e.prototype.updateName=function(e){return this._isSpanEnded()||(this.name=e),this},e.prototype.end=function(e){this._isSpanEnded()?ie.error("You can only call end() on a span once."):(this._ended=!0,this.endTime=this._getTime(e),this._duration=function(e,t){var i=t[0]-e[0],n=t[1]-e[1];return n<0&&(i-=1,n+=De),[i,n]}(this.startTime,this.endTime),this._duration[0]<0&&(ie.warn("Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.",this.startTime,this.endTime),this.endTime=this.startTime.slice(),this._duration=[0,0]),this._spanProcessor.onEnd(this))},e.prototype._getTime=function(e){if("number"==typeof e&&e<ke.now())return Fe(e+this._performanceOffset);if("number"==typeof e)return $e(e);if(e instanceof Date)return $e(e.getTime());if(Oe(e))return e;if(this._startTimeProvided)return $e(Date.now());var t=ke.now()-this._performanceStartTime;return Ie(this.startTime,$e(t))},e.prototype.isRecording=function(){return!1===this._ended},e.prototype.recordException=function(e,t){var i={};"string"==typeof e?i[Gi]=e:e&&(e.code?i[Bi]=e.code.toString():e.name&&(i[Bi]=e.name),e.message&&(i[Gi]=e.message),e.stack&&(i[Vi]=e.stack)),i[Bi]||i[Gi]?this.addEvent("exception",i,t):ie.warn("Failed to record an exception "+e)},Object.defineProperty(e.prototype,"duration",{get:function(){return this._duration},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"ended",{get:function(){return this._ended},enumerable:!1,configurable:!0}),e.prototype._isSpanEnded=function(){return this._ended&&ie.warn("Can not execute the operation on ended Span {traceId: "+this._spanContext.traceId+", spanId: "+this._spanContext.spanId+"}"),this._ended},e.prototype._truncateToLimitUtil=function(e,t){return e.length<=t?e:e.substr(0,t)},e.prototype._truncateToSize=function(e){var t=this,i=this._attributeValueLengthLimit;return i<=0?(ie.warn("Attribute value limit must be positive, got "+i),e):"string"==typeof e?this._truncateToLimitUtil(e,i):Array.isArray(e)?e.map((function(e){return"string"==typeof e?t._truncateToLimitUtil(e,i):e})):e},e}();!function(e){e[e.NOT_RECORD=0]="NOT_RECORD",e[e.RECORD=1]="RECORD",e[e.RECORD_AND_SAMPLED=2]="RECORD_AND_SAMPLED"}(Wi||(Wi={}));var Yi=function(){function e(){}return e.prototype.shouldSample=function(){return{decision:Wi.NOT_RECORD}},e.prototype.toString=function(){return"AlwaysOffSampler"},e}(),Qi=function(){function e(){}return e.prototype.shouldSample=function(){return{decision:Wi.RECORD_AND_SAMPLED}},e.prototype.toString=function(){return"AlwaysOnSampler"},e}();var zi=function(e){ie.error(function(e){return"string"==typeof e?e:JSON.stringify(function(e){for(var t={},i=e;null!==i;)Object.getOwnPropertyNames(i).forEach((function(e){if(!t[e]){var n=i[e];n&&(t[e]=String(n))}})),i=Object.getPrototypeOf(i);return t}(e))}(e))};function Ki(e){try{zi(e)}catch(e){}}var Ji=function(){function e(e){var t,i,n,o;this._root=e.root,this._root||(Ki(new Error("ParentBasedSampler must have a root sampler configured")),this._root=new Qi),this._remoteParentSampled=null!==(t=e.remoteParentSampled)&&void 0!==t?t:new Qi,this._remoteParentNotSampled=null!==(i=e.remoteParentNotSampled)&&void 0!==i?i:new Yi,this._localParentSampled=null!==(n=e.localParentSampled)&&void 0!==n?n:new Qi,this._localParentNotSampled=null!==(o=e.localParentNotSampled)&&void 0!==o?o:new Yi}return e.prototype.shouldSample=function(e,t,i,n,o,r){var s=Ut.getSpanContext(e);return s&&$t(s)?s.isRemote?s.traceFlags&ot.SAMPLED?this._remoteParentSampled.shouldSample(e,t,i,n,o,r):this._remoteParentNotSampled.shouldSample(e,t,i,n,o,r):s.traceFlags&ot.SAMPLED?this._localParentSampled.shouldSample(e,t,i,n,o,r):this._localParentNotSampled.shouldSample(e,t,i,n,o,r):this._root.shouldSample(e,t,i,n,o,r)},e.prototype.toString=function(){return"ParentBased{root="+this._root.toString()+", remoteParentSampled="+this._remoteParentSampled.toString()+", remoteParentNotSampled="+this._remoteParentNotSampled.toString()+", localParentSampled="+this._localParentSampled.toString()+", localParentNotSampled="+this._localParentNotSampled.toString()+"}"},e}(),Xi=function(){function e(e){void 0===e&&(e=0),this._ratio=e,this._ratio=this._normalize(e),this._upperBound=Math.floor(4294967295*this._ratio)}return e.prototype.shouldSample=function(e,t){return{decision:Dt(t)&&this._accumulate(t)<this._upperBound?Wi.RECORD_AND_SAMPLED:Wi.NOT_RECORD}},e.prototype.toString=function(){return"TraceIdRatioBased{"+this._ratio+"}"},e.prototype._normalize=function(e){return"number"!=typeof e||isNaN(e)?0:e>=1?1:e<=0?0:e},e.prototype._accumulate=function(e){for(var t=0,i=0;i<e.length/8;i++){var n=8*i;t=(t^parseInt(e.slice(n,n+8),16))>>>0}return t},e}(),Zi=te(),en=T.AlwaysOn,tn=1;function nn(){return{sampler:on(Zi),forceFlushTimeoutMillis:3e4,generalLimits:{attributeValueLengthLimit:te().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:te().OTEL_ATTRIBUTE_COUNT_LIMIT},spanLimits:{attributeValueLengthLimit:te().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:te().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,linkCountLimit:te().OTEL_SPAN_LINK_COUNT_LIMIT,eventCountLimit:te().OTEL_SPAN_EVENT_COUNT_LIMIT}}}function on(e){switch(void 0===e&&(e=te()),e.OTEL_TRACES_SAMPLER){case T.AlwaysOn:return new Qi;case T.AlwaysOff:return new Yi;case T.ParentBasedAlwaysOn:return new Ji({root:new Qi});case T.ParentBasedAlwaysOff:return new Ji({root:new Yi});case T.TraceIdRatio:return new Xi(rn(e));case T.ParentBasedTraceIdRatio:return new Ji({root:new Xi(rn(e))});default:return ie.error('OTEL_TRACES_SAMPLER value "'+e.OTEL_TRACES_SAMPLER+" invalid, defaulting to "+en+'".'),new Qi}}function rn(e){if(void 0===e.OTEL_TRACES_SAMPLER_ARG||""===e.OTEL_TRACES_SAMPLER_ARG)return ie.error("OTEL_TRACES_SAMPLER_ARG is blank, defaulting to "+tn+"."),tn;var t=Number(e.OTEL_TRACES_SAMPLER_ARG);return isNaN(t)?(ie.error("OTEL_TRACES_SAMPLER_ARG="+e.OTEL_TRACES_SAMPLER_ARG+" was given, but it is invalid, defaulting to "+tn+"."),tn):t<0||t>1?(ie.error("OTEL_TRACES_SAMPLER_ARG="+e.OTEL_TRACES_SAMPLER_ARG+" was given, but it is out of range ([0..1]), defaulting to "+tn+"."),tn):t}function sn(e){var t,i,n,o,r,s,a,l,c,h,u,d,p=Object.assign({},e.spanLimits),m="undefined"!=typeof process?ee(process.env):ee(L);return p.attributeCountLimit=null!==(s=null!==(r=null!==(o=null!==(i=null===(t=e.spanLimits)||void 0===t?void 0:t.attributeCountLimit)&&void 0!==i?i:null===(n=e.generalLimits)||void 0===n?void 0:n.attributeCountLimit)&&void 0!==o?o:m.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT)&&void 0!==r?r:m.OTEL_ATTRIBUTE_COUNT_LIMIT)&&void 0!==s?s:Y,p.attributeValueLengthLimit=null!==(d=null!==(u=null!==(h=null!==(l=null===(a=e.spanLimits)||void 0===a?void 0:a.attributeValueLengthLimit)&&void 0!==l?l:null===(c=e.generalLimits)||void 0===c?void 0:c.attributeValueLengthLimit)&&void 0!==h?h:m.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT)&&void 0!==u?u:m.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT)&&void 0!==d?d:j,Object.assign({},e,{spanLimits:p})}var an=8,ln=16,cn=function(){this.generateTraceId=un(ln),this.generateSpanId=un(an)},hn=Array(32);function un(e){return function(){for(var t=0;t<2*e;t++)hn[t]=Math.floor(16*Math.random())+48,hn[t]>=58&&(hn[t]+=39);return String.fromCharCode.apply(null,hn.slice(0,2*e))}}var dn=function(){function e(e,t,i){this._tracerProvider=i;var n,o,r,s,a=(n=t,o={sampler:on()},r=nn(),(s=Object.assign({},r,o,n)).generalLimits=Object.assign({},r.generalLimits,n.generalLimits||{}),s.spanLimits=Object.assign({},r.spanLimits,n.spanLimits||{}),s);this._sampler=a.sampler,this._generalLimits=a.generalLimits,this._spanLimits=a.spanLimits,this._idGenerator=t.idGenerator||new cn,this.resource=i.resource,this.instrumentationLibrary=e}return e.prototype.startSpan=function(e,t,i){var o,r;void 0===t&&(t={}),void 0===i&&(i=Lt.active()),t.root&&(i=Ut.deleteSpan(i));var s=Ut.getSpan(i);if(bi(i))return ie.debug("Instrumentation suppressed, returning Noop Span"),Ut.wrapSpanContext(ft);var a,l,c,h=null==s?void 0:s.spanContext(),u=this._idGenerator.generateSpanId();h&&Ut.isSpanContextValid(h)?(a=h.traceId,l=h.traceState,c=h.spanId):a=this._idGenerator.generateTraceId();var d=null!==(o=t.kind)&&void 0!==o?o:n.INTERNAL,p=(null!==(r=t.links)&&void 0!==r?r:[]).map((function(e){return{context:e.context,attributes:Ni(e.attributes)}})),m=Ni(t.attributes),g=this._sampler.shouldSample(i,a,e,d,m,p),f={traceId:a,spanId:u,traceFlags:g.decision===Fi.RECORD_AND_SAMPLED?ot.SAMPLED:ot.NONE,traceState:l};if(g.decision===Fi.NOT_RECORD)return ie.debug("Recording is off, propagating context in a non-recording span"),Ut.wrapSpanContext(f);var w=new ji(this,i,e,f,d,c,p,t.startTime),_=Ni(Object.assign(m,g.attributes));return w.setAttributes(_),w},e.prototype.startActiveSpan=function(e,t,i,n){var o,r,s;if(!(arguments.length<2)){2===arguments.length?s=t:3===arguments.length?(o=t,s=i):(o=t,r=i,s=n);var a=null!=r?r:Lt.active(),l=this.startSpan(e,o,a),c=Ut.setSpan(a,l);return Lt.with(c,s,void 0,l)}},e.prototype.getGeneralLimits=function(){return this._generalLimits},e.prototype.getSpanLimits=function(){return this._spanLimits},e.prototype.getActiveSpanProcessor=function(){return this._tracerProvider.getActiveSpanProcessor()},e}(),pn=function(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],n=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},mn=function(){function e(e){this._spanProcessors=e}return e.prototype.forceFlush=function(){var e,t,i=[];try{for(var n=pn(this._spanProcessors),o=n.next();!o.done;o=n.next()){var r=o.value;i.push(r.forceFlush())}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}return new Promise((function(e){Promise.all(i).then((function(){e()})).catch((function(t){Ki(t||new Error("MultiSpanProcessor: forceFlush failed")),e()}))}))},e.prototype.onStart=function(e,t){var i,n;try{for(var o=pn(this._spanProcessors),r=o.next();!r.done;r=o.next()){r.value.onStart(e,t)}}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}},e.prototype.onEnd=function(e){var t,i;try{for(var n=pn(this._spanProcessors),o=n.next();!o.done;o=n.next()){o.value.onEnd(e)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(i=n.return)&&i.call(n)}finally{if(t)throw t.error}}},e.prototype.shutdown=function(){var e,t,i=[];try{for(var n=pn(this._spanProcessors),o=n.next();!o.done;o=n.next()){var r=o.value;i.push(r.shutdown())}}catch(t){e={error:t}}finally{try{o&&!o.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}return new Promise((function(e,t){Promise.all(i).then((function(){e()}),t)}))},e}(),gn=function(){function e(){}return e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){},e.prototype.shutdown=function(){return Promise.resolve()},e.prototype.forceFlush=function(){return Promise.resolve()},e}();var fn,wn=function(){function e(e,t){this._exporter=e,this._finishedSpans=[];var i=te();this._maxExportBatchSize="number"==typeof(null==t?void 0:t.maxExportBatchSize)?t.maxExportBatchSize:i.OTEL_BSP_MAX_EXPORT_BATCH_SIZE,this._maxQueueSize="number"==typeof(null==t?void 0:t.maxQueueSize)?t.maxQueueSize:i.OTEL_BSP_MAX_QUEUE_SIZE,this._scheduledDelayMillis="number"==typeof(null==t?void 0:t.scheduledDelayMillis)?t.scheduledDelayMillis:i.OTEL_BSP_SCHEDULE_DELAY,this._exportTimeoutMillis="number"==typeof(null==t?void 0:t.exportTimeoutMillis)?t.exportTimeoutMillis:i.OTEL_BSP_EXPORT_TIMEOUT,this._shutdownOnce=new ue(this._shutdown,this),this._maxExportBatchSize>this._maxQueueSize&&(ie.warn("BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize"),this._maxExportBatchSize=this._maxQueueSize)}return e.prototype.forceFlush=function(){return this._shutdownOnce.isCalled?this._shutdownOnce.promise:this._flushAll()},e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){this._shutdownOnce.isCalled||0!=(e.spanContext().traceFlags&ot.SAMPLED)&&this._addToBuffer(e)},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype._shutdown=function(){var e=this;return Promise.resolve().then((function(){return e.onShutdown()})).then((function(){return e._flushAll()})).then((function(){return e._exporter.shutdown()}))},e.prototype._addToBuffer=function(e){this._finishedSpans.length>=this._maxQueueSize||(this._finishedSpans.push(e),this._maybeStartTimer())},e.prototype._flushAll=function(){var e=this;return new Promise((function(t,i){for(var n=[],o=0,r=Math.ceil(e._finishedSpans.length/e._maxExportBatchSize);o<r;o++)n.push(e._flushOneBatch());Promise.all(n).then((function(){t()})).catch(i)}))},e.prototype._flushOneBatch=function(){var e=this;return this._clearTimer(),0===this._finishedSpans.length?Promise.resolve():new Promise((function(t,i){var n=setTimeout((function(){i(new Error("Timeout"))}),e._exportTimeoutMillis);Lt.with(yi(Lt.active()),(function(){e._exporter.export(e._finishedSpans.splice(0,e._maxExportBatchSize),(function(e){var o;clearTimeout(n),e.code===ae.SUCCESS?t():i(null!==(o=e.error)&&void 0!==o?o:new Error("BatchSpanProcessor: span export failed"))}))}))}))},e.prototype._maybeStartTimer=function(){var e=this;void 0===this._timer&&(this._timer=setTimeout((function(){e._flushOneBatch().then((function(){e._finishedSpans.length>0&&(e._clearTimer(),e._maybeStartTimer())})).catch((function(e){Ki(e)}))}),this._scheduledDelayMillis),this._timer)},e.prototype._clearTimer=function(){void 0!==this._timer&&(clearTimeout(this._timer),this._timer=void 0)},e}(),_n=function(){var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};return function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Class extends value "+String(i)+" is not a constructor or null");function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),vn=function(e){function t(t,i){var n=e.call(this,t,i)||this;return n.onInit(i),n}return _n(t,e),t.prototype.onInit=function(e){var t=this;!0!==(null==e?void 0:e.disableAutoFlushOnDocumentHide)&&"undefined"!=typeof document&&(this._visibilityChangeListener=function(){"hidden"===document.visibilityState&&t.forceFlush()},this._pageHideListener=function(){t.forceFlush()},document.addEventListener("visibilitychange",this._visibilityChangeListener),document.addEventListener("pagehide",this._pageHideListener))},t.prototype.onShutdown=function(){"undefined"!=typeof document&&(this._visibilityChangeListener&&document.removeEventListener("visibilitychange",this._visibilityChangeListener),this._pageHideListener&&document.removeEventListener("pagehide",this._pageHideListener))},t}(wn);!function(e){e[e.resolved=0]="resolved",e[e.timeout=1]="timeout",e[e.error=2]="error",e[e.unresolved=3]="unresolved"}(fn||(fn={}));var yn=function(){function e(e){var t;void 0===e&&(e={}),this._registeredSpanProcessors=[],this._tracers=new Map;var i=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var i=e.shift(),n=new WeakMap;e.length>0;)i=ui(i,e.shift(),0,n);return i}({},nn(),sn(e));this.resource=null!==(t=i.resource)&&void 0!==t?t:it.empty(),this.resource=it.default().merge(this.resource),this._config=Object.assign({},i,{resource:this.resource});var n=this._buildExporterFromEnv();if(void 0!==n){var o=new vn(n);this.activeSpanProcessor=o}else this.activeSpanProcessor=new gn}return e.prototype.getTracer=function(e,t,i){var n=e+"@"+(t||"")+":"+((null==i?void 0:i.schemaUrl)||"");return this._tracers.has(n)||this._tracers.set(n,new dn({name:e,version:t,schemaUrl:null==i?void 0:i.schemaUrl},this._config,this)),this._tracers.get(n)},e.prototype.addSpanProcessor=function(e){0===this._registeredSpanProcessors.length&&this.activeSpanProcessor.shutdown().catch((function(e){return ie.error("Error while trying to shutdown current span processor",e)})),this._registeredSpanProcessors.push(e),this.activeSpanProcessor=new mn(this._registeredSpanProcessors)},e.prototype.getActiveSpanProcessor=function(){return this.activeSpanProcessor},e.prototype.register=function(e){void 0===e&&(e={}),Ut.setGlobalTracerProvider(this),void 0===e.propagator&&(e.propagator=this._buildPropagatorFromEnv()),e.contextManager&&Lt.setGlobalContextManager(e.contextManager),e.propagator&&Jt.setGlobalPropagator(e.propagator)},e.prototype.forceFlush=function(){var e=this._config.forceFlushTimeoutMillis,t=this._registeredSpanProcessors.map((function(t){return new Promise((function(i){var n,o=setTimeout((function(){i(new Error("Span processor did not completed within timeout period of "+e+" ms")),n=fn.timeout}),e);t.forceFlush().then((function(){clearTimeout(o),n!==fn.timeout&&(n=fn.resolved,i(n))})).catch((function(e){clearTimeout(o),n=fn.error,i(e)}))}))}));return new Promise((function(e,i){Promise.all(t).then((function(t){var n=t.filter((function(e){return e!==fn.resolved}));n.length>0?i(n):e()})).catch((function(e){return i([e])}))}))},e.prototype.shutdown=function(){return this.activeSpanProcessor.shutdown()},e.prototype._getPropagator=function(e){var t;return null===(t=this.constructor._registeredPropagators.get(e))||void 0===t?void 0:t()},e.prototype._getSpanExporter=function(e){var t;return null===(t=this.constructor._registeredExporters.get(e))||void 0===t?void 0:t()},e.prototype._buildPropagatorFromEnv=function(){var e=this,t=Array.from(new Set(te().OTEL_PROPAGATORS)),i=t.map((function(t){var i=e._getPropagator(t);return i||ie.warn('Propagator "'+t+'" requested through environment variable is unavailable.'),i})).reduce((function(e,t){return t&&e.push(t),e}),[]);return 0===i.length?void 0:1===t.length?i[0]:new _i({propagators:i})},e.prototype._buildExporterFromEnv=function(){var e=te().OTEL_TRACES_EXPORTER;if("none"!==e&&""!==e){var t=this._getSpanExporter(e);return t||ie.error('Exporter "'+e+'" requested through environment variable is unavailable.'),t}},e._registeredPropagators=new Map([["tracecontext",function(){return new xi}],["baggage",function(){return new Oi}]]),e._registeredExporters=new Map,e}();var bn={_export:function(e,t){return new Promise((function(i){Lt.with(yi(Lt.active()),(function(){e.export(t,(function(e){i(e)}))}))}))}},Cn=function(){function e(e){this._exporter=e,this._shutdownOnce=new ue(this._shutdown,this)}return e.prototype.forceFlush=function(){return Promise.resolve()},e.prototype.onStart=function(e,t){},e.prototype.onEnd=function(e){this._shutdownOnce.isCalled||0!=(e.spanContext().traceFlags&ot.SAMPLED)&&bn._export(this._exporter,[e]).then((function(e){var t;e.code!==ae.SUCCESS&&Ki(null!==(t=e.error)&&void 0!==t?t:new Error("SimpleSpanProcessor: span export failed (status "+e+")"))})).catch((function(e){Ki(e)}))},e.prototype.shutdown=function(){return this._shutdownOnce.call()},e.prototype._shutdown=function(){return this._exporter.shutdown()},e}();class OpenTelemetryProvider{constructor(e,t,i){this._globalAttributes={},this.provider=new yn({resource:new it({[Ke]:"gitlens",[Je]:e.extensionVersion,[je]:e.env,[Ye]:e.machineId,[Qe]:e.platform,"extension.id":e.extensionId,"session.id":e.sessionId,language:e.language,"vscode.edition":e.vscodeEdition,"vscode.version":e.vscodeVersion,"vscode.host":e.vscodeHost,"vscode.remoteName":e.vscodeRemoteName,"vscode.shell":e.vscodeShell,"vscode.uiKind":e.vscodeUIKind})});const n=new qe({url:i?"https://otel-dev.gitkraken.com:4318/v1/traces":"https://otel.gitkraken.com:4318/v1/traces",compression:"gzip",httpAgentOptions:t?.options});this.provider.addSpanProcessor(i?new Cn(n):new vn(n)),this.tracer=this.provider.getTracer(e.extensionId)}dispose(){this.provider.shutdown()}sendEvent(e,t,i,o){const r=this.tracer.startSpan(e,{attributes:this._globalAttributes,kind:n.INTERNAL,startTime:i??Date.now()});null!=t&&r.setAttributes(t),r.end(o)}startEvent(e,t,i){const o=this.tracer.startSpan(e,{attributes:this._globalAttributes,kind:n.INTERNAL,startTime:i??Date.now()});return null!=t&&o.setAttributes(t),o}setGlobalAttributes(e){this._globalAttributes=Object.fromEntries(e)}}},6922:(e,t,i)=>{i.d(t,{CF:()=>SubscribeableViewNode,FZ:()=>RepositoriesSubscribeableNode,Jc:()=>v,LD:()=>P,On:()=>y,RW:()=>ViewRefFileNode,Re:()=>_,Td:()=>w,Te:()=>ViewFileNode,bT:()=>ViewRefNode,kP:()=>R,kr:()=>k,pp:()=>D,vb:()=>C});var n=i(9496),o=i(5255),r=i(7462),s=i(4321),a=i(3050),l=i(1529),c=i(1277),h=i(5432),u=i(4241),d=i(4486),p=i(3620),m=Object.defineProperty,g=Object.getOwnPropertyDescriptor,f=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?g(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&m(t,i,r),r},w=(e=>(e.ActiveFileHistory="gitlens:history:active:file",e.ActiveLineHistory="gitlens:history:active:line",e.AutolinkedItems="gitlens:autolinked:items",e.AutolinkedIssue="gitlens:autolinked:issue",e.AutolinkedItem="gitlens:autolinked:item",e.Branch="gitlens:branch",e.Branches="gitlens:branches",e.BranchStatusAheadOfUpstream="gitlens:status-branch:upstream:ahead",e.BranchStatusBehindUpstream="gitlens:status-branch:upstream:behind",e.BranchStatusNoUpstream="gitlens:status-branch:upstream:none",e.BranchStatusSameAsUpstream="gitlens:status-branch:upstream:same",e.BranchStatusFiles="gitlens:status-branch:files",e.Commit="gitlens:commit",e.Commits="gitlens:commits",e.Compare="gitlens:compare",e.CompareBranch="gitlens:compare:branch",e.ComparePicker="gitlens:compare:picker",e.ComparePickerWithRef="gitlens:compare:picker:ref",e.CompareResults="gitlens:compare:results",e.CompareResultsCommits="gitlens:compare:results:commits",e.Contributor="gitlens:contributor",e.Contributors="gitlens:contributors",e.DateMarker="gitlens:date-marker",e.File="gitlens:file",e.FileHistory="gitlens:history:file",e.Folder="gitlens:folder",e.LineHistory="gitlens:history:line",e.Merge="gitlens:merge",e.MergeConflictCurrentChanges="gitlens:merge-conflict:current",e.MergeConflictIncomingChanges="gitlens:merge-conflict:incoming",e.Message="gitlens:message",e.Pager="gitlens:pager",e.PullRequest="gitlens:pullrequest",e.Rebase="gitlens:rebase",e.Reflog="gitlens:reflog",e.ReflogRecord="gitlens:reflog-record",e.Remote="gitlens:remote",e.Remotes="gitlens:remotes",e.Repositories="gitlens:repositories",e.Repository="gitlens:repository",e.RepositoryFolder="gitlens:repo-folder",e.ResultsFile="gitlens:file:results",e.ResultsFiles="gitlens:results:files",e.SearchAndCompare="gitlens:searchAndCompare",e.SearchResults="gitlens:search:results",e.SearchResultsCommits="gitlens:search:results:commits",e.Stash="gitlens:stash",e.Stashes="gitlens:stashes",e.StatusFileCommits="gitlens:status:file:commits",e.StatusFiles="gitlens:status:files",e.StatusAheadOfUpstream="gitlens:status:upstream:ahead",e.StatusBehindUpstream="gitlens:status:upstream:behind",e.StatusNoUpstream="gitlens:status:upstream:none",e.StatusSameAsUpstream="gitlens:status:upstream:same",e.Tag="gitlens:tag",e.Tags="gitlens:tags",e.UncommittedFiles="gitlens:uncommitted:files",e.Worktree="gitlens:worktree",e.Worktrees="gitlens:worktrees",e))(w||{});let _=class{constructor(e,t,i){this.view=t,this.parent=i,this.splatted=!1,this._uri=e}toString(){const e=this.id;return`${(0,c.q4)(this)}${null!=e?`(${e})`:""}`}get uri(){return this._uri}getParent(){return this.parent?.splatted?this.parent?.getParent():this.parent}getCommand(){}triggerChange(e=!1,t=!1,i){return this.splatted&&null!=this.parent&&this.parent!==i?this.parent.triggerChange(e,t):this.view.refreshNode(this,e,t)}deleteState(e){if(null==this.id)throw new Error("Id is required to delete state");return this.view.nodeState.deleteState(this.id,e)}getState(e){if(null==this.id)throw new Error("Id is required to get state");return this.view.nodeState.getState(this.id,e)}storeState(e,t){if(null==this.id)throw new Error("Id is required to store state");this.view.nodeState.storeState(this.id,e,t)}};function v(e){return e instanceof _}f([(0,h.H)(((e=!1,t=!1,i)=>JSON.stringify([e,t,i?.toString()]))),(0,u.fF)()],_.prototype,"triggerChange",1),_=f([(0,u.hJ)(((e,t)=>`${t}${null!=e.id?`(${e.id})`:""}`))],_);class ViewFileNode extends _{constructor(e,t,i,n){super(e,t,i),this.parent=i,this.file=n}get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${this.file.path}`}}class ViewRefNode extends _{get repoPath(){return this.uri.repoPath}toString(){return`${super.toString()}:${s.Wb.toString(this.ref,!1)}`}}class ViewRefFileNode extends ViewFileNode{constructor(e,t,i,n){super(e,t,i,n)}toString(){return`${super.toString()}:${this.file.path}`}}function y(e){return(0,d.is)(e,"loadMore")}class SubscribeableViewNode extends _{constructor(e,t,i){super(e,t,i),this.loaded=!1,this._canSubscribe=!0,this._pendingReset=!1;const o=[this.view.onDidChangeVisibility(this.onVisibilityChanged,this),this.view.onDidChangeNodeCollapsibleState(this.onNodeCollapsibleStateChanged,this)];S(this.view)&&o.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged,this));const r=this.getTreeItem;this.getTreeItem=function(){return this.loaded=!0,this.ensureSubscription(),r.apply(this)};const s=this.getChildren;this.getChildren=function(){return this.loaded=!0,this.ensureSubscription(),s.apply(this)},this.disposable=n.Disposable.from(...o)}dispose(){this.unsubscribe(),this.disposable?.dispose()}async triggerChange(e=!1,t=!1){this.loaded&&(e&&!this.view.visible&&(this._pendingReset=e),await super.triggerChange(e,t))}get canSubscribe(){return this._canSubscribe}set canSubscribe(e){this._canSubscribe!==e&&(this._canSubscribe=e,this.ensureSubscription(),e&&this.triggerChange())}get requiresResetOnVisible(){let e=this._pendingReset;this._pendingReset=!1;const t=this.etag();return t!==this._etag&&(this._etag=t,e=!0),e}async unsubscribe(){if(this._etag=this.etag(),null!=this.subscription){const e=this.subscription;this.subscription=void 0,(await e)?.dispose()}}onAutoRefreshChanged(){this.onVisibilityChanged({visible:this.view.visible})}onNodeCollapsibleStateChanged(e){e.element===this?(this.collapsibleState=e.state,void 0!==this.onCollapsibleStateChanged&&this.onCollapsibleStateChanged(e.state)):e.element===this.parent&&void 0!==this.onParentCollapsibleStateChanged&&this.onParentCollapsibleStateChanged(e.state)}onVisibilityChanged(e){this.ensureSubscription(),e.visible&&this.triggerChange(this.requiresResetOnVisible)}async ensureSubscription(){this.canSubscribe&&this.view.visible&&(!S(this.view)||this.view.autoRefresh)?null==this.subscription&&(this.subscription=Promise.resolve(this.subscribe()),await this.subscription):await this.unsubscribe()}async resetSubscription(){await this.unsubscribe(),await this.ensureSubscription()}}f([(0,u.fF)()],SubscribeableViewNode.prototype,"dispose",1),f([(0,h.H)(),(0,u.fF)()],SubscribeableViewNode.prototype,"triggerChange",1),f([(0,u.fF)()],SubscribeableViewNode.prototype,"unsubscribe",1),f([(0,u.fF)()],SubscribeableViewNode.prototype,"onAutoRefreshChanged",1),f([(0,u.fF)()],SubscribeableViewNode.prototype,"onVisibilityChanged",1),f([(0,h.H)(),(0,u.fF)()],SubscribeableViewNode.prototype,"ensureSubscription",1),f([(0,h.H)(),(0,u.fF)()],SubscribeableViewNode.prototype,"resetSubscription",1);const b=class extends SubscribeableViewNode{constructor(e,t,i,n,o,r){super(e,t,i),this.repo=n,this.options=r,this.splatted=!0,this.splatted=o}static getId(e){return`gitlens${this.key}(${e})`}toClipboard(){return this.repo.path}get id(){return b.getId(this.repo.path)}async getTreeItem(){this.splatted=!1;const e=await this.repo.getBranch(),t=(e?.state.ahead??0)>0,i=(e?.state.behind??0)>0,r=t||i||this.repo.starred||this.view.container.git.isRepositoryForEditor(this.repo),s=new n.TreeItem(this.repo.formattedName??this.uri.repoPath??"",r?n.TreeItemCollapsibleState.Expanded:n.TreeItemCollapsibleState.Collapsed);if(s.contextValue="gitlens:repo-folder"+(this.repo.starred?"+starred":""),t&&(s.contextValue+="+ahead"),i&&(s.contextValue+="+behind"),null!=e&&this.options?.showBranchAndLastFetched){const t=await this.repo.getLastFetched()??0,i=e.getTrackingStatus();let r;if(s.description=`${i?`${i}${(0,p.vk)(o.NE.Dot,1,1)}`:""}${e.name}${t?`${(0,p.vk)(o.NE.Dot,1,1)}Last fetched ${l._j.formatLastFetched(t)}`:""}`,null!=e.upstream){const t=a.ss.getHighlanderProviders(await this.view.container.git.getRemotesWithProviders(e.repoPath));r=t?.length?t[0].name:void 0}else{r=(await e.getRemoteWithProvider())?.provider?.name}s.tooltip=new n.MarkdownString(`${this.repo.formattedName??this.uri.repoPath??""}${t?`${(0,p.vk)(o.NE.Dash,2,2)}Last fetched ${l._j.formatLastFetched(t,!1)}`:""}${this.repo.formattedName?`\n${this.uri.repoPath}`:""}\n\nCurrent branch $(git-branch) ${e.name}${null!=e.upstream?` is ${e.getTrackingStatus({empty:e.upstream.missing?`missing upstream $(git-branch) ${e.upstream.name}`:`up to date with $(git-branch) ${e.upstream.name}${r?` on ${r}`:""}`,expand:!0,icons:!0,separator:", ",suffix:` $(git-branch) ${e.upstream.name}${r?` on ${r}`:""}`})}`:`hasn't been published to ${r??"a remote"}`}`,!0)}else s.tooltip=`${this.repo.formattedName?`${this.repo.formattedName}\n${this.uri.repoPath}`:this.uri.repoPath??""}`;return s}async getSplattedChild(){return null==this.child&&await this.getChildren(),this.child}async refresh(e=!1){await(this.child?.triggerChange(e,!1,this)),await this.ensureSubscription()}async star(){await this.repo.star()}async unstar(){await this.repo.unstar()}subscribe(){return this.repo.onDidChange(this.onRepositoryChanged,this)}etag(){return this.repo.etag}onRepositoryChanged(e){if(e.changed(l.I6.Closed,l.du.Any))return this.dispose(),void this.parent?.triggerChange(!0);e.changed(l.I6.Starred,l.du.Any)?this.parent?.triggerChange(!0):this.changed(e)&&(this.loaded?this:this.parent??this).triggerChange(!0)}};let C=b;C.key=":repository",f([(0,h.H)(),(0,u.fF)()],C.prototype,"refresh",1),f([(0,u.cM)()],C.prototype,"star",1),f([(0,u.cM)()],C.prototype,"unstar",1),f([(0,u.fF)()],C.prototype,"subscribe",1),f([(0,u.fF)({args:{0:e=>e.toString()}})],C.prototype,"onRepositoryChanged",1);class RepositoriesSubscribeableNode extends SubscribeableViewNode{constructor(e){super(r.Wj,e),this.splatted=!0}async getSplattedChild(){return null==this.children&&await this.getChildren(),1===this.children?.length?this.children[0]:void 0}refresh(e=!1){if(e&&null!=this.children){for(const e of this.children)e.dispose();this.children=void 0}}etag(){return(0,d.NX)(this.view.container.git.etag,this.view.container.subscription.etag)}subscribe(){return n.Disposable.from(this.view.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),this.view.container.subscription.onDidChange(this.onSubscriptionChanged,this))}onRepositoriesChanged(e){this.triggerChange(!0)}onSubscriptionChanged(e){e.current.plan!==e.previous.plan&&this.triggerChange(!0)}}function S(e){return(0,d.is)(e,"onDidChangeAutoRefresh")}function k(e){return"function"==typeof e.clear}function P(e){return"function"==typeof e.edit}function R(e){return"function"==typeof e.dismissNode}function D(e){return function(e){return null!=e&&"repoPath"in e&&"string"==typeof e.repoPath}(e)?e.repoPath:void 0}f([(0,h.H)(),(0,u.fF)()],RepositoriesSubscribeableNode.prototype,"refresh",1),f([(0,u.fF)()],RepositoriesSubscribeableNode.prototype,"subscribe",1)},3300:(e,t,i)=>{var n=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==i.g)return i.g;throw new Error("unable to locate global object")}();e.exports=t=n.fetch,n.fetch&&(t.default=n.fetch.bind(n)),t.Headers=n.Headers,t.Request=n.Request,t.Response=n.Response},778:(e,t,i)=>{var n=i(2479);function o(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function r(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},i=e.name||"Function wrapped with `once`";return t.onceError=i+" shouldn't be called more than once",t.called=!1,t}e.exports=n(o),e.exports.strict=n(r),o.proto=o((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return o(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return r(this)},configurable:!0})}))},6470:e=>{function t(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function i(e,t){for(var i,n="",o=0,r=-1,s=0,a=0;a<=e.length;++a){if(a<e.length)i=e.charCodeAt(a);else{if(47===i)break;i=47}if(47===i){if(r===a-1||1===s);else if(r!==a-1&&2===s){if(n.length<2||2!==o||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var l=n.lastIndexOf("/");if(l!==n.length-1){-1===l?(n="",o=0):o=(n=n.slice(0,l)).length-1-n.lastIndexOf("/"),r=a,s=0;continue}}else if(2===n.length||1===n.length){n="",o=0,r=a,s=0;continue}t&&(n.length>0?n+="/..":n="..",o=2)}else n.length>0?n+="/"+e.slice(r+1,a):n=e.slice(r+1,a),o=a-r-1;r=a,s=0}else 46===i&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var e,n="",o=!1,r=arguments.length-1;r>=-1&&!o;r--){var s;r>=0?s=arguments[r]:(void 0===e&&(e=process.cwd()),s=e),t(s),0!==s.length&&(n=s+"/"+n,o=47===s.charCodeAt(0))}return n=i(n,!o),o?n.length>0?"/"+n:"/":n.length>0?n:"."},normalize:function(e){if(t(e),0===e.length)return".";var n=47===e.charCodeAt(0),o=47===e.charCodeAt(e.length-1);return 0!==(e=i(e,!n)).length||n||(e="."),e.length>0&&o&&(e+="/"),n?"/"+e:e},isAbsolute:function(e){return t(e),e.length>0&&47===e.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var e,i=0;i<arguments.length;++i){var o=arguments[i];t(o),o.length>0&&(void 0===e?e=o:e+="/"+o)}return void 0===e?".":n.normalize(e)},relative:function(e,i){if(t(e),t(i),e===i)return"";if((e=n.resolve(e))===(i=n.resolve(i)))return"";for(var o=1;o<e.length&&47===e.charCodeAt(o);++o);for(var r=e.length,s=r-o,a=1;a<i.length&&47===i.charCodeAt(a);++a);for(var l=i.length-a,c=s<l?s:l,h=-1,u=0;u<=c;++u){if(u===c){if(l>c){if(47===i.charCodeAt(a+u))return i.slice(a+u+1);if(0===u)return i.slice(a+u)}else s>c&&(47===e.charCodeAt(o+u)?h=u:0===u&&(h=0));break}var d=e.charCodeAt(o+u);if(d!==i.charCodeAt(a+u))break;47===d&&(h=u)}var p="";for(u=o+h+1;u<=r;++u)u!==r&&47!==e.charCodeAt(u)||(0===p.length?p+="..":p+="/..");return p.length>0?p+i.slice(a+h):(a+=h,47===i.charCodeAt(a)&&++a,i.slice(a))},_makeLong:function(e){return e},dirname:function(e){if(t(e),0===e.length)return".";for(var i=e.charCodeAt(0),n=47===i,o=-1,r=!0,s=e.length-1;s>=1;--s)if(47===(i=e.charCodeAt(s))){if(!r){o=s;break}}else r=!1;return-1===o?n?"/":".":n&&1===o?"//":e.slice(0,o)},basename:function(e,i){if(void 0!==i&&"string"!=typeof i)throw new TypeError('"ext" argument must be a string');t(e);var n,o=0,r=-1,s=!0;if(void 0!==i&&i.length>0&&i.length<=e.length){if(i.length===e.length&&i===e)return"";var a=i.length-1,l=-1;for(n=e.length-1;n>=0;--n){var c=e.charCodeAt(n);if(47===c){if(!s){o=n+1;break}}else-1===l&&(s=!1,l=n+1),a>=0&&(c===i.charCodeAt(a)?-1==--a&&(r=n):(a=-1,r=l))}return o===r?r=l:-1===r&&(r=e.length),e.slice(o,r)}for(n=e.length-1;n>=0;--n)if(47===e.charCodeAt(n)){if(!s){o=n+1;break}}else-1===r&&(s=!1,r=n+1);return-1===r?"":e.slice(o,r)},extname:function(e){t(e);for(var i=-1,n=0,o=-1,r=!0,s=0,a=e.length-1;a>=0;--a){var l=e.charCodeAt(a);if(47!==l)-1===o&&(r=!1,o=a+1),46===l?-1===i?i=a:1!==s&&(s=1):-1!==i&&(s=-1);else if(!r){n=a+1;break}}return-1===i||-1===o||0===s||1===s&&i===o-1&&i===n+1?"":e.slice(i,o)},format:function(e){if(null===e||"object"!=typeof e)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof e);return function(e,t){var i=t.dir||t.root,n=t.base||(t.name||"")+(t.ext||"");return i?i===t.root?i+n:i+e+n:n}("/",e)},parse:function(e){t(e);var i={root:"",dir:"",base:"",ext:"",name:""};if(0===e.length)return i;var n,o=e.charCodeAt(0),r=47===o;r?(i.root="/",n=1):n=0;for(var s=-1,a=0,l=-1,c=!0,h=e.length-1,u=0;h>=n;--h)if(47!==(o=e.charCodeAt(h)))-1===l&&(c=!1,l=h+1),46===o?-1===s?s=h:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){a=h+1;break}return-1===s||-1===l||0===u||1===u&&s===l-1&&s===a+1?-1!==l&&(i.base=i.name=0===a&&r?e.slice(1,l):e.slice(a,l)):(0===a&&r?(i.name=e.slice(1,s),i.base=e.slice(1,l)):(i.name=e.slice(a,s),i.base=e.slice(a,l)),i.ext=e.slice(s,l)),a>0?i.dir=e.slice(0,a-1):r&&(i.dir="/"),i},sep:"/",delimiter:":",win32:null,posix:null};n.posix=n,e.exports=n},2479:e=>{e.exports=function e(t,i){if(t&&i)return e(t)(i);if("function"!=typeof t)throw new TypeError("need wrapper function");return Object.keys(t).forEach((function(e){n[e]=t[e]})),n;function n(){for(var e=new Array(arguments.length),i=0;i<e.length;i++)e[i]=arguments[i];var n=t.apply(this,e),o=e[e.length-1];return"function"==typeof n&&n!==o&&Object.keys(o).forEach((function(e){n[e]=o[e]})),n}}},9496:e=>{e.exports=require("vscode")}},t={};function i(n){var o=t[n];if(void 0!==o)return o.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,i),r.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};(()=>{i.r(n),i.d(n,{activate:()=>F,deactivate:()=>x});var e=i(9496),t=i(9376),o=i(429),r=i(6479),s=i(8294);Object.freeze({dispose:()=>{}});class Api{#i;constructor(e){this.#i=e}registerActionRunner(e,t){if(t.name===s.vj)throw new Error(`Cannot use the reserved name '${s.vj}'`);return"hover.commandHelp"===e&&(e="hover.commands"),this.#i.actionRunners.register(e,t)}}var a=i(3113),l=i(5255),c=i(6631),h=i(7462),u=i(7840),d=i(6450),p=i(1529),m=i(9502),g=i(1277),f=i(7925),w=i(9529);function _(e){!function(e){e.subscriptions.push(r.W.instance.actionRunners.registerBuiltInPartner("liveshare","hover.commands",{name:"Live Share",label:e=>"hover.commands"===e.type&&"You"!==e.commit.author.name?`$(live-share) Invite ${e.commit.author.name}${e.commit.author.presence?.statusText?` (${e.commit.author.presence?.statusText})`:""} to a Live Share Session`:"$(live-share) Start a Live Share Session",run:async e=>{"hover.commands"===e.type&&"You"!==e.commit.author.name?await(0,w.P0)(l.Gh.InviteToLiveShare,{email:e.commit.author.email}):await(0,w.P0)(l.Gh.InviteToLiveShare,{})}}))}(e)}var v=i(4241),y=Object.defineProperty,b=Object.getOwnPropertyDescriptor,C=(e,t,i,n)=>{for(var o,r=n>1?void 0:n?b(t,i):t,s=e.length-1;s>=0;s--)(o=e[s])&&(r=(n?o(t,i,r):o(r))||r);return n&&r&&y(t,i,r),r};class Storage{constructor(t){this.context=t,this._onDidChange=new e.EventEmitter,this._onDidChangeSecrets=new e.EventEmitter,this._disposable=this.context.secrets.onDidChange((e=>this._onDidChangeSecrets.fire(e)))}get onDidChange(){return this._onDidChange.event}get onDidChangeSecrets(){return this._onDidChangeSecrets.event}dispose(){this._disposable.dispose()}get(e,t){return this.context.globalState.get(`gitlens:${e}`,t)}async delete(e){await this.context.globalState.update(`gitlens:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!1})}async store(e,t){await this.context.globalState.update(`gitlens:${e}`,t),this._onDidChange.fire({key:e,workspace:!1})}async getSecret(e){return this.context.secrets.get(e)}async deleteSecret(e){return this.context.secrets.delete(e)}async storeSecret(e,t){return this.context.secrets.store(e,t)}getWorkspace(e,t){return this.context.workspaceState.get(`gitlens:${e}`,t)}async deleteWorkspace(e){await this.context.workspaceState.update(`gitlens:${e}`,void 0),this._onDidChange.fire({key:e,workspace:!0})}async storeWorkspace(e,t){await this.context.workspaceState.update(`gitlens:${e}`,t),this._onDidChange.fire({key:e,workspace:!0})}}C([(0,v.fF)({logThreshold:50})],Storage.prototype,"get",1),C([(0,v.fF)({logThreshold:250})],Storage.prototype,"delete",1),C([(0,v.fF)({args:{1:!1},logThreshold:250})],Storage.prototype,"store",1),C([(0,v.fF)({args:!1,logThreshold:250})],Storage.prototype,"getSecret",1),C([(0,v.fF)({args:!1,logThreshold:250})],Storage.prototype,"deleteSecret",1),C([(0,v.fF)({args:!1,logThreshold:250})],Storage.prototype,"storeSecret",1),C([(0,v.fF)({logThreshold:25})],Storage.prototype,"getWorkspace",1),C([(0,v.fF)({logThreshold:250})],Storage.prototype,"deleteWorkspace",1),C([(0,v.fF)({args:{1:!1},logThreshold:250})],Storage.prototype,"storeWorkspace",1);var S=(e=>(e.Version="gitlens:synced:version",e.PreReleaseVersion="gitlens:synced:preVersion",e.HomeViewWelcomeVisible="gitlens:views:welcome:visible",e))(S||{}),k=i(7512),P=i(2185),R=i(9967),D=i(6398),$=i(4550),T=i(6922);async function F(i){const n=i.extension.packageJSON.version,s="eamodio.gitlens-insiders"===i.extension.id,v=s||(0,$.L5)(n,"> 2020.0.0"),y=a.DN.get("outputLevel");g.Yd.configure({name:"GitLens",createChannel:function(t){return e.window.createOutputChannel(t)},toLoggable:function(t){return(0,h.uy)(t)?`GitUri(${t.toString(!0)}${t.repoPath?` repoPath=${t.repoPath}`:""}${t.sha?` sha=${t.sha}`:""})`:t instanceof e.Uri?`Uri(${t.toString(!0)})`:(0,p.uC)(t)||(0,u.BF)(t)||(0,d.f_)(t)||(0,m.YR)(t)||(0,T.Jc)(t)?t.toString():void 0}},(0,a.oE)(a.DN.get("outputLevel")),i.extensionMode===e.ExtensionMode.Development);const b=new D.u(`GitLens${v?s?" (Insiders)":" (pre-release)":""} v${n}`,{log:{message:` activating in ${e.env.appName}(${e.version}) on the ${o.$L?"web":"desktop"} (${e.env.machineId}|${e.env.sessionId})`}});if(s){if(null!=e.extensions.getExtension("eamodio.gitlens"))return b.stop({message:" was NOT activated because GitLens is also enabled"}),void setTimeout(f.Bm,0)}if(v){const e=(0,$.mL)(n);if(new Date(e.major,e.minor-1,Number(e.patch.toString().substring(0,2))).getTime()<Date.now()-12096e5)return b.stop({message:` was NOT activated because this ${s?"insiders":"pre-release"} version (${n}) has expired`}),void setTimeout(f.Nl,0,n,s)}e.workspace.isTrusted||((0,c.v)(l.zf.Untrusted,!0),i.subscriptions.push(e.workspace.onDidGrantWorkspaceTrust((()=>{(0,c.v)(l.zf.Untrusted,void 0),E.telemetry.setGlobalAttribute("workspace.isTrusted",e.workspace.isTrusted)})))),function(e,...t){e.globalState?.setKeysForSync([...t,S.Version,S.HomeViewWelcomeVisible])}(i);const C=new Storage(i),F=C.get(v&&!s?"synced:preVersion":"synced:version"),x=C.get(v&&!s?"preVersion":"version");let A,I;A=null==x||null==F?F??x:1===(0,$.qu)(F,x)?F:x,g.Yd.enabled(l.in.Debug)&&(I=`syncedVersion=${F}, localVersion=${x}, previousVersion=${A}, welcome=${C.get("views:welcome:visible")}`),null==A&&C.store("views:welcome:visible",!0),a.VK.configure(i),(0,k.Cz)(a.DN.get("defaultDateLocale")??e.env.language),i.subscriptions.push(a.DN.onDidChange((t=>{a.DN.changed(t,"defaultDateLocale")&&(0,k.Cz)(a.DN.get("defaultDateLocale",void 0,e.env.language))})));const E=r.W.create(i,C,v,n,A);(0,P.IH)(E.onReady)((()=>{i.subscriptions.push(...(0,w.$$)(E)),function(e){e.context.subscriptions.push(e.actionRunners.registerBuiltIn("createPullRequest",{label:e=>`Create Pull Request on ${e.remote?.provider?.name??"Remote"}`,run:async e=>{"createPullRequest"===e.type&&await(0,w.P0)(l.Gh.CreatePullRequestOnRemote,{base:void 0,compare:e.branch.isRemote?(0,u.S3)(e.branch.name):e.branch.upstream?(0,u.S3)(e.branch.upstream):e.branch.name,remote:e.remote?.name??"",repoPath:e.repoPath})}}),e.actionRunners.registerBuiltIn("openPullRequest",{label:e=>`Open Pull Request on ${e.provider?.name??"Remote"}`,run:async e=>{"openPullRequest"===e.type&&await(0,w.P0)(l.Gh.OpenPullRequestOnRemote,{pr:{url:e.pullRequest.url}})}}))}(E),_(i),async function(t,i,n){if(null==n){if(g.Yd.log(`GitLens first-time install; window.focused=${e.window.state.focused}`),!1===a.DN.get("showWelcomeOnInstall"))return;if(e.window.state.focused)await t.storage.delete("pendingWelcomeOnFocus"),await(0,w.P0)(l.Gh.ShowWelcomePage);else{await t.storage.store("pendingWelcomeOnFocus",!0);const i=e.window.onDidChangeWindowState((e=>{e.focused&&(i.dispose(),!0===t.storage.get("pendingWelcomeOnFocus")&&(t.storage.delete("pendingWelcomeOnFocus"),a.DN.get("showWelcomeOnInstall")&&(0,w.P0)(l.Gh.ShowWelcomePage)))}));t.context.subscriptions.push(i)}return}n!==i&&g.Yd.log(`GitLens upgraded from v${n} to v${i}; window.focused=${e.window.state.focused}`);const[o,r]=i.split(".").map((e=>parseInt(e,10))),[s,c]=n.split(".").map((e=>parseInt(e,10)));if(o===s||o<s||o===s&&r<c)return;o!==s&&(i=String(o));if((0,w.P0)(l.Gh.ShowHomeView),a.DN.get("showWhatsNewAfterUpgrades"))if(e.window.state.focused)await t.storage.delete("pendingWhatsNewOnFocus"),await(0,f.xs)(i);else{await t.storage.store("pendingWhatsNewOnFocus",!0);const n=e.window.onDidChangeWindowState((e=>{e.focused&&(n.dispose(),!0===t.storage.get("pendingWhatsNewOnFocus")&&(t.storage.delete("pendingWhatsNewOnFocus"),a.DN.get("showWhatsNewAfterUpgrades")&&(0,f.xs)(i)))}));t.context.subscriptions.push(n)}}(E,n,A),C.store(v&&!s?"preVersion":"version",n),null!=F&&1!==(0,$.qu)(n,F)||C.store(v&&!s?"synced:preVersion":"synced:version",n),y===a.M7.Debug&&setTimeout((async()=>{a.DN.get("outputLevel")===a.M7.Debug&&(E.prereleaseOrDebugging||await(0,f.EB)()&&(0,w.P0)(l.Gh.DisableDebugLogging))}),6e4)})),await E.ready(),E.debugging&&(0,c.v)(l.zf.Debugging,!0);const N=(0,R.xH)(a.DN.getAll(!0),{prefix:"config",stringify:"all"});E.telemetry.setGlobalAttributes({debugging:E.debugging,insiders:s,prerelease:v,install:null==A,upgrade:null!=A&&n!==A,upgradedFrom:null!=A&&n!==A?A:void 0});const U=new Api(E),L=E.mode,M=b.startTime,W=(0,t.a)(),B=b.elapsed();return b.stop({message:` activated${null!=I?`, ${I}`:""}${null!=L?`, mode: ${L.name}`:""}`}),E.telemetry.sendEvent("activate",{"activation.elapsed":B,"activation.mode":L?.name,...N},M,W),setTimeout(O,25e3),Promise.resolve(U)}function x(){g.Yd.log("GitLens deactivated")}function O(){null!=e.extensions.getExtension("gitkraken.gitkraken-authentication")&&(0,w.dO)(l.nA.UninstallExtension,"gitkraken.gitkraken-authentication")}})(),module.exports=n})();